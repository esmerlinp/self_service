{"code":"(this.webpackJsonpst_cookie_manager=this.webpackJsonpst_cookie_manager||[]).push([[2],[function(t,e,r){\"use strict\";t.exports=r(6)},function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return lu}));var n={};r.r(n),r.d(n,\"memcpy\",(function(){return pt})),r.d(n,\"joinUint8Arrays\",(function(){return yt})),r.d(n,\"toArrayBufferView\",(function(){return bt})),r.d(n,\"toInt8Array\",(function(){return gt})),r.d(n,\"toInt16Array\",(function(){return _t})),r.d(n,\"toInt32Array\",(function(){return vt})),r.d(n,\"toBigInt64Array\",(function(){return mt})),r.d(n,\"toUint8Array\",(function(){return wt})),r.d(n,\"toUint16Array\",(function(){return It})),r.d(n,\"toUint32Array\",(function(){return St})),r.d(n,\"toBigUint64Array\",(function(){return At})),r.d(n,\"toFloat32Array\",(function(){return Tt})),r.d(n,\"toFloat64Array\",(function(){return Bt})),r.d(n,\"toUint8ClampedArray\",(function(){return Dt})),r.d(n,\"toArrayBufferViewIterator\",(function(){return xt})),r.d(n,\"toInt8ArrayIterator\",(function(){return Lt})),r.d(n,\"toInt16ArrayIterator\",(function(){return Ft})),r.d(n,\"toInt32ArrayIterator\",(function(){return Mt})),r.d(n,\"toUint8ArrayIterator\",(function(){return Ut})),r.d(n,\"toUint16ArrayIterator\",(function(){return Et})),r.d(n,\"toUint32ArrayIterator\",(function(){return Nt})),r.d(n,\"toFloat32ArrayIterator\",(function(){return Ct})),r.d(n,\"toFloat64ArrayIterator\",(function(){return Vt})),r.d(n,\"toUint8ClampedArrayIterator\",(function(){return kt})),r.d(n,\"toArrayBufferViewAsyncIterator\",(function(){return Rt})),r.d(n,\"toInt8ArrayAsyncIterator\",(function(){return jt})),r.d(n,\"toInt16ArrayAsyncIterator\",(function(){return Pt})),r.d(n,\"toInt32ArrayAsyncIterator\",(function(){return zt})),r.d(n,\"toUint8ArrayAsyncIterator\",(function(){return Yt})),r.d(n,\"toUint16ArrayAsyncIterator\",(function(){return Wt})),r.d(n,\"toUint32ArrayAsyncIterator\",(function(){return Ht})),r.d(n,\"toFloat32ArrayAsyncIterator\",(function(){return $t})),r.d(n,\"toFloat64ArrayAsyncIterator\",(function(){return Kt})),r.d(n,\"toUint8ClampedArrayAsyncIterator\",(function(){return Gt})),r.d(n,\"rebaseValueOffsets\",(function(){return qt})),r.d(n,\"compareArrayLike\",(function(){return Jt}));var i={};r.r(i),r.d(i,\"getBool\",(function(){return ge})),r.d(i,\"getBit\",(function(){return _e})),r.d(i,\"setBool\",(function(){return ve})),r.d(i,\"truncateBitmap\",(function(){return me})),r.d(i,\"packBools\",(function(){return we})),r.d(i,\"iterateBits\",(function(){return Ie})),r.d(i,\"popcnt_bit_range\",(function(){return Se})),r.d(i,\"popcnt_array\",(function(){return Ae})),r.d(i,\"popcnt_uint32\",(function(){return Te}));var s={};r.r(s),r.d(s,\"uint16ToFloat64\",(function(){return Wr})),r.d(s,\"float64ToUint16\",(function(){return Hr}));var o={};r.r(o),r.d(o,\"isArrowBigNumSymbol\",(function(){return Jr})),r.d(o,\"bignumToString\",(function(){return rn})),r.d(o,\"bignumToBigInt\",(function(){return nn})),r.d(o,\"BN\",(function(){return on}));var a={};r.r(a),r.d(a,\"clampIndex\",(function(){return Wn})),r.d(a,\"clampRange\",(function(){return $n})),r.d(a,\"createElementComparator\",(function(){return qn}));var c={};r.r(c),r.d(c,\"BaseInt64\",(function(){return ls})),r.d(c,\"Uint64\",(function(){return hs})),r.d(c,\"Int64\",(function(){return ds})),r.d(c,\"Int128\",(function(){return fs}));r(2);var u=r(0),l=r.n(u);const h=new WeakMap,d=new WeakMap;function f(t){const e=h.get(t);return console.assert(null!=e,\"'this' is expected an Event object, but got\",t),e}function p(t){null==t.passiveListener?t.event.cancelable&&(t.canceled=!0,\"function\"===typeof t.event.preventDefault&&t.event.preventDefault()):\"undefined\"!==typeof console&&\"function\"===typeof console.error&&console.error(\"Unable to preventDefault inside passive event listener invocation.\",t.passiveListener)}function y(t,e){h.set(this,{eventTarget:t,event:e,eventPhase:2,currentTarget:t,canceled:!1,stopped:!1,immediateStopped:!1,passiveListener:null,timeStamp:e.timeStamp||Date.now()}),Object.defineProperty(this,\"isTrusted\",{value:!1,enumerable:!0});const r=Object.keys(e);for(let n=0;n<r.length;++n){const t=r[n];t in this||Object.defineProperty(this,t,b(t))}}function b(t){return{get(){return f(this).event[t]},set(e){f(this).event[t]=e},configurable:!0,enumerable:!0}}function g(t){return{value(){const e=f(this).event;return e[t].apply(e,arguments)},configurable:!0,enumerable:!0}}function _(t){if(null==t||t===Object.prototype)return y;let e=d.get(t);return null==e&&(e=function(t,e){const r=Object.keys(e);if(0===r.length)return t;function n(e,r){t.call(this,e,r)}n.prototype=Object.create(t.prototype,{constructor:{value:n,configurable:!0,writable:!0}});for(let i=0;i<r.length;++i){const s=r[i];if(!(s in t.prototype)){const t=\"function\"===typeof Object.getOwnPropertyDescriptor(e,s).value;Object.defineProperty(n.prototype,s,t?g(s):b(s))}}return n}(_(Object.getPrototypeOf(t)),t),d.set(t,e)),e}function v(t){return f(t).immediateStopped}function m(t,e){f(t).passiveListener=e}y.prototype={get type(){return f(this).event.type},get target(){return f(this).eventTarget},get currentTarget(){return f(this).currentTarget},composedPath(){const t=f(this).currentTarget;return null==t?[]:[t]},get NONE(){return 0},get CAPTURING_PHASE(){return 1},get AT_TARGET(){return 2},get BUBBLING_PHASE(){return 3},get eventPhase(){return f(this).eventPhase},stopPropagation(){const t=f(this);t.stopped=!0,\"function\"===typeof t.event.stopPropagation&&t.event.stopPropagation()},stopImmediatePropagation(){const t=f(this);t.stopped=!0,t.immediateStopped=!0,\"function\"===typeof t.event.stopImmediatePropagation&&t.event.stopImmediatePropagation()},get bubbles(){return Boolean(f(this).event.bubbles)},get cancelable(){return Boolean(f(this).event.cancelable)},preventDefault(){p(f(this))},get defaultPrevented(){return f(this).canceled},get composed(){return Boolean(f(this).event.composed)},get timeStamp(){return f(this).timeStamp},get srcElement(){return f(this).eventTarget},get cancelBubble(){return f(this).stopped},set cancelBubble(t){if(!t)return;const e=f(this);e.stopped=!0,\"boolean\"===typeof e.event.cancelBubble&&(e.event.cancelBubble=!0)},get returnValue(){return!f(this).canceled},set returnValue(t){t||p(f(this))},initEvent(){}},Object.defineProperty(y.prototype,\"constructor\",{value:y,configurable:!0,writable:!0}),\"undefined\"!==typeof window&&\"undefined\"!==typeof window.Event&&(Object.setPrototypeOf(y.prototype,window.Event.prototype),d.set(window.Event.prototype,y));const w=new WeakMap,I=3;function S(t){return null!==t&&\"object\"===typeof t}function A(t){const e=w.get(t);if(null==e)throw new TypeError(\"'this' is expected an EventTarget object, but got another value.\");return e}function T(t,e){Object.defineProperty(t,\"on\".concat(e),function(t){return{get(){let e=A(this).get(t);for(;null!=e;){if(e.listenerType===I)return e.listener;e=e.next}return null},set(e){\"function\"===typeof e||S(e)||(e=null);const r=A(this);let n=null,i=r.get(t);for(;null!=i;)i.listenerType===I?null!==n?n.next=i.next:null!==i.next?r.set(t,i.next):r.delete(t):n=i,i=i.next;if(null!==e){const i={listener:e,listenerType:I,passive:!1,once:!1,next:null};null===n?r.set(t,i):n.next=i}},configurable:!0,enumerable:!0}}(e))}function B(t){function e(){D.call(this)}e.prototype=Object.create(D.prototype,{constructor:{value:e,configurable:!0,writable:!0}});for(let r=0;r<t.length;++r)T(e.prototype,t[r]);return e}function D(){if(!(this instanceof D)){if(1===arguments.length&&Array.isArray(arguments[0]))return B(arguments[0]);if(arguments.length>0){const t=new Array(arguments.length);for(let e=0;e<arguments.length;++e)t[e]=arguments[e];return B(t)}throw new TypeError(\"Cannot call a class as a function\")}w.set(this,new Map)}D.prototype={addEventListener(t,e,r){if(null==e)return;if(\"function\"!==typeof e&&!S(e))throw new TypeError(\"'listener' should be a function or an object.\");const n=A(this),i=S(r),s=(i?Boolean(r.capture):Boolean(r))?1:2,o={listener:e,listenerType:s,passive:i&&Boolean(r.passive),once:i&&Boolean(r.once),next:null};let a=n.get(t);if(void 0===a)return void n.set(t,o);let c=null;for(;null!=a;){if(a.listener===e&&a.listenerType===s)return;c=a,a=a.next}c.next=o},removeEventListener(t,e,r){if(null==e)return;const n=A(this),i=(S(r)?Boolean(r.capture):Boolean(r))?1:2;let s=null,o=n.get(t);for(;null!=o;){if(o.listener===e&&o.listenerType===i)return void(null!==s?s.next=o.next:null!==o.next?n.set(t,o.next):n.delete(t));s=o,o=o.next}},dispatchEvent(t){if(null==t||\"string\"!==typeof t.type)throw new TypeError('\"event.type\" should be a string.');const e=A(this),r=t.type;let n=e.get(r);if(null==n)return!0;const i=function(t,e){return new(_(Object.getPrototypeOf(e)))(t,e)}(this,t);let s=null;for(;null!=n;){if(n.once?null!==s?s.next=n.next:null!==n.next?e.set(r,n.next):e.delete(r):s=n,m(i,n.passive?n.listener:null),\"function\"===typeof n.listener)try{n.listener.call(this,i)}catch(o){\"undefined\"!==typeof console&&\"function\"===typeof console.error&&console.error(o)}else n.listenerType!==I&&\"function\"===typeof n.listener.handleEvent&&n.listener.handleEvent(i);if(v(i))break;n=n.next}return m(i,null),function(t,e){f(t).eventPhase=e}(i,0),function(t,e){f(t).currentTarget=e}(i,null),!i.defaultPrevented}},Object.defineProperty(D.prototype,\"constructor\",{value:D,configurable:!0,writable:!0}),\"undefined\"!==typeof window&&\"undefined\"!==typeof window.EventTarget&&Object.setPrototypeOf(D.prototype,window.EventTarget.prototype);var O={};function x(t,e,r){return e<=t&&t<=r}function L(t){if(void 0===t)return{};if(t===Object(t))return t;throw TypeError(\"Could not convert argument to dictionary\")}O.Offset,O.Table,O.SIZEOF_SHORT=2,O.SIZEOF_INT=4,O.FILE_IDENTIFIER_LENGTH=4,O.Encoding={UTF8_BYTES:1,UTF16_STRING:2},O.int32=new Int32Array(2),O.float32=new Float32Array(O.int32.buffer),O.float64=new Float64Array(O.int32.buffer),O.isLittleEndian=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0],O.Long=function(t,e){this.low=0|t,this.high=0|e},O.Long.create=function(t,e){return 0==t&&0==e?O.Long.ZERO:new O.Long(t,e)},O.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},O.Long.prototype.equals=function(t){return this.low==t.low&&this.high==t.high},O.Long.ZERO=new O.Long(0,0),O.Builder=function(t){if(t)e=t;else var e=1024;this.bb=O.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},O.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},O.Builder.prototype.forceDefaults=function(t){this.force_defaults=t},O.Builder.prototype.dataBuffer=function(){return this.bb},O.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},O.Builder.prototype.prep=function(t,e){t>this.minalign&&(this.minalign=t);for(var r=1+~(this.bb.capacity()-this.space+e)&t-1;this.space<r+t+e;){var n=this.bb.capacity();this.bb=O.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-n}this.pad(r)},O.Builder.prototype.pad=function(t){for(var e=0;e<t;e++)this.bb.writeInt8(--this.space,0)},O.Builder.prototype.writeInt8=function(t){this.bb.writeInt8(this.space-=1,t)},O.Builder.prototype.writeInt16=function(t){this.bb.writeInt16(this.space-=2,t)},O.Builder.prototype.writeInt32=function(t){this.bb.writeInt32(this.space-=4,t)},O.Builder.prototype.writeInt64=function(t){this.bb.writeInt64(this.space-=8,t)},O.Builder.prototype.writeFloat32=function(t){this.bb.writeFloat32(this.space-=4,t)},O.Builder.prototype.writeFloat64=function(t){this.bb.writeFloat64(this.space-=8,t)},O.Builder.prototype.addInt8=function(t){this.prep(1,0),this.writeInt8(t)},O.Builder.prototype.addInt16=function(t){this.prep(2,0),this.writeInt16(t)},O.Builder.prototype.addInt32=function(t){this.prep(4,0),this.writeInt32(t)},O.Builder.prototype.addInt64=function(t){this.prep(8,0),this.writeInt64(t)},O.Builder.prototype.addFloat32=function(t){this.prep(4,0),this.writeFloat32(t)},O.Builder.prototype.addFloat64=function(t){this.prep(8,0),this.writeFloat64(t)},O.Builder.prototype.addFieldInt8=function(t,e,r){(this.force_defaults||e!=r)&&(this.addInt8(e),this.slot(t))},O.Builder.prototype.addFieldInt16=function(t,e,r){(this.force_defaults||e!=r)&&(this.addInt16(e),this.slot(t))},O.Builder.prototype.addFieldInt32=function(t,e,r){(this.force_defaults||e!=r)&&(this.addInt32(e),this.slot(t))},O.Builder.prototype.addFieldInt64=function(t,e,r){!this.force_defaults&&e.equals(r)||(this.addInt64(e),this.slot(t))},O.Builder.prototype.addFieldFloat32=function(t,e,r){(this.force_defaults||e!=r)&&(this.addFloat32(e),this.slot(t))},O.Builder.prototype.addFieldFloat64=function(t,e,r){(this.force_defaults||e!=r)&&(this.addFloat64(e),this.slot(t))},O.Builder.prototype.addFieldOffset=function(t,e,r){(this.force_defaults||e!=r)&&(this.addOffset(e),this.slot(t))},O.Builder.prototype.addFieldStruct=function(t,e,r){e!=r&&(this.nested(e),this.slot(t))},O.Builder.prototype.nested=function(t){if(t!=this.offset())throw new Error(\"FlatBuffers: struct must be serialized inline.\")},O.Builder.prototype.notNested=function(){if(this.isNested)throw new Error(\"FlatBuffers: object serialization must not be nested.\")},O.Builder.prototype.slot=function(t){this.vtable[t]=this.offset()},O.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},O.Builder.growByteBuffer=function(t){var e=t.capacity();if(3221225472&e)throw new Error(\"FlatBuffers: cannot grow buffer beyond 2 gigabytes.\");var r=e<<1,n=O.ByteBuffer.allocate(r);return n.setPosition(r-e),n.bytes().set(t.bytes(),r-e),n},O.Builder.prototype.addOffset=function(t){this.prep(O.SIZEOF_INT,0),this.writeInt32(this.offset()-t+O.SIZEOF_INT)},O.Builder.prototype.startObject=function(t){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=t;for(var e=0;e<t;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()},O.Builder.prototype.endObject=function(){if(null==this.vtable||!this.isNested)throw new Error(\"FlatBuffers: endObject called without startObject\");this.addInt32(0);for(var t=this.offset(),e=this.vtable_in_use-1;e>=0&&0==this.vtable[e];e--);for(var r=e+1;e>=0;e--)this.addInt16(0!=this.vtable[e]?t-this.vtable[e]:0);this.addInt16(t-this.object_start);var n=(r+2)*O.SIZEOF_SHORT;this.addInt16(n);var i=0,s=this.space;t:for(e=0;e<this.vtables.length;e++){var o=this.bb.capacity()-this.vtables[e];if(n==this.bb.readInt16(o)){for(var a=O.SIZEOF_SHORT;a<n;a+=O.SIZEOF_SHORT)if(this.bb.readInt16(s+a)!=this.bb.readInt16(o+a))continue t;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-t,this.bb.writeInt32(this.space,i-t)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-t,this.offset()-t)),this.isNested=!1,t},O.Builder.prototype.finish=function(t,e){if(e){var r=e;if(this.prep(this.minalign,O.SIZEOF_INT+O.FILE_IDENTIFIER_LENGTH),r.length!=O.FILE_IDENTIFIER_LENGTH)throw new Error(\"FlatBuffers: file identifier must be length \"+O.FILE_IDENTIFIER_LENGTH);for(var n=O.FILE_IDENTIFIER_LENGTH-1;n>=0;n--)this.writeInt8(r.charCodeAt(n))}this.prep(this.minalign,O.SIZEOF_INT),this.addOffset(t),this.bb.setPosition(this.space)},O.Builder.prototype.requiredField=function(t,e){var r=this.bb.capacity()-t,n=r-this.bb.readInt32(r);if(!(0!=this.bb.readInt16(n+e)))throw new Error(\"FlatBuffers: field \"+e+\" must be set\")},O.Builder.prototype.startVector=function(t,e,r){this.notNested(),this.vector_num_elems=e,this.prep(O.SIZEOF_INT,t*e),this.prep(r,t*e)},O.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},O.Builder.prototype.createString=function(t){if(t instanceof Uint8Array)var e=t;else{e=[];for(var r=0;r<t.length;){var n,i=t.charCodeAt(r++);if(i<55296||i>=56320)n=i;else n=(i<<10)+t.charCodeAt(r++)+-56613888;n<128?e.push(n):(n<2048?e.push(n>>6&31|192):(n<65536?e.push(n>>12&15|224):e.push(n>>18&7|240,n>>12&63|128),e.push(n>>6&63|128)),e.push(63&n|128))}}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);r=0;for(var s=this.space,o=this.bb.bytes();r<e.length;r++)o[s++]=e[r];return this.endVector()},O.Builder.prototype.createLong=function(t,e){return O.Long.create(t,e)},O.ByteBuffer=function(t){this.bytes_=t,this.position_=0},O.ByteBuffer.allocate=function(t){return new O.ByteBuffer(new Uint8Array(t))},O.ByteBuffer.prototype.clear=function(){this.position_=0},O.ByteBuffer.prototype.bytes=function(){return this.bytes_},O.ByteBuffer.prototype.position=function(){return this.position_},O.ByteBuffer.prototype.setPosition=function(t){this.position_=t},O.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},O.ByteBuffer.prototype.readInt8=function(t){return this.readUint8(t)<<24>>24},O.ByteBuffer.prototype.readUint8=function(t){return this.bytes_[t]},O.ByteBuffer.prototype.readInt16=function(t){return this.readUint16(t)<<16>>16},O.ByteBuffer.prototype.readUint16=function(t){return this.bytes_[t]|this.bytes_[t+1]<<8},O.ByteBuffer.prototype.readInt32=function(t){return this.bytes_[t]|this.bytes_[t+1]<<8|this.bytes_[t+2]<<16|this.bytes_[t+3]<<24},O.ByteBuffer.prototype.readUint32=function(t){return this.readInt32(t)>>>0},O.ByteBuffer.prototype.readInt64=function(t){return new O.Long(this.readInt32(t),this.readInt32(t+4))},O.ByteBuffer.prototype.readUint64=function(t){return new O.Long(this.readUint32(t),this.readUint32(t+4))},O.ByteBuffer.prototype.readFloat32=function(t){return O.int32[0]=this.readInt32(t),O.float32[0]},O.ByteBuffer.prototype.readFloat64=function(t){return O.int32[O.isLittleEndian?0:1]=this.readInt32(t),O.int32[O.isLittleEndian?1:0]=this.readInt32(t+4),O.float64[0]},O.ByteBuffer.prototype.writeInt8=function(t,e){this.bytes_[t]=e},O.ByteBuffer.prototype.writeUint8=function(t,e){this.bytes_[t]=e},O.ByteBuffer.prototype.writeInt16=function(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8},O.ByteBuffer.prototype.writeUint16=function(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8},O.ByteBuffer.prototype.writeInt32=function(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24},O.ByteBuffer.prototype.writeUint32=function(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24},O.ByteBuffer.prototype.writeInt64=function(t,e){this.writeInt32(t,e.low),this.writeInt32(t+4,e.high)},O.ByteBuffer.prototype.writeUint64=function(t,e){this.writeUint32(t,e.low),this.writeUint32(t+4,e.high)},O.ByteBuffer.prototype.writeFloat32=function(t,e){O.float32[0]=e,this.writeInt32(t,O.int32[0])},O.ByteBuffer.prototype.writeFloat64=function(t,e){O.float64[0]=e,this.writeInt32(t,O.int32[O.isLittleEndian?0:1]),this.writeInt32(t+4,O.int32[O.isLittleEndian?1:0])},O.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+O.SIZEOF_INT+O.FILE_IDENTIFIER_LENGTH)throw new Error(\"FlatBuffers: ByteBuffer is too short to contain an identifier.\");for(var t=\"\",e=0;e<O.FILE_IDENTIFIER_LENGTH;e++)t+=String.fromCharCode(this.readInt8(this.position_+O.SIZEOF_INT+e));return t},O.ByteBuffer.prototype.__offset=function(t,e){var r=t-this.readInt32(t);return e<this.readInt16(r)?this.readInt16(r+e):0},O.ByteBuffer.prototype.__union=function(t,e){return t.bb_pos=e+this.readInt32(e),t.bb=this,t},O.ByteBuffer.prototype.__string=function(t,e){t+=this.readInt32(t);var r=this.readInt32(t),n=\"\",i=0;if(t+=O.SIZEOF_INT,e===O.Encoding.UTF8_BYTES)return this.bytes_.subarray(t,t+r);for(;i<r;){var s,o=this.readUint8(t+i++);if(o<192)s=o;else{var a=this.readUint8(t+i++);if(o<224)s=(31&o)<<6|63&a;else{var c=this.readUint8(t+i++);if(o<240)s=(15&o)<<12|(63&a)<<6|63&c;else s=(7&o)<<18|(63&a)<<12|(63&c)<<6|63&this.readUint8(t+i++)}}s<65536?n+=String.fromCharCode(s):(s-=65536,n+=String.fromCharCode(55296+(s>>10),56320+(1023&s)))}return n},O.ByteBuffer.prototype.__indirect=function(t){return t+this.readInt32(t)},O.ByteBuffer.prototype.__vector=function(t){return t+this.readInt32(t)+O.SIZEOF_INT},O.ByteBuffer.prototype.__vector_len=function(t){return this.readInt32(t+this.readInt32(t))},O.ByteBuffer.prototype.__has_identifier=function(t){if(t.length!=O.FILE_IDENTIFIER_LENGTH)throw new Error(\"FlatBuffers: file identifier must be length \"+O.FILE_IDENTIFIER_LENGTH);for(var e=0;e<O.FILE_IDENTIFIER_LENGTH;e++)if(t.charCodeAt(e)!=this.readInt8(this.position_+O.SIZEOF_INT+e))return!1;return!0},O.ByteBuffer.prototype.createLong=function(t,e){return O.Long.create(t,e)};function F(t){this.tokens=[].slice.call(t)}F.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():-1},prepend:function(t){if(Array.isArray(t))for(var e=t;e.length;)this.tokens.unshift(e.pop());else this.tokens.unshift(t)},push:function(t){if(Array.isArray(t))for(var e=t;e.length;)this.tokens.push(e.shift());else this.tokens.push(t)}};var M=-1;function U(t,e){if(t)throw TypeError(\"Decoder error\");return e||65533}var E=\"utf-8\";function N(t,e){if(!(this instanceof N))return new N(t,e);if((t=void 0!==t?String(t).toLowerCase():E)!==E)throw new Error(\"Encoding not supported. Only utf-8 is supported\");e=L(e),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=Boolean(e.fatal),this._ignoreBOM=Boolean(e.ignoreBOM),Object.defineProperty(this,\"encoding\",{value:\"utf-8\"}),Object.defineProperty(this,\"fatal\",{value:this._fatal}),Object.defineProperty(this,\"ignoreBOM\",{value:this._ignoreBOM})}function C(t,e){if(!(this instanceof C))return new C(t,e);if((t=void 0!==t?String(t).toLowerCase():E)!==E)throw new Error(\"Encoding not supported. Only utf-8 is supported\");e=L(e),this._streaming=!1,this._encoder=null,this._options={fatal:Boolean(e.fatal)},Object.defineProperty(this,\"encoding\",{value:\"utf-8\"})}function V(t){var e=t.fatal,r=0,n=0,i=0,s=128,o=191;this.handler=function(t,a){if(-1===a&&0!==i)return i=0,U(e);if(-1===a)return M;if(0===i){if(x(a,0,127))return a;if(x(a,194,223))i=1,r=a-192;else if(x(a,224,239))224===a&&(s=160),237===a&&(o=159),i=2,r=a-224;else{if(!x(a,240,244))return U(e);240===a&&(s=144),244===a&&(o=143),i=3,r=a-240}return r<<=6*i,null}if(!x(a,s,o))return r=i=n=0,s=128,o=191,t.prepend(a),U(e);if(s=128,o=191,r+=a-128<<6*(i-(n+=1)),n!==i)return null;var c=r;return r=i=n=0,c}}function k(t){t.fatal;this.handler=function(t,e){if(-1===e)return M;if(x(e,0,127))return e;var r,n;x(e,128,2047)?(r=1,n=192):x(e,2048,65535)?(r=2,n=224):x(e,65536,1114111)&&(r=3,n=240);for(var i=[(e>>6*r)+n];r>0;){var s=e>>6*(r-1);i.push(128|63&s),r-=1}return i}}N.prototype={decode:function(t,e){var r;r=\"object\"===typeof t&&t instanceof ArrayBuffer?new Uint8Array(t):\"object\"===typeof t&&\"buffer\"in t&&t.buffer instanceof ArrayBuffer?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e=L(e),this._streaming||(this._decoder=new V({fatal:this._fatal}),this._BOMseen=!1),this._streaming=Boolean(e.stream);for(var n,i=new F(r),s=[];!i.endOfStream()&&(n=this._decoder.handler(i,i.read()))!==M;)null!==n&&(Array.isArray(n)?s.push.apply(s,n):s.push(n));if(!this._streaming){do{if((n=this._decoder.handler(i,i.read()))===M)break;null!==n&&(Array.isArray(n)?s.push.apply(s,n):s.push(n))}while(!i.endOfStream());this._decoder=null}return s.length&&(-1===[\"utf-8\"].indexOf(this.encoding)||this._ignoreBOM||this._BOMseen||(65279===s[0]?(this._BOMseen=!0,s.shift()):this._BOMseen=!0)),function(t){for(var e=\"\",r=0;r<t.length;++r){var n=t[r];n<=65535?e+=String.fromCharCode(n):(n-=65536,e+=String.fromCharCode(55296+(n>>10),56320+(1023&n)))}return e}(s)}},C.prototype={encode:function(t,e){t=t?String(t):\"\",e=L(e),this._streaming||(this._encoder=new k(this._options)),this._streaming=Boolean(e.stream);for(var r,n=[],i=new F(function(t){for(var e=String(t),r=e.length,n=0,i=[];n<r;){var s=e.charCodeAt(n);if(s<55296||s>57343)i.push(s);else if(56320<=s&&s<=57343)i.push(65533);else if(55296<=s&&s<=56319)if(n===r-1)i.push(65533);else{var o=t.charCodeAt(n+1);if(56320<=o&&o<=57343){var a=1023&s,c=1023&o;i.push(65536+(a<<10)+c),n+=1}else i.push(65533)}n+=1}return i}(t));!i.endOfStream()&&(r=this._encoder.handler(i,i.read()))!==M;)Array.isArray(r)?n.push.apply(n,r):n.push(r);if(!this._streaming){for(;(r=this._encoder.handler(i,i.read()))!==M;)Array.isArray(r)?n.push.apply(n,r):n.push(r);this._encoder=null}return new Uint8Array(n)}};const R=\"function\"===typeof Buffer?Buffer:null,j=\"function\"===typeof TextDecoder&&\"function\"===typeof TextEncoder,P=(t=>{if(j||!R){const e=new t(\"utf-8\");return t=>e.decode(t)}return t=>{const{buffer:e,byteOffset:r,length:n}=wt(t);return R.from(e,r,n).toString()}})(\"undefined\"!==typeof TextDecoder?TextDecoder:N),z=(t=>{if(j||!R){const e=new t;return t=>e.encode(t)}return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return wt(R.from(t,\"utf8\"))}})(\"undefined\"!==typeof TextEncoder?TextEncoder:C),Y=Object.freeze({done:!0,value:void 0});class W{constructor(t){this._json=t}get schema(){return this._json.schema}get batches(){return this._json.batches||[]}get dictionaries(){return this._json.dictionaries||[]}}class H{tee(){return this._getDOMStream().tee()}pipe(t,e){return this._getNodeStream().pipe(t,e)}pipeTo(t,e){return this._getDOMStream().pipeTo(t,e)}pipeThrough(t,e){return this._getDOMStream().pipeThrough(t,e)}_getDOMStream(){return this._DOMStream||(this._DOMStream=this.toDOMStream())}_getNodeStream(){return this._nodeStream||(this._nodeStream=this.toNodeStream())}}class $ extends H{constructor(){super(),this._values=[],this.resolvers=[],this._closedPromise=new Promise((t=>this._closedPromiseResolve=t))}get closed(){return this._closedPromise}async cancel(t){await this.return(t)}write(t){this._ensureOpen()&&(this.resolvers.length<=0?this._values.push(t):this.resolvers.shift().resolve({done:!1,value:t}))}abort(t){this._closedPromiseResolve&&(this.resolvers.length<=0?this._error={error:t}:this.resolvers.shift().reject({done:!0,value:t}))}close(){if(this._closedPromiseResolve){const{resolvers:t}=this;for(;t.length>0;)t.shift().resolve(Y);this._closedPromiseResolve(),this._closedPromiseResolve=void 0}}[Symbol.asyncIterator](){return this}toDOMStream(t){return Zt.toDOMStream(this._closedPromiseResolve||this._error?this:this._values,t)}toNodeStream(t){return Zt.toNodeStream(this._closedPromiseResolve||this._error?this:this._values,t)}async throw(t){return await this.abort(t),Y}async return(t){return await this.close(),Y}async read(t){return(await this.next(t,\"read\")).value}async peek(t){return(await this.next(t,\"peek\")).value}next(){return this._values.length>0?Promise.resolve({done:!1,value:this._values.shift()}):this._error?Promise.reject({done:!0,value:this._error.error}):this._closedPromiseResolve?new Promise(((t,e)=>{this.resolvers.push({resolve:t,reject:e})})):Promise.resolve(Y)}_ensureOpen(){if(this._closedPromiseResolve)return!0;throw new Error(\"\".concat(this,\" is closed\"))}}const[K,G]=(()=>{const t=()=>{throw new Error(\"BigInt is not available in this environment\")};function e(){throw t()}return e.asIntN=()=>{throw t()},e.asUintN=()=>{throw t()},\"undefined\"!==typeof BigInt?[BigInt,!0]:[e,!1]})(),[q,J]=(()=>{const t=()=>{throw new Error(\"BigInt64Array is not available in this environment\")};return\"undefined\"!==typeof BigInt64Array?[BigInt64Array,!0]:[class{static get BYTES_PER_ELEMENT(){return 8}static of(){throw t()}static from(){throw t()}constructor(){throw t()}},!1]})(),[Z,Q]=(()=>{const t=()=>{throw new Error(\"BigUint64Array is not available in this environment\")};return\"undefined\"!==typeof BigUint64Array?[BigUint64Array,!0]:[class{static get BYTES_PER_ELEMENT(){return 8}static of(){throw t()}static from(){throw t()}constructor(){throw t()}},!1]})(),X=t=>\"number\"===typeof t,tt=t=>\"boolean\"===typeof t,et=t=>\"function\"===typeof t,rt=t=>null!=t&&Object(t)===t,nt=t=>rt(t)&&et(t.then),it=t=>rt(t)&&et(t[Symbol.iterator]),st=t=>rt(t)&&et(t[Symbol.asyncIterator]),ot=t=>rt(t)&&rt(t.schema),at=t=>rt(t)&&\"done\"in t&&\"value\"in t,ct=t=>rt(t)&&et(t.stat)&&X(t.fd),ut=t=>rt(t)&&lt(t.body),lt=t=>rt(t)&&et(t.cancel)&&et(t.getReader)&&!(t instanceof H),ht=t=>rt(t)&&et(t.read)&&et(t.pipe)&&tt(t.readable)&&!(t instanceof H);var dt=O.ByteBuffer;const ft=\"undefined\"!==typeof SharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;function pt(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.byteLength;const i=t.byteLength,s=new Uint8Array(t.buffer,t.byteOffset,i),o=new Uint8Array(e.buffer,e.byteOffset,Math.min(n,i));return s.set(o,r),t}function yt(t,e){let r,n,i,s=function(t){let e,r,n,i,s=t[0]?[t[0]]:[];for(let o,a,c=0,u=0,l=t.length;++c<l;)o=s[u],a=t[c],!o||!a||o.buffer!==a.buffer||a.byteOffset<o.byteOffset?a&&(s[++u]=a):(({byteOffset:e,byteLength:n}=o),({byteOffset:r,byteLength:i}=a),e+n<r||r+i<e?a&&(s[++u]=a):s[u]=new Uint8Array(o.buffer,e,r-e+i));return s}(t),o=s.reduce(((t,e)=>t+e.byteLength),0),a=0,c=-1,u=Math.min(e||1/0,o);for(let l=s.length;++c<l;){if(r=s[c],n=r.subarray(0,Math.min(r.length,u-a)),u<=a+n.length){n.length<r.length?s[c]=r.subarray(n.length):n.length===r.length&&c++,i?pt(i,n,a):i=n;break}pt(i||(i=new Uint8Array(u)),n,a),a+=n.length}return[i||new Uint8Array(0),s.slice(c),o-(i?i.byteLength:0)]}function bt(t,e){let r=at(e)?e.value:e;return r instanceof t?t===Uint8Array?new t(r.buffer,r.byteOffset,r.byteLength):r:r?(\"string\"===typeof r&&(r=z(r)),r instanceof ArrayBuffer||r instanceof ft?new t(r):r instanceof dt?bt(t,r.bytes()):ArrayBuffer.isView(r)?r.byteLength<=0?new t(0):new t(r.buffer,r.byteOffset,r.byteLength/t.BYTES_PER_ELEMENT):t.from(r)):new t(0)}const gt=t=>bt(Int8Array,t),_t=t=>bt(Int16Array,t),vt=t=>bt(Int32Array,t),mt=t=>bt(q,t),wt=t=>bt(Uint8Array,t),It=t=>bt(Uint16Array,t),St=t=>bt(Uint32Array,t),At=t=>bt(Z,t),Tt=t=>bt(Float32Array,t),Bt=t=>bt(Float64Array,t),Dt=t=>bt(Uint8ClampedArray,t),Ot=t=>(t.next(),t);function*xt(t,e){const r=function*(t){yield t},n=\"string\"===typeof e||ArrayBuffer.isView(e)||e instanceof ArrayBuffer||e instanceof ft?r(e):it(e)?e:r(e);yield*Ot(function*(e){let r=null;do{r=e.next(yield bt(t,r))}while(!r.done)}(n[Symbol.iterator]()))}const Lt=t=>xt(Int8Array,t),Ft=t=>xt(Int16Array,t),Mt=t=>xt(Int32Array,t),Ut=t=>xt(Uint8Array,t),Et=t=>xt(Uint16Array,t),Nt=t=>xt(Uint32Array,t),Ct=t=>xt(Float32Array,t),Vt=t=>xt(Float64Array,t),kt=t=>xt(Uint8ClampedArray,t);async function*Rt(t,e){if(nt(e))return yield*Rt(t,await e);const r=async function*(t){yield await t},n=\"string\"===typeof e||ArrayBuffer.isView(e)||e instanceof ArrayBuffer||e instanceof ft?r(e):it(e)?async function*(t){yield*Ot(function*(t){let e=null;do{e=t.next(yield e&&e.value)}while(!e.done)}(t[Symbol.iterator]()))}(e):st(e)?e:r(e);yield*Ot(async function*(e){let r=null;do{r=await e.next(yield bt(t,r))}while(!r.done)}(n[Symbol.asyncIterator]()))}const jt=t=>Rt(Int8Array,t),Pt=t=>Rt(Int16Array,t),zt=t=>Rt(Int32Array,t),Yt=t=>Rt(Uint8Array,t),Wt=t=>Rt(Uint16Array,t),Ht=t=>Rt(Uint32Array,t),$t=t=>Rt(Float32Array,t),Kt=t=>Rt(Float64Array,t),Gt=t=>Rt(Uint8ClampedArray,t);function qt(t,e,r){if(0!==t){r=r.slice(0,e+1);for(let n=-1;++n<=e;)r[n]+=t}return r}function Jt(t,e){let r=0,n=t.length;if(n!==e.length)return!1;if(n>0)do{if(t[r]!==e[r])return!1}while(++r<n);return!0}var Zt={fromIterable:t=>Qt(function*(t){let e,r,n,i,s=!1,o=[],a=0;function c(){return\"peek\"===n?yt(o,i)[0]:([r,o,a]=yt(o,i),r)}({cmd:n,size:i}=yield null);let u=Ut(t)[Symbol.iterator]();try{do{if(({done:e,value:r}=isNaN(i-a)?u.next(void 0):u.next(i-a)),!e&&r.byteLength>0&&(o.push(r),a+=r.byteLength),e||i<=a)do{({cmd:n,size:i}=yield c())}while(i<a)}while(!e)}catch(l){(s=!0)&&\"function\"===typeof u.throw&&u.throw(l)}finally{!1===s&&\"function\"===typeof u.return&&u.return()}}(t)),fromAsyncIterable:t=>Qt(async function*(t){let e,r,n,i,s=!1,o=[],a=0;function c(){return\"peek\"===n?yt(o,i)[0]:([r,o,a]=yt(o,i),r)}({cmd:n,size:i}=yield null);let u=Yt(t)[Symbol.asyncIterator]();try{do{if(({done:e,value:r}=isNaN(i-a)?await u.next(void 0):await u.next(i-a)),!e&&r.byteLength>0&&(o.push(r),a+=r.byteLength),e||i<=a)do{({cmd:n,size:i}=yield c())}while(i<a)}while(!e)}catch(l){(s=!0)&&\"function\"===typeof u.throw&&await u.throw(l)}finally{!1===s&&\"function\"===typeof u.return&&await u.return()}}(t)),fromDOMStream:t=>Qt(async function*(t){let e,r,n,i=!1,s=!1,o=[],a=0;function c(){return\"peek\"===r?yt(o,n)[0]:([e,o,a]=yt(o,n),e)}({cmd:r,size:n}=yield null);let u=new Xt(t);try{do{if(({done:i,value:e}=isNaN(n-a)?await u.read(void 0):await u.read(n-a)),!i&&e.byteLength>0&&(o.push(wt(e)),a+=e.byteLength),i||n<=a)do{({cmd:r,size:n}=yield c())}while(n<a)}while(!i)}catch(l){(s=!0)&&await u.cancel(l)}finally{!1===s?await u.cancel():t.locked&&u.releaseLock()}}(t)),fromNodeStream:t=>Qt(async function*(t){let e,r,n,i=[],s=\"error\",o=!1,a=null,c=0,u=[];function l(){return\"peek\"===e?yt(u,r)[0]:([n,u,c]=yt(u,r),n)}if(({cmd:e,size:r}=yield null),t.isTTY)return yield new Uint8Array(0);try{i[0]=ee(t,\"end\"),i[1]=ee(t,\"error\");do{if(i[2]=ee(t,\"readable\"),[s,a]=await Promise.race(i.map((t=>t[2]))),\"error\"===s)break;if((o=\"end\"===s)||(isFinite(r-c)?(n=wt(t.read(r-c)),n.byteLength<r-c&&(n=wt(t.read(void 0)))):n=wt(t.read(void 0)),n.byteLength>0&&(u.push(n),c+=n.byteLength)),o||r<=c)do{({cmd:e,size:r}=yield l())}while(r<c)}while(!o)}finally{await h(i,\"error\"===s?a:null)}function h(e,r){return n=u=null,new Promise((async(n,i)=>{for(const[r,o]of e)t.off(r,o);try{const e=t.destroy;e&&e.call(t,r),r=void 0}catch(s){r=s||r}finally{null!=r?i(r):n()}}))}}(t)),toDOMStream(t,e){throw new Error('\"toDOMStream\" not available in this environment')},toNodeStream(t,e){throw new Error('\"toNodeStream\" not available in this environment')}};const Qt=t=>(t.next(),t);class Xt{constructor(t){this.source=t,this.byobReader=null,this.defaultReader=null;try{this.supportsBYOB=!!(this.reader=this.getBYOBReader())}catch(e){this.supportsBYOB=!(this.reader=this.getDefaultReader())}}get closed(){return this.reader?this.reader.closed.catch((()=>{})):Promise.resolve()}releaseLock(){this.reader&&this.reader.releaseLock(),this.reader=this.byobReader=this.defaultReader=null}async cancel(t){const{reader:e,source:r}=this;e&&await e.cancel(t).catch((()=>{})),r&&r.locked&&this.releaseLock()}async read(t){if(0===t)return{done:null==this.reader,value:new Uint8Array(0)};const e=this.supportsBYOB&&\"number\"===typeof t?await this.readFromBYOBReader(t):await this.getDefaultReader().read();return!e.done&&(e.value=wt(e)),e}getDefaultReader(){return this.byobReader&&this.releaseLock(),this.defaultReader||(this.defaultReader=this.source.getReader(),this.defaultReader.closed.catch((()=>{}))),this.reader=this.defaultReader}getBYOBReader(){return this.defaultReader&&this.releaseLock(),this.byobReader||(this.byobReader=this.source.getReader({mode:\"byob\"}),this.byobReader.closed.catch((()=>{}))),this.reader=this.byobReader}async readFromBYOBReader(t){return await te(this.getBYOBReader(),new ArrayBuffer(t),0,t)}}async function te(t,e,r,n){if(r>=n)return{done:!1,value:new Uint8Array(e,0,n)};const{done:i,value:s}=await t.read(new Uint8Array(e,r,n-r));return(r+=s.byteLength)<n&&!i?await te(t,s.buffer,r,n):{done:i,value:new Uint8Array(s.buffer,0,r)}}const ee=(t,e)=>{let r,n=t=>r([e,t]);return[e,n,new Promise((i=>(r=i)&&t.once(e,n)))]};class re{}var ne,ie,se,oe,ae;oe=ne||(ne={}),se=oe.apache||(oe.apache={}),function(t){let e;!function(t){t[t.V1=0]=\"V1\",t[t.V2=1]=\"V2\",t[t.V3=2]=\"V3\",t[t.V4=3]=\"V4\"}(e=t.MetadataVersion||(t.MetadataVersion={}))}((ie=se.arrow||(se.arrow={})).flatbuf||(ie.flatbuf={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.Sparse=0]=\"Sparse\",t[t.Dense=1]=\"Dense\"}(e=t.UnionMode||(t.UnionMode={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.HALF=0]=\"HALF\",t[t.SINGLE=1]=\"SINGLE\",t[t.DOUBLE=2]=\"DOUBLE\"}(e=t.Precision||(t.Precision={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.DAY=0]=\"DAY\",t[t.MILLISECOND=1]=\"MILLISECOND\"}(e=t.DateUnit||(t.DateUnit={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.SECOND=0]=\"SECOND\",t[t.MILLISECOND=1]=\"MILLISECOND\",t[t.MICROSECOND=2]=\"MICROSECOND\",t[t.NANOSECOND=3]=\"NANOSECOND\"}(e=t.TimeUnit||(t.TimeUnit={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.YEAR_MONTH=0]=\"YEAR_MONTH\",t[t.DAY_TIME=1]=\"DAY_TIME\"}(e=t.IntervalUnit||(t.IntervalUnit={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.NONE=0]=\"NONE\",t[t.Null=1]=\"Null\",t[t.Int=2]=\"Int\",t[t.FloatingPoint=3]=\"FloatingPoint\",t[t.Binary=4]=\"Binary\",t[t.Utf8=5]=\"Utf8\",t[t.Bool=6]=\"Bool\",t[t.Decimal=7]=\"Decimal\",t[t.Date=8]=\"Date\",t[t.Time=9]=\"Time\",t[t.Timestamp=10]=\"Timestamp\",t[t.Interval=11]=\"Interval\",t[t.List=12]=\"List\",t[t.Struct_=13]=\"Struct_\",t[t.Union=14]=\"Union\",t[t.FixedSizeBinary=15]=\"FixedSizeBinary\",t[t.FixedSizeList=16]=\"FixedSizeList\",t[t.Map=17]=\"Map\",t[t.Duration=18]=\"Duration\",t[t.LargeBinary=19]=\"LargeBinary\",t[t.LargeUtf8=20]=\"LargeUtf8\",t[t.LargeList=21]=\"LargeList\"}(e=t.Type||(t.Type={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.Little=0]=\"Little\",t[t.Big=1]=\"Big\"}(e=t.Endianness||(t.Endianness={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsNull(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startNull(t){t.startObject(0)}static endNull(t){return t.endObject()}static createNull(t){return e.startNull(t),e.endNull(t)}}t.Null=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsStruct_(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startStruct_(t){t.startObject(0)}static endStruct_(t){return t.endObject()}static createStruct_(t){return e.startStruct_(t),e.endStruct_(t)}}t.Struct_=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsList(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startList(t){t.startObject(0)}static endList(t){return t.endObject()}static createList(t){return e.startList(t),e.endList(t)}}t.List=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLargeList(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startLargeList(t){t.startObject(0)}static endLargeList(t){return t.endObject()}static createLargeList(t){return e.startLargeList(t),e.endLargeList(t)}}t.LargeList=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFixedSizeList(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}listSize(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}static startFixedSizeList(t){t.startObject(1)}static addListSize(t,e){t.addFieldInt32(0,e,0)}static endFixedSizeList(t){return t.endObject()}static createFixedSizeList(t,r){return e.startFixedSizeList(t),e.addListSize(t,r),e.endFixedSizeList(t)}}t.FixedSizeList=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMap(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}keysSorted(){let t=this.bb.__offset(this.bb_pos,4);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startMap(t){t.startObject(1)}static addKeysSorted(t,e){t.addFieldInt8(0,+e,0)}static endMap(t){return t.endObject()}static createMap(t,r){return e.startMap(t),e.addKeysSorted(t,r),e.endMap(t)}}t.Map=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsUnion(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}mode(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.UnionMode.Sparse}typeIds(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt32(this.bb.__vector(this.bb_pos+e)+4*t):0}typeIdsLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}typeIdsArray(){let t=this.bb.__offset(this.bb_pos,6);return t?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startUnion(t){t.startObject(2)}static addMode(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.UnionMode.Sparse)}static addTypeIds(t,e){t.addFieldOffset(1,e,0)}static createTypeIdsVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addInt32(e[r]);return t.endVector()}static startTypeIdsVector(t,e){t.startVector(4,e,4)}static endUnion(t){return t.endObject()}static createUnion(t,e,n){return r.startUnion(t),r.addMode(t,e),r.addTypeIds(t,n),r.endUnion(t)}}e.Union=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsInt(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}bitWidth(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}isSigned(){let t=this.bb.__offset(this.bb_pos,6);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startInt(t){t.startObject(2)}static addBitWidth(t,e){t.addFieldInt32(0,e,0)}static addIsSigned(t,e){t.addFieldInt8(1,+e,0)}static endInt(t){return t.endObject()}static createInt(t,r,n){return e.startInt(t),e.addBitWidth(t,r),e.addIsSigned(t,n),e.endInt(t)}}t.Int=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFloatingPoint(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}precision(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.Precision.HALF}static startFloatingPoint(t){t.startObject(1)}static addPrecision(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.Precision.HALF)}static endFloatingPoint(t){return t.endObject()}static createFloatingPoint(t,e){return r.startFloatingPoint(t),r.addPrecision(t,e),r.endFloatingPoint(t)}}e.FloatingPoint=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsUtf8(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startUtf8(t){t.startObject(0)}static endUtf8(t){return t.endObject()}static createUtf8(t){return e.startUtf8(t),e.endUtf8(t)}}t.Utf8=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsBinary(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startBinary(t){t.startObject(0)}static endBinary(t){return t.endObject()}static createBinary(t){return e.startBinary(t),e.endBinary(t)}}t.Binary=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLargeUtf8(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startLargeUtf8(t){t.startObject(0)}static endLargeUtf8(t){return t.endObject()}static createLargeUtf8(t){return e.startLargeUtf8(t),e.endLargeUtf8(t)}}t.LargeUtf8=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsLargeBinary(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startLargeBinary(t){t.startObject(0)}static endLargeBinary(t){return t.endObject()}static createLargeBinary(t){return e.startLargeBinary(t),e.endLargeBinary(t)}}t.LargeBinary=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFixedSizeBinary(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}byteWidth(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}static startFixedSizeBinary(t){t.startObject(1)}static addByteWidth(t,e){t.addFieldInt32(0,e,0)}static endFixedSizeBinary(t){return t.endObject()}static createFixedSizeBinary(t,r){return e.startFixedSizeBinary(t),e.addByteWidth(t,r),e.endFixedSizeBinary(t)}}t.FixedSizeBinary=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsBool(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}static startBool(t){t.startObject(0)}static endBool(t){return t.endObject()}static createBool(t){return e.startBool(t),e.endBool(t)}}t.Bool=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDecimal(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}precision(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):0}scale(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):0}static startDecimal(t){t.startObject(2)}static addPrecision(t,e){t.addFieldInt32(0,e,0)}static addScale(t,e){t.addFieldInt32(1,e,0)}static endDecimal(t){return t.endObject()}static createDecimal(t,r,n){return e.startDecimal(t),e.addPrecision(t,r),e.addScale(t,n),e.endDecimal(t)}}t.Decimal=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDate(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}unit(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.DateUnit.MILLISECOND}static startDate(t){t.startObject(1)}static addUnit(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.DateUnit.MILLISECOND)}static endDate(t){return t.endObject()}static createDate(t,e){return r.startDate(t),r.addUnit(t,e),r.endDate(t)}}e.Date=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsTime(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}unit(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.TimeUnit.MILLISECOND}bitWidth(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readInt32(this.bb_pos+t):32}static startTime(t){t.startObject(2)}static addUnit(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.TimeUnit.MILLISECOND)}static addBitWidth(t,e){t.addFieldInt32(1,e,32)}static endTime(t){return t.endObject()}static createTime(t,e,n){return r.startTime(t),r.addUnit(t,e),r.addBitWidth(t,n),r.endTime(t)}}e.Time=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsTimestamp(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}unit(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.TimeUnit.SECOND}timezone(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}static startTimestamp(t){t.startObject(2)}static addUnit(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.TimeUnit.SECOND)}static addTimezone(t,e){t.addFieldOffset(1,e,0)}static endTimestamp(t){return t.endObject()}static createTimestamp(t,e,n){return r.startTimestamp(t),r.addUnit(t,e),r.addTimezone(t,n),r.endTimestamp(t)}}e.Timestamp=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsInterval(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}unit(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH}static startInterval(t){t.startObject(1)}static addUnit(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH)}static endInterval(t){return t.endObject()}static createInterval(t,e){return r.startInterval(t),r.addUnit(t,e),r.endInterval(t)}}e.Interval=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDuration(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}unit(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.TimeUnit.MILLISECOND}static startDuration(t){t.startObject(1)}static addUnit(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.TimeUnit.MILLISECOND)}static endDuration(t){return t.endObject()}static createDuration(t,e){return r.startDuration(t),r.addUnit(t,e),r.endDuration(t)}}e.Duration=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){class e{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsKeyValue(t,r){return(r||new e).__init(t.readInt32(t.position())+t.position(),t)}key(t){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}value(t){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}static startKeyValue(t){t.startObject(2)}static addKey(t,e){t.addFieldOffset(0,e,0)}static addValue(t,e){t.addFieldOffset(1,e,0)}static endKeyValue(t){return t.endObject()}static createKeyValue(t,r,n){return e.startKeyValue(t),e.addKey(t,r),e.addValue(t,n),e.endKeyValue(t)}}t.KeyValue=e}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDictionaryEncoding(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}id(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):this.bb.createLong(0,0)}indexType(e){let r=this.bb.__offset(this.bb_pos,6);return r?(e||new t.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos+r),this.bb):null}isOrdered(){let t=this.bb.__offset(this.bb_pos,8);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startDictionaryEncoding(t){t.startObject(3)}static addId(t,e){t.addFieldInt64(0,e,t.createLong(0,0))}static addIndexType(t,e){t.addFieldOffset(1,e,0)}static addIsOrdered(t,e){t.addFieldInt8(2,+e,0)}static endDictionaryEncoding(t){return t.endObject()}static createDictionaryEncoding(t,e,n,i){return r.startDictionaryEncoding(t),r.addId(t,e),r.addIndexType(t,n),r.addIsOrdered(t,i),r.endDictionaryEncoding(t)}}e.DictionaryEncoding=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsField(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}name(t){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}nullable(){let t=this.bb.__offset(this.bb_pos,6);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}typeType(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readUint8(this.bb_pos+e):t.apache.arrow.flatbuf.Type.NONE}type(t){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__union(t,this.bb_pos+e):null}dictionary(e){let r=this.bb.__offset(this.bb_pos,12);return r?(e||new t.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos+r),this.bb):null}children(e,r){let n=this.bb.__offset(this.bb_pos,14);return n?(r||new t.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null}childrenLength(){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}customMetadata(e,r){let n=this.bb.__offset(this.bb_pos,16);return n?(r||new t.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__vector_len(this.bb_pos+t):0}static startField(t){t.startObject(7)}static addName(t,e){t.addFieldOffset(0,e,0)}static addNullable(t,e){t.addFieldInt8(1,+e,0)}static addTypeType(e,r){e.addFieldInt8(2,r,t.apache.arrow.flatbuf.Type.NONE)}static addType(t,e){t.addFieldOffset(3,e,0)}static addDictionary(t,e){t.addFieldOffset(4,e,0)}static addChildren(t,e){t.addFieldOffset(5,e,0)}static createChildrenVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addOffset(e[r]);return t.endVector()}static startChildrenVector(t,e){t.startVector(4,e,4)}static addCustomMetadata(t,e){t.addFieldOffset(6,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addOffset(e[r]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endField(t){return t.endObject()}static createField(t,e,n,i,s,o,a,c){return r.startField(t),r.addName(t,e),r.addNullable(t,n),r.addTypeType(t,i),r.addType(t,s),r.addDictionary(t,o),r.addChildren(t,a),r.addCustomMetadata(t,c),r.endField(t)}}e.Field=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){t.Buffer=class{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}offset(){return this.bb.readInt64(this.bb_pos)}length(){return this.bb.readInt64(this.bb_pos+8)}static createBuffer(t,e,r){return t.prep(8,16),t.writeInt64(r),t.writeInt64(e),t.offset()}}}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsSchema(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}endianness(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):t.apache.arrow.flatbuf.Endianness.Little}fields(e,r){let n=this.bb.__offset(this.bb_pos,6);return n?(r||new t.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null}fieldsLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}customMetadata(e,r){let n=this.bb.__offset(this.bb_pos,8);return n?(r||new t.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startSchema(t){t.startObject(3)}static addEndianness(e,r){e.addFieldInt16(0,r,t.apache.arrow.flatbuf.Endianness.Little)}static addFields(t,e){t.addFieldOffset(1,e,0)}static createFieldsVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addOffset(e[r]);return t.endVector()}static startFieldsVector(t,e){t.startVector(4,e,4)}static addCustomMetadata(t,e){t.addFieldOffset(2,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addOffset(e[r]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endSchema(t){return t.endObject()}static finishSchemaBuffer(t,e){t.finish(e)}static createSchema(t,e,n,i){return r.startSchema(t),r.addEndianness(t,e),r.addFields(t,n),r.addCustomMetadata(t,i),r.endSchema(t)}}e.Schema=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ne||(ne={})),function(t){!function(t){!function(t){!function(t){t.Schema=ne.apache.arrow.flatbuf.Schema}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={})),function(t){!function(t){!function(t){!function(t){let e;!function(t){t[t.NONE=0]=\"NONE\",t[t.Schema=1]=\"Schema\",t[t.DictionaryBatch=2]=\"DictionaryBatch\",t[t.RecordBatch=3]=\"RecordBatch\",t[t.Tensor=4]=\"Tensor\",t[t.SparseTensor=5]=\"SparseTensor\"}(e=t.MessageHeader||(t.MessageHeader={}))}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={})),function(t){!function(t){!function(t){!function(t){t.FieldNode=class{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}length(){return this.bb.readInt64(this.bb_pos)}nullCount(){return this.bb.readInt64(this.bb_pos+8)}static createFieldNode(t,e,r){return t.prep(8,16),t.writeInt64(r),t.writeInt64(e),t.offset()}}}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsRecordBatch(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}length(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):this.bb.createLong(0,0)}nodes(e,r){let n=this.bb.__offset(this.bb_pos,6);return n?(r||new t.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos+n)+16*e,this.bb):null}nodesLength(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}buffers(t,e){let r=this.bb.__offset(this.bb_pos,8);return r?(e||new ne.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos+r)+16*t,this.bb):null}buffersLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startRecordBatch(t){t.startObject(3)}static addLength(t,e){t.addFieldInt64(0,e,t.createLong(0,0))}static addNodes(t,e){t.addFieldOffset(1,e,0)}static startNodesVector(t,e){t.startVector(16,e,8)}static addBuffers(t,e){t.addFieldOffset(2,e,0)}static startBuffersVector(t,e){t.startVector(16,e,8)}static endRecordBatch(t){return t.endObject()}static createRecordBatch(t,e,n,i){return r.startRecordBatch(t),r.addLength(t,e),r.addNodes(t,n),r.addBuffers(t,i),r.endRecordBatch(t)}}e.RecordBatch=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsDictionaryBatch(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}id(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt64(this.bb_pos+t):this.bb.createLong(0,0)}data(e){let r=this.bb.__offset(this.bb_pos,6);return r?(e||new t.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos+r),this.bb):null}isDelta(){let t=this.bb.__offset(this.bb_pos,8);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}static startDictionaryBatch(t){t.startObject(3)}static addId(t,e){t.addFieldInt64(0,e,t.createLong(0,0))}static addData(t,e){t.addFieldOffset(1,e,0)}static addIsDelta(t,e){t.addFieldInt8(2,+e,0)}static endDictionaryBatch(t){return t.endObject()}static createDictionaryBatch(t,e,n,i){return r.startDictionaryBatch(t),r.addId(t,e),r.addData(t,n),r.addIsDelta(t,i),r.endDictionaryBatch(t)}}e.DictionaryBatch=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={})),function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMessage(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}version(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):ne.apache.arrow.flatbuf.MetadataVersion.V1}headerType(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint8(this.bb_pos+e):t.apache.arrow.flatbuf.MessageHeader.NONE}header(t){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__union(t,this.bb_pos+e):null}bodyLength(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt64(this.bb_pos+t):this.bb.createLong(0,0)}customMetadata(t,e){let r=this.bb.__offset(this.bb_pos,12);return r?(e||new ne.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}customMetadataLength(){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}static startMessage(t){t.startObject(5)}static addVersion(t,e){t.addFieldInt16(0,e,ne.apache.arrow.flatbuf.MetadataVersion.V1)}static addHeaderType(e,r){e.addFieldInt8(1,r,t.apache.arrow.flatbuf.MessageHeader.NONE)}static addHeader(t,e){t.addFieldOffset(2,e,0)}static addBodyLength(t,e){t.addFieldInt64(3,e,t.createLong(0,0))}static addCustomMetadata(t,e){t.addFieldOffset(4,e,0)}static createCustomMetadataVector(t,e){t.startVector(4,e.length,4);for(let r=e.length-1;r>=0;r--)t.addOffset(e[r]);return t.endVector()}static startCustomMetadataVector(t,e){t.startVector(4,e,4)}static endMessage(t){return t.endObject()}static finishMessageBuffer(t,e){t.finish(e)}static createMessage(t,e,n,i,s,o){return r.startMessage(t),r.addVersion(t,e),r.addHeaderType(t,n),r.addHeader(t,i),r.addBodyLength(t,s),r.addCustomMetadata(t,o),r.endMessage(t)}}e.Message=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}(ae||(ae={}));ne.apache.arrow.flatbuf.Type;var ce,ue,le=ne.apache.arrow.flatbuf.DateUnit,he=ne.apache.arrow.flatbuf.TimeUnit,de=ne.apache.arrow.flatbuf.Precision,fe=ne.apache.arrow.flatbuf.UnionMode,pe=ne.apache.arrow.flatbuf.IntervalUnit,ye=ae.apache.arrow.flatbuf.MessageHeader,be=ne.apache.arrow.flatbuf.MetadataVersion;function ge(t,e,r,n){return 0!==(r&1<<n)}function _e(t,e,r,n){return(r&1<<n)>>n}function ve(t,e,r){return r?!!(t[e>>3]|=1<<e%8)||!0:!(t[e>>3]&=~(1<<e%8))&&!1}function me(t,e,r){const n=r.byteLength+7&-8;if(t>0||r.byteLength<n){const i=new Uint8Array(n);return i.set(t%8===0?r.subarray(t>>3):we(Ie(r,t,e,null,ge)).subarray(0,n)),i}return r}function we(t){let e=[],r=0,n=0,i=0;for(const o of t)o&&(i|=1<<n),8===++n&&(e[r++]=i,i=n=0);(0===r||n>0)&&(e[r++]=i);let s=new Uint8Array(e.length+7&-8);return s.set(e),s}function*Ie(t,e,r,n,i){let s=e%8,o=e>>3,a=0,c=r;for(;c>0;s=0){let e=t[o++];do{yield i(n,a++,e,s)}while(--c>0&&++s<8)}}function Se(t,e,r){if(r-e<=0)return 0;if(r-e<8){let n=0;for(const i of Ie(t,e,r-e,t,_e))n+=i;return n}const n=r>>3<<3,i=e+(e%8===0?0:8-e%8);return Se(t,e,i)+Se(t,n,r)+Ae(t,i>>3,n-i>>3)}function Ae(t,e,r){let n=0,i=0|e;const s=new DataView(t.buffer,t.byteOffset,t.byteLength),o=void 0===r?t.byteLength:i+r;for(;o-i>=4;)n+=Te(s.getUint32(i)),i+=4;for(;o-i>=2;)n+=Te(s.getUint16(i)),i+=2;for(;o-i>=1;)n+=Te(s.getUint8(i)),i+=1;return n}function Te(t){let e=0|t;return e-=e>>>1&1431655765,e=(858993459&e)+(e>>>2&858993459),16843009*(e+(e>>>4)&252645135)>>>24}!function(t){t[t.NONE=0]=\"NONE\",t[t.Null=1]=\"Null\",t[t.Int=2]=\"Int\",t[t.Float=3]=\"Float\",t[t.Binary=4]=\"Binary\",t[t.Utf8=5]=\"Utf8\",t[t.Bool=6]=\"Bool\",t[t.Decimal=7]=\"Decimal\",t[t.Date=8]=\"Date\",t[t.Time=9]=\"Time\",t[t.Timestamp=10]=\"Timestamp\",t[t.Interval=11]=\"Interval\",t[t.List=12]=\"List\",t[t.Struct=13]=\"Struct\",t[t.Union=14]=\"Union\",t[t.FixedSizeBinary=15]=\"FixedSizeBinary\",t[t.FixedSizeList=16]=\"FixedSizeList\",t[t.Map=17]=\"Map\",t[t.Dictionary=-1]=\"Dictionary\",t[t.Int8=-2]=\"Int8\",t[t.Int16=-3]=\"Int16\",t[t.Int32=-4]=\"Int32\",t[t.Int64=-5]=\"Int64\",t[t.Uint8=-6]=\"Uint8\",t[t.Uint16=-7]=\"Uint16\",t[t.Uint32=-8]=\"Uint32\",t[t.Uint64=-9]=\"Uint64\",t[t.Float16=-10]=\"Float16\",t[t.Float32=-11]=\"Float32\",t[t.Float64=-12]=\"Float64\",t[t.DateDay=-13]=\"DateDay\",t[t.DateMillisecond=-14]=\"DateMillisecond\",t[t.TimestampSecond=-15]=\"TimestampSecond\",t[t.TimestampMillisecond=-16]=\"TimestampMillisecond\",t[t.TimestampMicrosecond=-17]=\"TimestampMicrosecond\",t[t.TimestampNanosecond=-18]=\"TimestampNanosecond\",t[t.TimeSecond=-19]=\"TimeSecond\",t[t.TimeMillisecond=-20]=\"TimeMillisecond\",t[t.TimeMicrosecond=-21]=\"TimeMicrosecond\",t[t.TimeNanosecond=-22]=\"TimeNanosecond\",t[t.DenseUnion=-23]=\"DenseUnion\",t[t.SparseUnion=-24]=\"SparseUnion\",t[t.IntervalDayTime=-25]=\"IntervalDayTime\",t[t.IntervalYearMonth=-26]=\"IntervalYearMonth\"}(ce||(ce={})),function(t){t[t.OFFSET=0]=\"OFFSET\",t[t.DATA=1]=\"DATA\",t[t.VALIDITY=2]=\"VALIDITY\",t[t.TYPE=3]=\"TYPE\"}(ue||(ue={}));class Be{visitMany(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];return t.map(((t,e)=>this.visit(t,...r.map((t=>t[e])))))}visit(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return this.getVisitFn(e[0],!1).apply(this,e)}getVisitFn(t){return function(t,e){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=null,i=ce.NONE;e instanceof wr||e instanceof re?i=De(e.type):e instanceof Re?i=De(e):\"number\"!==typeof(i=e)&&(i=ce[e]);switch(i){case ce.Null:n=t.visitNull;break;case ce.Bool:n=t.visitBool;break;case ce.Int:n=t.visitInt;break;case ce.Int8:n=t.visitInt8||t.visitInt;break;case ce.Int16:n=t.visitInt16||t.visitInt;break;case ce.Int32:n=t.visitInt32||t.visitInt;break;case ce.Int64:n=t.visitInt64||t.visitInt;break;case ce.Uint8:n=t.visitUint8||t.visitInt;break;case ce.Uint16:n=t.visitUint16||t.visitInt;break;case ce.Uint32:n=t.visitUint32||t.visitInt;break;case ce.Uint64:n=t.visitUint64||t.visitInt;break;case ce.Float:n=t.visitFloat;break;case ce.Float16:n=t.visitFloat16||t.visitFloat;break;case ce.Float32:n=t.visitFloat32||t.visitFloat;break;case ce.Float64:n=t.visitFloat64||t.visitFloat;break;case ce.Utf8:n=t.visitUtf8;break;case ce.Binary:n=t.visitBinary;break;case ce.FixedSizeBinary:n=t.visitFixedSizeBinary;break;case ce.Date:n=t.visitDate;break;case ce.DateDay:n=t.visitDateDay||t.visitDate;break;case ce.DateMillisecond:n=t.visitDateMillisecond||t.visitDate;break;case ce.Timestamp:n=t.visitTimestamp;break;case ce.TimestampSecond:n=t.visitTimestampSecond||t.visitTimestamp;break;case ce.TimestampMillisecond:n=t.visitTimestampMillisecond||t.visitTimestamp;break;case ce.TimestampMicrosecond:n=t.visitTimestampMicrosecond||t.visitTimestamp;break;case ce.TimestampNanosecond:n=t.visitTimestampNanosecond||t.visitTimestamp;break;case ce.Time:n=t.visitTime;break;case ce.TimeSecond:n=t.visitTimeSecond||t.visitTime;break;case ce.TimeMillisecond:n=t.visitTimeMillisecond||t.visitTime;break;case ce.TimeMicrosecond:n=t.visitTimeMicrosecond||t.visitTime;break;case ce.TimeNanosecond:n=t.visitTimeNanosecond||t.visitTime;break;case ce.Decimal:n=t.visitDecimal;break;case ce.List:n=t.visitList;break;case ce.Struct:n=t.visitStruct;break;case ce.Union:n=t.visitUnion;break;case ce.DenseUnion:n=t.visitDenseUnion||t.visitUnion;break;case ce.SparseUnion:n=t.visitSparseUnion||t.visitUnion;break;case ce.Dictionary:n=t.visitDictionary;break;case ce.Interval:n=t.visitInterval;break;case ce.IntervalDayTime:n=t.visitIntervalDayTime||t.visitInterval;break;case ce.IntervalYearMonth:n=t.visitIntervalYearMonth||t.visitInterval;break;case ce.FixedSizeList:n=t.visitFixedSizeList;break;case ce.Map:n=t.visitMap}if(\"function\"===typeof n)return n;if(!r)return()=>null;throw new Error(\"Unrecognized type '\".concat(ce[i],\"'\"))}(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}visitNull(t){return null}visitBool(t){return null}visitInt(t){return null}visitFloat(t){return null}visitUtf8(t){return null}visitBinary(t){return null}visitFixedSizeBinary(t){return null}visitDate(t){return null}visitTimestamp(t){return null}visitTime(t){return null}visitDecimal(t){return null}visitList(t){return null}visitStruct(t){return null}visitUnion(t){return null}visitDictionary(t){return null}visitInterval(t){return null}visitFixedSizeList(t){return null}visitMap(t){return null}}function De(t){switch(t.typeId){case ce.Null:return ce.Null;case ce.Int:const{bitWidth:e,isSigned:r}=t;switch(e){case 8:return r?ce.Int8:ce.Uint8;case 16:return r?ce.Int16:ce.Uint16;case 32:return r?ce.Int32:ce.Uint32;case 64:return r?ce.Int64:ce.Uint64}return ce.Int;case ce.Float:switch(t.precision){case de.HALF:return ce.Float16;case de.SINGLE:return ce.Float32;case de.DOUBLE:return ce.Float64}return ce.Float;case ce.Binary:return ce.Binary;case ce.Utf8:return ce.Utf8;case ce.Bool:return ce.Bool;case ce.Decimal:return ce.Decimal;case ce.Time:switch(t.unit){case he.SECOND:return ce.TimeSecond;case he.MILLISECOND:return ce.TimeMillisecond;case he.MICROSECOND:return ce.TimeMicrosecond;case he.NANOSECOND:return ce.TimeNanosecond}return ce.Time;case ce.Timestamp:switch(t.unit){case he.SECOND:return ce.TimestampSecond;case he.MILLISECOND:return ce.TimestampMillisecond;case he.MICROSECOND:return ce.TimestampMicrosecond;case he.NANOSECOND:return ce.TimestampNanosecond}return ce.Timestamp;case ce.Date:switch(t.unit){case le.DAY:return ce.DateDay;case le.MILLISECOND:return ce.DateMillisecond}return ce.Date;case ce.Interval:switch(t.unit){case pe.DAY_TIME:return ce.IntervalDayTime;case pe.YEAR_MONTH:return ce.IntervalYearMonth}return ce.Interval;case ce.Map:return ce.Map;case ce.List:return ce.List;case ce.Struct:return ce.Struct;case ce.Union:switch(t.mode){case fe.Dense:return ce.DenseUnion;case fe.Sparse:return ce.SparseUnion}return ce.Union;case ce.FixedSizeBinary:return ce.FixedSizeBinary;case ce.FixedSizeList:return ce.FixedSizeList;case ce.Dictionary:return ce.Dictionary}throw new Error(\"Unrecognized type '\".concat(ce[t.typeId],\"'\"))}Be.prototype.visitInt8=null,Be.prototype.visitInt16=null,Be.prototype.visitInt32=null,Be.prototype.visitInt64=null,Be.prototype.visitUint8=null,Be.prototype.visitUint16=null,Be.prototype.visitUint32=null,Be.prototype.visitUint64=null,Be.prototype.visitFloat16=null,Be.prototype.visitFloat32=null,Be.prototype.visitFloat64=null,Be.prototype.visitDateDay=null,Be.prototype.visitDateMillisecond=null,Be.prototype.visitTimestampSecond=null,Be.prototype.visitTimestampMillisecond=null,Be.prototype.visitTimestampMicrosecond=null,Be.prototype.visitTimestampNanosecond=null,Be.prototype.visitTimeSecond=null,Be.prototype.visitTimeMillisecond=null,Be.prototype.visitTimeMicrosecond=null,Be.prototype.visitTimeNanosecond=null,Be.prototype.visitDenseUnion=null,Be.prototype.visitSparseUnion=null,Be.prototype.visitIntervalDayTime=null,Be.prototype.visitIntervalYearMonth=null;class Oe extends Be{compareSchemas(t,e){return t===e||e instanceof t.constructor&&ke.compareFields(t.fields,e.fields)}compareFields(t,e){return t===e||Array.isArray(t)&&Array.isArray(e)&&t.length===e.length&&t.every(((t,r)=>ke.compareField(t,e[r])))}compareField(t,e){return t===e||e instanceof t.constructor&&t.name===e.name&&t.nullable===e.nullable&&ke.visit(t.type,e.type)}}function xe(t,e){return e instanceof t.constructor}function Le(t,e){return t===e||xe(t,e)}function Fe(t,e){return t===e||xe(t,e)&&t.bitWidth===e.bitWidth&&t.isSigned===e.isSigned}function Me(t,e){return t===e||xe(t,e)&&t.precision===e.precision}function Ue(t,e){return t===e||xe(t,e)&&t.unit===e.unit}function Ee(t,e){return t===e||xe(t,e)&&t.unit===e.unit&&t.timezone===e.timezone}function Ne(t,e){return t===e||xe(t,e)&&t.unit===e.unit&&t.bitWidth===e.bitWidth}function Ce(t,e){return t===e||xe(t,e)&&t.mode===e.mode&&t.typeIds.every(((t,r)=>t===e.typeIds[r]))&&ke.compareFields(t.children,e.children)}function Ve(t,e){return t===e||xe(t,e)&&t.unit===e.unit}Oe.prototype.visitNull=Le,Oe.prototype.visitBool=Le,Oe.prototype.visitInt=Fe,Oe.prototype.visitInt8=Fe,Oe.prototype.visitInt16=Fe,Oe.prototype.visitInt32=Fe,Oe.prototype.visitInt64=Fe,Oe.prototype.visitUint8=Fe,Oe.prototype.visitUint16=Fe,Oe.prototype.visitUint32=Fe,Oe.prototype.visitUint64=Fe,Oe.prototype.visitFloat=Me,Oe.prototype.visitFloat16=Me,Oe.prototype.visitFloat32=Me,Oe.prototype.visitFloat64=Me,Oe.prototype.visitUtf8=Le,Oe.prototype.visitBinary=Le,Oe.prototype.visitFixedSizeBinary=function(t,e){return t===e||xe(t,e)&&t.byteWidth===e.byteWidth},Oe.prototype.visitDate=Ue,Oe.prototype.visitDateDay=Ue,Oe.prototype.visitDateMillisecond=Ue,Oe.prototype.visitTimestamp=Ee,Oe.prototype.visitTimestampSecond=Ee,Oe.prototype.visitTimestampMillisecond=Ee,Oe.prototype.visitTimestampMicrosecond=Ee,Oe.prototype.visitTimestampNanosecond=Ee,Oe.prototype.visitTime=Ne,Oe.prototype.visitTimeSecond=Ne,Oe.prototype.visitTimeMillisecond=Ne,Oe.prototype.visitTimeMicrosecond=Ne,Oe.prototype.visitTimeNanosecond=Ne,Oe.prototype.visitDecimal=Le,Oe.prototype.visitList=function(t,e){return t===e||xe(t,e)&&t.children.length===e.children.length&&ke.compareFields(t.children,e.children)},Oe.prototype.visitStruct=function(t,e){return t===e||xe(t,e)&&t.children.length===e.children.length&&ke.compareFields(t.children,e.children)},Oe.prototype.visitUnion=Ce,Oe.prototype.visitDenseUnion=Ce,Oe.prototype.visitSparseUnion=Ce,Oe.prototype.visitDictionary=function(t,e){return t===e||xe(t,e)&&t.id===e.id&&t.isOrdered===e.isOrdered&&ke.visit(t.indices,e.indices)&&ke.visit(t.dictionary,e.dictionary)},Oe.prototype.visitInterval=Ve,Oe.prototype.visitIntervalDayTime=Ve,Oe.prototype.visitIntervalYearMonth=Ve,Oe.prototype.visitFixedSizeList=function(t,e){return t===e||xe(t,e)&&t.listSize===e.listSize&&t.children.length===e.children.length&&ke.compareFields(t.children,e.children)},Oe.prototype.visitMap=function(t,e){return t===e||xe(t,e)&&t.keysSorted===e.keysSorted&&t.children.length===e.children.length&&ke.compareFields(t.children,e.children)};const ke=new Oe;class Re{static isNull(t){return t&&t.typeId===ce.Null}static isInt(t){return t&&t.typeId===ce.Int}static isFloat(t){return t&&t.typeId===ce.Float}static isBinary(t){return t&&t.typeId===ce.Binary}static isUtf8(t){return t&&t.typeId===ce.Utf8}static isBool(t){return t&&t.typeId===ce.Bool}static isDecimal(t){return t&&t.typeId===ce.Decimal}static isDate(t){return t&&t.typeId===ce.Date}static isTime(t){return t&&t.typeId===ce.Time}static isTimestamp(t){return t&&t.typeId===ce.Timestamp}static isInterval(t){return t&&t.typeId===ce.Interval}static isList(t){return t&&t.typeId===ce.List}static isStruct(t){return t&&t.typeId===ce.Struct}static isUnion(t){return t&&t.typeId===ce.Union}static isFixedSizeBinary(t){return t&&t.typeId===ce.FixedSizeBinary}static isFixedSizeList(t){return t&&t.typeId===ce.FixedSizeList}static isMap(t){return t&&t.typeId===ce.Map}static isDictionary(t){return t&&t.typeId===ce.Dictionary}get typeId(){return ce.NONE}compareTo(t){return ke.visit(this,t)}}var je;Re[Symbol.toStringTag]=((je=Re.prototype).children=null,je.ArrayType=Array,je[Symbol.toStringTag]=\"DataType\");class Pe extends Re{toString(){return\"Null\"}get typeId(){return ce.Null}}Pe[Symbol.toStringTag]=(t=>t[Symbol.toStringTag]=\"Null\")(Pe.prototype);class ze extends Re{constructor(t,e){super(),this.isSigned=t,this.bitWidth=e}get typeId(){return ce.Int}get ArrayType(){switch(this.bitWidth){case 8:return this.isSigned?Int8Array:Uint8Array;case 16:return this.isSigned?Int16Array:Uint16Array;case 32:case 64:return this.isSigned?Int32Array:Uint32Array}throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag],\" type\"))}toString(){return\"\".concat(this.isSigned?\"I\":\"Ui\",\"nt\").concat(this.bitWidth)}}ze[Symbol.toStringTag]=(t=>(t.isSigned=null,t.bitWidth=null,t[Symbol.toStringTag]=\"Int\"))(ze.prototype);class Ye extends ze{constructor(){super(!0,8)}}class We extends ze{constructor(){super(!0,16)}}class He extends ze{constructor(){super(!0,32)}}class $e extends ze{constructor(){super(!0,64)}}class Ke extends ze{constructor(){super(!1,8)}}class Ge extends ze{constructor(){super(!1,16)}}class qe extends ze{constructor(){super(!1,32)}}class Je extends ze{constructor(){super(!1,64)}}Object.defineProperty(Ye.prototype,\"ArrayType\",{value:Int8Array}),Object.defineProperty(We.prototype,\"ArrayType\",{value:Int16Array}),Object.defineProperty(He.prototype,\"ArrayType\",{value:Int32Array}),Object.defineProperty($e.prototype,\"ArrayType\",{value:Int32Array}),Object.defineProperty(Ke.prototype,\"ArrayType\",{value:Uint8Array}),Object.defineProperty(Ge.prototype,\"ArrayType\",{value:Uint16Array}),Object.defineProperty(qe.prototype,\"ArrayType\",{value:Uint32Array}),Object.defineProperty(Je.prototype,\"ArrayType\",{value:Uint32Array});class Ze extends Re{constructor(t){super(),this.precision=t}get typeId(){return ce.Float}get ArrayType(){switch(this.precision){case de.HALF:return Uint16Array;case de.SINGLE:return Float32Array;case de.DOUBLE:return Float64Array}throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag],\" type\"))}toString(){return\"Float\".concat(this.precision<<5||16)}}Ze[Symbol.toStringTag]=(t=>(t.precision=null,t[Symbol.toStringTag]=\"Float\"))(Ze.prototype);class Qe extends Ze{constructor(){super(de.HALF)}}class Xe extends Ze{constructor(){super(de.SINGLE)}}class tr extends Ze{constructor(){super(de.DOUBLE)}}Object.defineProperty(Qe.prototype,\"ArrayType\",{value:Uint16Array}),Object.defineProperty(Xe.prototype,\"ArrayType\",{value:Float32Array}),Object.defineProperty(tr.prototype,\"ArrayType\",{value:Float64Array});class er extends Re{constructor(){super()}get typeId(){return ce.Binary}toString(){return\"Binary\"}}er[Symbol.toStringTag]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]=\"Binary\"))(er.prototype);class rr extends Re{constructor(){super()}get typeId(){return ce.Utf8}toString(){return\"Utf8\"}}rr[Symbol.toStringTag]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]=\"Utf8\"))(rr.prototype);class nr extends Re{constructor(){super()}get typeId(){return ce.Bool}toString(){return\"Bool\"}}nr[Symbol.toStringTag]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]=\"Bool\"))(nr.prototype);class ir extends Re{constructor(t,e){super(),this.scale=t,this.precision=e}get typeId(){return ce.Decimal}toString(){return\"Decimal[\".concat(this.precision,\"e\").concat(this.scale>0?\"+\":\"\").concat(this.scale,\"]\")}}ir[Symbol.toStringTag]=(t=>(t.scale=null,t.precision=null,t.ArrayType=Uint32Array,t[Symbol.toStringTag]=\"Decimal\"))(ir.prototype);class sr extends Re{constructor(t){super(),this.unit=t}get typeId(){return ce.Date}toString(){return\"Date\".concat(32*(this.unit+1),\"<\").concat(le[this.unit],\">\")}}sr[Symbol.toStringTag]=(t=>(t.unit=null,t.ArrayType=Int32Array,t[Symbol.toStringTag]=\"Date\"))(sr.prototype);class or extends sr{constructor(){super(le.DAY)}}class ar extends sr{constructor(){super(le.MILLISECOND)}}class cr extends Re{constructor(t,e){super(),this.unit=t,this.bitWidth=e}get typeId(){return ce.Time}toString(){return\"Time\".concat(this.bitWidth,\"<\").concat(he[this.unit],\">\")}}cr[Symbol.toStringTag]=(t=>(t.unit=null,t.bitWidth=null,t.ArrayType=Int32Array,t[Symbol.toStringTag]=\"Time\"))(cr.prototype);class ur extends Re{constructor(t,e){super(),this.unit=t,this.timezone=e}get typeId(){return ce.Timestamp}toString(){return\"Timestamp<\".concat(he[this.unit]).concat(this.timezone?\", \".concat(this.timezone):\"\",\">\")}}ur[Symbol.toStringTag]=(t=>(t.unit=null,t.timezone=null,t.ArrayType=Int32Array,t[Symbol.toStringTag]=\"Timestamp\"))(ur.prototype);class lr extends Re{constructor(t){super(),this.unit=t}get typeId(){return ce.Interval}toString(){return\"Interval<\".concat(pe[this.unit],\">\")}}lr[Symbol.toStringTag]=(t=>(t.unit=null,t.ArrayType=Int32Array,t[Symbol.toStringTag]=\"Interval\"))(lr.prototype);class hr extends Re{constructor(t){super(),this.children=[t]}get typeId(){return ce.List}toString(){return\"List<\".concat(this.valueType,\">\")}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}}hr[Symbol.toStringTag]=(t=>(t.children=null,t[Symbol.toStringTag]=\"List\"))(hr.prototype);class dr extends Re{constructor(t){super(),this.children=t}get typeId(){return ce.Struct}toString(){return\"Struct<{\".concat(this.children.map((t=>\"\".concat(t.name,\":\").concat(t.type))).join(\", \"),\"}>\")}}dr[Symbol.toStringTag]=(t=>(t.children=null,t[Symbol.toStringTag]=\"Struct\"))(dr.prototype);class fr extends Re{constructor(t,e,r){super(),this.mode=t,this.children=r,this.typeIds=e=Int32Array.from(e),this.typeIdToChildIndex=e.reduce(((t,e,r)=>(t[e]=r)&&t||t),Object.create(null))}get typeId(){return ce.Union}toString(){return\"\".concat(this[Symbol.toStringTag],\"<\").concat(this.children.map((t=>\"\".concat(t.type))).join(\" | \"),\">\")}}fr[Symbol.toStringTag]=(t=>(t.mode=null,t.typeIds=null,t.children=null,t.typeIdToChildIndex=null,t.ArrayType=Int8Array,t[Symbol.toStringTag]=\"Union\"))(fr.prototype);class pr extends Re{constructor(t){super(),this.byteWidth=t}get typeId(){return ce.FixedSizeBinary}toString(){return\"FixedSizeBinary[\".concat(this.byteWidth,\"]\")}}pr[Symbol.toStringTag]=(t=>(t.byteWidth=null,t.ArrayType=Uint8Array,t[Symbol.toStringTag]=\"FixedSizeBinary\"))(pr.prototype);class yr extends Re{constructor(t,e){super(),this.listSize=t,this.children=[e]}get typeId(){return ce.FixedSizeList}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}toString(){return\"FixedSizeList[\".concat(this.listSize,\"]<\").concat(this.valueType,\">\")}}yr[Symbol.toStringTag]=(t=>(t.children=null,t.listSize=null,t[Symbol.toStringTag]=\"FixedSizeList\"))(yr.prototype);class br extends Re{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super(),this.children=[t],this.keysSorted=e}get typeId(){return ce.Map}get keyType(){return this.children[0].type.children[0].type}get valueType(){return this.children[0].type.children[1].type}toString(){return\"Map<{\".concat(this.children[0].type.children.map((t=>\"\".concat(t.name,\":\").concat(t.type))).join(\", \"),\"}>\")}}br[Symbol.toStringTag]=(t=>(t.children=null,t.keysSorted=null,t[Symbol.toStringTag]=\"Map_\"))(br.prototype);const gr=(_r=-1,()=>++_r);var _r;class vr extends Re{constructor(t,e,r,n){super(),this.indices=e,this.dictionary=t,this.isOrdered=n||!1,this.id=null==r?gr():\"number\"===typeof r?r:r.low}get typeId(){return ce.Dictionary}get children(){return this.dictionary.children}get valueType(){return this.dictionary}get ArrayType(){return this.dictionary.ArrayType}toString(){return\"Dictionary<\".concat(this.indices,\", \").concat(this.dictionary,\">\")}}function mr(t){let e=t;switch(t.typeId){case ce.Decimal:return 4;case ce.Timestamp:return 2;case ce.Date:case ce.Interval:return 1+e.unit;case ce.Int:case ce.Time:return+(e.bitWidth>32)+1;case ce.FixedSizeList:return e.listSize;case ce.FixedSizeBinary:return e.byteWidth;default:return 1}}vr[Symbol.toStringTag]=(t=>(t.id=null,t.indices=null,t.isOrdered=null,t.dictionary=null,t[Symbol.toStringTag]=\"Dictionary\"))(vr.prototype);class wr{constructor(t,e,r,n,i,s,o){let a;this.type=t,this.dictionary=o,this.offset=Math.floor(Math.max(e||0,0)),this.length=Math.floor(Math.max(r||0,0)),this._nullCount=Math.floor(Math.max(n||0,-1)),this.childData=(s||[]).map((t=>t instanceof wr?t:t.data)),i instanceof wr?(this.stride=i.stride,this.values=i.values,this.typeIds=i.typeIds,this.nullBitmap=i.nullBitmap,this.valueOffsets=i.valueOffsets):(this.stride=mr(t),i&&((a=i[0])&&(this.valueOffsets=a),(a=i[1])&&(this.values=a),(a=i[2])&&(this.nullBitmap=a),(a=i[3])&&(this.typeIds=a)))}get typeId(){return this.type.typeId}get ArrayType(){return this.type.ArrayType}get buffers(){return[this.valueOffsets,this.values,this.nullBitmap,this.typeIds]}get byteLength(){let t=0,{valueOffsets:e,values:r,nullBitmap:n,typeIds:i}=this;return e&&(t+=e.byteLength),r&&(t+=r.byteLength),n&&(t+=n.byteLength),i&&(t+=i.byteLength),this.childData.reduce(((t,e)=>t+e.byteLength),t)}get nullCount(){let t,e=this._nullCount;return e<=-1&&(t=this.nullBitmap)&&(this._nullCount=e=this.length-Se(t,this.offset,this.offset+this.length)),e}clone(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.offset,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.length,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._nullCount,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:this.childData;return new wr(t,e,r,n,i,s,this.dictionary)}slice(t,e){const{stride:r,typeId:n,childData:i}=this,s=+(0===this._nullCount)-1,o=16===n?r:1,a=this._sliceBuffers(t,e,r,n);return this.clone(this.type,this.offset+t,e,s,a,!i.length||this.valueOffsets?i:this._sliceChildren(i,o*t,o*e))}_changeLengthAndBackfillNullBitmap(t){if(this.typeId===ce.Null)return this.clone(this.type,0,t,0);const{length:e,nullCount:r}=this,n=new Uint8Array((t+63&-64)>>3).fill(255,0,e>>3);n[e>>3]=(1<<e-(-8&e))-1,r>0&&n.set(me(this.offset,e,this.nullBitmap),0);const i=this.buffers;return i[ue.VALIDITY]=n,this.clone(this.type,0,t,r+(t-e),i)}_sliceBuffers(t,e,r,n){let i,{buffers:s}=this;return(i=s[ue.TYPE])&&(s[ue.TYPE]=i.subarray(t,t+e)),(i=s[ue.OFFSET])&&(s[ue.OFFSET]=i.subarray(t,t+e+1))||(i=s[ue.DATA])&&(s[ue.DATA]=6===n?i:i.subarray(r*t,r*(t+e))),s}_sliceChildren(t,e,r){return t.map((t=>t.slice(e,r)))}static new(t,e,r,n,i,s,o){switch(i instanceof wr?i=i.buffers:i||(i=[]),t.typeId){case ce.Null:return wr.Null(t,e,r);case ce.Int:return wr.Int(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Dictionary:return wr.Dictionary(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[],o);case ce.Float:return wr.Float(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Bool:return wr.Bool(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Decimal:return wr.Decimal(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Date:return wr.Date(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Time:return wr.Time(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Timestamp:return wr.Timestamp(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Interval:return wr.Interval(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.FixedSizeBinary:return wr.FixedSizeBinary(t,e,r,n||0,i[ue.VALIDITY],i[ue.DATA]||[]);case ce.Binary:return wr.Binary(t,e,r,n||0,i[ue.VALIDITY],i[ue.OFFSET]||[],i[ue.DATA]||[]);case ce.Utf8:return wr.Utf8(t,e,r,n||0,i[ue.VALIDITY],i[ue.OFFSET]||[],i[ue.DATA]||[]);case ce.List:return wr.List(t,e,r,n||0,i[ue.VALIDITY],i[ue.OFFSET]||[],(s||[])[0]);case ce.FixedSizeList:return wr.FixedSizeList(t,e,r,n||0,i[ue.VALIDITY],(s||[])[0]);case ce.Struct:return wr.Struct(t,e,r,n||0,i[ue.VALIDITY],s||[]);case ce.Map:return wr.Map(t,e,r,n||0,i[ue.VALIDITY],i[ue.OFFSET]||[],(s||[])[0]);case ce.Union:return wr.Union(t,e,r,n||0,i[ue.VALIDITY],i[ue.TYPE]||[],i[ue.OFFSET]||s,s)}throw new Error(\"Unrecognized typeId \".concat(t.typeId))}static Null(t,e,r){return new wr(t,e,r,0)}static Int(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Dictionary(t,e,r,n,i,s,o){return new wr(t,e,r,n,[void 0,bt(t.indices.ArrayType,s),wt(i)],[],o)}static Float(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Bool(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Decimal(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Date(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Time(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Timestamp(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Interval(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static FixedSizeBinary(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,bt(t.ArrayType,s),wt(i)])}static Binary(t,e,r,n,i,s,o){return new wr(t,e,r,n,[vt(s),wt(o),wt(i)])}static Utf8(t,e,r,n,i,s,o){return new wr(t,e,r,n,[vt(s),wt(o),wt(i)])}static List(t,e,r,n,i,s,o){return new wr(t,e,r,n,[vt(s),void 0,wt(i)],[o])}static FixedSizeList(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,void 0,wt(i)],[s])}static Struct(t,e,r,n,i,s){return new wr(t,e,r,n,[void 0,void 0,wt(i)],s)}static Map(t,e,r,n,i,s,o){return new wr(t,e,r,n,[vt(s),void 0,wt(i)],[o])}static Union(t,e,r,n,i,s,o,a){const c=[void 0,void 0,wt(i),bt(t.ArrayType,s)];return t.mode===fe.Sparse?new wr(t,e,r,n,c,o):(c[ue.OFFSET]=vt(o),new wr(t,e,r,n,c,a))}}wr.prototype.childData=Object.freeze([]);const Ir=void 0;function Sr(t){if(null===t)return\"null\";if(t===Ir)return\"undefined\";switch(typeof t){case\"number\":case\"bigint\":return\"\".concat(t);case\"string\":return'\"'.concat(t,'\"')}return\"function\"===typeof t[Symbol.toPrimitive]?t[Symbol.toPrimitive](\"string\"):ArrayBuffer.isView(t)?\"[\".concat(t,\"]\"):JSON.stringify(t)}function Ar(t){if(!t||t.length<=0)return function(t){return!0};let e=\"\",r=t.filter((t=>t===t));return r.length>0&&(e=\"\\n    switch (x) {\".concat(r.map((t=>\"\\n        case \".concat(function(t){if(\"bigint\"!==typeof t)return Sr(t);if(G)return\"\".concat(Sr(t),\"n\");return'\"'.concat(Sr(t),'\"')}(t),\":\"))).join(\"\"),\"\\n            return false;\\n    }\")),t.length!==r.length&&(e=\"if (x !== x) return false;\\n\".concat(e)),new Function(\"x\",\"\".concat(e,\"\\nreturn true;\"))}const Tr=(t,e)=>(t*e+63&-64||64)/e;class Br{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.buffer=t,this.stride=e,this.BYTES_PER_ELEMENT=t.BYTES_PER_ELEMENT,this.ArrayType=t.constructor,this._resize(this.length=t.length/e|0)}get byteLength(){return this.length*this.stride*this.BYTES_PER_ELEMENT|0}get reservedLength(){return this.buffer.length/this.stride}get reservedByteLength(){return this.buffer.byteLength}set(t,e){return this}append(t){return this.set(this.length,t)}reserve(t){if(t>0){this.length+=t;const e=this.stride,r=this.length*e,n=this.buffer.length;r>=n&&this._resize(Tr(0===n?1*r:2*r,this.BYTES_PER_ELEMENT))}return this}flush(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.length;t=Tr(t*this.stride,this.BYTES_PER_ELEMENT);const e=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t.length>=e?t.subarray(0,e):pt(new t.constructor(e),t,0)}(this.buffer,t);return this.clear(),e}clear(){return this.length=0,this._resize(0),this}_resize(t){return this.buffer=pt(new this.ArrayType(t),this.buffer)}}Br.prototype.offset=0;class Dr extends Br{last(){return this.get(this.length-1)}get(t){return this.buffer[t]}set(t,e){return this.reserve(t-this.length+1),this.buffer[t*this.stride]=e,this}}class Or extends Dr{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Uint8Array(0),1/8),this.numValid=0}get numInvalid(){return this.length-this.numValid}get(t){return this.buffer[t>>3]>>t%8&1}set(t,e){const{buffer:r}=this.reserve(t-this.length+1),n=t>>3,i=t%8,s=r[n]>>i&1;return e?0===s&&(r[n]|=1<<i,++this.numValid):1===s&&(r[n]&=~(1<<i),--this.numValid),this}clear(){return this.numValid=0,super.clear()}}class xr extends Dr{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Int32Array(1),1)}append(t){return this.set(this.length-1,t)}set(t,e){const r=this.length-1,n=this.reserve(t-r+1).buffer;return r<t++&&n.fill(n[r],r,t),n[t]=n[t-1]+e,this}flush(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.length-1;return t>this.length&&this.set(t-1,0),super.flush(t+1)}}class Lr extends Br{get ArrayType64(){return this._ArrayType64||(this._ArrayType64=this.buffer instanceof Int32Array?q:Z)}set(t,e){switch(this.reserve(t-this.length+1),typeof e){case\"bigint\":this.buffer64[t]=e;break;case\"number\":this.buffer[t*this.stride]=e;break;default:this.buffer.set(e,t*this.stride)}return this}_resize(t){const e=super._resize(t),r=e.byteLength/(this.BYTES_PER_ELEMENT*this.stride);return G&&(this.buffer64=new this.ArrayType64(e.buffer,e.byteOffset,r)),e}}class Fr{constructor(t){let{type:e,nullValues:r}=t;this.length=0,this.finished=!1,this.type=e,this.children=[],this.nullValues=r,this.stride=mr(e),this._nulls=new Or,r&&r.length>0&&(this._isValid=Ar(r))}static new(t){}static throughNode(t){throw new Error('\"throughNode\" not available in this environment')}static throughDOM(t){throw new Error('\"throughDOM\" not available in this environment')}static throughIterable(t){return function(t){const{queueingStrategy:e=\"count\"}=t,{highWaterMark:r=(\"bytes\"!==e?1e3:16384)}=t,n=\"bytes\"!==e?\"length\":\"byteLength\";return function*(e){let i=0,s=Fr.new(t);for(const t of e)s.append(t)[n]>=r&&++i&&(yield s.toVector());(s.finish().length>0||0===i)&&(yield s.toVector())}}(t)}static throughAsyncIterable(t){return function(t){const{queueingStrategy:e=\"count\"}=t,{highWaterMark:r=(\"bytes\"!==e?1e3:16384)}=t,n=\"bytes\"!==e?\"length\":\"byteLength\";return async function*(e){let i=0,s=Fr.new(t);for await(const t of e)s.append(t)[n]>=r&&++i&&(yield s.toVector());(s.finish().length>0||0===i)&&(yield s.toVector())}}(t)}toVector(){return re.new(this.flush())}get ArrayType(){return this.type.ArrayType}get nullCount(){return this._nulls.numInvalid}get numChildren(){return this.children.length}get byteLength(){let t=0;return this._offsets&&(t+=this._offsets.byteLength),this._values&&(t+=this._values.byteLength),this._nulls&&(t+=this._nulls.byteLength),this._typeIds&&(t+=this._typeIds.byteLength),this.children.reduce(((t,e)=>t+e.byteLength),t)}get reservedLength(){return this._nulls.reservedLength}get reservedByteLength(){let t=0;return this._offsets&&(t+=this._offsets.reservedByteLength),this._values&&(t+=this._values.reservedByteLength),this._nulls&&(t+=this._nulls.reservedByteLength),this._typeIds&&(t+=this._typeIds.reservedByteLength),this.children.reduce(((t,e)=>t+e.reservedByteLength),t)}get valueOffsets(){return this._offsets?this._offsets.buffer:null}get values(){return this._values?this._values.buffer:null}get nullBitmap(){return this._nulls?this._nulls.buffer:null}get typeIds(){return this._typeIds?this._typeIds.buffer:null}append(t){return this.set(this.length,t)}isValid(t){return this._isValid(t)}set(t,e){return this.setValid(t,this.isValid(e))&&this.setValue(t,e),this}setValue(t,e){this._setValue(this,t,e)}setValid(t,e){return this.length=this._nulls.set(t,+e).length,e}addChild(t){arguments.length>1&&void 0!==arguments[1]||\"\".concat(this.numChildren);throw new Error('Cannot append children to non-nested type \"'.concat(this.type,'\"'))}getChildAt(t){return this.children[t]||null}flush(){const t=[],e=this._values,r=this._offsets,n=this._typeIds,{length:i,nullCount:s}=this;n?(t[ue.TYPE]=n.flush(i),r&&(t[ue.OFFSET]=r.flush(i))):r?(e&&(t[ue.DATA]=e.flush(r.last())),t[ue.OFFSET]=r.flush(i)):e&&(t[ue.DATA]=e.flush(i)),s>0&&(t[ue.VALIDITY]=this._nulls.flush(i));const o=wr.new(this.type,0,i,s,t,this.children.map((t=>t.flush())));return this.clear(),o}finish(){return this.finished=!0,this.children.forEach((t=>t.finish())),this}clear(){return this.length=0,this._offsets&&this._offsets.clear(),this._values&&this._values.clear(),this._nulls&&this._nulls.clear(),this._typeIds&&this._typeIds.clear(),this.children.forEach((t=>t.clear())),this}}Fr.prototype.length=1,Fr.prototype.stride=1,Fr.prototype.children=null,Fr.prototype.finished=!1,Fr.prototype.nullValues=null,Fr.prototype._isValid=()=>!0;class Mr extends Fr{constructor(t){super(t),this._values=new Dr(new this.ArrayType(0),this.stride)}setValue(t,e){const r=this._values;return r.reserve(t-r.length+1),super.setValue(t,e)}}class Ur extends Fr{constructor(t){super(t),this._pendingLength=0,this._offsets=new xr}setValue(t,e){const r=this._pending||(this._pending=new Map),n=r.get(t);n&&(this._pendingLength-=n.length),this._pendingLength+=e.length,r.set(t,e)}setValid(t,e){return!!super.setValid(t,e)||((this._pending||(this._pending=new Map)).set(t,void 0),!1)}clear(){return this._pendingLength=0,this._pending=void 0,super.clear()}flush(){return this._flush(),super.flush()}finish(){return this._flush(),super.finish()}_flush(){const t=this._pending,e=this._pendingLength;return this._pendingLength=0,this._pending=void 0,t&&t.size>0&&this._flushPending(t,e),this}}class Er extends Fr{constructor(t){super(t),this._values=new Or}setValue(t,e){this._values.set(t,+e)}}class Nr extends Fr{setValue(t,e){}setValid(t,e){return this.length=Math.max(t+1,this.length),e}}class Cr extends Mr{}class Vr extends Cr{}class kr extends Cr{}class Rr extends Mr{}class jr extends Fr{constructor(t){let{type:e,nullValues:r,dictionaryHashFunction:n}=t;super({type:new vr(e.dictionary,e.indices,e.id,e.isOrdered)}),this._nulls=null,this._dictionaryOffset=0,this._keysToIndices=Object.create(null),this.indices=Fr.new({type:this.type.indices,nullValues:r}),this.dictionary=Fr.new({type:this.type.dictionary,nullValues:null}),\"function\"===typeof n&&(this.valueToKey=n)}get values(){return this.indices.values}get nullCount(){return this.indices.nullCount}get nullBitmap(){return this.indices.nullBitmap}get byteLength(){return this.indices.byteLength+this.dictionary.byteLength}get reservedLength(){return this.indices.reservedLength+this.dictionary.reservedLength}get reservedByteLength(){return this.indices.reservedByteLength+this.dictionary.reservedByteLength}isValid(t){return this.indices.isValid(t)}setValid(t,e){const r=this.indices;return e=r.setValid(t,e),this.length=r.length,e}setValue(t,e){let r=this._keysToIndices,n=this.valueToKey(e),i=r[n];return void 0===i&&(r[n]=i=this._dictionaryOffset+this.dictionary.append(e).length-1),this.indices.setValue(t,i)}flush(){const t=this.type,e=this._dictionary,r=this.dictionary.toVector(),n=this.indices.flush().clone(t);return n.dictionary=e?e.concat(r):r,this.finished||(this._dictionaryOffset+=r.length),this._dictionary=n.dictionary,this.clear(),n}finish(){return this.indices.finish(),this.dictionary.finish(),this._dictionaryOffset=0,this._keysToIndices=Object.create(null),super.finish()}clear(){return this.indices.clear(),this.dictionary.clear(),super.clear()}valueToKey(t){return\"string\"===typeof t?t:\"\".concat(t)}}class Pr extends Mr{}const zr=new Float64Array(1),Yr=new Uint32Array(zr.buffer);function Wr(t){let e=(31744&t)>>10,r=(1023&t)/1024,n=(-1)**((32768&t)>>15);switch(e){case 31:return n*(r?NaN:1/0);case 0:return n*(r?6103515625e-14*r:0)}return n*2**(e-15)*(1+r)}function Hr(t){if(t!==t)return 32256;zr[0]=t;let e=(2147483648&Yr[1])>>16&65535,r=2146435072&Yr[1],n=0;return r>=1089470464?Yr[0]>0?r=31744:(r=(2080374784&r)>>16,n=(1048575&Yr[1])>>10):r<=1056964608?(n=1048576+(1048575&Yr[1]),n=1048576+(n<<(r>>20)-998)>>21,r=0):(r=r-1056964608>>10,n=512+(1048575&Yr[1])>>10),e|r|65535&n}class $r extends Mr{}class Kr extends $r{setValue(t,e){this._values.set(t,Hr(e))}}class Gr extends $r{setValue(t,e){this._values.set(t,e)}}class qr extends $r{setValue(t,e){this._values.set(t,e)}}const Jr=Symbol.for(\"isArrowBigNum\");function Zr(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];return 0===r.length?Object.setPrototypeOf(bt(this.TypedArray,t),this.constructor.prototype):Object.setPrototypeOf(new this.TypedArray(t,...r),this.constructor.prototype)}function Qr(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Zr.apply(this,e)}function Xr(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Zr.apply(this,e)}function tn(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Zr.apply(this,e)}function en(t){let e,r,{buffer:n,byteOffset:i,length:s,signed:o}=t,a=new Int32Array(n,i,s),c=0,u=0,l=a.length;for(;u<l;)r=a[u++],e=a[u++],o||(e>>>=0),c+=(r>>>0)+e*u**32;return c}let rn,nn;function sn(t){let e=\"\",r=new Uint32Array(2),n=new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2),i=new Uint32Array((n=new Uint16Array(n).reverse()).buffer),s=-1,o=n.length-1;do{for(r[0]=n[s=0];s<o;)n[s++]=r[1]=r[0]/10,r[0]=(r[0]-10*r[1]<<16)+n[s];n[s]=r[1]=r[0]/10,r[0]=r[0]-10*r[1],e=\"\".concat(r[0]).concat(e)}while(i[0]||i[1]||i[2]||i[3]);return e||\"0\"}Zr.prototype[Jr]=!0,Zr.prototype.toJSON=function(){return'\"'.concat(rn(this),'\"')},Zr.prototype.valueOf=function(){return en(this)},Zr.prototype.toString=function(){return rn(this)},Zr.prototype[Symbol.toPrimitive]=function(){switch(arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"default\"){case\"number\":return en(this);case\"string\":return rn(this);case\"default\":return nn(this)}return rn(this)},Object.setPrototypeOf(Qr.prototype,Object.create(Int32Array.prototype)),Object.setPrototypeOf(Xr.prototype,Object.create(Uint32Array.prototype)),Object.setPrototypeOf(tn.prototype,Object.create(Uint32Array.prototype)),Object.assign(Qr.prototype,Zr.prototype,{constructor:Qr,signed:!0,TypedArray:Int32Array,BigIntArray:q}),Object.assign(Xr.prototype,Zr.prototype,{constructor:Xr,signed:!1,TypedArray:Uint32Array,BigIntArray:Z}),Object.assign(tn.prototype,Zr.prototype,{constructor:tn,signed:!0,TypedArray:Uint32Array,BigIntArray:Z}),G?(nn=t=>8===t.byteLength?new t.BigIntArray(t.buffer,t.byteOffset,1)[0]:sn(t),rn=t=>8===t.byteLength?\"\".concat(new t.BigIntArray(t.buffer,t.byteOffset,1)[0]):sn(t)):(rn=sn,nn=rn);class on{constructor(t,e){return on.new(t,e)}static new(t,e){switch(e){case!0:return new Qr(t);case!1:return new Xr(t)}switch(t.constructor){case Int8Array:case Int16Array:case Int32Array:case q:return new Qr(t)}return 16===t.byteLength?new tn(t):new Xr(t)}static signed(t){return new Qr(t)}static unsigned(t){return new Xr(t)}static decimal(t){return new tn(t)}}class an extends Mr{setValue(t,e){this._values.set(t,e)}}class cn extends an{}class un extends an{}class ln extends an{}class hn extends an{constructor(t){t.nullValues&&(t.nullValues=t.nullValues.map(bn)),super(t),this._values=new Lr(new Int32Array(0),2)}get values64(){return this._values.buffer64}isValid(t){return super.isValid(bn(t))}}class dn extends an{}class fn extends an{}class pn extends an{}class yn extends an{constructor(t){t.nullValues&&(t.nullValues=t.nullValues.map(bn)),super(t),this._values=new Lr(new Uint32Array(0),2)}get values64(){return this._values.buffer64}isValid(t){return super.isValid(bn(t))}}const bn=(gn={BigIntArray:q},t=>(ArrayBuffer.isView(t)&&(gn.buffer=t.buffer,gn.byteOffset=t.byteOffset,gn.byteLength=t.byteLength,t=nn(gn),gn.buffer=null),t));var gn;class _n extends Mr{}class vn extends _n{}class mn extends _n{}class wn extends _n{}class In extends _n{}class Sn extends Mr{}class An extends Sn{}class Tn extends Sn{}class Bn extends Sn{}class Dn extends Sn{}class On extends Mr{}class xn extends On{}class Ln extends On{}class Fn extends Ur{constructor(t){super(t),this._values=new Br(new Uint8Array(0))}get byteLength(){let t=this._pendingLength+4*this.length;return this._offsets&&(t+=this._offsets.byteLength),this._values&&(t+=this._values.byteLength),this._nulls&&(t+=this._nulls.byteLength),t}setValue(t,e){return super.setValue(t,wt(e))}_flushPending(t,e){const r=this._offsets,n=this._values.reserve(e).buffer;let i,s=0,o=0,a=0;for([s,i]of t)void 0===i?r.set(s,0):(o=i.length,n.set(i,a),r.set(s,o),a+=o)}}class Mn extends Ur{constructor(t){super(t),this._values=new Br(new Uint8Array(0))}get byteLength(){let t=this._pendingLength+4*this.length;return this._offsets&&(t+=this._offsets.byteLength),this._values&&(t+=this._values.byteLength),this._nulls&&(t+=this._nulls.byteLength),t}setValue(t,e){return super.setValue(t,z(e))}_flushPending(t,e){}}Mn.prototype._flushPending=Fn.prototype._flushPending;class Un{get length(){return this._values.length}get(t){return this._values[t]}clear(){return this._values=null,this}bind(t){return t instanceof re?t:(this._values=t,this)}}const En=Symbol.for(\"parent\"),Nn=Symbol.for(\"rowIndex\"),Cn=Symbol.for(\"keyToIdx\"),Vn=Symbol.for(\"idxToVal\"),kn=Symbol.for(\"nodejs.util.inspect.custom\");class Rn{constructor(t,e){this[En]=t,this.size=e}entries(){return this[Symbol.iterator]()}has(t){return void 0!==this.get(t)}get(t){let e;if(null!==t&&void 0!==t){const r=this[Cn]||(this[Cn]=new Map);let n=r.get(t);if(void 0!==n){const t=this[Vn]||(this[Vn]=new Array(this.size));void 0!==(e=t[n])||(t[n]=e=this.getValue(n))}else if((n=this.getIndex(t))>-1){r.set(t,n);const i=this[Vn]||(this[Vn]=new Array(this.size));void 0!==(e=i[n])||(i[n]=e=this.getValue(n))}}return e}set(t,e){if(null!==t&&void 0!==t){const r=this[Cn]||(this[Cn]=new Map);let n=r.get(t);if(void 0===n&&r.set(t,n=this.getIndex(t)),n>-1){(this[Vn]||(this[Vn]=new Array(this.size)))[n]=this.setValue(n,e)}}return this}clear(){throw new Error(\"Clearing \".concat(this[Symbol.toStringTag],\" not supported.\"))}delete(t){throw new Error(\"Deleting \".concat(this[Symbol.toStringTag],\" values not supported.\"))}*[Symbol.iterator](){const t=this.keys(),e=this.values(),r=this[Cn]||(this[Cn]=new Map),n=this[Vn]||(this[Vn]=new Array(this.size));for(let i,s,o,a,c=0;!(o=t.next()).done&&!(a=e.next()).done;++c)i=o.value,s=a.value,n[c]=s,r.has(i)||r.set(i,c),yield[i,s]}forEach(t,e){const r=this.keys(),n=this.values(),i=void 0===e?t:(r,n,i)=>t.call(e,r,n,i),s=this[Cn]||(this[Cn]=new Map),o=this[Vn]||(this[Vn]=new Array(this.size));for(let a,c,u,l,h=0;!(u=r.next()).done&&!(l=n.next()).done;++h)a=u.value,c=l.value,o[h]=c,s.has(a)||s.set(a,h),i(c,a,this)}toArray(){return[...this.values()]}toJSON(){const t={};return this.forEach(((e,r)=>t[r]=e)),t}inspect(){return this.toString()}[kn](){return this.toString()}toString(){const t=[];return this.forEach(((e,r)=>{r=Sr(r),e=Sr(e),t.push(\"\".concat(r,\": \").concat(e))})),\"{ \".concat(t.join(\", \"),\" }\")}}Rn[Symbol.toStringTag]=(t=>(Object.defineProperties(t,{size:{writable:!0,enumerable:!1,configurable:!1,value:0},[En]:{writable:!0,enumerable:!1,configurable:!1,value:null},[Nn]:{writable:!0,enumerable:!1,configurable:!1,value:-1}}),t[Symbol.toStringTag]=\"Row\"))(Rn.prototype);class jn extends Rn{constructor(t){return super(t,t.length),Yn(this)}keys(){return this[En].getChildAt(0)[Symbol.iterator]()}values(){return this[En].getChildAt(1)[Symbol.iterator]()}getKey(t){return this[En].getChildAt(0).get(t)}getIndex(t){return this[En].getChildAt(0).indexOf(t)}getValue(t){return this[En].getChildAt(1).get(t)}setValue(t,e){this[En].getChildAt(1).set(t,e)}}class Pn extends Rn{constructor(t){return super(t,t.type.children.length),zn(this)}*keys(){for(const t of this[En].type.children)yield t.name}*values(){for(const t of this[En].type.children)yield this[t.name]}getKey(t){return this[En].type.children[t].name}getIndex(t){return this[En].type.children.findIndex((e=>e.name===t))}getValue(t){return this[En].getChildAt(t).get(this[Nn])}setValue(t,e){return this[En].getChildAt(t).set(this[Nn],e)}}Object.setPrototypeOf(Rn.prototype,Map.prototype);const zn=(()=>{const t={enumerable:!0,configurable:!1,get:null,set:null};return e=>{let r=-1,n=e[Cn]||(e[Cn]=new Map);const i=t=>function(){return this.get(t)},s=t=>function(e){return this.set(t,e)};for(const o of e.keys())n.set(o,++r),t.get=i(o),t.set=s(o),e.hasOwnProperty(o)||(t.enumerable=!0,Object.defineProperty(e,o,t)),e.hasOwnProperty(r)||(t.enumerable=!1,Object.defineProperty(e,r,t));return t.get=t.set=null,e}})(),Yn=(()=>{if(\"undefined\"===typeof Proxy)return zn;const t=Rn.prototype.has,e=Rn.prototype.get,r=Rn.prototype.set,n=Rn.prototype.getKey,i={isExtensible:()=>!1,deleteProperty:()=>!1,preventExtensions:()=>!0,ownKeys:t=>[...t.keys()].map((t=>\"\".concat(t))),has(t,e){switch(e){case\"getKey\":case\"getIndex\":case\"getValue\":case\"setValue\":case\"toArray\":case\"toJSON\":case\"inspect\":case\"constructor\":case\"isPrototypeOf\":case\"propertyIsEnumerable\":case\"toString\":case\"toLocaleString\":case\"valueOf\":case\"size\":case\"has\":case\"get\":case\"set\":case\"clear\":case\"delete\":case\"keys\":case\"values\":case\"entries\":case\"forEach\":case\"__proto__\":case\"__defineGetter__\":case\"__defineSetter__\":case\"hasOwnProperty\":case\"__lookupGetter__\":case\"__lookupSetter__\":case Symbol.iterator:case Symbol.toStringTag:case En:case Nn:case Vn:case Cn:case kn:return!0}return\"number\"!==typeof e||t.has(e)||(e=t.getKey(e)),t.has(e)},get(r,i,s){switch(i){case\"getKey\":case\"getIndex\":case\"getValue\":case\"setValue\":case\"toArray\":case\"toJSON\":case\"inspect\":case\"constructor\":case\"isPrototypeOf\":case\"propertyIsEnumerable\":case\"toString\":case\"toLocaleString\":case\"valueOf\":case\"size\":case\"has\":case\"get\":case\"set\":case\"clear\":case\"delete\":case\"keys\":case\"values\":case\"entries\":case\"forEach\":case\"__proto__\":case\"__defineGetter__\":case\"__defineSetter__\":case\"hasOwnProperty\":case\"__lookupGetter__\":case\"__lookupSetter__\":case Symbol.iterator:case Symbol.toStringTag:case En:case Nn:case Vn:case Cn:case kn:return Reflect.get(r,i,s)}return\"number\"!==typeof i||t.call(s,i)||(i=n.call(s,i)),e.call(s,i)},set(e,i,s,o){switch(i){case En:case Nn:case Vn:case Cn:return Reflect.set(e,i,s,o);case\"getKey\":case\"getIndex\":case\"getValue\":case\"setValue\":case\"toArray\":case\"toJSON\":case\"inspect\":case\"constructor\":case\"isPrototypeOf\":case\"propertyIsEnumerable\":case\"toString\":case\"toLocaleString\":case\"valueOf\":case\"size\":case\"has\":case\"get\":case\"set\":case\"clear\":case\"delete\":case\"keys\":case\"values\":case\"entries\":case\"forEach\":case\"__proto__\":case\"__defineGetter__\":case\"__defineSetter__\":case\"hasOwnProperty\":case\"__lookupGetter__\":case\"__lookupSetter__\":case Symbol.iterator:case Symbol.toStringTag:return!1}return\"number\"!==typeof i||t.call(o,i)||(i=n.call(o,i)),!!t.call(o,i)&&!!r.call(o,i,s)}};return t=>new Proxy(t,i)})();function Wn(t,e,r){const n=t.length,i=e>-1?e:n+e%n;return r?r(t,i):i}let Hn;function $n(t,e,r,n){let{length:i=0}=t,s=\"number\"!==typeof e?0:e,o=\"number\"!==typeof r?i:r;return s<0&&(s=(s%i+i)%i),o<0&&(o=(o%i+i)%i),o<s&&(Hn=s,s=o,o=Hn),o>i&&(o=i),n?n(t,s,o):[s,o]}const Kn=G?K(0):0,Gn=t=>t!==t;function qn(t){let e=typeof t;if(\"object\"!==e||null===t)return Gn(t)?Gn:\"bigint\"!==e?e=>e===t:e=>Kn+e===t;if(t instanceof Date){const e=t.valueOf();return t=>t instanceof Date&&t.valueOf()===e}return ArrayBuffer.isView(t)?e=>!!e&&Jt(t,e):t instanceof Map?function(t){let e=-1;const r=[];return t.forEach((t=>r[++e]=qn(t))),Jn(r)}(t):Array.isArray(t)?function(t){const e=[];for(let r=-1,n=t.length;++r<n;)e[r]=qn(t[r]);return Jn(e)}(t):t instanceof re?function(t){const e=[];for(let r=-1,n=t.length;++r<n;)e[r]=qn(t.get(r));return Jn(e)}(t):function(t){const e=Object.keys(t);if(0===e.length)return()=>!1;const r=[];for(let n=-1,i=e.length;++n<i;)r[n]=qn(t[e[n]]);return Jn(r,e)}(t)}function Jn(t,e){return r=>{if(!r||\"object\"!==typeof r)return!1;switch(r.constructor){case Array:return function(t,e){const r=t.length;if(e.length!==r)return!1;for(let n=-1;++n<r;)if(!t[n](e[n]))return!1;return!0}(t,r);case Map:case jn:case Pn:return Zn(t,r,r.keys());case Object:case void 0:return Zn(t,r,e||Object.keys(r))}return r instanceof re&&function(t,e){const r=t.length;if(e.length!==r)return!1;for(let n=-1;++n<r;)if(!t[n](e.get(n)))return!1;return!0}(t,r)}}function Zn(t,e,r){const n=r[Symbol.iterator](),i=e instanceof Map?e.keys():Object.keys(e)[Symbol.iterator](),s=e instanceof Map?e.values():Object.values(e)[Symbol.iterator]();let o=0,a=t.length,c=s.next(),u=n.next(),l=i.next();for(;o<a&&!u.done&&!l.done&&!c.done&&(u.value===l.value&&t[o](c.value));++o,u=n.next(),l=i.next(),c=s.next());return!!(o===a&&u.done&&l.done&&c.done)||(n.return&&n.return(),i.return&&i.return(),s.return&&s.return(),!1)}class Qn extends re{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(t){let e=new Uint32Array((t||[]).length+1),r=e[0]=0,n=e.length;for(let i=0;++i<n;)e[i]=r+=t[i-1].length;return e}(e);super(),this._nullCount=-1,this._type=t,this._chunks=e,this._chunkOffsets=r,this._length=r[r.length-1],this._numChildren=(this._type.children||[]).length}static flatten(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return oi(re,e)}static concat(){const t=Qn.flatten(...arguments);return new Qn(t[0].type,t)}get type(){return this._type}get length(){return this._length}get chunks(){return this._chunks}get typeId(){return this._type.typeId}get VectorName(){return\"Chunked<\".concat(this._type,\">\")}get data(){return this._chunks[0]?this._chunks[0].data:null}get ArrayType(){return this._type.ArrayType}get numChildren(){return this._numChildren}get stride(){return this._chunks[0]?this._chunks[0].stride:1}get byteLength(){return this._chunks.reduce(((t,e)=>t+e.byteLength),0)}get nullCount(){let t=this._nullCount;return t<0&&(this._nullCount=t=this._chunks.reduce(((t,e)=>{let{nullCount:r}=e;return t+r}),0)),t}get indices(){if(Re.isDictionary(this._type)){if(!this._indices){const t=this._chunks;this._indices=1===t.length?t[0].indices:Qn.concat(...t.map((t=>t.indices)))}return this._indices}return null}get dictionary(){return Re.isDictionary(this._type)?this._chunks[this._chunks.length-1].data.dictionary:null}*[Symbol.iterator](){for(const t of this._chunks)yield*t}clone(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._chunks;return new Qn(this._type,t)}concat(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return this.clone(Qn.flatten(this,...e))}slice(t,e){return $n(this,t,e,this._sliceInternal)}getChildAt(t){if(t<0||t>=this._numChildren)return null;let e,r,n,i=this._children||(this._children=[]);return(e=i[t])?e:(r=(this._type.children||[])[t])&&(n=this._chunks.map((e=>e.getChildAt(t))).filter((t=>null!=t)),n.length>0)?i[t]=new Qn(r.type,n):null}search(t,e){let r=t,n=this._chunkOffsets,i=n.length-1;if(r<0)return null;if(r>=n[i])return null;if(i<=1)return e?e(this,0,r):[0,r];let s=0,o=0,a=0;do{if(s+1===i)return e?e(this,s,r-o):[s,r-o];a=s+(i-s)/2|0,r>=n[a]?s=a:i=a}while(r<n[i]&&r>=(o=n[s]));return null}isValid(t){return!!this.search(t,this.isValidInternal)}get(t){return this.search(t,this.getInternal)}set(t,e){this.search(t,((t,r,n)=>{let{chunks:i}=t;return i[r].set(n,e)}))}indexOf(t,e){return e&&\"number\"===typeof e?this.search(e,((e,r,n)=>this.indexOfInternal(e,r,n,t))):this.indexOfInternal(this,0,Math.max(0,e||0),t)}toArray(){const{chunks:t}=this,e=t.length;let r=this._type.ArrayType;if(e<=0)return new r(0);if(e<=1)return t[0].toArray();let n=0,i=new Array(e);for(let a=-1;++a<e;)n+=(i[a]=t[a].toArray()).length;r!==i[0].constructor&&(r=i[0].constructor);let s=new r(n),o=r===Array?ti:Xn;for(let a=-1,c=0;++a<e;)c=o(i[a],s,c);return s}getInternal(t,e,r){let{_chunks:n}=t;return n[e].get(r)}isValidInternal(t,e,r){let{_chunks:n}=t;return n[e].isValid(r)}indexOfInternal(t,e,r,n){let{_chunks:i}=t,s=e-1,o=i.length,a=r,c=0,u=-1;for(;++s<o;){if(~(u=i[s].indexOf(n,a)))return c+u;a=0,c+=i[s].length}return-1}_sliceInternal(t,e,r){const n=[],{chunks:i,_chunkOffsets:s}=t;for(let o=-1,a=i.length;++o<a;){const t=i[o],a=t.length,c=s[o];if(c>=r)break;if(e>=c+a)continue;if(c>=e&&c+a<=r){n.push(t);continue}const u=Math.max(0,e-c),l=Math.min(r-c,a);n.push(t.slice(u,l))}return t.clone(n)}}const Xn=(t,e,r)=>(e.set(t,r),r+t.length),ti=(t,e,r)=>{let n=r;for(let i=-1,s=t.length;++i<s;)e[n++]=t[i];return n};class ei extends Qn{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=arguments.length>2?arguments[2]:void 0;if(e=Qn.flatten(...e),super(t.type,e,r),this._field=t,1===e.length&&!(this instanceof ri))return new ri(t,e[0],this._chunkOffsets)}static new(t,e){for(var r=arguments.length,n=new Array(r>2?r-2:0),i=2;i<r;i++)n[i-2]=arguments[i];const s=Qn.flatten(Array.isArray(e)?[...e,...n]:e instanceof re?[e,...n]:[re.new(e,...n)]);if(\"string\"===typeof t){const e=s[0].data.type;t=new pi(t,e,!0)}else!t.nullable&&s.some((t=>{let{nullCount:e}=t;return e>0}))&&(t=t.clone({nullable:!0}));return new ei(t,s)}get field(){return this._field}get name(){return this._field.name}get nullable(){return this._field.nullable}get metadata(){return this._field.metadata}clone(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._chunks;return new ei(this._field,t)}getChildAt(t){if(t<0||t>=this.numChildren)return null;let e,r,n,i=this._children||(this._children=[]);return(e=i[t])?e:(r=(this.type.children||[])[t])&&(n=this._chunks.map((e=>e.getChildAt(t))).filter((t=>null!=t)),n.length>0)?i[t]=new ei(r,n):null}}class ri extends ei{constructor(t,e,r){super(t,[e],r),this._chunk=e}search(t,e){return e?e(this,0,t):[0,t]}isValid(t){return this._chunk.isValid(t)}get(t){return this._chunk.get(t)}set(t,e){this._chunk.set(t,e)}indexOf(t,e){return this._chunk.indexOf(t,e)}}const ni=Array.isArray,ii=(t,e)=>ci(t,e,[],0),si=t=>di(t,[[],[]]),oi=(t,e)=>ui(t,e,[],0),ai=(t,e)=>li(t,e,[],0);function ci(t,e,r,n){let i,s=n,o=-1,a=e.length;for(;++o<a;)ni(i=e[o])?s=ci(t,i,r,s).length:i instanceof t&&(r[s++]=i);return r}function ui(t,e,r,n){let i,s=n,o=-1,a=e.length;for(;++o<a;)ni(i=e[o])?s=ui(t,i,r,s).length:i instanceof Qn?s=ui(t,i.chunks,r,s).length:i instanceof t&&(r[s++]=i);return r}function li(t,e,r,n){let i,s=n,o=-1,a=e.length;for(;++o<a;)ni(i=e[o])?s=li(t,i,r,s).length:i instanceof t?s=ci(re,i.schema.fields.map(((t,e)=>i.getChildAt(e))),r,s).length:i instanceof re&&(r[s++]=i);return r}const hi=(t,e,r)=>{let[n,i]=e;return t[0][r]=n,t[1][r]=i,t};function di(t,e){let r,n;switch(n=t.length){case 0:return e;case 1:if(r=e[0],!t[0])return e;if(ni(t[0]))return di(t[0],e);t[0]instanceof wr||t[0]instanceof re||t[0]instanceof Re||([r,t]=Object.entries(t[0]).reduce(hi,e));break;default:ni(r=t[n-1])?t=ni(t[0])?t[0]:t.slice(0,n-1):(t=ni(t[0])?t[0]:t,r=[])}let i,s,o=-1,a=-1,c=-1,u=t.length,[l,h]=e;for(;++c<u;)s=t[c],s instanceof ei&&(h[++a]=s)?l[++o]=s.field.clone(r[c],s.type,!0):(({[c]:i=c}=r),s instanceof Re&&(h[++a]=s)?l[++o]=pi.new(i,s,!0):s&&s.type&&(h[++a]=s)&&(s instanceof wr&&(h[a]=s=re.new(s)),l[++o]=pi.new(i,s.type,!0)));return e}class fi{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1?arguments[1]:void 0,r=arguments.length>2?arguments[2]:void 0;this.fields=t||[],this.metadata=e||new Map,r||(r=bi(t)),this.dictionaries=r}static from(){return fi.new(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1])}static new(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return new fi(si(e)[0])}get[Symbol.toStringTag](){return\"Schema\"}toString(){return\"Schema<{ \".concat(this.fields.map(((t,e)=>\"\".concat(e,\": \").concat(t))).join(\", \"),\" }>\")}compareTo(t){return ke.compareSchemas(this,t)}select(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const n=e.reduce(((t,e)=>(t[e]=!0)&&t),Object.create(null));return new fi(this.fields.filter((t=>n[t.name])),this.metadata)}selectAt(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return new fi(e.map((t=>this.fields[t])).filter(Boolean),this.metadata)}assign(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const n=e[0]instanceof fi?e[0]:new fi(ii(pi,e)),i=[...this.fields],s=yi(yi(new Map,this.metadata),n.metadata),o=n.fields.filter((t=>{const e=i.findIndex((e=>e.name===t.name));return!~e||(i[e]=t.clone({metadata:yi(yi(new Map,i[e].metadata),t.metadata)}))&&!1})),a=bi(o,new Map);return new fi([...i,...o],s,new Map([...this.dictionaries,...a]))}}class pi{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;this.name=t,this.type=e,this.nullable=r,this.metadata=n||new Map}static new(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];let[n,i,s,o]=e;return e[0]&&\"object\"===typeof e[0]&&(({name:n}=e[0]),void 0===i&&(i=e[0].type),void 0===s&&(s=e[0].nullable),void 0===o&&(o=e[0].metadata)),new pi(\"\".concat(n),i,s,o)}get typeId(){return this.type.typeId}get[Symbol.toStringTag](){return\"Field\"}toString(){return\"\".concat(this.name,\": \").concat(this.type)}compareTo(t){return ke.compareField(this,t)}clone(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];let[n,i,s,o]=e;return e[0]&&\"object\"===typeof e[0]?({name:n=this.name,type:i=this.type,nullable:s=this.nullable,metadata:o=this.metadata}=e[0]):[n=this.name,i=this.type,s=this.nullable,o=this.metadata]=e,pi.new(n,i,s,o)}}function yi(t,e){return new Map([...t||new Map,...e||new Map])}function bi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;for(let r=-1,n=t.length;++r<n;){const n=t[r].type;if(Re.isDictionary(n))if(e.has(n.id)){if(e.get(n.id)!==n.dictionary)throw new Error(\"Cannot create Schema containing two different dictionaries with the same Id\")}else e.set(n.id,n.dictionary);n.children&&n.children.length>0&&bi(n.children,e)}return e}fi.prototype.fields=null,fi.prototype.metadata=null,fi.prototype.dictionaries=null,pi.prototype.type=null,pi.prototype.name=null,pi.prototype.nullable=null,pi.prototype.metadata=null;class gi extends Ur{constructor(t){super(t),this._run=new Un,this._offsets=new xr}addChild(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"0\";if(this.numChildren>0)throw new Error(\"ListBuilder can only have one child.\");return this.children[this.numChildren]=t,this.type=new hr(new pi(e,t.type,!0)),this.numChildren-1}clear(){return this._run.clear(),super.clear()}_flushPending(t){const e=this._run,r=this._offsets,n=this._setValue;let i,s=0;for([s,i]of t)void 0===i?r.set(s,0):(r.set(s,i.length),n(this,s,e.bind(i)))}}class _i extends Fr{constructor(){super(...arguments),this._run=new Un}setValue(t,e){super.setValue(t,this._run.bind(e))}addChild(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"0\";if(this.numChildren>0)throw new Error(\"FixedSizeListBuilder can only have one child.\");const r=this.children.push(t);return this.type=new yr(this.type.listSize,new pi(e,t.type,!0)),r}clear(){return this._run.clear(),super.clear()}}class vi extends Ur{set(t,e){return super.set(t,e)}setValue(t,e){e=e instanceof Map?e:new Map(Object.entries(e));const r=this._pending||(this._pending=new Map),n=r.get(t);n&&(this._pendingLength-=n.size),this._pendingLength+=e.size,r.set(t,e)}addChild(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\".concat(this.numChildren);if(this.numChildren>0)throw new Error(\"ListBuilder can only have one child.\");return this.children[this.numChildren]=t,this.type=new br(new pi(e,t.type,!0),this.type.keysSorted),this.numChildren-1}_flushPending(t){const e=this._offsets,r=this._setValue;t.forEach(((t,n)=>{void 0===t?e.set(n,0):(e.set(n,t.size),r(this,n,t))}))}}class mi extends Fr{addChild(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\".concat(this.numChildren);const r=this.children.push(t);return this.type=new dr([...this.type.children,new pi(e,t.type,!0)]),r}}class wi extends Fr{constructor(t){super(t),this._typeIds=new Dr(new Int8Array(0),1),\"function\"===typeof t.valueToChildTypeId&&(this._valueToChildTypeId=t.valueToChildTypeId)}get typeIdToChildIndex(){return this.type.typeIdToChildIndex}append(t,e){return this.set(this.length,t,e)}set(t,e,r){return void 0===r&&(r=this._valueToChildTypeId(this,e,t)),this.setValid(t,this.isValid(e))&&this.setValue(t,e,r),this}setValue(t,e,r){this._typeIds.set(t,r),super.setValue(t,e)}addChild(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\".concat(this.children.length);const r=this.children.push(t),{type:{children:n,mode:i,typeIds:s}}=this,o=[...n,new pi(e,t.type)];return this.type=new fr(i,[...s,r],o),r}_valueToChildTypeId(t,e,r){throw new Error(\"Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.\")}}class Ii extends wi{}class Si extends wi{constructor(t){super(t),this._offsets=new Dr(new Int32Array(0))}setValue(t,e,r){const n=this.type.typeIdToChildIndex[r];return this._offsets.set(t,this.getChildAt(n).length),super.setValue(t,e,r)}}class Ai extends Be{}const Ti=(t,e,r)=>{t[e]=r%4294967296|0,t[e+1]=r/4294967296|0},Bi=(t,e,r,n)=>{const{[r]:i,[r+1]:s}=e;null!=i&&null!=s&&t.set(n.subarray(0,s-i),i)},Di=(t,e,r)=>{let{values:n}=t;((t,e,r)=>{t[e]=r/864e5|0})(n,e,r.valueOf())},Oi=(t,e,r)=>{let{values:n}=t;Ti(n,2*e,r.valueOf())},xi=(t,e,r)=>{let{stride:n,values:i}=t;i[n*e]=r},Li=(t,e,r)=>{let{stride:n,values:i}=t;i[n*e]=Hr(r)},Fi=(t,e,r)=>{switch(typeof r){case\"bigint\":t.values64[e]=r;break;case\"number\":t.values[e*t.stride]=r;break;default:const n=r,{stride:i,ArrayType:s}=t,o=bt(s,n);t.values.set(o.subarray(0,i),i*e)}},Mi=(t,e,r)=>{let{values:n}=t;return Ti(n,2*e,r/1e3)},Ui=(t,e,r)=>{let{values:n}=t;return Ti(n,2*e,r)},Ei=(t,e,r)=>{let{values:n}=t;return((t,e,r)=>{t[e]=1e3*r%4294967296|0,t[e+1]=1e3*r/4294967296|0})(n,2*e,r)},Ni=(t,e,r)=>{let{values:n}=t;return((t,e,r)=>{t[e]=1e6*r%4294967296|0,t[e+1]=1e6*r/4294967296|0})(n,2*e,r)},Ci=(t,e,r)=>{let{values:n,stride:i}=t;n[i*e]=r},Vi=(t,e,r)=>{let{values:n,stride:i}=t;n[i*e]=r},ki=(t,e,r)=>{let{values:n}=t;n.set(r.subarray(0,2),2*e)},Ri=(t,e,r)=>{let{values:n}=t;n.set(r.subarray(0,2),2*e)},ji=(t,e,r)=>{const n=t.typeIdToChildIndex[t.typeIds[e]],i=t.getChildAt(n);i&&i.set(t.valueOffsets[e],r)},Pi=(t,e,r)=>{const n=t.typeIdToChildIndex[t.typeIds[e]],i=t.getChildAt(n);i&&i.set(e,r)},zi=(t,e,r)=>{let{values:n}=t;n.set(r.subarray(0,2),2*e)},Yi=(t,e,r)=>{let{values:n}=t;n[e]=12*r[0]+r[1]%12};Ai.prototype.visitBool=(t,e,r)=>{let{offset:n,values:i}=t;const s=n+e;r?i[s>>3]|=1<<s%8:i[s>>3]&=~(1<<s%8)},Ai.prototype.visitInt=(t,e,r)=>{t.type.bitWidth<64?xi(t,e,r):Fi(t,e,r)},Ai.prototype.visitInt8=xi,Ai.prototype.visitInt16=xi,Ai.prototype.visitInt32=xi,Ai.prototype.visitInt64=Fi,Ai.prototype.visitUint8=xi,Ai.prototype.visitUint16=xi,Ai.prototype.visitUint32=xi,Ai.prototype.visitUint64=Fi,Ai.prototype.visitFloat=(t,e,r)=>{t.type.precision!==de.HALF?xi(t,e,r):Li(t,e,r)},Ai.prototype.visitFloat16=Li,Ai.prototype.visitFloat32=xi,Ai.prototype.visitFloat64=xi,Ai.prototype.visitUtf8=(t,e,r)=>{let{values:n,valueOffsets:i}=t;Bi(n,i,e,z(r))},Ai.prototype.visitBinary=(t,e,r)=>{let{values:n,valueOffsets:i}=t;return Bi(n,i,e,r)},Ai.prototype.visitFixedSizeBinary=(t,e,r)=>{let{stride:n,values:i}=t;i.set(r.subarray(0,n),n*e)},Ai.prototype.visitDate=(t,e,r)=>{t.type.unit===le.DAY?Di(t,e,r):Oi(t,e,r)},Ai.prototype.visitDateDay=Di,Ai.prototype.visitDateMillisecond=Oi,Ai.prototype.visitTimestamp=(t,e,r)=>{switch(t.type.unit){case he.SECOND:return Mi(t,e,r);case he.MILLISECOND:return Ui(t,e,r);case he.MICROSECOND:return Ei(t,e,r);case he.NANOSECOND:return Ni(t,e,r)}},Ai.prototype.visitTimestampSecond=Mi,Ai.prototype.visitTimestampMillisecond=Ui,Ai.prototype.visitTimestampMicrosecond=Ei,Ai.prototype.visitTimestampNanosecond=Ni,Ai.prototype.visitTime=(t,e,r)=>{switch(t.type.unit){case he.SECOND:return Ci(t,e,r);case he.MILLISECOND:return Vi(t,e,r);case he.MICROSECOND:return ki(t,e,r);case he.NANOSECOND:return Ri(t,e,r)}},Ai.prototype.visitTimeSecond=Ci,Ai.prototype.visitTimeMillisecond=Vi,Ai.prototype.visitTimeMicrosecond=ki,Ai.prototype.visitTimeNanosecond=Ri,Ai.prototype.visitDecimal=(t,e,r)=>{let{values:n}=t;n.set(r.subarray(0,4),4*e)},Ai.prototype.visitList=(t,e,r)=>{const n=t.getChildAt(0),i=t.valueOffsets;for(let s=-1,o=i[e],a=i[e+1];o<a;)n.set(o++,r.get(++s))},Ai.prototype.visitStruct=(t,e,r)=>{const n=r instanceof Map?(i=e,s=r,(t,e,r)=>t&&t.set(i,s.get(e.name))):r instanceof re?((t,e)=>(r,n,i)=>r&&r.set(t,e.get(i)))(e,r):Array.isArray(r)?((t,e)=>(r,n,i)=>r&&r.set(t,e[i]))(e,r):((t,e)=>(r,n,i)=>r&&r.set(t,e[n.name]))(e,r);var i,s;t.type.children.forEach(((e,r)=>n(t.getChildAt(r),e,r)))},Ai.prototype.visitUnion=(t,e,r)=>{t.type.mode===fe.Dense?ji(t,e,r):Pi(t,e,r)},Ai.prototype.visitDenseUnion=ji,Ai.prototype.visitSparseUnion=Pi,Ai.prototype.visitDictionary=(t,e,r)=>{const n=t.getKey(e);null!==n&&t.setValue(n,r)},Ai.prototype.visitInterval=(t,e,r)=>{t.type.unit===pe.DAY_TIME?zi(t,e,r):Yi(t,e,r)},Ai.prototype.visitIntervalDayTime=zi,Ai.prototype.visitIntervalYearMonth=Yi,Ai.prototype.visitFixedSizeList=(t,e,r)=>{const n=t.getChildAt(0),{stride:i}=t;for(let s=-1,o=e*i;++s<i;)n.set(o+s,r.get(s))},Ai.prototype.visitMap=(t,e,r)=>{const n=t.getChildAt(0),i=t.valueOffsets,s=r instanceof Map?[...r]:Object.entries(r);for(let o=-1,a=i[e],c=i[e+1];a<c;)n.set(a++,s[++o])};const Wi=new Ai;const Hi=new class extends Be{visitNull(){return Nr}visitBool(){return Er}visitInt(){return an}visitInt8(){return cn}visitInt16(){return un}visitInt32(){return ln}visitInt64(){return hn}visitUint8(){return dn}visitUint16(){return fn}visitUint32(){return pn}visitUint64(){return yn}visitFloat(){return $r}visitFloat16(){return Kr}visitFloat32(){return Gr}visitFloat64(){return qr}visitUtf8(){return Mn}visitBinary(){return Fn}visitFixedSizeBinary(){return Pr}visitDate(){return Cr}visitDateDay(){return Vr}visitDateMillisecond(){return kr}visitTimestamp(){return Sn}visitTimestampSecond(){return An}visitTimestampMillisecond(){return Tn}visitTimestampMicrosecond(){return Bn}visitTimestampNanosecond(){return Dn}visitTime(){return _n}visitTimeSecond(){return vn}visitTimeMillisecond(){return mn}visitTimeMicrosecond(){return wn}visitTimeNanosecond(){return In}visitDecimal(){return Rr}visitList(){return gi}visitStruct(){return mi}visitUnion(){return wi}visitDenseUnion(){return Si}visitSparseUnion(){return Ii}visitDictionary(){return jr}visitInterval(){return On}visitIntervalDayTime(){return xn}visitIntervalYearMonth(){return Ln}visitFixedSizeList(){return _i}visitMap(){return vi}};var $i;Fr.new=function t(e){const r=e.type,n=new(Hi.getVisitFn(r)())(e);if(r.children&&r.children.length>0){const i=e.children||[],s={nullValues:e.nullValues},o=Array.isArray(i)?(t,e)=>i[e]||s:t=>{let{name:e}=t;return i[e]||s};r.children.forEach(((e,r)=>{const{type:i}=e,s=o(e,r);n.children.push(t({...s,type:i}))}))}return n},Object.keys(ce).map((t=>ce[t])).filter((t=>\"number\"===typeof t&&t!==ce.NONE)).forEach((t=>{Hi.visit(t).prototype._setValue=Wi.getVisitFn(t)})),Mn.prototype._setValue=Wi.visitBinary,function(t){!function(e){!function(e){!function(e){class r{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsFooter(t,e){return(e||new r).__init(t.readInt32(t.position())+t.position(),t)}version(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt16(this.bb_pos+t):ne.apache.arrow.flatbuf.MetadataVersion.V1}schema(t){let e=this.bb.__offset(this.bb_pos,6);return e?(t||new ne.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}dictionaries(e,r){let n=this.bb.__offset(this.bb_pos,8);return n?(r||new t.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos+n)+24*e,this.bb):null}dictionariesLength(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}recordBatches(e,r){let n=this.bb.__offset(this.bb_pos,10);return n?(r||new t.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos+n)+24*e,this.bb):null}recordBatchesLength(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}static startFooter(t){t.startObject(4)}static addVersion(t,e){t.addFieldInt16(0,e,ne.apache.arrow.flatbuf.MetadataVersion.V1)}static addSchema(t,e){t.addFieldOffset(1,e,0)}static addDictionaries(t,e){t.addFieldOffset(2,e,0)}static startDictionariesVector(t,e){t.startVector(24,e,8)}static addRecordBatches(t,e){t.addFieldOffset(3,e,0)}static startRecordBatchesVector(t,e){t.startVector(24,e,8)}static endFooter(t){return t.endObject()}static finishFooterBuffer(t,e){t.finish(e)}static createFooter(t,e,n,i,s){return r.startFooter(t),r.addVersion(t,e),r.addSchema(t,n),r.addDictionaries(t,i),r.addRecordBatches(t,s),r.endFooter(t)}}e.Footer=r}(e.flatbuf||(e.flatbuf={}))}(e.arrow||(e.arrow={}))}(t.apache||(t.apache={}))}($i||($i={})),function(t){!function(t){!function(t){!function(t){t.Block=class{constructor(){this.bb=null,this.bb_pos=0}__init(t,e){return this.bb_pos=t,this.bb=e,this}offset(){return this.bb.readInt64(this.bb_pos)}metaDataLength(){return this.bb.readInt32(this.bb_pos+8)}bodyLength(){return this.bb.readInt64(this.bb_pos+16)}static createBlock(t,e,r,n){return t.prep(8,24),t.writeInt64(n),t.pad(4),t.writeInt32(r),t.writeInt64(e),t.offset()}}}(t.flatbuf||(t.flatbuf={}))}(t.arrow||(t.arrow={}))}(t.apache||(t.apache={}))}($i||($i={}));var Ki=O.Long,Gi=O.Builder,qi=O.ByteBuffer,Ji=$i.apache.arrow.flatbuf.Block,Zi=$i.apache.arrow.flatbuf.Footer;class Qi{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:be.V4,r=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;this.schema=t,this.version=e,r&&(this._recordBatches=r),n&&(this._dictionaryBatches=n)}static decode(t){t=new qi(wt(t));const e=Zi.getRootAsFooter(t),r=fi.decode(e.schema());return new Xi(r,e)}static encode(t){const e=new Gi,r=fi.encode(e,t.schema);Zi.startRecordBatchesVector(e,t.numRecordBatches),[...t.recordBatches()].slice().reverse().forEach((t=>ts.encode(e,t)));const n=e.endVector();Zi.startDictionariesVector(e,t.numDictionaries),[...t.dictionaryBatches()].slice().reverse().forEach((t=>ts.encode(e,t)));const i=e.endVector();return Zi.startFooter(e),Zi.addSchema(e,r),Zi.addVersion(e,be.V4),Zi.addRecordBatches(e,n),Zi.addDictionaries(e,i),Zi.finishFooterBuffer(e,Zi.endFooter(e)),e.asUint8Array()}get numRecordBatches(){return this._recordBatches.length}get numDictionaries(){return this._dictionaryBatches.length}*recordBatches(){for(let t,e=-1,r=this.numRecordBatches;++e<r;)(t=this.getRecordBatch(e))&&(yield t)}*dictionaryBatches(){for(let t,e=-1,r=this.numDictionaries;++e<r;)(t=this.getDictionaryBatch(e))&&(yield t)}getRecordBatch(t){return t>=0&&t<this.numRecordBatches&&this._recordBatches[t]||null}getDictionaryBatch(t){return t>=0&&t<this.numDictionaries&&this._dictionaryBatches[t]||null}}class Xi extends Qi{constructor(t,e){super(t,e.version()),this._footer=e}get numRecordBatches(){return this._footer.recordBatchesLength()}get numDictionaries(){return this._footer.dictionariesLength()}getRecordBatch(t){if(t>=0&&t<this.numRecordBatches){const e=this._footer.recordBatches(t);if(e)return ts.decode(e)}return null}getDictionaryBatch(t){if(t>=0&&t<this.numDictionaries){const e=this._footer.dictionaries(t);if(e)return ts.decode(e)}return null}}class ts{static decode(t){return new ts(t.metaDataLength(),t.bodyLength(),t.offset())}static encode(t,e){const{metaDataLength:r}=e,n=new Ki(e.offset,0),i=new Ki(e.bodyLength,0);return Ji.createBlock(t,n,r,i)}constructor(t,e,r){this.metaDataLength=t,this.offset=\"number\"===typeof r?r:r.low,this.bodyLength=\"number\"===typeof e?e:e.low}}class es extends ${write(t){if((t=wt(t)).byteLength>0)return super.write(t)}toString(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?P(this.toUint8Array(!0)):this.toUint8Array(!1).then(P)}toUint8Array(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?yt(this._values)[0]:(async()=>{let t=[],e=0;for await(const r of this)t.push(r),e+=r.byteLength;return yt(t,e)[0]})()}}class rs{constructor(t){t&&(this.source=new is(Zt.fromIterable(t)))}[Symbol.iterator](){return this}next(t){return this.source.next(t)}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}peek(t){return this.source.peek(t)}read(t){return this.source.read(t)}}class ns{constructor(t){t instanceof ns?this.source=t.source:t instanceof es?this.source=new ss(Zt.fromAsyncIterable(t)):ht(t)?this.source=new ss(Zt.fromNodeStream(t)):lt(t)?this.source=new ss(Zt.fromDOMStream(t)):ut(t)?this.source=new ss(Zt.fromDOMStream(t.body)):it(t)?this.source=new ss(Zt.fromIterable(t)):(nt(t)||st(t))&&(this.source=new ss(Zt.fromAsyncIterable(t)))}[Symbol.asyncIterator](){return this}next(t){return this.source.next(t)}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}get closed(){return this.source.closed}cancel(t){return this.source.cancel(t)}peek(t){return this.source.peek(t)}read(t){return this.source.read(t)}}class is{constructor(t){this.source=t}cancel(t){this.return(t)}peek(t){return this.next(t,\"peek\").value}read(t){return this.next(t,\"read\").value}next(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"read\";return this.source.next({cmd:e,size:t})}throw(t){return Object.create(this.source.throw&&this.source.throw(t)||Y)}return(t){return Object.create(this.source.return&&this.source.return(t)||Y)}}class ss{constructor(t){this.source=t,this._closedPromise=new Promise((t=>this._closedPromiseResolve=t))}async cancel(t){await this.return(t)}get closed(){return this._closedPromise}async read(t){return(await this.next(t,\"read\")).value}async peek(t){return(await this.next(t,\"peek\")).value}async next(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"read\";return await this.source.next({cmd:e,size:t})}async throw(t){const e=this.source.throw&&await this.source.throw(t)||Y;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(e)}async return(t){const e=this.source.return&&await this.source.return(t)||Y;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(e)}}class os extends rs{constructor(t,e){super(),this.position=0,this.buffer=wt(t),this.size=\"undefined\"===typeof e?this.buffer.byteLength:e}readInt32(t){const{buffer:e,byteOffset:r}=this.readAt(t,4);return new DataView(e,r).getInt32(0,!0)}seek(t){return this.position=Math.min(t,this.size),t<this.size}read(t){const{buffer:e,size:r,position:n}=this;return e&&n<r?(\"number\"!==typeof t&&(t=1/0),this.position=Math.min(r,n+Math.min(r-n,t)),e.subarray(n,this.position)):null}readAt(t,e){const r=this.buffer,n=Math.min(this.size,t+e);return r?r.subarray(t,n):new Uint8Array(e)}close(){this.buffer&&(this.buffer=null)}throw(t){return this.close(),{done:!0,value:t}}return(t){return this.close(),{done:!0,value:t}}}class as extends ns{constructor(t,e){super(),this.position=0,this._handle=t,\"number\"===typeof e?this.size=e:this._pending=(async()=>{this.size=(await t.stat()).size,delete this._pending})()}async readInt32(t){const{buffer:e,byteOffset:r}=await this.readAt(t,4);return new DataView(e,r).getInt32(0,!0)}async seek(t){return this._pending&&await this._pending,this.position=Math.min(t,this.size),t<this.size}async read(t){this._pending&&await this._pending;const{_handle:e,size:r,position:n}=this;if(e&&n<r){\"number\"!==typeof t&&(t=1/0);let i=n,s=0,o=0,a=Math.min(r,i+Math.min(r-i,t)),c=new Uint8Array(Math.max(0,(this.position=a)-i));for(;(i+=o)<a&&(s+=o)<c.byteLength;)({bytesRead:o}=await e.read(c,s,c.byteLength-s,i));return c}return null}async readAt(t,e){this._pending&&await this._pending;const{_handle:r,size:n}=this;if(r&&t+e<n){const i=Math.min(n,t+e),s=new Uint8Array(i-t);return(await r.read(s,0,e,t)).buffer}return new Uint8Array(e)}async close(){const t=this._handle;this._handle=null,t&&await t.close()}async throw(t){return await this.close(),{done:!0,value:t}}async return(t){return await this.close(),{done:!0,value:t}}}function cs(t){return t<0&&(t=4294967295+t+1),\"0x\".concat(t.toString(16))}const us=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8];class ls{constructor(t){this.buffer=t}high(){return this.buffer[1]}low(){return this.buffer[0]}_times(t){const e=new Uint32Array([this.buffer[1]>>>16,65535&this.buffer[1],this.buffer[0]>>>16,65535&this.buffer[0]]),r=new Uint32Array([t.buffer[1]>>>16,65535&t.buffer[1],t.buffer[0]>>>16,65535&t.buffer[0]]);let n=e[3]*r[3];this.buffer[0]=65535&n;let i=n>>>16;return n=e[2]*r[3],i+=n,n=e[3]*r[2]>>>0,i+=n,this.buffer[0]+=i<<16,this.buffer[1]=i>>>0<n?65536:0,this.buffer[1]+=i>>>16,this.buffer[1]+=e[1]*r[3]+e[2]*r[2]+e[3]*r[1],this.buffer[1]+=e[0]*r[3]+e[1]*r[2]+e[2]*r[1]+e[3]*r[0]<<16,this}_plus(t){const e=this.buffer[0]+t.buffer[0]>>>0;this.buffer[1]+=t.buffer[1],e<this.buffer[0]>>>0&&++this.buffer[1],this.buffer[0]=e}lessThan(t){return this.buffer[1]<t.buffer[1]||this.buffer[1]===t.buffer[1]&&this.buffer[0]<t.buffer[0]}equals(t){return this.buffer[1]===t.buffer[1]&&this.buffer[0]==t.buffer[0]}greaterThan(t){return t.lessThan(this)}hex(){return\"\".concat(cs(this.buffer[1]),\" \").concat(cs(this.buffer[0]))}}class hs extends ls{times(t){return this._times(t),this}plus(t){return this._plus(t),this}static from(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);return hs.fromString(\"string\"===typeof t?t:t.toString(),e)}static fromNumber(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);return hs.fromString(t.toString(),e)}static fromString(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);const r=t.length;let n=new hs(e);for(let i=0;i<r;){const e=8<r-i?8:r-i,s=new hs(new Uint32Array([parseInt(t.substr(i,e),10),0])),o=new hs(new Uint32Array([us[e],0]));n.times(o),n.plus(s),i+=e}return n}static convertArray(t){const e=new Uint32Array(2*t.length);for(let r=-1,n=t.length;++r<n;)hs.from(t[r],new Uint32Array(e.buffer,e.byteOffset+2*r*4,2));return e}static multiply(t,e){return new hs(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new hs(new Uint32Array(t.buffer)).plus(e)}}class ds extends ls{negate(){return this.buffer[0]=1+~this.buffer[0],this.buffer[1]=~this.buffer[1],0==this.buffer[0]&&++this.buffer[1],this}times(t){return this._times(t),this}plus(t){return this._plus(t),this}lessThan(t){const e=this.buffer[1]|0,r=t.buffer[1]|0;return e<r||e===r&&this.buffer[0]<t.buffer[0]}static from(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);return ds.fromString(\"string\"===typeof t?t:t.toString(),e)}static fromNumber(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);return ds.fromString(t.toString(),e)}static fromString(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(2);const r=t.startsWith(\"-\"),n=t.length;let i=new ds(e);for(let s=r?1:0;s<n;){const e=8<n-s?8:n-s,r=new ds(new Uint32Array([parseInt(t.substr(s,e),10),0])),o=new ds(new Uint32Array([us[e],0]));i.times(o),i.plus(r),s+=e}return r?i.negate():i}static convertArray(t){const e=new Uint32Array(2*t.length);for(let r=-1,n=t.length;++r<n;)ds.from(t[r],new Uint32Array(e.buffer,e.byteOffset+2*r*4,2));return e}static multiply(t,e){return new ds(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new ds(new Uint32Array(t.buffer)).plus(e)}}class fs{constructor(t){this.buffer=t}high(){return new ds(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2))}low(){return new ds(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset,2))}negate(){return this.buffer[0]=1+~this.buffer[0],this.buffer[1]=~this.buffer[1],this.buffer[2]=~this.buffer[2],this.buffer[3]=~this.buffer[3],0==this.buffer[0]&&++this.buffer[1],0==this.buffer[1]&&++this.buffer[2],0==this.buffer[2]&&++this.buffer[3],this}times(t){const e=new hs(new Uint32Array([this.buffer[3],0])),r=new hs(new Uint32Array([this.buffer[2],0])),n=new hs(new Uint32Array([this.buffer[1],0])),i=new hs(new Uint32Array([this.buffer[0],0])),s=new hs(new Uint32Array([t.buffer[3],0])),o=new hs(new Uint32Array([t.buffer[2],0])),a=new hs(new Uint32Array([t.buffer[1],0])),c=new hs(new Uint32Array([t.buffer[0],0]));let u=hs.multiply(i,c);this.buffer[0]=u.low();let l=new hs(new Uint32Array([u.high(),0]));return u=hs.multiply(n,c),l.plus(u),u=hs.multiply(i,a),l.plus(u),this.buffer[1]=l.low(),this.buffer[3]=l.lessThan(u)?1:0,this.buffer[2]=l.high(),new hs(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2)).plus(hs.multiply(r,c)).plus(hs.multiply(n,a)).plus(hs.multiply(i,o)),this.buffer[3]+=hs.multiply(e,c).plus(hs.multiply(r,a)).plus(hs.multiply(n,o)).plus(hs.multiply(i,s)).low(),this}plus(t){let e=new Uint32Array(4);return e[3]=this.buffer[3]+t.buffer[3]>>>0,e[2]=this.buffer[2]+t.buffer[2]>>>0,e[1]=this.buffer[1]+t.buffer[1]>>>0,e[0]=this.buffer[0]+t.buffer[0]>>>0,e[0]<this.buffer[0]>>>0&&++e[1],e[1]<this.buffer[1]>>>0&&++e[2],e[2]<this.buffer[2]>>>0&&++e[3],this.buffer[3]=e[3],this.buffer[2]=e[2],this.buffer[1]=e[1],this.buffer[0]=e[0],this}hex(){return\"\".concat(cs(this.buffer[3]),\" \").concat(cs(this.buffer[2]),\" \").concat(cs(this.buffer[1]),\" \").concat(cs(this.buffer[0]))}static multiply(t,e){return new fs(new Uint32Array(t.buffer)).times(e)}static add(t,e){return new fs(new Uint32Array(t.buffer)).plus(e)}static from(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(4);return fs.fromString(\"string\"===typeof t?t:t.toString(),e)}static fromNumber(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(4);return fs.fromString(t.toString(),e)}static fromString(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Uint32Array(4);const r=t.startsWith(\"-\"),n=t.length;let i=new fs(e);for(let s=r?1:0;s<n;){const e=8<n-s?8:n-s,r=new fs(new Uint32Array([parseInt(t.substr(s,e),10),0,0,0])),o=new fs(new Uint32Array([us[e],0,0,0]));i.times(o),i.plus(r),s+=e}return r?i.negate():i}static convertArray(t){const e=new Uint32Array(4*t.length);for(let r=-1,n=t.length;++r<n;)fs.from(t[r],new Uint32Array(e.buffer,e.byteOffset+16*r,4));return e}}class ps extends Be{constructor(t,e,r,n){super(),this.nodesIndex=-1,this.buffersIndex=-1,this.bytes=t,this.nodes=e,this.buffers=r,this.dictionaries=n}visit(t){return super.visit(t instanceof pi?t.type:t)}visitNull(t){let{length:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Null(t,0,e)}visitBool(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Bool(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitInt(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Int(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitFloat(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Float(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitUtf8(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Utf8(t,0,e,r,this.readNullBitmap(t,r),this.readOffsets(t),this.readData(t))}visitBinary(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Binary(t,0,e,r,this.readNullBitmap(t,r),this.readOffsets(t),this.readData(t))}visitFixedSizeBinary(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.FixedSizeBinary(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitDate(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Date(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitTimestamp(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Timestamp(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitTime(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Time(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitDecimal(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Decimal(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitList(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.List(t,0,e,r,this.readNullBitmap(t,r),this.readOffsets(t),this.visit(t.children[0]))}visitStruct(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Struct(t,0,e,r,this.readNullBitmap(t,r),this.visitMany(t.children))}visitUnion(t){return t.mode===fe.Sparse?this.visitSparseUnion(t):this.visitDenseUnion(t)}visitDenseUnion(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Union(t,0,e,r,this.readNullBitmap(t,r),this.readTypeIds(t),this.readOffsets(t),this.visitMany(t.children))}visitSparseUnion(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Union(t,0,e,r,this.readNullBitmap(t,r),this.readTypeIds(t),this.visitMany(t.children))}visitDictionary(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Dictionary(t,0,e,r,this.readNullBitmap(t,r),this.readData(t.indices),this.readDictionary(t))}visitInterval(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Interval(t,0,e,r,this.readNullBitmap(t,r),this.readData(t))}visitFixedSizeList(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.FixedSizeList(t,0,e,r,this.readNullBitmap(t,r),this.visit(t.children[0]))}visitMap(t){let{length:e,nullCount:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextFieldNode();return wr.Map(t,0,e,r,this.readNullBitmap(t,r),this.readOffsets(t),this.visit(t.children[0]))}nextFieldNode(){return this.nodes[++this.nodesIndex]}nextBufferRange(){return this.buffers[++this.buffersIndex]}readNullBitmap(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.nextBufferRange();return e>0&&this.readData(t,r)||new Uint8Array(0)}readOffsets(t,e){return this.readData(t,e)}readTypeIds(t,e){return this.readData(t,e)}readData(t){let{length:e,offset:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextBufferRange();return this.bytes.subarray(r,r+e)}readDictionary(t){return this.dictionaries.get(t.id)}}class ys extends ps{constructor(t,e,r,n){super(new Uint8Array(0),e,r,n),this.sources=t}readNullBitmap(t,e){let{offset:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.nextBufferRange();return e<=0?new Uint8Array(0):we(this.sources[r])}readOffsets(t){let{offset:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextBufferRange();return bt(Uint8Array,bt(Int32Array,this.sources[e]))}readTypeIds(t){let{offset:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextBufferRange();return bt(Uint8Array,bt(t.ArrayType,this.sources[e]))}readData(t){let{offset:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.nextBufferRange();const{sources:r}=this;return Re.isTimestamp(t)||(Re.isInt(t)||Re.isTime(t))&&64===t.bitWidth||Re.isDate(t)&&t.unit===le.MILLISECOND?bt(Uint8Array,ds.convertArray(r[e])):Re.isDecimal(t)?bt(Uint8Array,fs.convertArray(r[e])):Re.isBinary(t)||Re.isFixedSizeBinary(t)?function(t){const e=t.join(\"\"),r=new Uint8Array(e.length/2);for(let n=0;n<e.length;n+=2)r[n>>1]=parseInt(e.substr(n,2),16);return r}(r[e]):Re.isBool(t)?we(r[e]):Re.isUtf8(t)?z(r[e].join(\"\")):bt(Uint8Array,bt(t.ArrayType,r[e].map((t=>+t))))}}var bs=O.Long,gs=ne.apache.arrow.flatbuf.Null,_s=ne.apache.arrow.flatbuf.Int,vs=ne.apache.arrow.flatbuf.FloatingPoint,ms=ne.apache.arrow.flatbuf.Binary,ws=ne.apache.arrow.flatbuf.Bool,Is=ne.apache.arrow.flatbuf.Utf8,Ss=ne.apache.arrow.flatbuf.Decimal,As=ne.apache.arrow.flatbuf.Date,Ts=ne.apache.arrow.flatbuf.Time,Bs=ne.apache.arrow.flatbuf.Timestamp,Ds=ne.apache.arrow.flatbuf.Interval,Os=ne.apache.arrow.flatbuf.List,xs=ne.apache.arrow.flatbuf.Struct_,Ls=ne.apache.arrow.flatbuf.Union,Fs=ne.apache.arrow.flatbuf.DictionaryEncoding,Ms=ne.apache.arrow.flatbuf.FixedSizeBinary,Us=ne.apache.arrow.flatbuf.FixedSizeList,Es=ne.apache.arrow.flatbuf.Map;const Ns=new class extends Be{visit(t,e){return null==t||null==e?void 0:super.visit(t,e)}visitNull(t,e){return gs.startNull(e),gs.endNull(e)}visitInt(t,e){return _s.startInt(e),_s.addBitWidth(e,t.bitWidth),_s.addIsSigned(e,t.isSigned),_s.endInt(e)}visitFloat(t,e){return vs.startFloatingPoint(e),vs.addPrecision(e,t.precision),vs.endFloatingPoint(e)}visitBinary(t,e){return ms.startBinary(e),ms.endBinary(e)}visitBool(t,e){return ws.startBool(e),ws.endBool(e)}visitUtf8(t,e){return Is.startUtf8(e),Is.endUtf8(e)}visitDecimal(t,e){return Ss.startDecimal(e),Ss.addScale(e,t.scale),Ss.addPrecision(e,t.precision),Ss.endDecimal(e)}visitDate(t,e){return As.startDate(e),As.addUnit(e,t.unit),As.endDate(e)}visitTime(t,e){return Ts.startTime(e),Ts.addUnit(e,t.unit),Ts.addBitWidth(e,t.bitWidth),Ts.endTime(e)}visitTimestamp(t,e){const r=t.timezone&&e.createString(t.timezone)||void 0;return Bs.startTimestamp(e),Bs.addUnit(e,t.unit),void 0!==r&&Bs.addTimezone(e,r),Bs.endTimestamp(e)}visitInterval(t,e){return Ds.startInterval(e),Ds.addUnit(e,t.unit),Ds.endInterval(e)}visitList(t,e){return Os.startList(e),Os.endList(e)}visitStruct(t,e){return xs.startStruct_(e),xs.endStruct_(e)}visitUnion(t,e){Ls.startTypeIdsVector(e,t.typeIds.length);const r=Ls.createTypeIdsVector(e,t.typeIds);return Ls.startUnion(e),Ls.addMode(e,t.mode),Ls.addTypeIds(e,r),Ls.endUnion(e)}visitDictionary(t,e){const r=this.visit(t.indices,e);return Fs.startDictionaryEncoding(e),Fs.addId(e,new bs(t.id,0)),Fs.addIsOrdered(e,t.isOrdered),void 0!==r&&Fs.addIndexType(e,r),Fs.endDictionaryEncoding(e)}visitFixedSizeBinary(t,e){return Ms.startFixedSizeBinary(e),Ms.addByteWidth(e,t.byteWidth),Ms.endFixedSizeBinary(e)}visitFixedSizeList(t,e){return Us.startFixedSizeList(e),Us.addListSize(e,t.listSize),Us.endFixedSizeList(e)}visitMap(t,e){return Es.startMap(e),Es.addKeysSorted(e,t.keysSorted),Es.endMap(e)}};function Cs(t){return new no(t.count,ks(t.columns),Rs(t.columns))}function Vs(t,e){return(t.children||[]).filter(Boolean).map((t=>pi.fromJSON(t,e)))}function ks(t){return(t||[]).reduce(((t,e)=>{return[...t,new oo(e.count,(r=e.VALIDITY,(r||[]).reduce(((t,e)=>t+ +(0===e)),0))),...ks(e.children)];var r}),[])}function Rs(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];for(let r=-1,n=(t||[]).length;++r<n;){const n=t[r];n.VALIDITY&&e.push(new so(e.length,n.VALIDITY.length)),n.TYPE&&e.push(new so(e.length,n.TYPE.length)),n.OFFSET&&e.push(new so(e.length,n.OFFSET.length)),n.DATA&&e.push(new so(e.length,n.DATA.length)),e=Rs(n.children,e)}return e}function js(t){return new Map(Object.entries(t||{}))}function Ps(t){return new ze(t.isSigned,t.bitWidth)}function zs(t,e){const r=t.type.name;switch(r){case\"NONE\":case\"null\":return new Pe;case\"binary\":return new er;case\"utf8\":return new rr;case\"bool\":return new nr;case\"list\":return new hr((e||[])[0]);case\"struct\":case\"struct_\":return new dr(e||[])}switch(r){case\"int\":{const e=t.type;return new ze(e.isSigned,e.bitWidth)}case\"floatingpoint\":{const e=t.type;return new Ze(de[e.precision])}case\"decimal\":{const e=t.type;return new ir(e.scale,e.precision)}case\"date\":{const e=t.type;return new sr(le[e.unit])}case\"time\":{const e=t.type;return new cr(he[e.unit],e.bitWidth)}case\"timestamp\":{const e=t.type;return new ur(he[e.unit],e.timezone)}case\"interval\":{const e=t.type;return new lr(pe[e.unit])}case\"union\":{const r=t.type;return new fr(fe[r.mode],r.typeIds||[],e||[])}case\"fixedsizebinary\":{const e=t.type;return new pr(e.byteWidth)}case\"fixedsizelist\":{const r=t.type;return new yr(r.listSize,(e||[])[0])}case\"map\":{const r=t.type;return new br((e||[])[0],r.keysSorted)}}throw new Error('Unrecognized type: \"'.concat(r,'\"'))}var Ys=O.Long,Ws=O.Builder,Hs=O.ByteBuffer,$s=ne.apache.arrow.flatbuf.Type,Ks=ne.apache.arrow.flatbuf.Field,Gs=ne.apache.arrow.flatbuf.Schema,qs=ne.apache.arrow.flatbuf.Buffer,Js=ae.apache.arrow.flatbuf.Message,Zs=ne.apache.arrow.flatbuf.KeyValue,Qs=ae.apache.arrow.flatbuf.FieldNode,Xs=ne.apache.arrow.flatbuf.Endianness,to=ae.apache.arrow.flatbuf.RecordBatch,eo=ae.apache.arrow.flatbuf.DictionaryBatch;class ro{constructor(t,e,r,n){this._version=e,this._headerType=r,this.body=new Uint8Array(0),n&&(this._createHeader=()=>n),this._bodyLength=\"number\"===typeof t?t:t.low}static fromJSON(t,e){const r=new ro(0,be.V4,e);return r._createHeader=function(t,e){return()=>{switch(e){case ye.Schema:return fi.fromJSON(t);case ye.RecordBatch:return no.fromJSON(t);case ye.DictionaryBatch:return io.fromJSON(t)}throw new Error(\"Unrecognized Message type: { name: \".concat(ye[e],\", type: \").concat(e,\" }\"))}}(t,e),r}static decode(t){t=new Hs(wt(t));const e=Js.getRootAsMessage(t),r=e.bodyLength(),n=e.version(),i=e.headerType(),s=new ro(r,n,i);return s._createHeader=function(t,e){return()=>{switch(e){case ye.Schema:return fi.decode(t.header(new Gs));case ye.RecordBatch:return no.decode(t.header(new to),t.version());case ye.DictionaryBatch:return io.decode(t.header(new eo),t.version())}throw new Error(\"Unrecognized Message type: { name: \".concat(ye[e],\", type: \").concat(e,\" }\"))}}(e,i),s}static encode(t){let e=new Ws,r=-1;return t.isSchema()?r=fi.encode(e,t.header()):t.isRecordBatch()?r=no.encode(e,t.header()):t.isDictionaryBatch()&&(r=io.encode(e,t.header())),Js.startMessage(e),Js.addVersion(e,be.V4),Js.addHeader(e,r),Js.addHeaderType(e,t.headerType),Js.addBodyLength(e,new Ys(t.bodyLength,0)),Js.finishMessageBuffer(e,Js.endMessage(e)),e.asUint8Array()}static from(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(t instanceof fi)return new ro(0,be.V4,ye.Schema,t);if(t instanceof no)return new ro(e,be.V4,ye.RecordBatch,t);if(t instanceof io)return new ro(e,be.V4,ye.DictionaryBatch,t);throw new Error(\"Unrecognized Message header: \".concat(t))}get type(){return this.headerType}get version(){return this._version}get headerType(){return this._headerType}get bodyLength(){return this._bodyLength}header(){return this._createHeader()}isSchema(){return this.headerType===ye.Schema}isRecordBatch(){return this.headerType===ye.RecordBatch}isDictionaryBatch(){return this.headerType===ye.DictionaryBatch}}class no{get nodes(){return this._nodes}get length(){return this._length}get buffers(){return this._buffers}constructor(t,e,r){this._nodes=e,this._buffers=r,this._length=\"number\"===typeof t?t:t.low}}class io{get id(){return this._id}get data(){return this._data}get isDelta(){return this._isDelta}get length(){return this.data.length}get nodes(){return this.data.nodes}get buffers(){return this.data.buffers}constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._data=t,this._isDelta=r,this._id=\"number\"===typeof e?e:e.low}}class so{constructor(t,e){this.offset=\"number\"===typeof t?t:t.low,this.length=\"number\"===typeof e?e:e.low}}class oo{constructor(t,e){this.length=\"number\"===typeof t?t:t.low,this.nullCount=\"number\"===typeof e?e:e.low}}function ao(t,e){const r=[];for(let n,i=-1,s=-1,o=t.childrenLength();++i<o;)(n=t.children(i))&&(r[++s]=pi.decode(n,e));return r}function co(t){const e=new Map;if(t)for(let r,n,i=-1,s=0|t.customMetadataLength();++i<s;)(r=t.customMetadata(i))&&null!=(n=r.key())&&e.set(n,r.value());return e}function uo(t){return new ze(t.isSigned(),t.bitWidth())}function lo(t,e){const r=t.typeType();switch(r){case $s.NONE:case $s.Null:return new Pe;case $s.Binary:return new er;case $s.Utf8:return new rr;case $s.Bool:return new nr;case $s.List:return new hr((e||[])[0]);case $s.Struct_:return new dr(e||[])}switch(r){case $s.Int:{const e=t.type(new ne.apache.arrow.flatbuf.Int);return new ze(e.isSigned(),e.bitWidth())}case $s.FloatingPoint:{const e=t.type(new ne.apache.arrow.flatbuf.FloatingPoint);return new Ze(e.precision())}case $s.Decimal:{const e=t.type(new ne.apache.arrow.flatbuf.Decimal);return new ir(e.scale(),e.precision())}case $s.Date:{const e=t.type(new ne.apache.arrow.flatbuf.Date);return new sr(e.unit())}case $s.Time:{const e=t.type(new ne.apache.arrow.flatbuf.Time);return new cr(e.unit(),e.bitWidth())}case $s.Timestamp:{const e=t.type(new ne.apache.arrow.flatbuf.Timestamp);return new ur(e.unit(),e.timezone())}case $s.Interval:{const e=t.type(new ne.apache.arrow.flatbuf.Interval);return new lr(e.unit())}case $s.Union:{const r=t.type(new ne.apache.arrow.flatbuf.Union);return new fr(r.mode(),r.typeIdsArray()||[],e||[])}case $s.FixedSizeBinary:{const e=t.type(new ne.apache.arrow.flatbuf.FixedSizeBinary);return new pr(e.byteWidth())}case $s.FixedSizeList:{const r=t.type(new ne.apache.arrow.flatbuf.FixedSizeList);return new yr(r.listSize(),(e||[])[0])}case $s.Map:{const r=t.type(new ne.apache.arrow.flatbuf.Map);return new br((e||[])[0],r.keysSorted())}}throw new Error('Unrecognized type: \"'.concat($s[r],'\" (').concat(r,\")\"))}pi.encode=function(t,e){let r=-1,n=-1,i=-1,s=e.type,o=e.typeId;Re.isDictionary(s)?(o=s.dictionary.typeId,i=Ns.visit(s,t),n=Ns.visit(s.dictionary,t)):n=Ns.visit(s,t);const a=(s.children||[]).map((e=>pi.encode(t,e))),c=Ks.createChildrenVector(t,a),u=e.metadata&&e.metadata.size>0?Ks.createCustomMetadataVector(t,[...e.metadata].map((e=>{let[r,n]=e;const i=t.createString(\"\".concat(r)),s=t.createString(\"\".concat(n));return Zs.startKeyValue(t),Zs.addKey(t,i),Zs.addValue(t,s),Zs.endKeyValue(t)}))):-1;e.name&&(r=t.createString(e.name));Ks.startField(t),Ks.addType(t,n),Ks.addTypeType(t,o),Ks.addChildren(t,c),Ks.addNullable(t,!!e.nullable),-1!==r&&Ks.addName(t,r);-1!==i&&Ks.addDictionary(t,i);-1!==u&&Ks.addCustomMetadata(t,u);return Ks.endField(t)},pi.decode=function(t,e){let r,n,i,s,o,a;e&&(a=t.dictionary())?e.has(r=a.id().low)?(s=(s=a.indexType())?uo(s):new He,o=new vr(e.get(r),s,r,a.isOrdered()),n=new pi(t.name(),o,t.nullable(),co(t))):(s=(s=a.indexType())?uo(s):new He,e.set(r,i=lo(t,ao(t,e))),o=new vr(i,s,r,a.isOrdered()),n=new pi(t.name(),o,t.nullable(),co(t))):(i=lo(t,ao(t,e)),n=new pi(t.name(),i,t.nullable(),co(t)));return n||null},pi.fromJSON=function(t,e){let r,n,i,s,o,a;return e&&(s=t.dictionary)?e.has(r=s.id)?(n=(n=s.indexType)?Ps(n):new He,a=new vr(e.get(r),n,r,s.isOrdered),i=new pi(t.name,a,t.nullable,js(t.customMetadata))):(n=(n=s.indexType)?Ps(n):new He,e.set(r,o=zs(t,Vs(t,e))),a=new vr(o,n,r,s.isOrdered),i=new pi(t.name,a,t.nullable,js(t.customMetadata))):(o=zs(t,Vs(t,e)),i=new pi(t.name,o,t.nullable,js(t.customMetadata))),i||null},fi.encode=function(t,e){const r=e.fields.map((e=>pi.encode(t,e)));Gs.startFieldsVector(t,r.length);const n=Gs.createFieldsVector(t,r),i=e.metadata&&e.metadata.size>0?Gs.createCustomMetadataVector(t,[...e.metadata].map((e=>{let[r,n]=e;const i=t.createString(\"\".concat(r)),s=t.createString(\"\".concat(n));return Zs.startKeyValue(t),Zs.addKey(t,i),Zs.addValue(t,s),Zs.endKeyValue(t)}))):-1;Gs.startSchema(t),Gs.addFields(t,n),Gs.addEndianness(t,ho?Xs.Little:Xs.Big),-1!==i&&Gs.addCustomMetadata(t,i);return Gs.endSchema(t)},fi.decode=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;const r=function(t,e){const r=[];for(let n,i=-1,s=-1,o=t.fieldsLength();++i<o;)(n=t.fields(i))&&(r[++s]=pi.decode(n,e));return r}(t,e);return new fi(r,co(t),e)},fi.fromJSON=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;return new fi(function(t,e){return(t.fields||[]).filter(Boolean).map((t=>pi.fromJSON(t,e)))}(t,e),js(t.customMetadata),e)},no.encode=function(t,e){const r=e.nodes||[],n=e.buffers||[];to.startNodesVector(t,r.length),r.slice().reverse().forEach((e=>oo.encode(t,e)));const i=t.endVector();to.startBuffersVector(t,n.length),n.slice().reverse().forEach((e=>so.encode(t,e)));const s=t.endVector();return to.startRecordBatch(t),to.addLength(t,new Ys(e.length,0)),to.addNodes(t,i),to.addBuffers(t,s),to.endRecordBatch(t)},no.decode=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:be.V4;return new no(t.length(),function(t){const e=[];for(let r,n=-1,i=-1,s=t.nodesLength();++n<s;)(r=t.nodes(n))&&(e[++i]=oo.decode(r));return e}(t),function(t,e){const r=[];for(let n,i=-1,s=-1,o=t.buffersLength();++i<o;)(n=t.buffers(i))&&(e<be.V4&&(n.bb_pos+=8*(i+1)),r[++s]=so.decode(n));return r}(t,e))},no.fromJSON=Cs,io.encode=function(t,e){const r=no.encode(t,e.data);return eo.startDictionaryBatch(t),eo.addId(t,new Ys(e.id,0)),eo.addIsDelta(t,e.isDelta),eo.addData(t,r),eo.endDictionaryBatch(t)},io.decode=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:be.V4;return new io(no.decode(t.data(),e),t.id(),t.isDelta())},io.fromJSON=function(t){return new io(Cs(t.data),t.id,t.isDelta)},oo.encode=function(t,e){return Qs.createFieldNode(t,new Ys(e.length,0),new Ys(e.nullCount,0))},oo.decode=function(t){return new oo(t.length(),t.nullCount())},so.encode=function(t,e){return qs.createBuffer(t,new Ys(e.offset,0),new Ys(e.length,0))},so.decode=function(t){return new so(t.offset(),t.length())};const ho=function(){const t=new ArrayBuffer(2);return new DataView(t).setInt16(0,256,!0),256===new Int16Array(t)[0]}();var fo=O.ByteBuffer;const po=t=>\"Expected \".concat(ye[t],\" Message in stream, but was null or length 0.\"),yo=t=>\"Header pointer of flatbuffer-encoded \".concat(ye[t],\" Message is null or length 0.\"),bo=(t,e)=>\"Expected to read \".concat(t,\" metadata bytes, but only read \").concat(e,\".\"),go=(t,e)=>\"Expected to read \".concat(t,\" bytes for message body, but only read \").concat(e,\".\");class _o{constructor(t){this.source=t instanceof rs?t:new rs(t)}[Symbol.iterator](){return this}next(){let t;return(t=this.readMetadataLength()).done||-1===t.value&&(t=this.readMetadataLength()).done||(t=this.readMetadata(t.value)).done?Y:t}throw(t){return this.source.throw(t)}return(t){return this.source.return(t)}readMessage(t){let e;if((e=this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw new Error(po(t));return e.value}readMessageBody(t){if(t<=0)return new Uint8Array(0);const e=wt(this.source.read(t));if(e.byteLength<t)throw new Error(go(t,e.byteLength));return e.byteOffset%8===0&&e.byteOffset+e.byteLength<=e.buffer.byteLength?e:e.slice()}readSchema(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const e=ye.Schema,r=this.readMessage(e),n=r&&r.header();if(t&&!n)throw new Error(yo(e));return n}readMetadataLength(){const t=this.source.read(wo),e=t&&new fo(t),r=e&&e.readInt32(0)||0;return{done:0===r,value:r}}readMetadata(t){const e=this.source.read(t);if(!e)return Y;if(e.byteLength<t)throw new Error(bo(t,e.byteLength));return{done:!1,value:ro.decode(e)}}}class vo{constructor(t,e){this.source=t instanceof ns?t:ct(t)?new as(t,e):new ns(t)}[Symbol.asyncIterator](){return this}async next(){let t;return(t=await this.readMetadataLength()).done||-1===t.value&&(t=await this.readMetadataLength()).done||(t=await this.readMetadata(t.value)).done?Y:t}async throw(t){return await this.source.throw(t)}async return(t){return await this.source.return(t)}async readMessage(t){let e;if((e=await this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw new Error(po(t));return e.value}async readMessageBody(t){if(t<=0)return new Uint8Array(0);const e=wt(await this.source.read(t));if(e.byteLength<t)throw new Error(go(t,e.byteLength));return e.byteOffset%8===0&&e.byteOffset+e.byteLength<=e.buffer.byteLength?e:e.slice()}async readSchema(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const e=ye.Schema,r=await this.readMessage(e),n=r&&r.header();if(t&&!n)throw new Error(yo(e));return n}async readMetadataLength(){const t=await this.source.read(wo),e=t&&new fo(t),r=e&&e.readInt32(0)||0;return{done:0===r,value:r}}async readMetadata(t){const e=await this.source.read(t);if(!e)return Y;if(e.byteLength<t)throw new Error(bo(t,e.byteLength));return{done:!1,value:ro.decode(e)}}}class mo extends _o{constructor(t){super(new Uint8Array(0)),this._schema=!1,this._body=[],this._batchIndex=0,this._dictionaryIndex=0,this._json=t instanceof W?t:new W(t)}next(){const{_json:t}=this;if(!this._schema){this._schema=!0;return{done:!1,value:ro.fromJSON(t.schema,ye.Schema)}}if(this._dictionaryIndex<t.dictionaries.length){const e=t.dictionaries[this._dictionaryIndex++];this._body=e.data.columns;return{done:!1,value:ro.fromJSON(e,ye.DictionaryBatch)}}if(this._batchIndex<t.batches.length){const e=t.batches[this._batchIndex++];this._body=e.columns;return{done:!1,value:ro.fromJSON(e,ye.RecordBatch)}}return this._body=[],Y}readMessageBody(t){return function t(e){return(e||[]).reduce(((e,r)=>[...e,...r.VALIDITY&&[r.VALIDITY]||[],...r.TYPE&&[r.TYPE]||[],...r.OFFSET&&[r.OFFSET]||[],...r.DATA&&[r.DATA]||[],...t(r.children)]),[])}(this._body)}readMessage(t){let e;if((e=this.next()).done)return null;if(null!=t&&e.value.headerType!==t)throw new Error(po(t));return e.value}readSchema(){const t=ye.Schema,e=this.readMessage(t),r=e&&e.header();if(!e||!r)throw new Error(yo(t));return r}}const wo=4,Io=\"ARROW1\",So=new Uint8Array(6);for(let fu=0;fu<6;fu+=1)So[fu]=Io.charCodeAt(fu);function Ao(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let r=-1,n=So.length;++r<n;)if(So[r]!==t[e+r])return!1;return!0}const To=So.length,Bo=To+wo,Do=2*To+wo;class Oo extends Be{constructor(){super(),this._byteLength=0,this._nodes=[],this._buffers=[],this._bufferRegions=[]}static assemble(){const t=new Oo;for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];const i=ai(Bc,r),[s=t]=t.visitMany(i);return s}visit(t){if(!Re.isDictionary(t.type)){const{data:e,length:r,nullCount:n}=t;if(r>2147483647)throw new RangeError(\"Cannot write arrays larger than 2^31 - 1 in length\");Re.isNull(t.type)||xo.call(this,n<=0?new Uint8Array(0):me(e.offset,r,e.nullBitmap)),this.nodes.push(new oo(r,n))}return super.visit(t)}visitNull(t){return this}visitDictionary(t){return this.visit(t.indices)}get nodes(){return this._nodes}get buffers(){return this._buffers}get byteLength(){return this._byteLength}get bufferRegions(){return this._bufferRegions}}function xo(t){const e=t.byteLength+7&-8;return this.buffers.push(t),this.bufferRegions.push(new so(this._byteLength,e)),this._byteLength+=e,this}function Lo(t){return xo.call(this,t.values.subarray(0,t.length*t.stride))}function Fo(t){const{length:e,values:r,valueOffsets:n}=t,i=n[0],s=n[e],o=Math.min(s-i,r.byteLength-i);return xo.call(this,qt(-n[0],e,n)),xo.call(this,r.subarray(i,i+o)),this}function Mo(t){const{length:e,valueOffsets:r}=t;return r&&xo.call(this,qt(r[0],e,r)),this.visit(t.getChildAt(0))}function Uo(t){return this.visitMany(t.type.children.map(((e,r)=>t.getChildAt(r))).filter(Boolean))[0]}Oo.prototype.visitBool=function(t){let e;return t.nullCount>=t.length?xo.call(this,new Uint8Array(0)):(e=t.values)instanceof Uint8Array?xo.call(this,me(t.offset,t.length,e)):xo.call(this,we(t))},Oo.prototype.visitInt=Lo,Oo.prototype.visitFloat=Lo,Oo.prototype.visitUtf8=Fo,Oo.prototype.visitBinary=Fo,Oo.prototype.visitFixedSizeBinary=Lo,Oo.prototype.visitDate=Lo,Oo.prototype.visitTimestamp=Lo,Oo.prototype.visitTime=Lo,Oo.prototype.visitDecimal=Lo,Oo.prototype.visitList=Mo,Oo.prototype.visitStruct=Uo,Oo.prototype.visitUnion=function(t){const{type:e,length:r,typeIds:n,valueOffsets:i}=t;if(xo.call(this,n),e.mode===fe.Sparse)return Uo.call(this,t);if(e.mode===fe.Dense){if(t.offset<=0)return xo.call(this,i),Uo.call(this,t);{const s=n.reduce(((t,e)=>Math.max(t,e)),n[0]),o=new Int32Array(s+1),a=new Int32Array(s+1).fill(-1),c=new Int32Array(r),u=qt(-i[0],r,i);for(let t,e,i=-1;++i<r;)-1===(e=a[t=n[i]])&&(e=a[t]=u[t]),c[i]=u[i]-e,++o[t];xo.call(this,c);for(let n,i=-1,l=e.children.length;++i<l;)if(n=t.getChildAt(i)){const t=e.typeIds[i],s=Math.min(r,o[t]);this.visit(n.slice(a[t],s))}}}return this},Oo.prototype.visitInterval=Lo,Oo.prototype.visitFixedSizeList=Mo,Oo.prototype.visitMap=Mo;class Eo extends H{constructor(t){super(),this._position=0,this._started=!1,this._sink=new es,this._schema=null,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._dictionaryDeltaOffsets=new Map,rt(t)||(t={autoDestroy:!0,writeLegacyIpcFormat:!1}),this._autoDestroy=\"boolean\"!==typeof t.autoDestroy||t.autoDestroy,this._writeLegacyIpcFormat=\"boolean\"===typeof t.writeLegacyIpcFormat&&t.writeLegacyIpcFormat}static throughNode(t){throw new Error('\"throughNode\" not available in this environment')}static throughDOM(t,e){throw new Error('\"throughDOM\" not available in this environment')}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._sink.toString(t)}toUint8Array(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._sink.toUint8Array(t)}writeAll(t){return nt(t)?t.then((t=>this.writeAll(t))):st(t)?ko(this,t):Vo(this,t)}get closed(){return this._sink.closed}[Symbol.asyncIterator](){return this._sink[Symbol.asyncIterator]()}toDOMStream(t){return this._sink.toDOMStream(t)}toNodeStream(t){return this._sink.toNodeStream(t)}close(){return this.reset()._sink.close()}abort(t){return this.reset()._sink.abort(t)}finish(){return this._autoDestroy?this.close():this.reset(this._sink,this._schema),this}reset(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._sink,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;var r;return t===this._sink||t instanceof es?this._sink=t:(this._sink=new es,t&&(rt(r=t)&&et(r.abort)&&et(r.getWriter)&&!(r instanceof H))?this.toDOMStream({type:\"bytes\"}).pipeTo(t):t&&(t=>rt(t)&&et(t.end)&&et(t.write)&&tt(t.writable)&&!(t instanceof H))(t)&&this.toNodeStream({objectMode:!1}).pipe(t)),this._started&&this._schema&&this._writeFooter(this._schema),this._started=!1,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._dictionaryDeltaOffsets=new Map,e&&e.compareTo(this._schema)||(null===e?(this._position=0,this._schema=null):(this._started=!0,this._schema=e,this._writeSchema(e))),this}write(t){let e=null;if(!this._sink)throw new Error(\"RecordBatchWriter is closed\");if(null===t||void 0===t)return this.finish()&&void 0;if(t instanceof Tc&&!(e=t.schema))return this.finish()&&void 0;if(t instanceof Bc&&!(e=t.schema))return this.finish()&&void 0;if(e&&!e.compareTo(this._schema)){if(this._started&&this._autoDestroy)return this.close();this.reset(this._sink,e)}t instanceof Bc?t instanceof Dc||this._writeRecordBatch(t):t instanceof Tc?this.writeAll(t.chunks):it(t)&&this.writeAll(t)}_writeMessage(t){const e=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:8)-1,r=ro.encode(t),n=r.byteLength,i=this._writeLegacyIpcFormat?4:8,s=n+i+e&~e,o=s-n-i;return t.headerType===ye.RecordBatch?this._recordBatchBlocks.push(new ts(s,t.bodyLength,this._position)):t.headerType===ye.DictionaryBatch&&this._dictionaryBlocks.push(new ts(s,t.bodyLength,this._position)),this._writeLegacyIpcFormat||this._write(Int32Array.of(-1)),this._write(Int32Array.of(s-i)),n>0&&this._write(r),this._writePadding(o)}_write(t){if(this._started){const e=wt(t);e&&e.byteLength>0&&(this._sink.write(e),this._position+=e.byteLength)}return this}_writeSchema(t){return this._writeMessage(ro.from(t))}_writeFooter(t){return this._writeLegacyIpcFormat?this._write(Int32Array.of(0)):this._write(Int32Array.of(-1,0))}_writeMagic(){return this._write(So)}_writePadding(t){return t>0?this._write(new Uint8Array(t)):this}_writeRecordBatch(t){const{byteLength:e,nodes:r,bufferRegions:n,buffers:i}=Oo.assemble(t),s=new no(t.length,r,n),o=ro.from(s,e);return this._writeDictionaries(t)._writeMessage(o)._writeBodyBuffers(i)}_writeDictionaryBatch(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._dictionaryDeltaOffsets.set(e,t.length+(this._dictionaryDeltaOffsets.get(e)||0));const{byteLength:n,nodes:i,bufferRegions:s,buffers:o}=Oo.assemble(t),a=new no(t.length,i,s),c=new io(a,e,r),u=ro.from(c,n);return this._writeMessage(u)._writeBodyBuffers(o)}_writeBodyBuffers(t){let e,r,n;for(let i=-1,s=t.length;++i<s;)(e=t[i])&&(r=e.byteLength)>0&&(this._write(e),(n=(r+7&-8)-r)>0&&this._writePadding(n));return this}_writeDictionaries(t){for(let[e,r]of t.dictionaries){let t=this._dictionaryDeltaOffsets.get(e)||0;if(0===t||(r=r.slice(t)).length>0){const n=\"chunks\"in r?r.chunks:[r];for(const r of n)this._writeDictionaryBatch(r,e,t>0),t+=r.length}}return this}}class No extends Eo{static writeAll(t,e){const r=new No(e);return nt(t)?t.then((t=>r.writeAll(t))):st(t)?ko(r,t):Vo(r,t)}}class Co extends Eo{constructor(){super(),this._autoDestroy=!0}static writeAll(t){const e=new Co;return nt(t)?t.then((t=>e.writeAll(t))):st(t)?ko(e,t):Vo(e,t)}_writeSchema(t){return this._writeMagic()._writePadding(2)}_writeFooter(t){const e=Qi.encode(new Qi(t,be.V4,this._recordBatchBlocks,this._dictionaryBlocks));return super._writeFooter(t)._write(e)._write(Int32Array.of(e.byteLength))._writeMagic()}}function Vo(t,e){let r=e;e instanceof Tc&&(r=e.chunks,t.reset(void 0,e.schema));for(const n of r)t.write(n);return t.finish()}async function ko(t,e){for await(const r of e)t.write(r);return t.finish()}const Ro=new Uint8Array(0),jo=t=>[Ro,Ro,new Uint8Array(t),Ro];function Po(t,e){return function(t,e){const r=[...t.fields],n=[],i={numBatches:e.reduce(((t,e)=>Math.max(t,e.length)),0)};let s,o=0,a=0,c=-1,u=e.length,l=[];for(;i.numBatches-- >0;){for(a=Number.POSITIVE_INFINITY,c=-1;++c<u;)l[c]=s=e[c].shift(),a=Math.min(a,s?s.length:a);isFinite(a)&&(l=zo(r,a,l,e,i),a>0&&(n[o++]=[a,l.slice()]))}return[t=new fi(r,t.metadata),n.map((e=>new Bc(t,...e)))]}(t,e.map((t=>t instanceof Qn?t.chunks.map((t=>t.data)):[t.data])))}function zo(t,e,r,n,i){let s,o,a=0,c=-1,u=n.length;const l=(e+63&-64)>>3;for(;++c<u;)(s=r[c])&&(a=s.length)>=e?a===e?r[c]=s:(r[c]=s.slice(0,e),s=s.slice(e,a-e),i.numBatches=Math.max(i.numBatches,n[c].unshift(s))):((o=t[c]).nullable||(t[c]=o.clone({nullable:!0})),r[c]=s?s._changeLengthAndBackfillNullBitmap(e):wr.new(o.type,0,e,e,jo(l)));return r}class Yo extends re{constructor(t,e){super(),this._children=e,this.numChildren=t.childData.length,this._bindDataAccessors(this.data=t)}get type(){return this.data.type}get typeId(){return this.data.typeId}get length(){return this.data.length}get offset(){return this.data.offset}get stride(){return this.data.stride}get nullCount(){return this.data.nullCount}get byteLength(){return this.data.byteLength}get VectorName(){return\"\".concat(ce[this.typeId],\"Vector\")}get ArrayType(){return this.type.ArrayType}get values(){return this.data.values}get typeIds(){return this.data.typeIds}get nullBitmap(){return this.data.nullBitmap}get valueOffsets(){return this.data.valueOffsets}get[Symbol.toStringTag](){return\"\".concat(this.VectorName,\"<\").concat(this.type[Symbol.toStringTag],\">\")}clone(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._children;return re.new(t,e)}concat(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Qn.concat(this,...e)}slice(t,e){return $n(this,t,e,this._sliceInternal)}isValid(t){if(this.nullCount>0){const e=this.offset+t;return 0!==(this.nullBitmap[e>>3]&1<<e%8)}return!0}getChildAt(t){return t<0||t>=this.numChildren?null:(this._children||(this._children=[]))[t]||(this._children[t]=re.new(this.data.childData[t]))}toJSON(){return[...this]}_sliceInternal(t,e,r){return t.clone(t.data.slice(e,r-e),null)}_bindDataAccessors(t){}}Yo.prototype[Symbol.isConcatSpreadable]=!0;class Wo extends Yo{asUtf8(){return re.new(this.data.clone(new rr))}}class Ho extends Yo{static from(t){return Ac((()=>new nr),t)}}class $o extends Yo{static from(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return 2===e.length?Ac((()=>e[1]===le.DAY?new or:new ar),e[0]):Ac((()=>new ar),e[0])}}class Ko extends $o{}class Go extends $o{}class qo extends Yo{}class Jo extends Yo{constructor(t){super(t),this.indices=re.new(t.clone(this.type.indices))}static from(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];if(3===e.length){const[t,r,n]=e,i=new vr(t.type,r,null,null);return re.new(wr.Dictionary(i,0,n.length,0,null,n,t))}return Ac((()=>e[0].type),e[0])}get dictionary(){return this.data.dictionary}reverseLookup(t){return this.dictionary.indexOf(t)}getKey(t){return this.indices.get(t)}getValue(t){return this.dictionary.get(t)}setKey(t,e){return this.indices.set(t,e)}setValue(t,e){return this.dictionary.set(t,e)}}Jo.prototype.indices=null;class Zo extends Yo{}class Qo extends Yo{}class Xo extends Yo{static from(t){let e=sa(this);if(t instanceof ArrayBuffer||ArrayBuffer.isView(t)){let r=ia(t.constructor)||e;if(null===e&&(e=r),e&&e===r){let r=new e,n=t.byteLength/r.ArrayType.BYTES_PER_ELEMENT;if(!na(e,t.constructor))return re.new(wr.Float(r,0,n,0,null,t))}}if(e)return Ac((()=>new e),t);if(t instanceof DataView||t instanceof ArrayBuffer)throw new TypeError(\"Cannot infer float type from instance of \".concat(t.constructor.name));throw new TypeError(\"Unrecognized FloatVector input\")}}class ta extends Xo{toFloat32Array(){return new Float32Array(this)}toFloat64Array(){return new Float64Array(this)}}class ea extends Xo{}class ra extends Xo{}const na=(t,e)=>t===Qe&&e!==Uint16Array,ia=t=>{switch(t){case Uint16Array:return Qe;case Float32Array:return Xe;case Float64Array:return tr;default:return null}},sa=t=>{switch(t){case ta:return Qe;case ea:return Xe;case ra:return tr;default:return null}};class oa extends Yo{}class aa extends oa{}class ca extends oa{}class ua extends Yo{static from(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];let[n,i=!1]=e,s=ma(this,i);if(n instanceof ArrayBuffer||ArrayBuffer.isView(n)){let t=va(n.constructor,i)||s;if(null===s&&(s=t),s&&s===t){let t=new s,e=n.byteLength/t.ArrayType.BYTES_PER_ELEMENT;return _a(s,n.constructor)&&(e*=.5),re.new(wr.Int(t,0,e,0,null,n))}}if(s)return Ac((()=>new s),n);if(n instanceof DataView||n instanceof ArrayBuffer)throw new TypeError(\"Cannot infer integer type from instance of \".concat(n.constructor.name));throw new TypeError(\"Unrecognized IntVector input\")}}class la extends ua{}class ha extends ua{}class da extends ua{}class fa extends ua{toBigInt64Array(){return mt(this.values)}get values64(){return this._values64||(this._values64=this.toBigInt64Array())}}class pa extends ua{}class ya extends ua{}class ba extends ua{}class ga extends ua{toBigUint64Array(){return At(this.values)}get values64(){return this._values64||(this._values64=this.toBigUint64Array())}}const _a=(t,e)=>(t===$e||t===Je)&&(e===Int32Array||e===Uint32Array),va=(t,e)=>{switch(t){case Int8Array:return Ye;case Int16Array:return We;case Int32Array:return e?$e:He;case q:return $e;case Uint8Array:return Ke;case Uint16Array:return Ge;case Uint32Array:return e?Je:qe;case Z:return Je;default:return null}},ma=(t,e)=>{switch(t){case la:return Ye;case ha:return We;case da:return e?$e:He;case fa:return $e;case pa:return Ke;case ya:return Ge;case ba:return e?Je:qe;case ga:return Je;default:return null}};class wa extends Yo{}class Ia extends Yo{asList(){const t=this.type.children[0];return re.new(this.data.clone(new hr(t)))}bind(t){const e=this.getChildAt(0),{[t]:r,[t+1]:n}=this.valueOffsets;return new jn(e.slice(r,n))}}class Sa extends Yo{}const Aa=Symbol.for(\"rowIndex\");class Ta extends Yo{bind(t){const e=this._row||(this._row=new Pn(this)),r=Object.create(e);return r[Aa]=t,r}}class Ba extends Yo{}class Da extends Ba{}class Oa extends Ba{}class xa extends Ba{}class La extends Ba{}class Fa extends Yo{}class Ma extends Fa{}class Ua extends Fa{}class Ea extends Fa{}class Na extends Fa{}class Ca extends Yo{get typeIdToChildIndex(){return this.data.type.typeIdToChildIndex}}class Va extends Ca{get valueOffsets(){return this.data.valueOffsets}}class ka extends Ca{}class Ra extends Yo{static from(t){return Ac((()=>new rr),t)}asBinary(){return re.new(this.data.clone(new er))}}function ja(t){return function(){return t(this)}}function Pa(t){return function(e,r){return t(this,e,r)}}class za extends Be{}const Ya=(t,e)=>4294967296*t[e+1]+(t[e]>>>0),Wa=t=>new Date(t),Ha=(t,e,r)=>{const{[r]:n,[r+1]:i}=e;return null!=n&&null!=i?t.subarray(n,i):null},$a=(t,e)=>{let{values:r}=t;return((t,e)=>Wa(((t,e)=>864e5*t[e])(t,e)))(r,e)},Ka=(t,e)=>{let{values:r}=t;return((t,e)=>Wa(Ya(t,e)))(r,2*e)},Ga=(t,e)=>{let{stride:r,values:n}=t;return n[r*e]},qa=(t,e)=>{let{stride:r,values:n}=t;return Wr(n[r*e])},Ja=(t,e)=>{let{stride:r,values:n,type:i}=t;return on.new(n.subarray(r*e,r*(e+1)),i.isSigned)},Za=(t,e)=>{let{values:r}=t;return 1e3*Ya(r,2*e)},Qa=(t,e)=>{let{values:r}=t;return Ya(r,2*e)},Xa=(t,e)=>{let{values:r}=t;return((t,e)=>t[e+1]/1e3*4294967296+(t[e]>>>0)/1e3)(r,2*e)},tc=(t,e)=>{let{values:r}=t;return((t,e)=>t[e+1]/1e6*4294967296+(t[e]>>>0)/1e6)(r,2*e)},ec=(t,e)=>{let{values:r,stride:n}=t;return r[n*e]},rc=(t,e)=>{let{values:r,stride:n}=t;return r[n*e]},nc=(t,e)=>{let{values:r}=t;return on.signed(r.subarray(2*e,2*(e+1)))},ic=(t,e)=>{let{values:r}=t;return on.signed(r.subarray(2*e,2*(e+1)))},sc=(t,e)=>{const r=t.typeIdToChildIndex[t.typeIds[e]],n=t.getChildAt(r);return n?n.get(t.valueOffsets[e]):null},oc=(t,e)=>{const r=t.typeIdToChildIndex[t.typeIds[e]],n=t.getChildAt(r);return n?n.get(e):null},ac=(t,e)=>{let{values:r}=t;return r.subarray(2*e,2*(e+1))},cc=(t,e)=>{let{values:r}=t;const n=r[e],i=new Int32Array(2);return i[0]=n/12|0,i[1]=n%12|0,i};za.prototype.visitNull=(t,e)=>null,za.prototype.visitBool=(t,e)=>{let{offset:r,values:n}=t;const i=r+e;return 0!==(n[i>>3]&1<<i%8)},za.prototype.visitInt=(t,e)=>t.type.bitWidth<64?Ga(t,e):Ja(t,e),za.prototype.visitInt8=Ga,za.prototype.visitInt16=Ga,za.prototype.visitInt32=Ga,za.prototype.visitInt64=Ja,za.prototype.visitUint8=Ga,za.prototype.visitUint16=Ga,za.prototype.visitUint32=Ga,za.prototype.visitUint64=Ja,za.prototype.visitFloat=(t,e)=>t.type.precision!==de.HALF?Ga(t,e):qa(t,e),za.prototype.visitFloat16=qa,za.prototype.visitFloat32=Ga,za.prototype.visitFloat64=Ga,za.prototype.visitUtf8=(t,e)=>{let{values:r,valueOffsets:n}=t;const i=Ha(r,n,e);return null!==i?P(i):null},za.prototype.visitBinary=(t,e)=>{let{values:r,valueOffsets:n}=t;return Ha(r,n,e)},za.prototype.visitFixedSizeBinary=(t,e)=>{let{stride:r,values:n}=t;return n.subarray(r*e,r*(e+1))},za.prototype.visitDate=(t,e)=>t.type.unit===le.DAY?$a(t,e):Ka(t,e),za.prototype.visitDateDay=$a,za.prototype.visitDateMillisecond=Ka,za.prototype.visitTimestamp=(t,e)=>{switch(t.type.unit){case he.SECOND:return Za(t,e);case he.MILLISECOND:return Qa(t,e);case he.MICROSECOND:return Xa(t,e);case he.NANOSECOND:return tc(t,e)}},za.prototype.visitTimestampSecond=Za,za.prototype.visitTimestampMillisecond=Qa,za.prototype.visitTimestampMicrosecond=Xa,za.prototype.visitTimestampNanosecond=tc,za.prototype.visitTime=(t,e)=>{switch(t.type.unit){case he.SECOND:return ec(t,e);case he.MILLISECOND:return rc(t,e);case he.MICROSECOND:return nc(t,e);case he.NANOSECOND:return ic(t,e)}},za.prototype.visitTimeSecond=ec,za.prototype.visitTimeMillisecond=rc,za.prototype.visitTimeMicrosecond=nc,za.prototype.visitTimeNanosecond=ic,za.prototype.visitDecimal=(t,e)=>{let{values:r}=t;return on.decimal(r.subarray(4*e,4*(e+1)))},za.prototype.visitList=(t,e)=>{const r=t.getChildAt(0),{valueOffsets:n,stride:i}=t;return r.slice(n[e*i],n[e*i+1])},za.prototype.visitStruct=(t,e)=>t.bind(e),za.prototype.visitUnion=(t,e)=>t.type.mode===fe.Dense?sc(t,e):oc(t,e),za.prototype.visitDenseUnion=sc,za.prototype.visitSparseUnion=oc,za.prototype.visitDictionary=(t,e)=>t.getValue(t.getKey(e)),za.prototype.visitInterval=(t,e)=>t.type.unit===pe.DAY_TIME?ac(t,e):cc(t,e),za.prototype.visitIntervalDayTime=ac,za.prototype.visitIntervalYearMonth=cc,za.prototype.visitFixedSizeList=(t,e)=>{const r=t.getChildAt(0),{stride:n}=t;return r.slice(e*n,(e+1)*n)},za.prototype.visitMap=(t,e)=>t.bind(e);const uc=new za;class lc extends Be{}function hc(t,e,r){if(void 0===e)return-1;if(null===e)return function(t,e){const{nullBitmap:r}=t;if(!r||t.nullCount<=0)return-1;let n=0;for(const i of Ie(r,t.data.offset+(e||0),t.length,r,ge)){if(!i)return n;++n}return-1}(t,r);const n=qn(e);for(let i=(r||0)-1,s=t.length;++i<s;)if(n(t.get(i)))return i;return-1}function dc(t,e,r){const n=qn(e);for(let i=(r||0)-1,s=t.length;++i<s;)if(n(t.get(i)))return i;return-1}lc.prototype.visitNull=function(t,e){return null===e&&t.length>0?0:-1},lc.prototype.visitBool=hc,lc.prototype.visitInt=hc,lc.prototype.visitInt8=hc,lc.prototype.visitInt16=hc,lc.prototype.visitInt32=hc,lc.prototype.visitInt64=hc,lc.prototype.visitUint8=hc,lc.prototype.visitUint16=hc,lc.prototype.visitUint32=hc,lc.prototype.visitUint64=hc,lc.prototype.visitFloat=hc,lc.prototype.visitFloat16=hc,lc.prototype.visitFloat32=hc,lc.prototype.visitFloat64=hc,lc.prototype.visitUtf8=hc,lc.prototype.visitBinary=hc,lc.prototype.visitFixedSizeBinary=hc,lc.prototype.visitDate=hc,lc.prototype.visitDateDay=hc,lc.prototype.visitDateMillisecond=hc,lc.prototype.visitTimestamp=hc,lc.prototype.visitTimestampSecond=hc,lc.prototype.visitTimestampMillisecond=hc,lc.prototype.visitTimestampMicrosecond=hc,lc.prototype.visitTimestampNanosecond=hc,lc.prototype.visitTime=hc,lc.prototype.visitTimeSecond=hc,lc.prototype.visitTimeMillisecond=hc,lc.prototype.visitTimeMicrosecond=hc,lc.prototype.visitTimeNanosecond=hc,lc.prototype.visitDecimal=hc,lc.prototype.visitList=hc,lc.prototype.visitStruct=hc,lc.prototype.visitUnion=hc,lc.prototype.visitDenseUnion=dc,lc.prototype.visitSparseUnion=dc,lc.prototype.visitDictionary=hc,lc.prototype.visitInterval=hc,lc.prototype.visitIntervalDayTime=hc,lc.prototype.visitIntervalYearMonth=hc,lc.prototype.visitFixedSizeList=hc,lc.prototype.visitMap=hc;const fc=new lc;class pc extends Be{}function yc(t){if(t.nullCount>0)return function(t){const e=uc.getVisitFn(t);return Ie(t.nullBitmap,t.offset,t.length,t,((t,r,n,i)=>0!==(n&1<<i)?e(t,r):null))}(t);const{type:e,typeId:r,length:n}=t;return 1===t.stride&&(r===ce.Timestamp||r===ce.Int&&64!==e.bitWidth||r===ce.Time&&64!==e.bitWidth||r===ce.Float&&e.precision>0)?t.values.subarray(0,n)[Symbol.iterator]():function*(e){for(let r=-1;++r<n;)yield e(t,r)}(uc.getVisitFn(t))}pc.prototype.visitNull=yc,pc.prototype.visitBool=yc,pc.prototype.visitInt=yc,pc.prototype.visitInt8=yc,pc.prototype.visitInt16=yc,pc.prototype.visitInt32=yc,pc.prototype.visitInt64=yc,pc.prototype.visitUint8=yc,pc.prototype.visitUint16=yc,pc.prototype.visitUint32=yc,pc.prototype.visitUint64=yc,pc.prototype.visitFloat=yc,pc.prototype.visitFloat16=yc,pc.prototype.visitFloat32=yc,pc.prototype.visitFloat64=yc,pc.prototype.visitUtf8=yc,pc.prototype.visitBinary=yc,pc.prototype.visitFixedSizeBinary=yc,pc.prototype.visitDate=yc,pc.prototype.visitDateDay=yc,pc.prototype.visitDateMillisecond=yc,pc.prototype.visitTimestamp=yc,pc.prototype.visitTimestampSecond=yc,pc.prototype.visitTimestampMillisecond=yc,pc.prototype.visitTimestampMicrosecond=yc,pc.prototype.visitTimestampNanosecond=yc,pc.prototype.visitTime=yc,pc.prototype.visitTimeSecond=yc,pc.prototype.visitTimeMillisecond=yc,pc.prototype.visitTimeMicrosecond=yc,pc.prototype.visitTimeNanosecond=yc,pc.prototype.visitDecimal=yc,pc.prototype.visitList=yc,pc.prototype.visitStruct=yc,pc.prototype.visitUnion=yc,pc.prototype.visitDenseUnion=yc,pc.prototype.visitSparseUnion=yc,pc.prototype.visitDictionary=yc,pc.prototype.visitInterval=yc,pc.prototype.visitIntervalDayTime=yc,pc.prototype.visitIntervalYearMonth=yc,pc.prototype.visitFixedSizeList=yc,pc.prototype.visitMap=yc;const bc=new pc;class gc extends Be{}function _c(t){const{type:e,length:r,stride:n}=t;switch(e.typeId){case ce.Int:case ce.Float:case ce.Decimal:case ce.Time:case ce.Timestamp:return t.values.subarray(0,r*n)}return[...bc.visit(t)]}gc.prototype.visitNull=_c,gc.prototype.visitBool=_c,gc.prototype.visitInt=_c,gc.prototype.visitInt8=_c,gc.prototype.visitInt16=_c,gc.prototype.visitInt32=_c,gc.prototype.visitInt64=_c,gc.prototype.visitUint8=_c,gc.prototype.visitUint16=_c,gc.prototype.visitUint32=_c,gc.prototype.visitUint64=_c,gc.prototype.visitFloat=_c,gc.prototype.visitFloat16=_c,gc.prototype.visitFloat32=_c,gc.prototype.visitFloat64=_c,gc.prototype.visitUtf8=_c,gc.prototype.visitBinary=_c,gc.prototype.visitFixedSizeBinary=_c,gc.prototype.visitDate=_c,gc.prototype.visitDateDay=_c,gc.prototype.visitDateMillisecond=_c,gc.prototype.visitTimestamp=_c,gc.prototype.visitTimestampSecond=_c,gc.prototype.visitTimestampMillisecond=_c,gc.prototype.visitTimestampMicrosecond=_c,gc.prototype.visitTimestampNanosecond=_c,gc.prototype.visitTime=_c,gc.prototype.visitTimeSecond=_c,gc.prototype.visitTimeMillisecond=_c,gc.prototype.visitTimeMicrosecond=_c,gc.prototype.visitTimeNanosecond=_c,gc.prototype.visitDecimal=_c,gc.prototype.visitList=_c,gc.prototype.visitStruct=_c,gc.prototype.visitUnion=_c,gc.prototype.visitDenseUnion=_c,gc.prototype.visitSparseUnion=_c,gc.prototype.visitDictionary=_c,gc.prototype.visitInterval=_c,gc.prototype.visitIntervalDayTime=_c,gc.prototype.visitIntervalYearMonth=_c,gc.prototype.visitFixedSizeList=_c,gc.prototype.visitMap=_c;const vc=new gc,mc=(t,e)=>t+e,wc=t=>\"Cannot compute the byte width of variable-width column \".concat(t);const Ic=new class extends Be{visitNull(t){return 0}visitInt(t){return t.bitWidth/8}visitFloat(t){return t.ArrayType.BYTES_PER_ELEMENT}visitBinary(t){throw new Error(wc(t))}visitUtf8(t){throw new Error(wc(t))}visitBool(t){return 1/8}visitDecimal(t){return 16}visitDate(t){return 4*(t.unit+1)}visitTime(t){return t.bitWidth/8}visitTimestamp(t){return t.unit===he.SECOND?4:8}visitInterval(t){return 4*(t.unit+1)}visitList(t){throw new Error(wc(t))}visitStruct(t){return this.visitFields(t.children).reduce(mc,0)}visitUnion(t){return this.visitFields(t.children).reduce(mc,0)}visitFixedSizeBinary(t){return t.byteWidth}visitFixedSizeList(t){return t.listSize*this.visitFields(t.children).reduce(mc,0)}visitMap(t){return this.visitFields(t.children).reduce(mc,0)}visitDictionary(t){return this.visit(t.indices)}visitFields(t){return(t||[]).map((t=>this.visit(t.type)))}visitSchema(t){return this.visitFields(t.fields).reduce(mc,0)}};const Sc=new class extends Be{visitNull(){return Sa}visitBool(){return Ho}visitInt(){return ua}visitInt8(){return la}visitInt16(){return ha}visitInt32(){return da}visitInt64(){return fa}visitUint8(){return pa}visitUint16(){return ya}visitUint32(){return ba}visitUint64(){return ga}visitFloat(){return Xo}visitFloat16(){return ta}visitFloat32(){return ea}visitFloat64(){return ra}visitUtf8(){return Ra}visitBinary(){return Wo}visitFixedSizeBinary(){return Zo}visitDate(){return $o}visitDateDay(){return Ko}visitDateMillisecond(){return Go}visitTimestamp(){return Ba}visitTimestampSecond(){return Da}visitTimestampMillisecond(){return Oa}visitTimestampMicrosecond(){return xa}visitTimestampNanosecond(){return La}visitTime(){return Fa}visitTimeSecond(){return Ma}visitTimeMillisecond(){return Ua}visitTimeMicrosecond(){return Ea}visitTimeNanosecond(){return Na}visitDecimal(){return qo}visitList(){return wa}visitStruct(){return Ta}visitUnion(){return Ca}visitDenseUnion(){return Va}visitSparseUnion(){return ka}visitDictionary(){return Jo}visitInterval(){return oa}visitIntervalDayTime(){return aa}visitIntervalYearMonth(){return ca}visitFixedSizeList(){return Qo}visitMap(){return Ia}};function Ac(t,e){if(it(e))return re.from({nullValues:[null,void 0],type:t(),values:e});if(st(e))return re.from({nullValues:[null,void 0],type:t(),values:e});const{values:r=[],type:n=t(),nullValues:i=[null,void 0]}={...e};return it(r),re.from({nullValues:i,...e,type:n})}re.new=function(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];return new(Sc.getVisitFn(t)())(t,...r)},re.from=function(t){const{values:e=[],...r}={nullValues:[null,void 0],...t};if(it(e)){const t=[...Fr.throughIterable(r)(e)];return 1===t.length?t[0]:Qn.concat(t)}return(async t=>{const n=Fr.throughAsyncIterable(r);for await(const r of n(e))t.push(r);return 1===t.length?t[0]:Qn.concat(t)})([])},Yo.prototype.get=function(t){return uc.visit(this,t)},Yo.prototype.set=function(t,e){return Wi.visit(this,t,e)},Yo.prototype.indexOf=function(t,e){return fc.visit(this,t,e)},Yo.prototype.toArray=function(){return vc.visit(this)},Yo.prototype.getByteWidth=function(){return Ic.visit(this.type)},Yo.prototype[Symbol.iterator]=function(){return bc.visit(this)},Yo.prototype._bindDataAccessors=function(){const t=this.nullBitmap;t&&t.byteLength>0&&(this.get=(e=this.get,function(t){return this.isValid(t)?e.call(this,t):null}),this.set=function(t){return function(e,r){ve(this.nullBitmap,this.offset+e,!(null===r||void 0===r))&&t.call(this,e,r)}}(this.set));var e},Object.keys(ce).map((t=>ce[t])).filter((t=>\"number\"===typeof t)).filter((t=>t!==ce.NONE)).forEach((t=>{const e=Sc.visit(t);var r;e.prototype.get=(r=uc.getVisitFn(t),function(t){return r(this,t)}),e.prototype.set=Pa(Wi.getVisitFn(t)),e.prototype.indexOf=Pa(fc.getVisitFn(t)),e.prototype.toArray=ja(vc.getVisitFn(t)),e.prototype.getByteWidth=function(t){return function(){return t(this.type)}}(Ic.getVisitFn(t)),e.prototype[Symbol.iterator]=ja(bc.getVisitFn(t))}));class Tc extends Qn{constructor(){let t=null;for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];r[0]instanceof fi&&(t=r.shift());let i=ii(Bc,r);if(!t&&!(t=i[0]&&i[0].schema))throw new TypeError(\"Table must be initialized with a Schema or at least one RecordBatch\");i[0]||(i[0]=new Dc(t)),super(new dr(t.fields),i),this._schema=t,this._chunks=i}static empty(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new fi([]);return new Tc(t,[])}static from(t){if(!t)return Tc.empty();if(\"object\"===typeof t){let e=it(t.values)?function(t){const{type:e}=t;if(e instanceof dr)return Tc.fromStruct(Ta.from(t));return null}(t):st(t.values)?function(t){const{type:e}=t;if(e instanceof dr)return Ta.from(t).then((t=>Tc.fromStruct(t)));return null}(t):null;if(null!==e)return e}let e=xc.from(t);return nt(e)?(async()=>await Tc.from(await e))():e.isSync()&&(e=e.open())?e.schema?new Tc(e.schema,[...e]):Tc.empty():(async t=>{const e=await t,r=e.schema,n=[];if(r){for await(let t of e)n.push(t);return new Tc(r,n)}return Tc.empty()})(e.open())}static async fromAsync(t){return await Tc.from(t)}static fromStruct(t){return Tc.new(t.data.childData,t.type.children)}static new(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return new Tc(...(n=(t=>{const[e,r]=di(t,[[],[]]);return r.map(((t,r)=>t instanceof ei?ei.new(t.field.clone(e[r]),t):t instanceof re?ei.new(e[r],t):ei.new(e[r],[])))})(e),Po(new fi(n.map((t=>{let{field:e}=t;return e}))),n)));var n}get schema(){return this._schema}get length(){return this._length}get chunks(){return this._chunks}get numCols(){return this._numChildren}clone(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._chunks;return new Tc(this._schema,t)}getColumn(t){return this.getColumnAt(this.getColumnIndex(t))}getColumnAt(t){return this.getChildAt(t)}getColumnIndex(t){return this._schema.fields.findIndex((e=>e.name===t))}getChildAt(t){if(t<0||t>=this.numChildren)return null;let e,r;const n=this._schema.fields,i=this._children||(this._children=[]);if(r=i[t])return r;if(e=n[t]){const r=this._chunks.map((e=>e.getChildAt(t))).filter((t=>null!=t));if(r.length>0)return i[t]=new ei(e,r)}return null}serialize(){return(!(arguments.length>1&&void 0!==arguments[1])||arguments[1]?No:Co).writeAll(this).toUint8Array(!0)}count(){return this._length}select(){const t=this._schema.fields.reduce(((t,e,r)=>t.set(e.name,r)),new Map);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return this.selectAt(...r.map((e=>t.get(e))).filter((t=>t>-1)))}selectAt(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const n=this._schema.selectAt(...e);return new Tc(n,this._chunks.map((t=>{let{length:r,data:{childData:i}}=t;return new Bc(n,r,e.map((t=>i[t])).filter(Boolean))})))}assign(t){var e=this;const r=this._schema.fields,[n,i]=t.schema.fields.reduce(((t,e,n)=>{const[i,s]=t,o=r.findIndex((t=>t.name===e.name));return~o?s[o]=n:i.push(n),t}),[[],[]]),s=this._schema.assign(t.schema),o=[...r.map((function(r,n,s){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:i[n];return void 0===o?e.getColumnAt(n):t.getColumnAt(o)})),...n.map((e=>t.getColumnAt(e)))].filter(Boolean);return new Tc(...Po(s,o))}}class Bc extends Ta{constructor(){let t;for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];let i,s=r[0];if(r[1]instanceof wr)[,t,i]=r;else{const e=s.fields,[,n,i]=r;t=wr.Struct(new dr(e),0,n,0,null,i)}super(t,i),this._schema=s}static from(t){return it(t.values),Tc.from(t)}static new(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const[n,i]=si(e),s=i.filter((t=>t instanceof re));return new Bc(...function(t,e){let r,n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.reduce(((t,e)=>Math.max(t,e.length)),0),s=-1,o=e.length;const a=[...t.fields],c=[],u=(i+63&-64)>>3;for(;++s<o;)(r=e[s])&&r.length===i?c[s]=r:((n=a[s]).nullable||(a[s]=a[s].clone({nullable:!0})),c[s]=r?r._changeLengthAndBackfillNullBitmap(i):wr.new(n.type,0,i,i,jo(u)));return[new fi(a),i,c]}(new fi(n),s.map((t=>t.data))))}clone(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._children;return new Bc(this._schema,t,e)}concat(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const n=this._schema,i=Qn.flatten(this,...e);return new Tc(n,i.map((t=>{let{data:e}=t;return new Bc(n,e)})))}get schema(){return this._schema}get numCols(){return this._schema.fields.length}get dictionaries(){return this._dictionaries||(this._dictionaries=Oc.collect(this))}select(){const t=this._schema.fields.reduce(((t,e,r)=>t.set(e.name,r)),new Map);for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return this.selectAt(...r.map((e=>t.get(e))).filter((t=>t>-1)))}selectAt(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const n=this._schema.selectAt(...e),i=e.map((t=>this.data.childData[t])).filter(Boolean);return new Bc(n,this.length,i)}}class Dc extends Bc{constructor(t){super(t,0,t.fields.map((t=>wr.new(t.type,0,0,0))))}}class Oc extends Be{constructor(){super(...arguments),this.dictionaries=new Map}static collect(t){return(new Oc).visit(t.data,new dr(t.schema.fields)).dictionaries}visit(t,e){return Re.isDictionary(e)?this.visitDictionary(t,e):(t.childData.forEach(((t,r)=>this.visit(t,e.children[r].type))),this)}visitDictionary(t,e){const r=t.dictionary;return r&&r.length>0&&this.dictionaries.set(e.id,r),this}}class xc extends H{constructor(t){super(),this._impl=t}get closed(){return this._impl.closed}get schema(){return this._impl.schema}get autoDestroy(){return this._impl.autoDestroy}get dictionaries(){return this._impl.dictionaries}get numDictionaries(){return this._impl.numDictionaries}get numRecordBatches(){return this._impl.numRecordBatches}get footer(){return this._impl.isFile()?this._impl.footer:null}isSync(){return this._impl.isSync()}isAsync(){return this._impl.isAsync()}isFile(){return this._impl.isFile()}isStream(){return this._impl.isStream()}next(){return this._impl.next()}throw(t){return this._impl.throw(t)}return(t){return this._impl.return(t)}cancel(){return this._impl.cancel()}reset(t){return this._impl.reset(t),this._DOMStream=void 0,this._nodeStream=void 0,this}open(t){const e=this._impl.open(t);return nt(e)?e.then((()=>this)):this}readRecordBatch(t){return this._impl.isFile()?this._impl.readRecordBatch(t):null}[Symbol.iterator](){return this._impl[Symbol.iterator]()}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}toDOMStream(){return Zt.toDOMStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this})}toNodeStream(){return Zt.toNodeStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this},{objectMode:!0})}static throughNode(t){throw new Error('\"throughNode\" not available in this environment')}static throughDOM(t,e){throw new Error('\"throughDOM\" not available in this environment')}static from(t){return t instanceof xc?t:ot(t)?function(t){return new Lc(new Rc(t))}(t):ct(t)?async function(t){const{size:e}=await t.stat(),r=new as(t,e);if(e>=Do&&Ao(await r.readAt(0,To+7&-8)))return new Uc(new kc(r));return new Fc(new Cc(r))}(t):nt(t)?(async()=>await xc.from(await t))():ut(t)||lt(t)||ht(t)||st(t)?async function(t){const e=await t.peek(To+7&-8);return e&&e.byteLength>=4?Ao(e)?new Mc(new Vc(await t.read())):new Fc(new Cc(t)):new Fc(new Cc(async function*(){}()))}(new ns(t)):function(t){const e=t.peek(To+7&-8);return e&&e.byteLength>=4?Ao(e)?new Mc(new Vc(t.read())):new Lc(new Nc(t)):new Lc(new Nc(function*(){}()))}(new rs(t))}static readAll(t){return t instanceof xc?t.isSync()?Pc(t):zc(t):ot(t)||ArrayBuffer.isView(t)||it(t)||at(t)?Pc(t):zc(t)}}class Lc extends xc{constructor(t){super(t),this._impl=t}[Symbol.iterator](){return this._impl[Symbol.iterator]()}async*[Symbol.asyncIterator](){yield*this[Symbol.iterator]()}}class Fc extends xc{constructor(t){super(t),this._impl=t}[Symbol.iterator](){throw new Error(\"AsyncRecordBatchStreamReader is not Iterable\")}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}}class Mc extends Lc{constructor(t){super(t),this._impl=t}}class Uc extends Fc{constructor(t){super(t),this._impl=t}}class Ec{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map;this.closed=!1,this.autoDestroy=!0,this._dictionaryIndex=0,this._recordBatchIndex=0,this.dictionaries=t}get numDictionaries(){return this._dictionaryIndex}get numRecordBatches(){return this._recordBatchIndex}isSync(){return!1}isAsync(){return!1}isFile(){return!1}isStream(){return!1}reset(t){return this._dictionaryIndex=0,this._recordBatchIndex=0,this.schema=t,this.dictionaries=new Map,this}_loadRecordBatch(t,e){return new Bc(this.schema,t.length,this._loadVectors(t,e,this.schema.fields))}_loadDictionaryBatch(t,e){const{id:r,isDelta:n,data:i}=t,{dictionaries:s,schema:o}=this,a=s.get(r);if(n||!a){const t=o.dictionaries.get(r);return a&&n?a.concat(re.new(this._loadVectors(i,e,[t])[0])):re.new(this._loadVectors(i,e,[t])[0])}return a}_loadVectors(t,e,r){return new ps(e,t.nodes,t.buffers,this.dictionaries).visitMany(r)}}class Nc extends Ec{constructor(t,e){super(e),this._reader=ot(t)?new mo(this._handle=t):new _o(this._handle=t)}isSync(){return!0}isStream(){return!0}[Symbol.iterator](){return this}cancel(){!this.closed&&(this.closed=!0)&&(this.reset()._reader.return(),this._reader=null,this.dictionaries=null)}open(t){return this.closed||(this.autoDestroy=jc(this,t),this.schema||(this.schema=this._reader.readSchema())||this.cancel()),this}throw(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.throw(t):Y}return(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.return(t):Y}next(){if(this.closed)return Y;let t,{_reader:e}=this;for(;t=this._readNextMessageAndValidate();)if(t.isSchema())this.reset(t.header());else{if(t.isRecordBatch()){this._recordBatchIndex++;const r=t.header(),n=e.readMessageBody(t.bodyLength);return{done:!1,value:this._loadRecordBatch(r,n)}}if(t.isDictionaryBatch()){this._dictionaryIndex++;const r=t.header(),n=e.readMessageBody(t.bodyLength),i=this._loadDictionaryBatch(r,n);this.dictionaries.set(r.id,i)}}return this.schema&&0===this._recordBatchIndex?(this._recordBatchIndex++,{done:!1,value:new Dc(this.schema)}):this.return()}_readNextMessageAndValidate(t){return this._reader.readMessage(t)}}class Cc extends Ec{constructor(t,e){super(e),this._reader=new vo(this._handle=t)}isAsync(){return!0}isStream(){return!0}[Symbol.asyncIterator](){return this}async cancel(){!this.closed&&(this.closed=!0)&&(await this.reset()._reader.return(),this._reader=null,this.dictionaries=null)}async open(t){return this.closed||(this.autoDestroy=jc(this,t),this.schema||(this.schema=await this._reader.readSchema())||await this.cancel()),this}async throw(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?await this.reset()._reader.throw(t):Y}async return(t){return!this.closed&&this.autoDestroy&&(this.closed=!0)?await this.reset()._reader.return(t):Y}async next(){if(this.closed)return Y;let t,{_reader:e}=this;for(;t=await this._readNextMessageAndValidate();)if(t.isSchema())await this.reset(t.header());else{if(t.isRecordBatch()){this._recordBatchIndex++;const r=t.header(),n=await e.readMessageBody(t.bodyLength);return{done:!1,value:this._loadRecordBatch(r,n)}}if(t.isDictionaryBatch()){this._dictionaryIndex++;const r=t.header(),n=await e.readMessageBody(t.bodyLength),i=this._loadDictionaryBatch(r,n);this.dictionaries.set(r.id,i)}}return this.schema&&0===this._recordBatchIndex?(this._recordBatchIndex++,{done:!1,value:new Dc(this.schema)}):await this.return()}async _readNextMessageAndValidate(t){return await this._reader.readMessage(t)}}class Vc extends Nc{constructor(t,e){super(t instanceof os?t:new os(t),e)}get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}isSync(){return!0}isFile(){return!0}open(t){if(!this.closed&&!this._footer){this.schema=(this._footer=this._readFooter()).schema;for(const t of this._footer.dictionaryBatches())t&&this._readDictionaryBatch(this._dictionaryIndex++)}return super.open(t)}readRecordBatch(t){if(this.closed)return null;this._footer||this.open();const e=this._footer&&this._footer.getRecordBatch(t);if(e&&this._handle.seek(e.offset)){const t=this._reader.readMessage(ye.RecordBatch);if(t&&t.isRecordBatch()){const e=t.header(),r=this._reader.readMessageBody(t.bodyLength);return this._loadRecordBatch(e,r)}}return null}_readDictionaryBatch(t){const e=this._footer&&this._footer.getDictionaryBatch(t);if(e&&this._handle.seek(e.offset)){const t=this._reader.readMessage(ye.DictionaryBatch);if(t&&t.isDictionaryBatch()){const e=t.header(),r=this._reader.readMessageBody(t.bodyLength),n=this._loadDictionaryBatch(e,r);this.dictionaries.set(e.id,n)}}}_readFooter(){const{_handle:t}=this,e=t.size-Bo,r=t.readInt32(e),n=t.readAt(e-r,r);return Qi.decode(n)}_readNextMessageAndValidate(t){if(this._footer||this.open(),this._footer&&this._recordBatchIndex<this.numRecordBatches){const e=this._footer&&this._footer.getRecordBatch(this._recordBatchIndex);if(e&&this._handle.seek(e.offset))return this._reader.readMessage(t)}return null}}class kc extends Cc{constructor(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];const i=\"number\"!==typeof r[0]?r.shift():void 0,s=r[0]instanceof Map?r.shift():void 0;super(t instanceof as?t:new as(t,i),s)}get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}isFile(){return!0}isAsync(){return!0}async open(t){if(!this.closed&&!this._footer){this.schema=(this._footer=await this._readFooter()).schema;for(const t of this._footer.dictionaryBatches())t&&await this._readDictionaryBatch(this._dictionaryIndex++)}return await super.open(t)}async readRecordBatch(t){if(this.closed)return null;this._footer||await this.open();const e=this._footer&&this._footer.getRecordBatch(t);if(e&&await this._handle.seek(e.offset)){const t=await this._reader.readMessage(ye.RecordBatch);if(t&&t.isRecordBatch()){const e=t.header(),r=await this._reader.readMessageBody(t.bodyLength);return this._loadRecordBatch(e,r)}}return null}async _readDictionaryBatch(t){const e=this._footer&&this._footer.getDictionaryBatch(t);if(e&&await this._handle.seek(e.offset)){const t=await this._reader.readMessage(ye.DictionaryBatch);if(t&&t.isDictionaryBatch()){const e=t.header(),r=await this._reader.readMessageBody(t.bodyLength),n=this._loadDictionaryBatch(e,r);this.dictionaries.set(e.id,n)}}}async _readFooter(){const{_handle:t}=this;t._pending&&await t._pending;const e=t.size-Bo,r=await t.readInt32(e),n=await t.readAt(e-r,r);return Qi.decode(n)}async _readNextMessageAndValidate(t){if(this._footer||await this.open(),this._footer&&this._recordBatchIndex<this.numRecordBatches){const e=this._footer.getRecordBatch(this._recordBatchIndex);if(e&&await this._handle.seek(e.offset))return await this._reader.readMessage(t)}return null}}class Rc extends Nc{constructor(t,e){super(t,e)}_loadVectors(t,e,r){return new ys(e,t.nodes,t.buffers,this.dictionaries).visitMany(r)}}function jc(t,e){return e&&\"boolean\"===typeof e.autoDestroy?e.autoDestroy:t.autoDestroy}function*Pc(t){const e=xc.from(t);try{if(!e.open({autoDestroy:!1}).closed)do{yield e}while(!e.reset().open().closed)}finally{e.cancel()}}async function*zc(t){const e=await xc.from(t);try{if(!(await e.open({autoDestroy:!1})).closed)do{yield e}while(!(await e.reset().open()).closed)}finally{await e.cancel()}}class Yc{constructor(t){this._numChunks=0,this._finished=!1,this._bufferedSize=0;const{readableStrategy:e,writableStrategy:r,queueingStrategy:n=\"count\",...i}=t;this._controller=null,this._builder=Fr.new(i),this._getSize=\"bytes\"!==n?Wc:Hc;const{highWaterMark:s=(\"bytes\"===n?16384:1e3)}={...e},{highWaterMark:o=(\"bytes\"===n?16384:1e3)}={...r};this.readable=new ReadableStream({cancel:()=>{this._builder.clear()},pull:t=>{this._maybeFlush(this._builder,this._controller=t)},start:t=>{this._maybeFlush(this._builder,this._controller=t)}},{highWaterMark:s,size:\"bytes\"!==n?Wc:Hc}),this.writable=new WritableStream({abort:()=>{this._builder.clear()},write:()=>{this._maybeFlush(this._builder,this._controller)},close:()=>{this._maybeFlush(this._builder.finish(),this._controller)}},{highWaterMark:o,size:t=>this._writeValueAndReturnChunkSize(t)})}_writeValueAndReturnChunkSize(t){const e=this._bufferedSize;return this._bufferedSize=this._getSize(this._builder.append(t)),this._bufferedSize-e}_maybeFlush(t,e){null!==e&&(this._bufferedSize>=e.desiredSize&&++this._numChunks&&this._enqueue(e,t.toVector()),t.finished&&((t.length>0||0===this._numChunks)&&++this._numChunks&&this._enqueue(e,t.toVector()),!this._finished&&(this._finished=!0)&&this._enqueue(e,null)))}_enqueue(t,e){this._bufferedSize=0,this._controller=null,null===e?t.close():t.enqueue(e)}}const Wc=t=>t.length,Hc=t=>t.byteLength;class $c{eq(t){return t instanceof $c||(t=new Kc(t)),new tu(this,t)}le(t){return t instanceof $c||(t=new Kc(t)),new eu(this,t)}ge(t){return t instanceof $c||(t=new Kc(t)),new ru(this,t)}lt(t){return new nu(this.ge(t))}gt(t){return new nu(this.le(t))}ne(t){return new nu(this.eq(t))}}class Kc extends $c{constructor(t){super(),this.v=t}}class Gc extends $c{constructor(t){super(),this.name=t}bind(t){if(!this.colidx){this.colidx=-1;const e=t.schema.fields;for(let t=-1;++t<e.length;)if(e[t].name===this.name){this.colidx=t;break}if(this.colidx<0)throw new Error('Failed to bind Col \"'.concat(this.name,'\"'))}const e=this.vector=t.getChildAt(this.colidx);return t=>e.get(t)}}class qc{and(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return new Qc(this,...e)}or(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return new Xc(this,...e)}not(){return new nu(this)}}class Jc extends qc{constructor(t,e){super(),this.left=t,this.right=e}bind(t){return this.left instanceof Kc?this.right instanceof Kc?this._bindLitLit(t,this.left,this.right):this._bindLitCol(t,this.left,this.right):this.right instanceof Kc?this._bindColLit(t,this.left,this.right):this._bindColCol(t,this.left,this.right)}}class Zc extends qc{constructor(){super();for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];this.children=e}}Zc.prototype.children=Object.freeze([]);class Qc extends Zc{constructor(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];e=e.reduce(((t,e)=>t.concat(e instanceof Qc?e.children:e)),[]),super(...e)}bind(t){const e=this.children.map((e=>e.bind(t)));return(t,r)=>e.every((e=>e(t,r)))}}class Xc extends Zc{constructor(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];e=e.reduce(((t,e)=>t.concat(e instanceof Xc?e.children:e)),[]),super(...e)}bind(t){const e=this.children.map((e=>e.bind(t)));return(t,r)=>e.some((e=>e(t,r)))}}class tu extends Jc{_bindLitLit(t,e,r){const n=e.v==r.v;return()=>n}_bindColCol(t,e,r){const n=e.bind(t),i=r.bind(t);return(t,e)=>n(t,e)==i(t,e)}_bindColLit(t,e,r){const n=e.bind(t);if(e.vector instanceof Jo){let t;const n=e.vector;return n.dictionary!==this.lastDictionary?(t=n.reverseLookup(r.v),this.lastDictionary=n.dictionary,this.lastKey=t):t=this.lastKey,-1===t?()=>!1:e=>n.getKey(e)===t}return(t,e)=>n(t,e)==r.v}_bindLitCol(t,e,r){return this._bindColLit(t,r,e)}}class eu extends Jc{_bindLitLit(t,e,r){const n=e.v<=r.v;return()=>n}_bindColCol(t,e,r){const n=e.bind(t),i=r.bind(t);return(t,e)=>n(t,e)<=i(t,e)}_bindColLit(t,e,r){const n=e.bind(t);return(t,e)=>n(t,e)<=r.v}_bindLitCol(t,e,r){const n=r.bind(t);return(t,r)=>e.v<=n(t,r)}}class ru extends Jc{_bindLitLit(t,e,r){const n=e.v>=r.v;return()=>n}_bindColCol(t,e,r){const n=e.bind(t),i=r.bind(t);return(t,e)=>n(t,e)>=i(t,e)}_bindColLit(t,e,r){const n=e.bind(t);return(t,e)=>n(t,e)>=r.v}_bindLitCol(t,e,r){const n=r.bind(t);return(t,r)=>e.v>=n(t,r)}}class nu extends qc{constructor(t){super(),this.child=t}bind(t){const e=this.child.bind(t);return(t,r)=>!e(t,r)}}Tc.prototype.countBy=function(t){return new iu(this.chunks).countBy(t)},Tc.prototype.scan=function(t,e){return new iu(this.chunks).scan(t,e)},Tc.prototype.scanReverse=function(t,e){return new iu(this.chunks).scanReverse(t,e)},Tc.prototype.filter=function(t){return new iu(this.chunks).filter(t)};class iu extends Tc{filter(t){return new ou(this.chunks,t)}scan(t,e){const r=this.chunks,n=r.length;for(let i=-1;++i<n;){const n=r[i];e&&e(n);for(let e=-1,r=n.length;++e<r;)t(e,n)}}scanReverse(t,e){const r=this.chunks;for(let n=r.length;--n>=0;){const i=r[n];e&&e(i);for(let e=i.length;--e>=0;)t(e,i)}}countBy(t){const e=this.chunks,r=e.length,n=\"string\"===typeof t?new Gc(t):t;n.bind(e[r-1]);const i=n.vector;if(!Re.isDictionary(i.type))throw new Error(\"countBy currently only supports dictionary-encoded columns\");const s=Math.ceil(Math.log(i.length)/Math.log(256)),o=new(4==s?Uint32Array:s>=2?Uint16Array:Uint8Array)(i.dictionary.length);for(let a=-1;++a<r;){const t=e[a];n.bind(t);const r=n.vector.indices;for(let e=-1,n=t.length;++e<n;){let t=r.get(e);null!==t&&o[t]++}}return new su(i.dictionary,ua.from(o))}}class su extends Tc{constructor(t,e){const r=new fi([new pi(\"values\",t.type),new pi(\"counts\",e.type)]);super(new Bc(r,e.length,[t,e]))}toJSON(){const t=this.getColumnAt(0),e=this.getColumnAt(1),r={};for(let n=-1;++n<this.length;)r[t.get(n)]=e.get(n);return r}}class ou extends iu{constructor(t,e){super(t),this._predicate=e}scan(t,e){const r=this._chunks,n=r.length;for(let i=-1;++i<n;){const n=r[i],s=this._predicate.bind(n);let o=!1;for(let r=-1,i=n.length;++r<i;)s(r,n)&&(e&&!o&&(e(n),o=!0),t(r,n))}}scanReverse(t,e){const r=this._chunks;for(let n=r.length;--n>=0;){const i=r[n],s=this._predicate.bind(i);let o=!1;for(let r=i.length;--r>=0;)s(r,i)&&(e&&!o&&(e(i),o=!0),t(r,i))}}count(){let t=0;const e=this._chunks,r=e.length;for(let n=-1;++n<r;){const r=e[n],i=this._predicate.bind(r);for(let e=-1,n=r.length;++e<n;)i(e,r)&&++t}return t}*[Symbol.iterator](){const t=this._chunks,e=t.length;for(let r=-1;++r<e;){const e=t[r],n=this._predicate.bind(e);for(let t=-1,r=e.length;++t<r;)n(t,e)&&(yield e.get(t))}}filter(t){return new ou(this._chunks,this._predicate.and(t))}countBy(t){const e=this._chunks,r=e.length,n=\"string\"===typeof t?new Gc(t):t;n.bind(e[r-1]);const i=n.vector;if(!Re.isDictionary(i.type))throw new Error(\"countBy currently only supports dictionary-encoded columns\");const s=Math.ceil(Math.log(i.length)/Math.log(256)),o=new(4==s?Uint32Array:s>=2?Uint16Array:Uint8Array)(i.dictionary.length);for(let a=-1;++a<r;){const t=e[a],r=this._predicate.bind(t);n.bind(t);const i=n.vector.indices;for(let e=-1,n=t.length;++e<n;){let n=i.get(e);null!==n&&r(e,t)&&o[n]++}}return new su(i.dictionary,ua.from(o))}}Zt.toDOMStream=function(t,e){if(st(t))return function(t,e){let r=null;const n=e&&\"bytes\"===e.type||!1,i=e&&e.highWaterMark||2**24;return new ReadableStream({...e,async start(e){await s(e,r||(r=t[Symbol.asyncIterator]()))},async pull(t){r?await s(t,r):t.close()},async cancel(){r&&r.return&&await r.return(),r=null}},{highWaterMark:n?i:void 0,...e});async function s(t,e){let r,i=null,s=t.desiredSize||null;for(;!(i=await e.next(n?s:null)).done;)if(ArrayBuffer.isView(i.value)&&(r=wt(i.value))&&(null!=s&&n&&(s=s-r.byteLength+1),i.value=r),t.enqueue(i.value),null!=s&&--s<=0)return;t.close()}}(t,e);if(it(t))return function(t,e){let r=null;const n=e&&\"bytes\"===e.type||!1,i=e&&e.highWaterMark||2**24;return new ReadableStream({...e,start(e){s(e,r||(r=t[Symbol.iterator]()))},pull(t){r?s(t,r):t.close()},cancel(){r&&r.return&&r.return(),r=null}},{highWaterMark:n?i:void 0,...e});function s(t,e){let r,i=null,s=t.desiredSize||null;for(;!(i=e.next(n?s:null)).done;)if(ArrayBuffer.isView(i.value)&&(r=wt(i.value))&&(null!=s&&n&&(s=s-r.byteLength+1),i.value=r),t.enqueue(i.value),null!=s&&--s<=0)return;t.close()}}(t,e);throw new Error(\"toDOMStream() must be called with an Iterable or AsyncIterable\")},Fr.throughDOM=function(t){return new Yc(t)},xc.throughDOM=function(t,e){const r=new es;let n=null;const i=new ReadableStream({async cancel(){await r.close()},async start(t){await s(t,n||(n=await async function(){return await(await xc.from(r)).open(e)}()))},async pull(t){n?await s(t,n):t.close()}});return{writable:new WritableStream(r,{highWaterMark:16384,...t}),readable:i};async function s(t,e){let r=t.desiredSize,n=null;for(;!(n=await e.next()).done;)if(t.enqueue(n.value),null!=r&&--r<=0)return;t.close()}},Eo.throughDOM=function(t,e){const r=new this(t),n=new ns(r),i=new ReadableStream({type:\"bytes\",async cancel(){await n.cancel()},async pull(t){await s(t)},async start(t){await s(t)}},{highWaterMark:16384,...e});return{writable:new WritableStream(r,t),readable:i};async function s(t){let e=null,r=t.desiredSize;for(;e=await n.read(r||null);)if(t.enqueue(e),null!=r&&(r-=e.byteLength)<=0)return;t.close()}};var au,cu=function(){function t(t,e,r,n){var i=this;this.getCell=function(t,e){var r=t<i.headerRows&&e<i.headerColumns,n=t>=i.headerRows&&e<i.headerColumns,s=t<i.headerRows&&e>=i.headerColumns;if(r){var o=[\"blank\"];return e>0&&o.push(\"level\"+t),{type:\"blank\",classNames:o.join(\" \"),content:\"\"}}if(s)return{type:\"columns\",classNames:(o=[\"col_heading\",\"level\"+t,\"col\"+(c=e-i.headerColumns)]).join(\" \"),content:i.getContent(i.columnsTable,c,t)};if(n){o=[\"row_heading\",\"level\"+e,\"row\"+(a=t-i.headerRows)];return{type:\"index\",id:\"T_\"+i.uuid+\"level\"+e+\"_row\"+a,classNames:o.join(\" \"),content:i.getContent(i.indexTable,a,e)}}o=[\"data\",\"row\"+(a=t-i.headerRows),\"col\"+(c=e-i.headerColumns)];var a,c,u=i.styler?i.getContent(i.styler.displayValuesTable,a,c):i.getContent(i.dataTable,a,c);return{type:\"data\",id:\"T_\"+i.uuid+\"row\"+a+\"_col\"+c,classNames:o.join(\" \"),content:u}},this.getContent=function(t,e,r){var n=t.getColumnAt(r);return null===n?\"\":i.getColumnTypeId(t,r)===ce.Timestamp?i.nanosToDate(n.get(e)):n.get(e)},this.dataTable=Tc.from(t),this.indexTable=Tc.from(e),this.columnsTable=Tc.from(r),this.styler=n?{caption:n.caption,displayValuesTable:Tc.from(n.displayValues),styles:n.styles,uuid:n.uuid}:void 0}return Object.defineProperty(t.prototype,\"rows\",{get:function(){return this.indexTable.length+this.columnsTable.numCols},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"columns\",{get:function(){return this.indexTable.numCols+this.columnsTable.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"headerRows\",{get:function(){return this.rows-this.dataRows},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"headerColumns\",{get:function(){return this.columns-this.dataColumns},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"dataRows\",{get:function(){return this.dataTable.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"dataColumns\",{get:function(){return this.dataTable.numCols},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"uuid\",{get:function(){return this.styler&&this.styler.uuid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"caption\",{get:function(){return this.styler&&this.styler.caption},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"styles\",{get:function(){return this.styler&&this.styler.styles},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"table\",{get:function(){return this.dataTable},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"index\",{get:function(){return this.indexTable},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"columnTable\",{get:function(){return this.columnsTable},enumerable:!0,configurable:!0}),t.prototype.serialize=function(){return{data:this.dataTable.serialize(),index:this.indexTable.serialize(),columns:this.columnsTable.serialize()}},t.prototype.getColumnTypeId=function(t,e){return t.schema.fields[e].type.typeId},t.prototype.nanosToDate=function(t){return new Date(t/1e6)},t}(),uu=function(){return uu=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},uu.apply(this,arguments)};!function(t){t.COMPONENT_READY=\"streamlit:componentReady\",t.SET_COMPONENT_VALUE=\"streamlit:setComponentValue\",t.SET_FRAME_HEIGHT=\"streamlit:setFrameHeight\"}(au||(au={}));var lu=function(){function t(){}return t.API_VERSION=1,t.RENDER_EVENT=\"streamlit:render\",t.events=new D,t.registeredMessageListener=!1,t.setComponentReady=function(){t.registeredMessageListener||(window.addEventListener(\"message\",t.onMessageEvent),t.registeredMessageListener=!0),t.sendBackMsg(au.COMPONENT_READY,{apiVersion:t.API_VERSION})},t.setFrameHeight=function(e){void 0===e&&(e=document.body.scrollHeight),e!==t.lastFrameHeight&&(t.lastFrameHeight=e,t.sendBackMsg(au.SET_FRAME_HEIGHT,{height:e}))},t.setComponentValue=function(e){var r;e instanceof cu?(r=\"dataframe\",e=e.serialize()):!function(t){var e=!1;try{e=t instanceof BigInt64Array||t instanceof BigUint64Array}catch(r){}return t instanceof Int8Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array||e}(e)?e instanceof ArrayBuffer?(r=\"bytes\",e=new Uint8Array(e)):r=\"json\":(r=\"bytes\",e=new Uint8Array(e.buffer)),t.sendBackMsg(au.SET_COMPONENT_VALUE,{value:e,dataType:r})},t.onMessageEvent=function(e){if(e.data.type===t.RENDER_EVENT)t.onRenderMessage(e.data)},t.onRenderMessage=function(e){var r=e.args;null==r&&(console.error(\"Got null args in onRenderMessage. This should never happen\"),r={});var n=e.dfs&&e.dfs.length>0?t.argsDataframeToObject(e.dfs):{};r=uu(uu({},r),n);var i=Boolean(e.disabled),s=e.theme;s&&hu(s);var o={disabled:i,args:r,theme:s},a=new CustomEvent(t.RENDER_EVENT,{detail:o});t.events.dispatchEvent(a)},t.argsDataframeToObject=function(e){var r=e.map((function(e){var r=e.key,n=e.value;return[r,t.toArrowTable(n)]}));return Object.fromEntries(r)},t.toArrowTable=function(t){var e=t.data,r=e.data,n=e.index,i=e.columns,s=e.styler;return new cu(r,n,i,s)},t.sendBackMsg=function(t,e){window.parent.postMessage(uu({isStreamlitMessage:!0,type:t},e),\"*\")},t}(),hu=function(t){var e=document.createElement(\"style\");document.head.appendChild(e),e.innerHTML=\"\\n    :root {\\n      --primary-color: \"+t.primaryColor+\";\\n      --background-color: \"+t.backgroundColor+\";\\n      --secondary-background-color: \"+t.secondaryBackgroundColor+\";\\n      --text-color: \"+t.textColor+\";\\n      --font: \"+t.font+\";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \"};var du=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},t(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();!function(t){function e(){return null!==t&&t.apply(this,arguments)||this}du(e,t),e.prototype.componentDidMount=function(){lu.setFrameHeight()},e.prototype.componentDidUpdate=function(){lu.setFrameHeight()}}(l.a.PureComponent)},function(t,e,r){\"use strict\";var n=r(4),i={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},s={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function c(t){return n.isMemo(t)?o:a[t.$$typeof]||i}a[n.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[n.Memo]=o;var u=Object.defineProperty,l=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,p=Object.prototype;t.exports=function t(e,r,n){if(\"string\"!==typeof r){if(p){var i=f(r);i&&i!==p&&t(e,i,n)}var o=l(r);h&&(o=o.concat(h(r)));for(var a=c(e),y=c(r),b=0;b<o.length;++b){var g=o[b];if(!s[g]&&(!n||!n[g])&&(!y||!y[g])&&(!a||!a[g])){var _=d(r,g);try{u(e,g,_)}catch(v){}}}}return e}},,function(t,e,r){\"use strict\";t.exports=r(5)},function(t,e,r){\"use strict\";var n=\"function\"===typeof Symbol&&Symbol.for,i=n?Symbol.for(\"react.element\"):60103,s=n?Symbol.for(\"react.portal\"):60106,o=n?Symbol.for(\"react.fragment\"):60107,a=n?Symbol.for(\"react.strict_mode\"):60108,c=n?Symbol.for(\"react.profiler\"):60114,u=n?Symbol.for(\"react.provider\"):60109,l=n?Symbol.for(\"react.context\"):60110,h=n?Symbol.for(\"react.async_mode\"):60111,d=n?Symbol.for(\"react.concurrent_mode\"):60111,f=n?Symbol.for(\"react.forward_ref\"):60112,p=n?Symbol.for(\"react.suspense\"):60113,y=n?Symbol.for(\"react.suspense_list\"):60120,b=n?Symbol.for(\"react.memo\"):60115,g=n?Symbol.for(\"react.lazy\"):60116,_=n?Symbol.for(\"react.block\"):60121,v=n?Symbol.for(\"react.fundamental\"):60117,m=n?Symbol.for(\"react.responder\"):60118,w=n?Symbol.for(\"react.scope\"):60119;function I(t){if(\"object\"===typeof t&&null!==t){var e=t.$$typeof;switch(e){case i:switch(t=t.type){case h:case d:case o:case c:case a:case p:return t;default:switch(t=t&&t.$$typeof){case l:case f:case g:case b:case u:return t;default:return e}}case s:return e}}}function S(t){return I(t)===d}e.AsyncMode=h,e.ConcurrentMode=d,e.ContextConsumer=l,e.ContextProvider=u,e.Element=i,e.ForwardRef=f,e.Fragment=o,e.Lazy=g,e.Memo=b,e.Portal=s,e.Profiler=c,e.StrictMode=a,e.Suspense=p,e.isAsyncMode=function(t){return S(t)||I(t)===h},e.isConcurrentMode=S,e.isContextConsumer=function(t){return I(t)===l},e.isContextProvider=function(t){return I(t)===u},e.isElement=function(t){return\"object\"===typeof t&&null!==t&&t.$$typeof===i},e.isForwardRef=function(t){return I(t)===f},e.isFragment=function(t){return I(t)===o},e.isLazy=function(t){return I(t)===g},e.isMemo=function(t){return I(t)===b},e.isPortal=function(t){return I(t)===s},e.isProfiler=function(t){return I(t)===c},e.isStrictMode=function(t){return I(t)===a},e.isSuspense=function(t){return I(t)===p},e.isValidElementType=function(t){return\"string\"===typeof t||\"function\"===typeof t||t===o||t===d||t===c||t===a||t===p||t===y||\"object\"===typeof t&&null!==t&&(t.$$typeof===g||t.$$typeof===b||t.$$typeof===u||t.$$typeof===l||t.$$typeof===f||t.$$typeof===v||t.$$typeof===m||t.$$typeof===w||t.$$typeof===_)},e.typeOf=I},function(t,e,r){\"use strict\";var n=r(7),i=\"function\"===typeof Symbol&&Symbol.for,s=i?Symbol.for(\"react.element\"):60103,o=i?Symbol.for(\"react.portal\"):60106,a=i?Symbol.for(\"react.fragment\"):60107,c=i?Symbol.for(\"react.strict_mode\"):60108,u=i?Symbol.for(\"react.profiler\"):60114,l=i?Symbol.for(\"react.provider\"):60109,h=i?Symbol.for(\"react.context\"):60110,d=i?Symbol.for(\"react.forward_ref\"):60112,f=i?Symbol.for(\"react.suspense\"):60113,p=i?Symbol.for(\"react.memo\"):60115,y=i?Symbol.for(\"react.lazy\"):60116,b=\"function\"===typeof Symbol&&Symbol.iterator;function g(t){for(var e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+t,r=1;r<arguments.length;r++)e+=\"&args[]=\"+encodeURIComponent(arguments[r]);return\"Minified React error #\"+t+\"; visit \"+e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var _={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function m(t,e,r){this.props=t,this.context=e,this.refs=v,this.updater=r||_}function w(){}function I(t,e,r){this.props=t,this.context=e,this.refs=v,this.updater=r||_}m.prototype.isReactComponent={},m.prototype.setState=function(t,e){if(\"object\"!==typeof t&&\"function\"!==typeof t&&null!=t)throw Error(g(85));this.updater.enqueueSetState(this,t,e,\"setState\")},m.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,\"forceUpdate\")},w.prototype=m.prototype;var S=I.prototype=new w;S.constructor=I,n(S,m.prototype),S.isPureReactComponent=!0;var A={current:null},T=Object.prototype.hasOwnProperty,B={key:!0,ref:!0,__self:!0,__source:!0};function D(t,e,r){var n,i={},o=null,a=null;if(null!=e)for(n in void 0!==e.ref&&(a=e.ref),void 0!==e.key&&(o=\"\"+e.key),e)T.call(e,n)&&!B.hasOwnProperty(n)&&(i[n]=e[n]);var c=arguments.length-2;if(1===c)i.children=r;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];i.children=u}if(t&&t.defaultProps)for(n in c=t.defaultProps)void 0===i[n]&&(i[n]=c[n]);return{$$typeof:s,type:t,key:o,ref:a,props:i,_owner:A.current}}function O(t){return\"object\"===typeof t&&null!==t&&t.$$typeof===s}var x=/\\/+/g,L=[];function F(t,e,r,n){if(L.length){var i=L.pop();return i.result=t,i.keyPrefix=e,i.func=r,i.context=n,i.count=0,i}return{result:t,keyPrefix:e,func:r,context:n,count:0}}function M(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>L.length&&L.push(t)}function U(t,e,r,n){var i=typeof t;\"undefined\"!==i&&\"boolean\"!==i||(t=null);var a=!1;if(null===t)a=!0;else switch(i){case\"string\":case\"number\":a=!0;break;case\"object\":switch(t.$$typeof){case s:case o:a=!0}}if(a)return r(n,t,\"\"===e?\".\"+N(t,0):e),1;if(a=0,e=\"\"===e?\".\":e+\":\",Array.isArray(t))for(var c=0;c<t.length;c++){var u=e+N(i=t[c],c);a+=U(i,u,r,n)}else if(null===t||\"object\"!==typeof t?u=null:u=\"function\"===typeof(u=b&&t[b]||t[\"@@iterator\"])?u:null,\"function\"===typeof u)for(t=u.call(t),c=0;!(i=t.next()).done;)a+=U(i=i.value,u=e+N(i,c++),r,n);else if(\"object\"===i)throw r=\"\"+t,Error(g(31,\"[object Object]\"===r?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":r,\"\"));return a}function E(t,e,r){return null==t?0:U(t,\"\",e,r)}function N(t,e){return\"object\"===typeof t&&null!==t&&null!=t.key?function(t){var e={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function C(t,e){t.func.call(t.context,e,t.count++)}function V(t,e,r){var n=t.result,i=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?k(t,n,r,(function(t){return t})):null!=t&&(O(t)&&(t=function(t,e){return{$$typeof:s,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,i+(!t.key||e&&e.key===t.key?\"\":(\"\"+t.key).replace(x,\"$&/\")+\"/\")+r)),n.push(t))}function k(t,e,r,n,i){var s=\"\";null!=r&&(s=(\"\"+r).replace(x,\"$&/\")+\"/\"),E(t,V,e=F(e,s,n,i)),M(e)}var R={current:null};function j(){var t=R.current;if(null===t)throw Error(g(321));return t}var P={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:A,IsSomeRendererActing:{current:!1},assign:n};e.Children={map:function(t,e,r){if(null==t)return t;var n=[];return k(t,n,null,e,r),n},forEach:function(t,e,r){if(null==t)return t;E(t,C,e=F(null,null,e,r)),M(e)},count:function(t){return E(t,(function(){return null}),null)},toArray:function(t){var e=[];return k(t,e,null,(function(t){return t})),e},only:function(t){if(!O(t))throw Error(g(143));return t}},e.Component=m,e.Fragment=a,e.Profiler=u,e.PureComponent=I,e.StrictMode=c,e.Suspense=f,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,e.cloneElement=function(t,e,r){if(null===t||void 0===t)throw Error(g(267,t));var i=n({},t.props),o=t.key,a=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(a=e.ref,c=A.current),void 0!==e.key&&(o=\"\"+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(l in e)T.call(e,l)&&!B.hasOwnProperty(l)&&(i[l]=void 0===e[l]&&void 0!==u?u[l]:e[l])}var l=arguments.length-2;if(1===l)i.children=r;else if(1<l){u=Array(l);for(var h=0;h<l;h++)u[h]=arguments[h+2];i.children=u}return{$$typeof:s,type:t.type,key:o,ref:a,props:i,_owner:c}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:h,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:t},t.Consumer=t},e.createElement=D,e.createFactory=function(t){var e=D.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:d,render:t}},e.isValidElement=O,e.lazy=function(t){return{$$typeof:y,_ctor:t,_status:-1,_result:null}},e.memo=function(t,e){return{$$typeof:p,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return j().useCallback(t,e)},e.useContext=function(t,e){return j().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return j().useEffect(t,e)},e.useImperativeHandle=function(t,e,r){return j().useImperativeHandle(t,e,r)},e.useLayoutEffect=function(t,e){return j().useLayoutEffect(t,e)},e.useMemo=function(t,e){return j().useMemo(t,e)},e.useReducer=function(t,e,r){return j().useReducer(t,e,r)},e.useRef=function(t){return j().useRef(t)},e.useState=function(t){return j().useState(t)},e.version=\"16.14.0\"},function(t,e,r){\"use strict\";var n=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String(\"abc\");if(t[5]=\"de\",\"5\"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},r=0;r<10;r++)e[\"_\"+String.fromCharCode(r)]=r;if(\"0123456789\"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(t){n[t]=t})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(i){return!1}}()?Object.assign:function(t,e){for(var r,o,a=function(t){if(null===t||void 0===t)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(t)}(t),c=1;c<arguments.length;c++){for(var u in r=Object(arguments[c]))i.call(r,u)&&(a[u]=r[u]);if(n){o=n(r);for(var l=0;l<o.length;l++)s.call(r,o[l])&&(a[o[l]]=r[o[l]])}}return a}}]]);","name":"static/js/2.8d0039db.chunk.js","map":{"version":3,"names":["this","push","module","exports","__webpack_require__","__webpack_exports__","d","streamlit_Streamlit","buffer_namespaceObject","r","memcpy","joinUint8Arrays","toArrayBufferView","toInt8Array","toInt16Array","toInt32Array","toBigInt64Array","toUint8Array","toUint16Array","toUint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","toArrayBufferViewIterator","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","compareArrayLike","bit_namespaceObject","getBool","getBit","setBool","truncateBitmap","packBools","iterateBits","popcnt_bit_range","popcnt_array","popcnt_uint32","math_namespaceObject","uint16ToFloat64","float64ToUint16","bn_namespaceObject","isArrowBigNumSymbol","bignumToString","bignumToBigInt","bn_BN","util_vector_namespaceObject","clampIndex","clampRange","createElementComparator","util_int_namespaceObject","BaseInt64","int_Uint64","int_Int64","Int128","react","react_default","n","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","Object","defineProperty","value","enumerable","keys","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","call","create","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","concat","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","Array","isArray","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","a","min","max","ToDictionary","o","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","slice","endOfStream","read","shift","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","encoding_lib_TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","encoding_lib_TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","TextDecoder","TextEncoder","decodeUtf8","decoder","from","toString","encodeUtf8","encoder","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","tee","_getDOMStream","pipe","_getNodeStream","pipeTo","pipeThrough","duplex","_DOMStream","toDOMStream","_nodeStream","toNodeStream","interfaces_AsyncQueue","super","_values","resolvers","_closedPromise","Promise","_closedPromiseResolve","closed","cancel","reason","return","write","_ensureOpen","resolve","abort","_error","reject","close","Symbol","asyncIterator","adapters","_","peek","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","of","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isNumber","isBoolean","isFunction","compat_isObject","isPromise","then","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","Math","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","ArrayBufferViewCtor","isView","Int8Array","Int16Array","Uint32Array","Uint8ClampedArray","pump","ArrayCtor","wrap","buffers","it","async","emit","valueOffsets","fromIterable","adapters_pump","cmd","threw","bufferLength","byteRange","isNaN","e","throw","fromAsyncIterable","fromDOMStream","adapters_AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","map","isFinite","cleanup","evt","fn","destroy","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","AbstractVector","Schema_org","arrow","apache","org","Message_org","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","getRootAsNull","startNull","builder","endNull","createNull","Struct_","getRootAsStruct_","startStruct_","endStruct_","createStruct_","List","getRootAsList","startList","endList","createList","LargeList","getRootAsLargeList","startLargeList","endLargeList","createLargeList","FixedSizeList","getRootAsFixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","createFixedSizeList","getRootAsMap","keysSorted","startMap","addKeysSorted","endMap","createMap","Union","getRootAsUnion","Sparse","typeIds","typeIdsLength","typeIdsArray","startUnion","addMode","addTypeIds","typeIdsOffset","createTypeIdsVector","startTypeIdsVector","numElems","endUnion","createUnion","Int","getRootAsInt","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","createInt","FloatingPoint","getRootAsFloatingPoint","precision","HALF","startFloatingPoint","addPrecision","endFloatingPoint","createFloatingPoint","Utf8","getRootAsUtf8","startUtf8","endUtf8","createUtf8","Binary","getRootAsBinary","startBinary","endBinary","createBinary","LargeUtf8","getRootAsLargeUtf8","startLargeUtf8","endLargeUtf8","createLargeUtf8","LargeBinary","getRootAsLargeBinary","startLargeBinary","endLargeBinary","createLargeBinary","FixedSizeBinary","getRootAsFixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","createFixedSizeBinary","Bool","getRootAsBool","startBool","endBool","createBool","Decimal","getRootAsDecimal","scale","startDecimal","addScale","endDecimal","createDecimal","getRootAsDate","unit","MILLISECOND","startDate","addUnit","endDate","createDate","Time","getRootAsTime","startTime","endTime","createTime","Timestamp","getRootAsTimestamp","SECOND","timezone","optionalEncoding","startTimestamp","addTimezone","timezoneOffset","endTimestamp","createTimestamp","Interval","getRootAsInterval","YEAR_MONTH","startInterval","endInterval","createInterval","Duration","getRootAsDuration","startDuration","endDuration","createDuration","KeyValue","getRootAsKeyValue","startKeyValue","addKey","keyOffset","addValue","valueOffset","endKeyValue","createKeyValue","DictionaryEncoding","getRootAsDictionaryEncoding","id","indexType","isOrdered","startDictionaryEncoding","addId","addIndexType","indexTypeOffset","addIsOrdered","endDictionaryEncoding","createDictionaryEncoding","Field","getRootAsField","name","nullable","typeType","dictionary","children","childrenLength","customMetadata","customMetadataLength","startField","addName","nameOffset","addNullable","addTypeType","addType","typeOffset","addDictionary","dictionaryOffset","addChildren","childrenOffset","createChildrenVector","startChildrenVector","addCustomMetadata","customMetadataOffset","createCustomMetadataVector","startCustomMetadataVector","endField","createField","createBuffer","Schema","getRootAsSchema","endianness","Little","fields","fieldsLength","startSchema","addEndianness","addFields","fieldsOffset","createFieldsVector","startFieldsVector","endSchema","finishSchemaBuffer","createSchema","MessageHeader","FieldNode","nullCount","createFieldNode","null_count","RecordBatch","getRootAsRecordBatch","nodes","nodesLength","buffersLength","startRecordBatch","addLength","addNodes","nodesOffset","startNodesVector","addBuffers","buffersOffset","startBuffersVector","endRecordBatch","createRecordBatch","DictionaryBatch","getRootAsDictionaryBatch","isDelta","startDictionaryBatch","addData","dataOffset","addIsDelta","endDictionaryBatch","createDictionaryBatch","Message","getRootAsMessage","version","V1","headerType","header","bodyLength","startMessage","addVersion","addHeaderType","addHeader","headerOffset","addBodyLength","endMessage","finishMessageBuffer","createMessage","BufferType","_data","_index","byte","bit","bitmap","alignedSize","values","xs","begin","context","byteIndex","remaining","lhs","rhs","sum","rhsInside","lhsInside","arr","cnt","pos","view","DataView","getUint32","getUint16","getUint8","uint32","Visitor","visitMany","_len","args","_key","visit","_len2","_key2","getVisitFn","visitor","throwIfNotFound","dtype","data_Data","inferDType","type_DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","typecomparator_TypeComparator","compareSchemas","instance","compareFields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","compareTime","compareUnion","compareInterval","indices","isNull","isInt","isFloat","isBinary","isUtf8","isBool","isDecimal","isDate","isTime","isTimestamp","isInterval","isList","isStruct","isUnion","isFixedSizeBinary","isFixedSizeList","isMap","isDictionary","compareTo","toStringTag","ArrayType","type_Null","type_Int_","type_Float","type_Float16","type_Float32","type_Float64","type_Binary","type_Utf8","type_Bool","type_Decimal","type_Date_","type_DateDay","type_DateMillisecond","type_Time_","type_Timestamp_","type_Interval_","type_List","child","valueType","valueField","type_Struct","join","type_Union_","typeIdToChildIndex","idx","type_FixedSizeBinary","type_FixedSizeList","type_Map_","keyType","getId","atomicDictionaryId","type_Dictionary","strideForType","childData","floor","_nullCount","stride","nullBitmap","clone","childStride","_sliceBuffers","_sliceChildren","_changeLengthAndBackfillNullBitmap","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","undf","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","filter","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","buffer_BufferBuilder","_resize","reservedLength","reservedByteLength","append","reserve","extra","reserved","flush","array","sliceOrExtendArray","DataBufferBuilder","last","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","buffer_WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","builder_Builder","_ref","nulls","_nulls","_isValid","throughNode","throughDOM","throughIterable","queueingStrategy","highWaterMark","sizeProperty","numChunks","new","toVector","throughAsyncIterable","numChildren","_offsets","_typeIds","isValid","setValid","setValue","_setValue","valid","addChild","getChildAt","offsets","forEach","builder_FixedWidthBuilder","opts","builder_VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","bool_BoolBuilder","null_NullBuilder","date_DateBuilder","DateDayBuilder","DateMillisecondBuilder","decimal_DecimalBuilder","dictionary_DictionaryBuilder","dictionaryHashFunction","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","fixedsizebinary_FixedSizeBinaryBuilder","f64","u32","h","expo","sigf","sign","NaN","float_FloatBuilder","float_Float16Builder","Float32Builder","Float64Builder","for","BigNum","SignedBigNum","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","assign","TypedArray","BigIntArray","num","unsigned","decimal","int_IntBuilder","Int8Builder","Int16Builder","Int32Builder","int_Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","int_Uint64Builder","memo","time_TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","timestamp_TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","interval_IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","binary_BinaryBuilder","utf8_Utf8Builder","run_Run","bind","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","row_Row","parent","numKeys","entries","has","ktoi","itov","getValue","getIndex","ki","vi","k","v","kr","vr","callbackfn","thisArg","callback","m","toArray","inspect","str","defineProperties","MapRow","createRowProxy","getKey","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","hasOwnProperty","Proxy","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","adjust","tmp","end","big0","isNaNFast","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","chunked_Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","flatten","selectChunkArgs","VectorName","chunk","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","_ref2","element","self","indexOfInternal","arraySet","typedSet","_ref3","_ref4","_ref5","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","column_Column","_field","SingleChunkColumn","rest","schema_Field","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","res","toKeysAndValues","ret","fieldIndex","valueIndex","schema_Schema","generateDictionaryMap","select","columnNames","names","selectAt","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_len5","_key5","_len6","_key6","m1","m2","list_ListBuilder","_run","run","fixedsizelist_FixedSizeListBuilder","childIndex","map_MapBuilder","struct_StructBuilder","union_UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","union_DenseUnionBuilder","set_SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","_ref9","setTimestampMillisecond","_ref10","setTimestampMicrosecond","_ref11","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref12","setEpochMsToNanosecondsLong","setTimeSecond","_ref13","setTimeMillisecond","_ref14","setTimeMicrosecond","_ref15","setTimeNanosecond","_ref16","setDenseUnion","setSparseUnion","setIntervalDayTime","_ref18","setIntervalYearMonth","_ref19","_ref8","_ref7","_ref6","_ref17","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","set_instance","builderctor_instance","File_org","newBuilder","defaultOptions","getChildOptions","T","Footer","getRootAsFooter","Block","dictionariesLength","recordBatches","recordBatchesLength","startFooter","addSchema","schemaOffset","addDictionaries","dictionariesOffset","startDictionariesVector","addRecordBatches","recordBatchesOffset","startRecordBatchesVector","endFooter","finishFooterBuffer","createFooter","metaDataLength","createBlock","file_Builder","file_ByteBuffer","_Block","_Footer","file_Footer_","V4","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","OffHeapFooter","numRecordBatches","rb","FileBlock","numDictionaries","db","dictionaryBatchesOffset","block","getRecordBatch","getDictionaryBatch","_footer","fileBlock","stream_AsyncByteQueue","stream_ByteStream","stream_ByteStreamSource","stream_AsyncByteStream","stream_AsyncByteStreamSource","body","file_RandomAccessFile","readAt","getInt32","seek","nBytes","file_AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","_times","L","R","product","_plus","lessThan","greaterThan","hex","times","plus","out_buffer","fromString","fromNumber","out","posn","group","parseInt","substr","multiple","convertArray","multiply","left","right","add","negate","this_high","other_high","startsWith","L0","L1","L2","L3","R0","R1","R2","R3","sums","vectorloader_VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","readTypeIds","readDictionary","nextBufferRange","vectorloader_JSONVectorLoader","sources","joined","binaryDataFromJSON","typeassembler_Long","typeassembler_Null","typeassembler_Binary","typeassembler_Bool","typeassembler_Utf8","typeassembler_Decimal","typeassembler_Date","typeassembler_List","typeassembler_Struct","typeassembler_FixedSizeBinary","typeassembler_FixedSizeList","typeassembler_Map_","typeassembler_instance","recordBatchFromJSON","message_RecordBatch","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","message_Long","message_Builder","message_ByteBuffer","message_Type","_Field","_Schema","message_Buffer","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","message_Message","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","decodeCustomMetadata","entry","decodeIndexType","decodeFieldType","childOffsets","childrenVectorOffset","metadataOffset","dictType","dictMeta","fieldOffsets","fieldsVectorOffset","platformIsLittleEndian","Big","_schema","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","nodesVectorOffset","b_","buffersVectorOffset","batch","decodeFieldNodes","bufferRegions","decodeBuffers","dictionaryBatch","setInt16","ipc_message_ByteBuffer","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","message_MessageReader","readMetadataLength","readMetadata","readMessage","readMessageBody","readSchema","throwIfNull","PADDING","metadataLength","message_AsyncMessageReader","message_JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","vectorassembler_VectorAssembler","_byteLength","_bufferRegions","assemble","assembler","vectorChildren","recordbatch_RecordBatch","assembleResult","RangeError","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","writer_RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","sync","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","_writeSchema","payload","table_Table","recordbatch_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","_writeMessage","flatbufferSize","prefixSize","nPaddingBytes","_write","_writePadding","_writeMagic","_writeDictionaries","_writeBodyBuffers","_writeDictionaryBatch","padding","writer_RecordBatchStreamWriter","writer","writer_RecordBatchFileWriter","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","base_BaseVector","_bindDataAccessors","isConcatSpreadable","binary_BinaryVector","asUtf8","bool_BoolVector","vectorFromValuesWithType","date_DateVector","DateDayVector","DateMillisecondVector","decimal_DecimalVector","dictionary_DictionaryVector","reverseLookup","setKey","fixedsizebinary_FixedSizeBinaryVector","fixedsizelist_FixedSizeListVector","float_FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","interval_IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","int_IntVector","is64bit","int_vectorTypeToDataType","int_arrayTypeToDataType","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","int_Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","int_Uint64Vector","list_ListVector","map_MapVector","asList","null_NullVector","struct_kRowIndex","struct_StructVector","_row","bound","timestamp_TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","time_TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","union_UnionVector","DenseUnionVector","SparseUnionVector","utf8_Utf8Vector","asBinary","partial0","partial2","get_GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","_ref20","interval","int32s","_vector","get_instance","indexof_IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","indexof_instance","iterator_IteratorVisitor","vectorIterator","getFn","nullByte","nullBit","nullableIterator","iterator_instance","toarray_ToArrayVisitor","arrayOfVector","toarray_instance","variableWidthColumnErrorMessage","bytewidth_instance","____","visitFields","visitSchema","vectorctor_instance","newDataType","transform","getByteWidth","wrapNullableSet","VectorCtor","partialType0","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","reader_RecordBatchReader","isSync","open","opening","fromAsync","cols","selectColumnArgs","numCols","getColumn","getColumnAt","getColumnIndex","serialize","nameToIndex","columnName","_this","oldToNew","newIdx","_f","_fs","fs","vs","l","batchData","ensureSameLengthData","_dictionaries","recordbatch_DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","reader_RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","reader_AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","reader_AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","reader_RecordBatchFileReaderImpl","fromAsyncByteStream","reader_RecordBatchStreamReaderImpl","fromByteStream","readAll","readAllSync","readAllAsync","reader_RecordBatchReaderImpl","_recordBatchIndex","_loadRecordBatch","_loadVectors","_loadDictionaryBatch","_reader","shouldAutoDestroy","_readNextMessageAndValidate","_readFooter","_readDictionaryBatch","builder_BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","pull","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","eq","Literal","predicate_Equals","le","LTeq","ge","GTeq","lt","Not","gt","ne","Col","colidx","Predicate","and","expr","And","or","Or","not","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","p","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","lastKey","func","countBy","dataframe_DataFrame","scan","scanReverse","predicate","dataframe_FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","dataframe_CountByResult","_predicate","isBound","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable_ArrowTable","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","rows","dataRows","dataColumns","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__proto__","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","g","q","w","z","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","props","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","replace","escape","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","symbols","toObject"],"sources":["static/js/2.8d0039db.chunk.js"],"mappings":"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","ignoreList":[]},"input":"(this[\"webpackJsonpst_cookie_manager\"] = this[\"webpackJsonpst_cookie_manager\"] || []).push([[2],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(6);\n} else {}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ streamlit_Streamlit; });\n\n// UNUSED EXPORTS: StreamlitComponentBase, withStreamlitConnection, ArrowTable\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/buffer.mjs\nvar buffer_namespaceObject = {};\n__webpack_require__.r(buffer_namespaceObject);\n__webpack_require__.d(buffer_namespaceObject, \"memcpy\", function() { return memcpy; });\n__webpack_require__.d(buffer_namespaceObject, \"joinUint8Arrays\", function() { return joinUint8Arrays; });\n__webpack_require__.d(buffer_namespaceObject, \"toArrayBufferView\", function() { return toArrayBufferView; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt8Array\", function() { return toInt8Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt16Array\", function() { return toInt16Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt32Array\", function() { return toInt32Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toBigInt64Array\", function() { return toBigInt64Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8Array\", function() { return toUint8Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint16Array\", function() { return toUint16Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint32Array\", function() { return toUint32Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toBigUint64Array\", function() { return toBigUint64Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat32Array\", function() { return toFloat32Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat64Array\", function() { return toFloat64Array; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8ClampedArray\", function() { return toUint8ClampedArray; });\n__webpack_require__.d(buffer_namespaceObject, \"toArrayBufferViewIterator\", function() { return toArrayBufferViewIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt8ArrayIterator\", function() { return toInt8ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt16ArrayIterator\", function() { return toInt16ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt32ArrayIterator\", function() { return toInt32ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8ArrayIterator\", function() { return toUint8ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint16ArrayIterator\", function() { return toUint16ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint32ArrayIterator\", function() { return toUint32ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat32ArrayIterator\", function() { return toFloat32ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat64ArrayIterator\", function() { return toFloat64ArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8ClampedArrayIterator\", function() { return toUint8ClampedArrayIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toArrayBufferViewAsyncIterator\", function() { return toArrayBufferViewAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt8ArrayAsyncIterator\", function() { return toInt8ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt16ArrayAsyncIterator\", function() { return toInt16ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toInt32ArrayAsyncIterator\", function() { return toInt32ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8ArrayAsyncIterator\", function() { return toUint8ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint16ArrayAsyncIterator\", function() { return toUint16ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint32ArrayAsyncIterator\", function() { return toUint32ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat32ArrayAsyncIterator\", function() { return toFloat32ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toFloat64ArrayAsyncIterator\", function() { return toFloat64ArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"toUint8ClampedArrayAsyncIterator\", function() { return toUint8ClampedArrayAsyncIterator; });\n__webpack_require__.d(buffer_namespaceObject, \"rebaseValueOffsets\", function() { return rebaseValueOffsets; });\n__webpack_require__.d(buffer_namespaceObject, \"compareArrayLike\", function() { return compareArrayLike; });\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/bit.mjs\nvar bit_namespaceObject = {};\n__webpack_require__.r(bit_namespaceObject);\n__webpack_require__.d(bit_namespaceObject, \"getBool\", function() { return getBool; });\n__webpack_require__.d(bit_namespaceObject, \"getBit\", function() { return getBit; });\n__webpack_require__.d(bit_namespaceObject, \"setBool\", function() { return setBool; });\n__webpack_require__.d(bit_namespaceObject, \"truncateBitmap\", function() { return truncateBitmap; });\n__webpack_require__.d(bit_namespaceObject, \"packBools\", function() { return packBools; });\n__webpack_require__.d(bit_namespaceObject, \"iterateBits\", function() { return iterateBits; });\n__webpack_require__.d(bit_namespaceObject, \"popcnt_bit_range\", function() { return popcnt_bit_range; });\n__webpack_require__.d(bit_namespaceObject, \"popcnt_array\", function() { return popcnt_array; });\n__webpack_require__.d(bit_namespaceObject, \"popcnt_uint32\", function() { return popcnt_uint32; });\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/math.mjs\nvar math_namespaceObject = {};\n__webpack_require__.r(math_namespaceObject);\n__webpack_require__.d(math_namespaceObject, \"uint16ToFloat64\", function() { return uint16ToFloat64; });\n__webpack_require__.d(math_namespaceObject, \"float64ToUint16\", function() { return float64ToUint16; });\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/bn.mjs\nvar bn_namespaceObject = {};\n__webpack_require__.r(bn_namespaceObject);\n__webpack_require__.d(bn_namespaceObject, \"isArrowBigNumSymbol\", function() { return isArrowBigNumSymbol; });\n__webpack_require__.d(bn_namespaceObject, \"bignumToString\", function() { return bignumToString; });\n__webpack_require__.d(bn_namespaceObject, \"bignumToBigInt\", function() { return bignumToBigInt; });\n__webpack_require__.d(bn_namespaceObject, \"BN\", function() { return bn_BN; });\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/vector.mjs\nvar util_vector_namespaceObject = {};\n__webpack_require__.r(util_vector_namespaceObject);\n__webpack_require__.d(util_vector_namespaceObject, \"clampIndex\", function() { return clampIndex; });\n__webpack_require__.d(util_vector_namespaceObject, \"clampRange\", function() { return clampRange; });\n__webpack_require__.d(util_vector_namespaceObject, \"createElementComparator\", function() { return createElementComparator; });\n\n// NAMESPACE OBJECT: ./node_modules/apache-arrow/util/int.mjs\nvar util_int_namespaceObject = {};\n__webpack_require__.r(util_int_namespaceObject);\n__webpack_require__.d(util_int_namespaceObject, \"BaseInt64\", function() { return BaseInt64; });\n__webpack_require__.d(util_int_namespaceObject, \"Uint64\", function() { return int_Uint64; });\n__webpack_require__.d(util_int_namespaceObject, \"Int64\", function() { return int_Int64; });\n__webpack_require__.d(util_int_namespaceObject, \"Int128\", function() { return Int128; });\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(2);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// CONCATENATED MODULE: ./node_modules/event-target-shim/dist/event-target-shim.mjs\n/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n  const retv = privateData.get(event);\n  console.assert(retv != null, \"'this' is expected an Event object, but got\", event);\n  return retv;\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n  if (data.passiveListener != null) {\n    if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n      console.error(\"Unable to preventDefault inside passive event listener invocation.\", data.passiveListener);\n    }\n    return;\n  }\n  if (!data.event.cancelable) {\n    return;\n  }\n  data.canceled = true;\n  if (typeof data.event.preventDefault === \"function\") {\n    data.event.preventDefault();\n  }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n  privateData.set(this, {\n    eventTarget,\n    event,\n    eventPhase: 2,\n    currentTarget: eventTarget,\n    canceled: false,\n    stopped: false,\n    immediateStopped: false,\n    passiveListener: null,\n    timeStamp: event.timeStamp || Date.now()\n  });\n\n  // https://heycam.github.io/webidl/#Unforgeable\n  Object.defineProperty(this, \"isTrusted\", {\n    value: false,\n    enumerable: true\n  });\n\n  // Define accessors\n  const keys = Object.keys(event);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (!(key in this)) {\n      Object.defineProperty(this, key, defineRedirectDescriptor(key));\n    }\n  }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n  /**\n   * The type of this event.\n   * @type {string}\n   */\n  get type() {\n    return pd(this).event.type;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   */\n  get target() {\n    return pd(this).eventTarget;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   */\n  get currentTarget() {\n    return pd(this).currentTarget;\n  },\n  /**\n   * @returns {EventTarget[]} The composed path of this event.\n   */\n  composedPath() {\n    const currentTarget = pd(this).currentTarget;\n    if (currentTarget == null) {\n      return [];\n    }\n    return [currentTarget];\n  },\n  /**\n   * Constant of NONE.\n   * @type {number}\n   */\n  get NONE() {\n    return 0;\n  },\n  /**\n   * Constant of CAPTURING_PHASE.\n   * @type {number}\n   */\n  get CAPTURING_PHASE() {\n    return 1;\n  },\n  /**\n   * Constant of AT_TARGET.\n   * @type {number}\n   */\n  get AT_TARGET() {\n    return 2;\n  },\n  /**\n   * Constant of BUBBLING_PHASE.\n   * @type {number}\n   */\n  get BUBBLING_PHASE() {\n    return 3;\n  },\n  /**\n   * The target of this event.\n   * @type {number}\n   */\n  get eventPhase() {\n    return pd(this).eventPhase;\n  },\n  /**\n   * Stop event bubbling.\n   * @returns {void}\n   */\n  stopPropagation() {\n    const data = pd(this);\n    data.stopped = true;\n    if (typeof data.event.stopPropagation === \"function\") {\n      data.event.stopPropagation();\n    }\n  },\n  /**\n   * Stop event bubbling.\n   * @returns {void}\n   */\n  stopImmediatePropagation() {\n    const data = pd(this);\n    data.stopped = true;\n    data.immediateStopped = true;\n    if (typeof data.event.stopImmediatePropagation === \"function\") {\n      data.event.stopImmediatePropagation();\n    }\n  },\n  /**\n   * The flag to be bubbling.\n   * @type {boolean}\n   */\n  get bubbles() {\n    return Boolean(pd(this).event.bubbles);\n  },\n  /**\n   * The flag to be cancelable.\n   * @type {boolean}\n   */\n  get cancelable() {\n    return Boolean(pd(this).event.cancelable);\n  },\n  /**\n   * Cancel this event.\n   * @returns {void}\n   */\n  preventDefault() {\n    setCancelFlag(pd(this));\n  },\n  /**\n   * The flag to indicate cancellation state.\n   * @type {boolean}\n   */\n  get defaultPrevented() {\n    return pd(this).canceled;\n  },\n  /**\n   * The flag to be composed.\n   * @type {boolean}\n   */\n  get composed() {\n    return Boolean(pd(this).event.composed);\n  },\n  /**\n   * The unix time of this event.\n   * @type {number}\n   */\n  get timeStamp() {\n    return pd(this).timeStamp;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   * @deprecated\n   */\n  get srcElement() {\n    return pd(this).eventTarget;\n  },\n  /**\n   * The flag to stop event bubbling.\n   * @type {boolean}\n   * @deprecated\n   */\n  get cancelBubble() {\n    return pd(this).stopped;\n  },\n  set cancelBubble(value) {\n    if (!value) {\n      return;\n    }\n    const data = pd(this);\n    data.stopped = true;\n    if (typeof data.event.cancelBubble === \"boolean\") {\n      data.event.cancelBubble = true;\n    }\n  },\n  /**\n   * The flag to indicate cancellation state.\n   * @type {boolean}\n   * @deprecated\n   */\n  get returnValue() {\n    return !pd(this).canceled;\n  },\n  set returnValue(value) {\n    if (!value) {\n      setCancelFlag(pd(this));\n    }\n  },\n  /**\n   * Initialize this event object. But do nothing under event dispatching.\n   * @param {string} type The event type.\n   * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n   * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n   * @deprecated\n   */\n  initEvent() {\n    // Do nothing.\n  }\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n  value: Event,\n  configurable: true,\n  writable: true\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n  Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n  // Make association for wrappers.\n  wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n  return {\n    get() {\n      return pd(this).event[key];\n    },\n    set(value) {\n      pd(this).event[key] = value;\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n  return {\n    value() {\n      const event = pd(this).event;\n      return event[key].apply(event, arguments);\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n  const keys = Object.keys(proto);\n  if (keys.length === 0) {\n    return BaseEvent;\n  }\n\n  /** CustomEvent */\n  function CustomEvent(eventTarget, event) {\n    BaseEvent.call(this, eventTarget, event);\n  }\n  CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n    constructor: {\n      value: CustomEvent,\n      configurable: true,\n      writable: true\n    }\n  });\n\n  // Define accessors.\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (!(key in BaseEvent.prototype)) {\n      const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n      const isFunc = typeof descriptor.value === \"function\";\n      Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));\n    }\n  }\n  return CustomEvent;\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n  if (proto == null || proto === Object.prototype) {\n    return Event;\n  }\n  let wrapper = wrappers.get(proto);\n  if (wrapper == null) {\n    wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n    wrappers.set(proto, wrapper);\n  }\n  return wrapper;\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n  const Wrapper = getWrapper(Object.getPrototypeOf(event));\n  return new Wrapper(eventTarget, event);\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n  return pd(event).immediateStopped;\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n  pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n  pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n  pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n  return x !== null && typeof x === \"object\"; //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n  const listeners = listenersMap.get(eventTarget);\n  if (listeners == null) {\n    throw new TypeError(\"'this' is expected an EventTarget object, but got another value.\");\n  }\n  return listeners;\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n  return {\n    get() {\n      const listeners = getListeners(this);\n      let node = listeners.get(eventName);\n      while (node != null) {\n        if (node.listenerType === ATTRIBUTE) {\n          return node.listener;\n        }\n        node = node.next;\n      }\n      return null;\n    },\n    set(listener) {\n      if (typeof listener !== \"function\" && !isObject(listener)) {\n        listener = null; // eslint-disable-line no-param-reassign\n      }\n      const listeners = getListeners(this);\n\n      // Traverse to the tail while removing old value.\n      let prev = null;\n      let node = listeners.get(eventName);\n      while (node != null) {\n        if (node.listenerType === ATTRIBUTE) {\n          // Remove old value.\n          if (prev !== null) {\n            prev.next = node.next;\n          } else if (node.next !== null) {\n            listeners.set(eventName, node.next);\n          } else {\n            listeners.delete(eventName);\n          }\n        } else {\n          prev = node;\n        }\n        node = node.next;\n      }\n\n      // Add new value.\n      if (listener !== null) {\n        const newNode = {\n          listener,\n          listenerType: ATTRIBUTE,\n          passive: false,\n          once: false,\n          next: null\n        };\n        if (prev === null) {\n          listeners.set(eventName, newNode);\n        } else {\n          prev.next = newNode;\n        }\n      }\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n  Object.defineProperty(eventTargetPrototype, \"on\".concat(eventName), defineEventAttributeDescriptor(eventName));\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n  /** CustomEventTarget */\n  function CustomEventTarget() {\n    EventTarget.call(this);\n  }\n  CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n    constructor: {\n      value: CustomEventTarget,\n      configurable: true,\n      writable: true\n    }\n  });\n  for (let i = 0; i < eventNames.length; ++i) {\n    defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n  }\n  return CustomEventTarget;\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n  /*eslint-disable consistent-return */\n  if (this instanceof EventTarget) {\n    listenersMap.set(this, new Map());\n    return;\n  }\n  if (arguments.length === 1 && Array.isArray(arguments[0])) {\n    return defineCustomEventTarget(arguments[0]);\n  }\n  if (arguments.length > 0) {\n    const types = new Array(arguments.length);\n    for (let i = 0; i < arguments.length; ++i) {\n      types[i] = arguments[i];\n    }\n    return defineCustomEventTarget(types);\n  }\n  throw new TypeError(\"Cannot call a class as a function\");\n  /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n  /**\n   * Add a given listener to this event target.\n   * @param {string} eventName The event name to add.\n   * @param {Function} listener The listener to add.\n   * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n   * @returns {void}\n   */\n  addEventListener(eventName, listener, options) {\n    if (listener == null) {\n      return;\n    }\n    if (typeof listener !== \"function\" && !isObject(listener)) {\n      throw new TypeError(\"'listener' should be a function or an object.\");\n    }\n    const listeners = getListeners(this);\n    const optionsIsObj = isObject(options);\n    const capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);\n    const listenerType = capture ? CAPTURE : BUBBLE;\n    const newNode = {\n      listener,\n      listenerType,\n      passive: optionsIsObj && Boolean(options.passive),\n      once: optionsIsObj && Boolean(options.once),\n      next: null\n    };\n\n    // Set it as the first node if the first node is null.\n    let node = listeners.get(eventName);\n    if (node === undefined) {\n      listeners.set(eventName, newNode);\n      return;\n    }\n\n    // Traverse to the tail while checking duplication..\n    let prev = null;\n    while (node != null) {\n      if (node.listener === listener && node.listenerType === listenerType) {\n        // Should ignore duplication.\n        return;\n      }\n      prev = node;\n      node = node.next;\n    }\n\n    // Add it.\n    prev.next = newNode;\n  },\n  /**\n   * Remove a given listener from this event target.\n   * @param {string} eventName The event name to remove.\n   * @param {Function} listener The listener to remove.\n   * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n   * @returns {void}\n   */\n  removeEventListener(eventName, listener, options) {\n    if (listener == null) {\n      return;\n    }\n    const listeners = getListeners(this);\n    const capture = isObject(options) ? Boolean(options.capture) : Boolean(options);\n    const listenerType = capture ? CAPTURE : BUBBLE;\n    let prev = null;\n    let node = listeners.get(eventName);\n    while (node != null) {\n      if (node.listener === listener && node.listenerType === listenerType) {\n        if (prev !== null) {\n          prev.next = node.next;\n        } else if (node.next !== null) {\n          listeners.set(eventName, node.next);\n        } else {\n          listeners.delete(eventName);\n        }\n        return;\n      }\n      prev = node;\n      node = node.next;\n    }\n  },\n  /**\n   * Dispatch a given event.\n   * @param {Event|{type:string}} event The event to dispatch.\n   * @returns {boolean} `false` if canceled.\n   */\n  dispatchEvent(event) {\n    if (event == null || typeof event.type !== \"string\") {\n      throw new TypeError('\"event.type\" should be a string.');\n    }\n\n    // If listeners aren't registered, terminate.\n    const listeners = getListeners(this);\n    const eventName = event.type;\n    let node = listeners.get(eventName);\n    if (node == null) {\n      return true;\n    }\n\n    // Since we cannot rewrite several properties, so wrap object.\n    const wrappedEvent = wrapEvent(this, event);\n\n    // This doesn't process capturing phase and bubbling phase.\n    // This isn't participating in a tree.\n    let prev = null;\n    while (node != null) {\n      // Remove this listener if it's once\n      if (node.once) {\n        if (prev !== null) {\n          prev.next = node.next;\n        } else if (node.next !== null) {\n          listeners.set(eventName, node.next);\n        } else {\n          listeners.delete(eventName);\n        }\n      } else {\n        prev = node;\n      }\n\n      // Call this listener\n      setPassiveListener(wrappedEvent, node.passive ? node.listener : null);\n      if (typeof node.listener === \"function\") {\n        try {\n          node.listener.call(this, wrappedEvent);\n        } catch (err) {\n          if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n            console.error(err);\n          }\n        }\n      } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === \"function\") {\n        node.listener.handleEvent(wrappedEvent);\n      }\n\n      // Break if `event.stopImmediatePropagation` was called.\n      if (isStopped(wrappedEvent)) {\n        break;\n      }\n      node = node.next;\n    }\n    setPassiveListener(wrappedEvent, null);\n    setEventPhase(wrappedEvent, 0);\n    setCurrentTarget(wrappedEvent, null);\n    return !wrappedEvent.defaultPrevented;\n  }\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n  value: EventTarget,\n  configurable: true,\n  writable: true\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (typeof window !== \"undefined\" && typeof window.EventTarget !== \"undefined\") {\n  Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n/* harmony default export */ var event_target_shim = (EventTarget);\n\n// CONCATENATED MODULE: ./node_modules/flatbuffers/js/flatbuffers.mjs\n/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function (low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function (low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function () {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function (other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function (opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\nflatbuffers.Builder.prototype.clear = function () {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function (forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function () {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function () {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function (size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ~(this.bb.capacity() - this.space + additional_bytes) + 1 & size - 1;\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function (byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function (value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function (value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function (value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function (value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function (value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function (value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function (value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function (value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function (value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function (value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function (value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function (value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function (voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function (voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function (obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function () {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function (voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function () {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function (bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function (offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function (numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function () {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\n  outer_loop: for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function (root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT + flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' + flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function (table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function (elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function () {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function (s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(codePoint >> 6 & 0x1F | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(codePoint >> 12 & 0x0F | 0xE0);\n          } else {\n            utf8.push(codePoint >> 18 & 0x07 | 0xF0, codePoint >> 12 & 0x3F | 0x80);\n          }\n          utf8.push(codePoint >> 6 & 0x3F | 0x80);\n        }\n        utf8.push(codePoint & 0x3F | 0x80);\n      }\n    }\n  }\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function (low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function (bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function (byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\nflatbuffers.ByteBuffer.prototype.clear = function () {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function () {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function () {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function (position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function () {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function (offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function (offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function (offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function (offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function (offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function (offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function (offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function (offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function (offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function (offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function (offset, value) {\n  this.bytes_[offset] = /** @type {number} */value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function (offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function (offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function (offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function (offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function (offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function (offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function (offset, value) {\n  this.writeUint32(offset, value.low);\n  this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function (offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function (offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function () {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT + flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function (bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function (t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function (offset, opt_encoding) {\n  offset += this.readInt32(offset);\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n  offset += flatbuffers.SIZEOF_INT;\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint = (a & 0x1F) << 6 | b & 0x3F;\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint = (a & 0x0F) << 12 | (b & 0x3F) << 6 | c & 0x3F;\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint = (a & 0x07) << 18 | (b & 0x3F) << 12 | (c & 0x3F) << 6 | d & 0x3F;\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & (1 << 10) - 1) + 0xDC00);\n    }\n  }\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function (offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function (offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function (offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function (ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' + flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function (low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\n\n\n/// @endcond\n/// @}\n// CONCATENATED MODULE: ./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs\n\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */\nvar end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function () {\n    return !this.tokens.length;\n  },\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n  read: function () {\n    if (!this.tokens.length) return end_of_stream;\n    return this.tokens.shift();\n  },\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function (token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/token;\n      while (tokens.length) this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function (token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/token;\n      while (tokens.length) this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal) throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function (stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function (stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */\nvar DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction encoding_lib_TextDecoder(encoding, options) {\n  if (!(this instanceof encoding_lib_TextDecoder)) {\n    return new encoding_lib_TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n  Object.defineProperty(this, 'encoding', {\n    value: 'utf-8'\n  });\n  Object.defineProperty(this, 'fatal', {\n    value: this._fatal\n  });\n  Object.defineProperty(this, 'ignoreBOM', {\n    value: this._ignoreBOM\n  });\n}\nencoding_lib_TextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input && input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n    options = ToDictionary(options);\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({\n        fatal: this._fatal\n      });\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n    var input_stream = new Stream(bytes);\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished) break;\n      if (result === null) continue;\n      if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished) break;\n        if (result === null) continue;\n        if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 && !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction encoding_lib_TextEncoder(encoding, options) {\n  if (!(this instanceof encoding_lib_TextEncoder)) return new encoding_lib_TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {\n    fatal: Boolean(options['fatal'])\n  };\n  Object.defineProperty(this, 'encoding', {\n    value: 'utf-8'\n  });\n}\nencoding_lib_TextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming) this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished) break;\n      if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished) break;\n        if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */utf8_code_point = 0,\n    /** @type {number} */utf8_bytes_seen = 0,\n    /** @type {number} */utf8_bytes_needed = 0,\n    /** @type {number} */utf8_lower_boundary = 0x80,\n    /** @type {number} */utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function (stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream) return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0) utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED) utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0) utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4) utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << 6 * utf8_bytes_needed;\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += bite - 0x80 << 6 * (utf8_bytes_needed - utf8_bytes_seen);\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed) return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function (stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream) return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f)) return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> 6 * count) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> 6 * (count - 1);\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | temp & 0x3F);\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/utf8.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nconst decodeUtf8 = (TextDecoder => {\n  if (useNativeEncoders || !_Buffer) {\n    const decoder = new TextDecoder('utf-8');\n    return buffer => decoder.decode(buffer);\n  }\n  return input => {\n    const {\n      buffer,\n      byteOffset,\n      length\n    } = toUint8Array(input);\n    return _Buffer.from(buffer, byteOffset, length).toString();\n  };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : encoding_lib_TextDecoder);\n/** @ignore */\nconst encodeUtf8 = (TextEncoder => {\n  if (useNativeEncoders || !_Buffer) {\n    const encoder = new TextEncoder();\n    return value => encoder.encode(value);\n  }\n  return function () {\n    let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return toUint8Array(_Buffer.from(input, 'utf8'));\n  };\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : encoding_lib_TextEncoder);\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/interfaces.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst ITERATOR_DONE = Object.freeze({\n  done: true,\n  value: void 0\n});\n/** @ignore */\nclass ArrowJSON {\n  // @ts-ignore\n  constructor(_json) {\n    this._json = _json;\n  }\n  get schema() {\n    return this._json['schema'];\n  }\n  get batches() {\n    return this._json['batches'] || [];\n  }\n  get dictionaries() {\n    return this._json['dictionaries'] || [];\n  }\n}\n/** @ignore */\nclass ReadableInterop {\n  tee() {\n    return this._getDOMStream().tee();\n  }\n  pipe(writable, options) {\n    return this._getNodeStream().pipe(writable, options);\n  }\n  pipeTo(writable, options) {\n    return this._getDOMStream().pipeTo(writable, options);\n  }\n  pipeThrough(duplex, options) {\n    return this._getDOMStream().pipeThrough(duplex, options);\n  }\n  _getDOMStream() {\n    return this._DOMStream || (this._DOMStream = this.toDOMStream());\n  }\n  _getNodeStream() {\n    return this._nodeStream || (this._nodeStream = this.toNodeStream());\n  }\n}\n/** @ignore */\nclass interfaces_AsyncQueue extends ReadableInterop {\n  constructor() {\n    super();\n    this._values = [];\n    this.resolvers = [];\n    this._closedPromise = new Promise(r => this._closedPromiseResolve = r);\n  }\n  get closed() {\n    return this._closedPromise;\n  }\n  async cancel(reason) {\n    await this.return(reason);\n  }\n  write(value) {\n    if (this._ensureOpen()) {\n      this.resolvers.length <= 0 ? this._values.push(value) : this.resolvers.shift().resolve({\n        done: false,\n        value\n      });\n    }\n  }\n  abort(value) {\n    if (this._closedPromiseResolve) {\n      this.resolvers.length <= 0 ? this._error = {\n        error: value\n      } : this.resolvers.shift().reject({\n        done: true,\n        value\n      });\n    }\n  }\n  close() {\n    if (this._closedPromiseResolve) {\n      const {\n        resolvers\n      } = this;\n      while (resolvers.length > 0) {\n        resolvers.shift().resolve(ITERATOR_DONE);\n      }\n      this._closedPromiseResolve();\n      this._closedPromiseResolve = undefined;\n    }\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  toDOMStream(options) {\n    return adapters.toDOMStream(this._closedPromiseResolve || this._error ? this : this._values, options);\n  }\n  toNodeStream(options) {\n    return adapters.toNodeStream(this._closedPromiseResolve || this._error ? this : this._values, options);\n  }\n  async throw(_) {\n    await this.abort(_);\n    return ITERATOR_DONE;\n  }\n  async return(_) {\n    await this.close();\n    return ITERATOR_DONE;\n  }\n  async read(size) {\n    return (await this.next(size, 'read')).value;\n  }\n  async peek(size) {\n    return (await this.next(size, 'peek')).value;\n  }\n  next() {\n    if (this._values.length > 0) {\n      return Promise.resolve({\n        done: false,\n        value: this._values.shift()\n      });\n    } else if (this._error) {\n      return Promise.reject({\n        done: true,\n        value: this._error.error\n      });\n    } else if (!this._closedPromiseResolve) {\n      return Promise.resolve(ITERATOR_DONE);\n    } else {\n      return new Promise((resolve, reject) => {\n        this.resolvers.push({\n          resolve,\n          reject\n        });\n      });\n    }\n  }\n  _ensureOpen() {\n    if (this._closedPromiseResolve) {\n      return true;\n    }\n    throw new Error(\"\".concat(this, \" is closed\"));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/compat.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n  const BigIntUnavailableError = () => {\n    throw new Error('BigInt is not available in this environment');\n  };\n  function BigIntUnavailable() {\n    throw BigIntUnavailableError();\n  }\n  BigIntUnavailable.asIntN = () => {\n    throw BigIntUnavailableError();\n  };\n  BigIntUnavailable.asUintN = () => {\n    throw BigIntUnavailableError();\n  };\n  return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n  const BigInt64ArrayUnavailableError = () => {\n    throw new Error('BigInt64Array is not available in this environment');\n  };\n  class BigInt64ArrayUnavailable {\n    static get BYTES_PER_ELEMENT() {\n      return 8;\n    }\n    static of() {\n      throw BigInt64ArrayUnavailableError();\n    }\n    static from() {\n      throw BigInt64ArrayUnavailableError();\n    }\n    constructor() {\n      throw BigInt64ArrayUnavailableError();\n    }\n  }\n  return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n  const BigUint64ArrayUnavailableError = () => {\n    throw new Error('BigUint64Array is not available in this environment');\n  };\n  class BigUint64ArrayUnavailable {\n    static get BYTES_PER_ELEMENT() {\n      return 8;\n    }\n    static of() {\n      throw BigUint64ArrayUnavailableError();\n    }\n    static from() {\n      throw BigUint64ArrayUnavailableError();\n    }\n    constructor() {\n      throw BigUint64ArrayUnavailableError();\n    }\n  }\n  return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\n\n\n\n/** @ignore */\nconst isNumber = x => typeof x === 'number';\n/** @ignore */\nconst isBoolean = x => typeof x === 'boolean';\n/** @ignore */\nconst isFunction = x => typeof x === 'function';\n/** @ignore */\nconst compat_isObject = x => x != null && Object(x) === x;\n/** @ignore */\nconst isPromise = x => {\n  return compat_isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nconst isObservable = x => {\n  return compat_isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nconst isIterable = x => {\n  return compat_isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nconst isAsyncIterable = x => {\n  return compat_isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nconst isArrowJSON = x => {\n  return compat_isObject(x) && compat_isObject(x['schema']);\n};\n/** @ignore */\nconst isArrayLike = x => {\n  return compat_isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nconst isIteratorResult = x => {\n  return compat_isObject(x) && 'done' in x && 'value' in x;\n};\n/** @ignore */\nconst isUnderlyingSink = x => {\n  return compat_isObject(x) && isFunction(x['abort']) && isFunction(x['close']) && isFunction(x['start']) && isFunction(x['write']);\n};\n/** @ignore */\nconst isFileHandle = x => {\n  return compat_isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nconst isFSReadStream = x => {\n  return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nconst isFetchResponse = x => {\n  return compat_isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\nconst isWritableDOMStream = x => {\n  return compat_isObject(x) && isFunction(x['abort']) && isFunction(x['getWriter']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\nconst isReadableDOMStream = x => {\n  return compat_isObject(x) && isFunction(x['cancel']) && isFunction(x['getReader']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\nconst isWritableNodeStream = x => {\n  return compat_isObject(x) && isFunction(x['end']) && isFunction(x['write']) && isBoolean(x['writable']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\nconst isReadableNodeStream = x => {\n  return compat_isObject(x) && isFunction(x['read']) && isFunction(x['pipe']) && isBoolean(x['readable']) && !(x instanceof ReadableInterop);\n};\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/buffer.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\nvar ByteBuffer = flatbuffers.ByteBuffer;\n\n/** @ignore */\nconst SharedArrayBuf = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer;\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n  let result = chunks[0] ? [chunks[0]] : [];\n  let xOffset, yOffset, xLen, yLen;\n  for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n    x = result[j];\n    y = chunks[i];\n    // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n    if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n      y && (result[++j] = y);\n      continue;\n    }\n    ({\n      byteOffset: xOffset,\n      byteLength: xLen\n    } = x);\n    ({\n      byteOffset: yOffset,\n      byteLength: yLen\n    } = y);\n    // continue if the byte ranges of x and y aren't contiguous\n    if (xOffset + xLen < yOffset || yOffset + yLen < xOffset) {\n      y && (result[++j] = y);\n      continue;\n    }\n    result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n  }\n  return result;\n}\n/** @ignore */\nfunction memcpy(target, source) {\n  let targetByteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let sourceByteLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : source.byteLength;\n  const targetByteLength = target.byteLength;\n  const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n  const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n  dst.set(src, targetByteOffset);\n  return target;\n}\n/** @ignore */\nfunction joinUint8Arrays(chunks, size) {\n  // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n  // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n  // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n  let result = collapseContiguousByteRanges(chunks);\n  let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n  let source, sliced, buffer;\n  let offset = 0,\n    index = -1,\n    length = Math.min(size || Infinity, byteLength);\n  for (let n = result.length; ++index < n;) {\n    source = result[index];\n    sliced = source.subarray(0, Math.min(source.length, length - offset));\n    if (length <= offset + sliced.length) {\n      if (sliced.length < source.length) {\n        result[index] = source.subarray(sliced.length);\n      } else if (sliced.length === source.length) {\n        index++;\n      }\n      buffer ? memcpy(buffer, sliced, offset) : buffer = sliced;\n      break;\n    }\n    memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n    offset += sliced.length;\n  }\n  return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nfunction toArrayBufferView(ArrayBufferViewCtor, input) {\n  let value = isIteratorResult(input) ? input.value : input;\n  if (value instanceof ArrayBufferViewCtor) {\n    if (ArrayBufferViewCtor === Uint8Array) {\n      // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n      // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n      return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n    }\n    return value;\n  }\n  if (!value) {\n    return new ArrayBufferViewCtor(0);\n  }\n  if (typeof value === 'string') {\n    value = encodeUtf8(value);\n  }\n  if (value instanceof ArrayBuffer) {\n    return new ArrayBufferViewCtor(value);\n  }\n  if (value instanceof SharedArrayBuf) {\n    return new ArrayBufferViewCtor(value);\n  }\n  if (value instanceof ByteBuffer) {\n    return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n  }\n  return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0) : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n/** @ignore */\nconst toInt8Array = input => toArrayBufferView(Int8Array, input);\n/** @ignore */\nconst toInt16Array = input => toArrayBufferView(Int16Array, input);\n/** @ignore */\nconst toInt32Array = input => toArrayBufferView(Int32Array, input);\n/** @ignore */\nconst toBigInt64Array = input => toArrayBufferView(BigInt64ArrayCtor, input);\n/** @ignore */\nconst toUint8Array = input => toArrayBufferView(Uint8Array, input);\n/** @ignore */\nconst toUint16Array = input => toArrayBufferView(Uint16Array, input);\n/** @ignore */\nconst toUint32Array = input => toArrayBufferView(Uint32Array, input);\n/** @ignore */\nconst toBigUint64Array = input => toArrayBufferView(BigUint64ArrayCtor, input);\n/** @ignore */\nconst toFloat32Array = input => toArrayBufferView(Float32Array, input);\n/** @ignore */\nconst toFloat64Array = input => toArrayBufferView(Float64Array, input);\n/** @ignore */\nconst toUint8ClampedArray = input => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = iterator => {\n  iterator.next();\n  return iterator;\n};\n/** @ignore */\nfunction* toArrayBufferViewIterator(ArrayCtor, source) {\n  const wrap = function* (x) {\n    yield x;\n  };\n  const buffers = typeof source === 'string' ? wrap(source) : ArrayBuffer.isView(source) ? wrap(source) : source instanceof ArrayBuffer ? wrap(source) : source instanceof SharedArrayBuf ? wrap(source) : !isIterable(source) ? wrap(source) : source;\n  yield* pump(function* (it) {\n    let r = null;\n    do {\n      r = it.next(yield toArrayBufferView(ArrayCtor, r));\n    } while (!r.done);\n  }(buffers[Symbol.iterator]()));\n}\n/** @ignore */\nconst toInt8ArrayIterator = input => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */\nconst toInt16ArrayIterator = input => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */\nconst toInt32ArrayIterator = input => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */\nconst toUint8ArrayIterator = input => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */\nconst toUint16ArrayIterator = input => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */\nconst toUint32ArrayIterator = input => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */\nconst toFloat32ArrayIterator = input => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */\nconst toFloat64ArrayIterator = input => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */\nconst toUint8ClampedArrayIterator = input => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nasync function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n  // if a Promise, unwrap the Promise and iterate the resolved value\n  if (isPromise(source)) {\n    return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n  }\n  const wrap = async function* (x) {\n    yield await x;\n  };\n  const emit = async function* (source) {\n    yield* pump(function* (it) {\n      let r = null;\n      do {\n        r = it.next(yield r && r.value);\n      } while (!r.done);\n    }(source[Symbol.iterator]()));\n  };\n  const buffers = typeof source === 'string' ? wrap(source) // if string, wrap in an AsyncIterableIterator\n  : ArrayBuffer.isView(source) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n  : source instanceof ArrayBuffer ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n  : source instanceof SharedArrayBuf ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n  : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n  : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n  : source; // otherwise if AsyncIterable, use it\n  yield* pump(async function* (it) {\n    let r = null;\n    do {\n      r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n    } while (!r.done);\n  }(buffers[Symbol.asyncIterator]()));\n}\n/** @ignore */\nconst toInt8ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */\nconst toInt16ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */\nconst toInt32ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */\nconst toUint8ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */\nconst toUint16ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */\nconst toUint32ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */\nconst toFloat32ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */\nconst toFloat64ArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */\nconst toUint8ClampedArrayAsyncIterator = input => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nfunction rebaseValueOffsets(offset, length, valueOffsets) {\n  // If we have a non-zero offset, create a new offsets array with the values\n  // shifted by the start offset, such that the new start offset is 0\n  if (offset !== 0) {\n    valueOffsets = valueOffsets.slice(0, length + 1);\n    for (let i = -1; ++i <= length;) {\n      valueOffsets[i] += offset;\n    }\n  }\n  return valueOffsets;\n}\n/** @ignore */\nfunction compareArrayLike(a, b) {\n  let i = 0,\n    n = a.length;\n  if (n !== b.length) {\n    return false;\n  }\n  if (n > 0) {\n    do {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    } while (++i < n);\n  }\n  return true;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/adapters.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\n/* harmony default export */ var adapters = ({\n  fromIterable(source) {\n    return adapters_pump(fromIterable(source));\n  },\n  fromAsyncIterable(source) {\n    return adapters_pump(fromAsyncIterable(source));\n  },\n  fromDOMStream(source) {\n    return adapters_pump(fromDOMStream(source));\n  },\n  fromNodeStream(stream) {\n    return adapters_pump(fromNodeStream(stream));\n  },\n  // @ts-ignore\n  toDOMStream(source, options) {\n    throw new Error(\"\\\"toDOMStream\\\" not available in this environment\");\n  },\n  // @ts-ignore\n  toNodeStream(source, options) {\n    throw new Error(\"\\\"toNodeStream\\\" not available in this environment\");\n  }\n});\n/** @ignore */\nconst adapters_pump = iterator => {\n  iterator.next();\n  return iterator;\n};\n/** @ignore */\nfunction* fromIterable(source) {\n  let done,\n    threw = false;\n  let buffers = [],\n    buffer;\n  let cmd,\n    size,\n    bufferLength = 0;\n  function byteRange() {\n    if (cmd === 'peek') {\n      return joinUint8Arrays(buffers, size)[0];\n    }\n    [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n    return buffer;\n  }\n  // Yield so the caller can inject the read command before creating the source Iterator\n  ({\n    cmd,\n    size\n  } = yield null);\n  // initialize the iterator\n  let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n  try {\n    do {\n      // read the next value\n      ({\n        done,\n        value: buffer\n      } = isNaN(size - bufferLength) ? it.next(undefined) : it.next(size - bufferLength));\n      // if chunk is not null or empty, push it onto the queue\n      if (!done && buffer.byteLength > 0) {\n        buffers.push(buffer);\n        bufferLength += buffer.byteLength;\n      }\n      // If we have enough bytes in our buffer, yield chunks until we don't\n      if (done || size <= bufferLength) {\n        do {\n          ({\n            cmd,\n            size\n          } = yield byteRange());\n        } while (size < bufferLength);\n      }\n    } while (!done);\n  } catch (e) {\n    (threw = true) && typeof it.throw === 'function' && it.throw(e);\n  } finally {\n    threw === false && typeof it.return === 'function' && it.return();\n  }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n  let done,\n    threw = false;\n  let buffers = [],\n    buffer;\n  let cmd,\n    size,\n    bufferLength = 0;\n  function byteRange() {\n    if (cmd === 'peek') {\n      return joinUint8Arrays(buffers, size)[0];\n    }\n    [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n    return buffer;\n  }\n  // Yield so the caller can inject the read command before creating the source AsyncIterator\n  ({\n    cmd,\n    size\n  } = yield null);\n  // initialize the iterator\n  let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n  try {\n    do {\n      // read the next value\n      ({\n        done,\n        value: buffer\n      } = isNaN(size - bufferLength) ? await it.next(undefined) : await it.next(size - bufferLength));\n      // if chunk is not null or empty, push it onto the queue\n      if (!done && buffer.byteLength > 0) {\n        buffers.push(buffer);\n        bufferLength += buffer.byteLength;\n      }\n      // If we have enough bytes in our buffer, yield chunks until we don't\n      if (done || size <= bufferLength) {\n        do {\n          ({\n            cmd,\n            size\n          } = yield byteRange());\n        } while (size < bufferLength);\n      }\n    } while (!done);\n  } catch (e) {\n    (threw = true) && typeof it.throw === 'function' && (await it.throw(e));\n  } finally {\n    threw === false && typeof it.return === 'function' && (await it.return());\n  }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n  let done = false,\n    threw = false;\n  let buffers = [],\n    buffer;\n  let cmd,\n    size,\n    bufferLength = 0;\n  function byteRange() {\n    if (cmd === 'peek') {\n      return joinUint8Arrays(buffers, size)[0];\n    }\n    [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n    return buffer;\n  }\n  // Yield so the caller can inject the read command before we establish the ReadableStream lock\n  ({\n    cmd,\n    size\n  } = yield null);\n  // initialize the reader and lock the stream\n  let it = new adapters_AdaptiveByteReader(source);\n  try {\n    do {\n      // read the next value\n      ({\n        done,\n        value: buffer\n      } = isNaN(size - bufferLength) ? await it['read'](undefined) : await it['read'](size - bufferLength));\n      // if chunk is not null or empty, push it onto the queue\n      if (!done && buffer.byteLength > 0) {\n        buffers.push(toUint8Array(buffer));\n        bufferLength += buffer.byteLength;\n      }\n      // If we have enough bytes in our buffer, yield chunks until we don't\n      if (done || size <= bufferLength) {\n        do {\n          ({\n            cmd,\n            size\n          } = yield byteRange());\n        } while (size < bufferLength);\n      }\n    } while (!done);\n  } catch (e) {\n    (threw = true) && (await it['cancel'](e));\n  } finally {\n    threw === false ? await it['cancel']() : source['locked'] && it.releaseLock();\n  }\n}\n/** @ignore */\nclass adapters_AdaptiveByteReader {\n  constructor(source) {\n    this.source = source;\n    this.byobReader = null;\n    this.defaultReader = null;\n    try {\n      this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n    } catch (e) {\n      this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n    }\n  }\n  get closed() {\n    return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n  }\n  releaseLock() {\n    if (this.reader) {\n      this.reader.releaseLock();\n    }\n    this.reader = this.byobReader = this.defaultReader = null;\n  }\n  async cancel(reason) {\n    const {\n      reader,\n      source\n    } = this;\n    reader && (await reader['cancel'](reason).catch(() => {}));\n    source && source['locked'] && this.releaseLock();\n  }\n  async read(size) {\n    if (size === 0) {\n      return {\n        done: this.reader == null,\n        value: new Uint8Array(0)\n      };\n    }\n    const result = !this.supportsBYOB || typeof size !== 'number' ? await this.getDefaultReader().read() : await this.readFromBYOBReader(size);\n    !result.done && (result.value = toUint8Array(result));\n    return result;\n  }\n  getDefaultReader() {\n    if (this.byobReader) {\n      this.releaseLock();\n    }\n    if (!this.defaultReader) {\n      this.defaultReader = this.source['getReader']();\n      // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n      // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n      // about why these errors are raised, but I'm sure there's some important spec reason that\n      // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n      // only solution in this case :/\n      this.defaultReader['closed'].catch(() => {});\n    }\n    return this.reader = this.defaultReader;\n  }\n  getBYOBReader() {\n    if (this.defaultReader) {\n      this.releaseLock();\n    }\n    if (!this.byobReader) {\n      this.byobReader = this.source['getReader']({\n        mode: 'byob'\n      });\n      // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n      // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n      // about why these errors are raised, but I'm sure there's some important spec reason that\n      // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n      // only solution in this case :/\n      this.byobReader['closed'].catch(() => {});\n    }\n    return this.reader = this.byobReader;\n  }\n  // This strategy plucked from the example in the streams spec:\n  // https://streams.spec.whatwg.org/#example-manual-read-bytes\n  async readFromBYOBReader(size) {\n    return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n  }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n  if (offset >= size) {\n    return {\n      done: false,\n      value: new Uint8Array(buffer, 0, size)\n    };\n  }\n  const {\n    done,\n    value\n  } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n  if ((offset += value.byteLength) < size && !done) {\n    return await readInto(reader, value.buffer, offset, size);\n  }\n  return {\n    done,\n    value: new Uint8Array(value.buffer, 0, offset)\n  };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n  let handler = _ => resolve([event, _]);\n  let resolve;\n  return [event, handler, new Promise(r => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n  let events = [];\n  let event = 'error';\n  let done = false,\n    err = null;\n  let cmd,\n    size,\n    bufferLength = 0;\n  let buffers = [],\n    buffer;\n  function byteRange() {\n    if (cmd === 'peek') {\n      return joinUint8Arrays(buffers, size)[0];\n    }\n    [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n    return buffer;\n  }\n  // Yield so the caller can inject the read command before we\n  // add the listener for the source stream's 'readable' event.\n  ({\n    cmd,\n    size\n  } = yield null);\n  // ignore stdin if it's a TTY\n  if (stream['isTTY']) {\n    return yield new Uint8Array(0);\n  }\n  try {\n    // initialize the stream event handlers\n    events[0] = onEvent(stream, 'end');\n    events[1] = onEvent(stream, 'error');\n    do {\n      events[2] = onEvent(stream, 'readable');\n      // wait on the first message event from the stream\n      [event, err] = await Promise.race(events.map(x => x[2]));\n      // if the stream emitted an Error, rethrow it\n      if (event === 'error') {\n        break;\n      }\n      if (!(done = event === 'end')) {\n        // If the size is NaN, request to read everything in the stream's internal buffer\n        if (!isFinite(size - bufferLength)) {\n          buffer = toUint8Array(stream['read'](undefined));\n        } else {\n          buffer = toUint8Array(stream['read'](size - bufferLength));\n          // If the byteLength is 0, then the requested amount is more than the stream has\n          // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n          // continue emitting readable events, so request to read everything the stream\n          // has in its internal buffer right now.\n          if (buffer.byteLength < size - bufferLength) {\n            buffer = toUint8Array(stream['read'](undefined));\n          }\n        }\n        // if chunk is not null or empty, push it onto the queue\n        if (buffer.byteLength > 0) {\n          buffers.push(buffer);\n          bufferLength += buffer.byteLength;\n        }\n      }\n      // If we have enough bytes in our buffer, yield chunks until we don't\n      if (done || size <= bufferLength) {\n        do {\n          ({\n            cmd,\n            size\n          } = yield byteRange());\n        } while (size < bufferLength);\n      }\n    } while (!done);\n  } finally {\n    await cleanup(events, event === 'error' ? err : null);\n  }\n  function cleanup(events, err) {\n    buffer = buffers = null;\n    return new Promise(async (resolve, reject) => {\n      for (const [evt, fn] of events) {\n        stream['off'](evt, fn);\n      }\n      try {\n        // Some stream implementations don't call the destroy callback,\n        // because it's really a node-internal API. Just calling `destroy`\n        // here should be enough to conform to the ReadableStream contract\n        const destroy = stream['destroy'];\n        destroy && destroy.call(stream, err);\n        err = undefined;\n      } catch (e) {\n        err = e || err;\n      } finally {\n        err != null ? reject(err) : resolve();\n      }\n    });\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nclass AbstractVector {}\n\n// CONCATENATED MODULE: ./node_modules/apache-arrow/fb/Schema.mjs\n/* tslint:disable:class-name */\n/**\n * @enum {number}\n */\nvar Schema_org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let MetadataVersion;\n        (function (MetadataVersion) {\n          /**\n           * 0.1.0\n           */\n          MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n          /**\n           * 0.2.0\n           */\n          MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n          /**\n           * 0.3.0 -> 0.7.1\n           */\n          MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n          /**\n           * >= 0.8.0\n           */\n          MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n        })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let UnionMode;\n        (function (UnionMode) {\n          UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n          UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n        })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let Precision;\n        (function (Precision) {\n          Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n          Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n          Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n        })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let DateUnit;\n        (function (DateUnit) {\n          DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n          DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n        })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let TimeUnit;\n        (function (TimeUnit) {\n          TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n          TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n          TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n          TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n        })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let IntervalUnit;\n        (function (IntervalUnit) {\n          IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n          IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n        })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let Type;\n        (function (Type) {\n          Type[Type[\"NONE\"] = 0] = \"NONE\";\n          Type[Type[\"Null\"] = 1] = \"Null\";\n          Type[Type[\"Int\"] = 2] = \"Int\";\n          Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n          Type[Type[\"Binary\"] = 4] = \"Binary\";\n          Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n          Type[Type[\"Bool\"] = 6] = \"Bool\";\n          Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n          Type[Type[\"Date\"] = 8] = \"Date\";\n          Type[Type[\"Time\"] = 9] = \"Time\";\n          Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n          Type[Type[\"Interval\"] = 11] = \"Interval\";\n          Type[Type[\"List\"] = 12] = \"List\";\n          Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n          Type[Type[\"Union\"] = 14] = \"Union\";\n          Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n          Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n          Type[Type[\"Map\"] = 17] = \"Map\";\n          Type[Type[\"Duration\"] = 18] = \"Duration\";\n          Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n          Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n          Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n        })(Type = flatbuf.Type || (flatbuf.Type = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let Endianness;\n        (function (Endianness) {\n          Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n          Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n        })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Null {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Null\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Null= obj\n           * @returns Null\n           */\n          static getRootAsNull(bb, obj) {\n            return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startNull(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endNull(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createNull(builder) {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n          }\n        }\n        flatbuf.Null = Null;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Struct_ {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Struct_\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Struct_= obj\n           * @returns Struct_\n           */\n          static getRootAsStruct_(bb, obj) {\n            return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startStruct_(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endStruct_(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createStruct_(builder) {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n          }\n        }\n        flatbuf.Struct_ = Struct_;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class List {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns List\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param List= obj\n           * @returns List\n           */\n          static getRootAsList(bb, obj) {\n            return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startList(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endList(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createList(builder) {\n            List.startList(builder);\n            return List.endList(builder);\n          }\n        }\n        flatbuf.List = List;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class LargeList {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns LargeList\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param LargeList= obj\n           * @returns LargeList\n           */\n          static getRootAsLargeList(bb, obj) {\n            return (obj || new LargeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startLargeList(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endLargeList(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createLargeList(builder) {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n          }\n        }\n        flatbuf.LargeList = LargeList;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class FixedSizeList {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns FixedSizeList\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param FixedSizeList= obj\n           * @returns FixedSizeList\n           */\n          static getRootAsFixedSizeList(bb, obj) {\n            return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * Number of list items per value\n           *\n           * @returns number\n           */\n          listSize() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFixedSizeList(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number listSize\n           */\n          static addListSize(builder, listSize) {\n            builder.addFieldInt32(0, listSize, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFixedSizeList(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createFixedSizeList(builder, listSize) {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n          }\n        }\n        flatbuf.FixedSizeList = FixedSizeList;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Map {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Map\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Map= obj\n           * @returns Map\n           */\n          static getRootAsMap(bb, obj) {\n            return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * Set to true if the keys within each value are sorted\n           *\n           * @returns boolean\n           */\n          keysSorted() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startMap(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param boolean keysSorted\n           */\n          static addKeysSorted(builder, keysSorted) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endMap(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createMap(builder, keysSorted) {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n          }\n        }\n        flatbuf.Map = Map;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Union {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Union\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Union= obj\n           * @returns Union\n           */\n          static getRootAsUnion(bb, obj) {\n            return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.UnionMode\n           */\n          mode() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n          }\n          /**\n           * @param number index\n           * @returns number\n           */\n          typeIds(index) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n          }\n          /**\n           * @returns number\n           */\n          typeIdsLength() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @returns Int32Array\n           */\n          typeIdsArray() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startUnion(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.UnionMode mode\n           */\n          static addMode(builder, mode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset typeIdsOffset\n           */\n          static addTypeIds(builder, typeIdsOffset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<number> data\n           * @returns flatbuffers.Offset\n           */\n          static createTypeIdsVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startTypeIdsVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endUnion(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createUnion(builder, mode, typeIdsOffset) {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n          }\n        }\n        flatbuf.Union = Union;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Int {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Int\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Int= obj\n           * @returns Int\n           */\n          static getRootAsInt(bb, obj) {\n            return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns number\n           */\n          bitWidth() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @returns boolean\n           */\n          isSigned() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startInt(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number bitWidth\n           */\n          static addBitWidth(builder, bitWidth) {\n            builder.addFieldInt32(0, bitWidth, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param boolean isSigned\n           */\n          static addIsSigned(builder, isSigned) {\n            builder.addFieldInt8(1, +isSigned, +false);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endInt(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createInt(builder, bitWidth, isSigned) {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n          }\n        }\n        flatbuf.Int = Int;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class FloatingPoint {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns FloatingPoint\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param FloatingPoint= obj\n           * @returns FloatingPoint\n           */\n          static getRootAsFloatingPoint(bb, obj) {\n            return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.Precision\n           */\n          precision() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFloatingPoint(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.Precision precision\n           */\n          static addPrecision(builder, precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFloatingPoint(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createFloatingPoint(builder, precision) {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n          }\n        }\n        flatbuf.FloatingPoint = FloatingPoint;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Utf8 {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Utf8\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Utf8= obj\n           * @returns Utf8\n           */\n          static getRootAsUtf8(bb, obj) {\n            return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startUtf8(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endUtf8(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createUtf8(builder) {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n          }\n        }\n        flatbuf.Utf8 = Utf8;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Binary {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Binary\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Binary= obj\n           * @returns Binary\n           */\n          static getRootAsBinary(bb, obj) {\n            return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startBinary(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endBinary(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createBinary(builder) {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n          }\n        }\n        flatbuf.Binary = Binary;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class LargeUtf8 {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns LargeUtf8\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param LargeUtf8= obj\n           * @returns LargeUtf8\n           */\n          static getRootAsLargeUtf8(bb, obj) {\n            return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startLargeUtf8(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endLargeUtf8(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createLargeUtf8(builder) {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n          }\n        }\n        flatbuf.LargeUtf8 = LargeUtf8;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class LargeBinary {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns LargeBinary\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param LargeBinary= obj\n           * @returns LargeBinary\n           */\n          static getRootAsLargeBinary(bb, obj) {\n            return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startLargeBinary(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endLargeBinary(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createLargeBinary(builder) {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n          }\n        }\n        flatbuf.LargeBinary = LargeBinary;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class FixedSizeBinary {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns FixedSizeBinary\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param FixedSizeBinary= obj\n           * @returns FixedSizeBinary\n           */\n          static getRootAsFixedSizeBinary(bb, obj) {\n            return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * Number of bytes per value\n           *\n           * @returns number\n           */\n          byteWidth() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFixedSizeBinary(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number byteWidth\n           */\n          static addByteWidth(builder, byteWidth) {\n            builder.addFieldInt32(0, byteWidth, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFixedSizeBinary(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createFixedSizeBinary(builder, byteWidth) {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n          }\n        }\n        flatbuf.FixedSizeBinary = FixedSizeBinary;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Bool {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Bool\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Bool= obj\n           * @returns Bool\n           */\n          static getRootAsBool(bb, obj) {\n            return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startBool(builder) {\n            builder.startObject(0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endBool(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createBool(builder) {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n          }\n        }\n        flatbuf.Bool = Bool;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Decimal {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Decimal\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Decimal= obj\n           * @returns Decimal\n           */\n          static getRootAsDecimal(bb, obj) {\n            return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * Total number of decimal digits\n           *\n           * @returns number\n           */\n          precision() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n          }\n          /**\n           * Number of digits after the decimal point \".\"\n           *\n           * @returns number\n           */\n          scale() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startDecimal(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number precision\n           */\n          static addPrecision(builder, precision) {\n            builder.addFieldInt32(0, precision, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number scale\n           */\n          static addScale(builder, scale) {\n            builder.addFieldInt32(1, scale, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endDecimal(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createDecimal(builder, precision, scale) {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n          }\n        }\n        flatbuf.Decimal = Decimal;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Date {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Date\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Date= obj\n           * @returns Date\n           */\n          static getRootAsDate(bb, obj) {\n            return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.DateUnit\n           */\n          unit() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startDate(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.DateUnit unit\n           */\n          static addUnit(builder, unit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endDate(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createDate(builder, unit) {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n          }\n        }\n        flatbuf.Date = Date;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Time {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Time\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Time= obj\n           * @returns Time\n           */\n          static getRootAsTime(bb, obj) {\n            return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.TimeUnit\n           */\n          unit() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n          }\n          /**\n           * @returns number\n           */\n          bitWidth() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startTime(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.TimeUnit unit\n           */\n          static addUnit(builder, unit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number bitWidth\n           */\n          static addBitWidth(builder, bitWidth) {\n            builder.addFieldInt32(1, bitWidth, 32);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endTime(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createTime(builder, unit, bitWidth) {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n          }\n        }\n        flatbuf.Time = Time;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Timestamp {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Timestamp\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Timestamp= obj\n           * @returns Timestamp\n           */\n          static getRootAsTimestamp(bb, obj) {\n            return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.TimeUnit\n           */\n          unit() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n          }\n          timezone(optionalEncoding) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startTimestamp(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.TimeUnit unit\n           */\n          static addUnit(builder, unit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset timezoneOffset\n           */\n          static addTimezone(builder, timezoneOffset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endTimestamp(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createTimestamp(builder, unit, timezoneOffset) {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n          }\n        }\n        flatbuf.Timestamp = Timestamp;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Interval {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Interval\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Interval= obj\n           * @returns Interval\n           */\n          static getRootAsInterval(bb, obj) {\n            return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.IntervalUnit\n           */\n          unit() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startInterval(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.IntervalUnit unit\n           */\n          static addUnit(builder, unit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endInterval(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createInterval(builder, unit) {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n          }\n        }\n        flatbuf.Interval = Interval;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Duration {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Duration\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Duration= obj\n           * @returns Duration\n           */\n          static getRootAsDuration(bb, obj) {\n            return (obj || new Duration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.TimeUnit\n           */\n          unit() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startDuration(builder) {\n            builder.startObject(1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.TimeUnit unit\n           */\n          static addUnit(builder, unit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endDuration(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createDuration(builder, unit) {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n          }\n        }\n        flatbuf.Duration = Duration;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class KeyValue {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns KeyValue\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param KeyValue= obj\n           * @returns KeyValue\n           */\n          static getRootAsKeyValue(bb, obj) {\n            return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          key(optionalEncoding) {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n          }\n          value(optionalEncoding) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startKeyValue(builder) {\n            builder.startObject(2);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset keyOffset\n           */\n          static addKey(builder, keyOffset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset valueOffset\n           */\n          static addValue(builder, valueOffset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endKeyValue(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createKeyValue(builder, keyOffset, valueOffset) {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n          }\n        }\n        flatbuf.KeyValue = KeyValue;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class DictionaryEncoding {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns DictionaryEncoding\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param DictionaryEncoding= obj\n           * @returns DictionaryEncoding\n           */\n          static getRootAsDictionaryEncoding(bb, obj) {\n            return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * The known dictionary id in the application where this data is used. In\n           * the file or streaming formats, the dictionary ids are found in the\n           * DictionaryBatch messages\n           *\n           * @returns flatbuffers.Long\n           */\n          id() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n          }\n          /**\n           * The dictionary indices are constrained to be positive integers. If this\n           * field is null, the indices must be signed int32\n           *\n           * @param org.apache.arrow.flatbuf.Int= obj\n           * @returns org.apache.arrow.flatbuf.Int|null\n           */\n          indexType(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * By default, dictionaries are not ordered, or the order does not have\n           * semantic meaning. In some statistical, applications, dictionary-encoding\n           * is used to represent ordered categorical data, and we provide a way to\n           * preserve that metadata here\n           *\n           * @returns boolean\n           */\n          isOrdered() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startDictionaryEncoding(builder) {\n            builder.startObject(3);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long id\n           */\n          static addId(builder, id) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset indexTypeOffset\n           */\n          static addIndexType(builder, indexTypeOffset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param boolean isOrdered\n           */\n          static addIsOrdered(builder, isOrdered) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endDictionaryEncoding(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n          }\n        }\n        flatbuf.DictionaryEncoding = DictionaryEncoding;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Field {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Field\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Field= obj\n           * @returns Field\n           */\n          static getRootAsField(bb, obj) {\n            return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          name(optionalEncoding) {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n          }\n          /**\n           * Whether or not this field can contain nulls. Should be true in general.\n           *\n           * @returns boolean\n           */\n          nullable() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.Type\n           */\n          typeType() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? ( /**  */this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n          }\n          /**\n           * This is the type of the decoded value if the field is dictionary encoded.\n           *\n           * @param flatbuffers.Table obj\n           * @returns ?flatbuffers.Table\n           */\n          type(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n          }\n          /**\n           * Present only if the field is dictionary encoded.\n           *\n           * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n           * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n           */\n          dictionary(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * children apply only to nested data types like Struct, List and Union. For\n           * primitive types children will have length 0.\n           *\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Field= obj\n           * @returns org.apache.arrow.flatbuf.Field\n           */\n          children(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          childrenLength() {\n            let offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * User-defined metadata\n           *\n           * @param number index\n           * @param org.apache.arrow.flatbuf.KeyValue= obj\n           * @returns org.apache.arrow.flatbuf.KeyValue\n           */\n          customMetadata(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          customMetadataLength() {\n            let offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startField(builder) {\n            builder.startObject(7);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset nameOffset\n           */\n          static addName(builder, nameOffset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param boolean nullable\n           */\n          static addNullable(builder, nullable) {\n            builder.addFieldInt8(1, +nullable, +false);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.Type typeType\n           */\n          static addTypeType(builder, typeType) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset typeOffset\n           */\n          static addType(builder, typeOffset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionaryOffset\n           */\n          static addDictionary(builder, dictionaryOffset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset childrenOffset\n           */\n          static addChildren(builder, childrenOffset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<flatbuffers.Offset> data\n           * @returns flatbuffers.Offset\n           */\n          static createChildrenVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startChildrenVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset customMetadataOffset\n           */\n          static addCustomMetadata(builder, customMetadataOffset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<flatbuffers.Offset> data\n           * @returns flatbuffers.Offset\n           */\n          static createCustomMetadataVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startCustomMetadataVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endField(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n          }\n        }\n        flatbuf.Field = Field;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Buffer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Buffer\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * The relative offset into the shared memory page where the bytes for this\n           * buffer starts\n           *\n           * @returns flatbuffers.Long\n           */\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * The absolute length (in bytes) of the memory buffer. The memory is found\n           * from offset (inclusive) to offset + length (non-inclusive).\n           *\n           * @returns flatbuffers.Long\n           */\n          length() {\n            return this.bb.readInt64(this.bb_pos + 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param flatbuffers.Long length\n           * @returns flatbuffers.Offset\n           */\n          static createBuffer(builder, offset, length) {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n        }\n        flatbuf.Buffer = Buffer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Schema {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Schema\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Schema= obj\n           * @returns Schema\n           */\n          static getRootAsSchema(bb, obj) {\n            return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * endianness of the buffer\n           * it is Little Endian by default\n           * if endianness doesn't match the underlying system then the vectors need to be converted\n           *\n           * @returns org.apache.arrow.flatbuf.Endianness\n           */\n          endianness() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Field= obj\n           * @returns org.apache.arrow.flatbuf.Field\n           */\n          fields(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          fieldsLength() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.KeyValue= obj\n           * @returns org.apache.arrow.flatbuf.KeyValue\n           */\n          customMetadata(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          customMetadataLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startSchema(builder) {\n            builder.startObject(3);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.Endianness endianness\n           */\n          static addEndianness(builder, endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset fieldsOffset\n           */\n          static addFields(builder, fieldsOffset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<flatbuffers.Offset> data\n           * @returns flatbuffers.Offset\n           */\n          static createFieldsVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startFieldsVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset customMetadataOffset\n           */\n          static addCustomMetadata(builder, customMetadataOffset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<flatbuffers.Offset> data\n           * @returns flatbuffers.Offset\n           */\n          static createCustomMetadataVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startCustomMetadataVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endSchema(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n          static finishSchemaBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n          static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n          }\n        }\n        flatbuf.Schema = Schema;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Schema_org || (Schema_org = {}));\n// CONCATENATED MODULE: ./node_modules/apache-arrow/fb/Message.mjs\n// automatically generated by the FlatBuffers compiler, do not modify\n\nvar Message_org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        flatbuf.Schema = Schema_org.apache.arrow.flatbuf.Schema;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        let MessageHeader;\n        (function (MessageHeader) {\n          MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n          MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n          MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n          MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n          MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n          MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n        })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class FieldNode {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns FieldNode\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * The number of value slots in the Arrow array at this level of a nested\n           * tree\n           *\n           * @returns flatbuffers.Long\n           */\n          length() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * The number of observed nulls. Fields with null_count == 0 may choose not\n           * to write their physical validity bitmap out as a materialized buffer,\n           * instead setting the length of the bitmap buffer to 0.\n           *\n           * @returns flatbuffers.Long\n           */\n          nullCount() {\n            return this.bb.readInt64(this.bb_pos + 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long length\n           * @param flatbuffers.Long null_count\n           * @returns flatbuffers.Offset\n           */\n          static createFieldNode(builder, length, null_count) {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n          }\n        }\n        flatbuf.FieldNode = FieldNode;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class RecordBatch {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns RecordBatch\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param RecordBatch= obj\n           * @returns RecordBatch\n           */\n          static getRootAsRecordBatch(bb, obj) {\n            return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * number of records / rows. The arrays in the batch should all have this\n           * length\n           *\n           * @returns flatbuffers.Long\n           */\n          length() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n          }\n          /**\n           * Nodes correspond to the pre-ordered flattened logical schema\n           *\n           * @param number index\n           * @param org.apache.arrow.flatbuf.FieldNode= obj\n           * @returns org.apache.arrow.flatbuf.FieldNode\n           */\n          nodes(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          nodesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * Buffers correspond to the pre-ordered flattened buffer tree\n           *\n           * The number of buffers appended to this list depends on the schema. For\n           * example, most primitive arrays will have 2 buffers, 1 for the validity\n           * bitmap and 1 for the values. For struct arrays, there will only be a\n           * single buffer for the validity (nulls) bitmap\n           *\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Buffer= obj\n           * @returns org.apache.arrow.flatbuf.Buffer\n           */\n          buffers(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new Schema_org.apache.arrow.flatbuf.Buffer()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          buffersLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startRecordBatch(builder) {\n            builder.startObject(3);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long length\n           */\n          static addLength(builder, length) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset nodesOffset\n           */\n          static addNodes(builder, nodesOffset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startNodesVector(builder, numElems) {\n            builder.startVector(16, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset buffersOffset\n           */\n          static addBuffers(builder, buffersOffset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startBuffersVector(builder, numElems) {\n            builder.startVector(16, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endRecordBatch(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n          }\n        }\n        flatbuf.RecordBatch = RecordBatch;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class DictionaryBatch {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns DictionaryBatch\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param DictionaryBatch= obj\n           * @returns DictionaryBatch\n           */\n          static getRootAsDictionaryBatch(bb, obj) {\n            return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns flatbuffers.Long\n           */\n          id() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.RecordBatch= obj\n           * @returns org.apache.arrow.flatbuf.RecordBatch|null\n           */\n          data(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * If isDelta is true the values in the dictionary are to be appended to a\n           * dictionary with the indicated id\n           *\n           * @returns boolean\n           */\n          isDelta() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startDictionaryBatch(builder) {\n            builder.startObject(3);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long id\n           */\n          static addId(builder, id) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dataOffset\n           */\n          static addData(builder, dataOffset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param boolean isDelta\n           */\n          static addIsDelta(builder, isDelta) {\n            builder.addFieldInt8(2, +isDelta, +false);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endDictionaryBatch(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n          }\n        }\n        flatbuf.DictionaryBatch = DictionaryBatch;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Message {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Message\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Message= obj\n           * @returns Message\n           */\n          static getRootAsMessage(bb, obj) {\n            return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : Schema_org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MessageHeader\n           */\n          headerType() {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? ( /**  */this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n          }\n          /**\n           * @param flatbuffers.Table obj\n           * @returns ?flatbuffers.Table\n           */\n          header(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n          }\n          /**\n           * @returns flatbuffers.Long\n           */\n          bodyLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.KeyValue= obj\n           * @returns org.apache.arrow.flatbuf.KeyValue\n           */\n          customMetadata(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? (obj || new Schema_org.apache.arrow.flatbuf.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          customMetadataLength() {\n            let offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startMessage(builder) {\n            builder.startObject(5);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, Schema_org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MessageHeader headerType\n           */\n          static addHeaderType(builder, headerType) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset headerOffset\n           */\n          static addHeader(builder, headerOffset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long bodyLength\n           */\n          static addBodyLength(builder, bodyLength) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset customMetadataOffset\n           */\n          static addCustomMetadata(builder, customMetadataOffset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param Array.<flatbuffers.Offset> data\n           * @returns flatbuffers.Offset\n           */\n          static createCustomMetadataVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n              builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startCustomMetadataVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endMessage(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n          static finishMessageBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n          static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n          }\n        }\n        flatbuf.Message = Message;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(Message_org || (Message_org = {}));\n// CONCATENATED MODULE: ./node_modules/apache-arrow/enum.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\nvar enum_ArrowType = Schema_org.apache.arrow.flatbuf.Type;\nvar DateUnit = Schema_org.apache.arrow.flatbuf.DateUnit;\nvar TimeUnit = Schema_org.apache.arrow.flatbuf.TimeUnit;\nvar Precision = Schema_org.apache.arrow.flatbuf.Precision;\nvar UnionMode = Schema_org.apache.arrow.flatbuf.UnionMode;\nvar IntervalUnit = Schema_org.apache.arrow.flatbuf.IntervalUnit;\nvar MessageHeader = Message_org.apache.arrow.flatbuf.MessageHeader;\nvar MetadataVersion = Schema_org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nvar Type;\n(function (Type) {\n  /** The default placeholder type */\n  Type[Type[\"NONE\"] = 0] = \"NONE\";\n  /** A NULL type having no physical storage */\n  Type[Type[\"Null\"] = 1] = \"Null\";\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Type[Type[\"Int\"] = 2] = \"Int\";\n  /** 2, 4, or 8-byte floating point value */\n  Type[Type[\"Float\"] = 3] = \"Float\";\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Type[Type[\"Binary\"] = 4] = \"Binary\";\n  /** UTF8 variable-length string as List<Char> */\n  Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Type[Type[\"Bool\"] = 6] = \"Bool\";\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Type[Type[\"Date\"] = 8] = \"Date\";\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Type[Type[\"Time\"] = 9] = \"Time\";\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Type[Type[\"Interval\"] = 11] = \"Interval\";\n  /** A list of some logical data type */\n  Type[Type[\"List\"] = 12] = \"List\";\n  /** Struct of logical types */\n  Type[Type[\"Struct\"] = 13] = \"Struct\";\n  /** Union of logical types */\n  Type[Type[\"Union\"] = 14] = \"Union\";\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n  /** Map of named logical types */\n  Type[Type[\"Map\"] = 17] = \"Map\";\n  /** Dictionary aka Category type */\n  Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n  Type[Type[\"Int8\"] = -2] = \"Int8\";\n  Type[Type[\"Int16\"] = -3] = \"Int16\";\n  Type[Type[\"Int32\"] = -4] = \"Int32\";\n  Type[Type[\"Int64\"] = -5] = \"Int64\";\n  Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n  Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n  Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n  Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n  Type[Type[\"Float16\"] = -10] = \"Float16\";\n  Type[Type[\"Float32\"] = -11] = \"Float32\";\n  Type[Type[\"Float64\"] = -12] = \"Float64\";\n  Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n  Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n  Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n  Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n  Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n  Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n  Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n  Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n  Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n  Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n  Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n  Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n  Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n  Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nvar BufferType;\n(function (BufferType) {\n  /**\n   * used in List type, Dense Union and variable length primitive types (String, Binary)\n   */\n  BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n  /**\n   * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n   */\n  BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n  /**\n   * Bit vector indicating if each value is null\n   */\n  BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n  /**\n   * Type vector used in Union type\n   */\n  BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/bit.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nfunction getBool(_data, _index, byte, bit) {\n  return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nfunction getBit(_data, _index, byte, bit) {\n  return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nfunction setBool(bytes, index, value) {\n  return value ? !!(bytes[index >> 3] |= 1 << index % 8) || true : !(bytes[index >> 3] &= ~(1 << index % 8)) && false;\n}\n/** @ignore */\nfunction truncateBitmap(offset, length, bitmap) {\n  const alignedSize = bitmap.byteLength + 7 & ~7;\n  if (offset > 0 || bitmap.byteLength < alignedSize) {\n    const bytes = new Uint8Array(alignedSize);\n    // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n    bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n    // Otherwise iterate each bit from the offset and return a new one\n    packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n    return bytes;\n  }\n  return bitmap;\n}\n/** @ignore */\nfunction packBools(values) {\n  let xs = [];\n  let i = 0,\n    bit = 0,\n    byte = 0;\n  for (const value of values) {\n    value && (byte |= 1 << bit);\n    if (++bit === 8) {\n      xs[i++] = byte;\n      byte = bit = 0;\n    }\n  }\n  if (i === 0 || bit > 0) {\n    xs[i++] = byte;\n  }\n  let b = new Uint8Array(xs.length + 7 & ~7);\n  b.set(xs);\n  return b;\n}\n/** @ignore */\nfunction* iterateBits(bytes, begin, length, context, get) {\n  let bit = begin % 8;\n  let byteIndex = begin >> 3;\n  let index = 0,\n    remaining = length;\n  for (; remaining > 0; bit = 0) {\n    let byte = bytes[byteIndex++];\n    do {\n      yield get(context, index++, byte, bit);\n    } while (--remaining > 0 && ++bit < 8);\n  }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nfunction popcnt_bit_range(data, lhs, rhs) {\n  if (rhs - lhs <= 0) {\n    return 0;\n  }\n  // If the bit range is less than one byte, sum the 1 bits in the bit range\n  if (rhs - lhs < 8) {\n    let sum = 0;\n    for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n      sum += bit;\n    }\n    return sum;\n  }\n  // Get the next lowest multiple of 8 from the right hand side\n  const rhsInside = rhs >> 3 << 3;\n  // Get the next highest multiple of 8 from the left hand side\n  const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n  return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n    // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n    popcnt_bit_range(data, rhsInside, rhs) +\n    // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n    popcnt_array(data, lhsInside >> 3, rhsInside - lhsInside >> 3)\n  );\n}\n/** @ignore */\nfunction popcnt_array(arr, byteOffset, byteLength) {\n  let cnt = 0,\n    pos = byteOffset | 0;\n  const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n  const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n  while (len - pos >= 4) {\n    cnt += popcnt_uint32(view.getUint32(pos));\n    pos += 4;\n  }\n  while (len - pos >= 2) {\n    cnt += popcnt_uint32(view.getUint16(pos));\n    pos += 2;\n  }\n  while (len - pos >= 1) {\n    cnt += popcnt_uint32(view.getUint8(pos));\n    pos += 1;\n  }\n  return cnt;\n}\n/** @ignore */\nfunction popcnt_uint32(uint32) {\n  let i = uint32 | 0;\n  i = i - (i >>> 1 & 0x55555555);\n  i = (i & 0x33333333) + (i >>> 2 & 0x33333333);\n  return (i + (i >>> 4) & 0x0F0F0F0F) * 0x01010101 >>> 24;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\nclass Visitor {\n  visitMany(nodes) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return nodes.map((node, i) => this.visit(node, ...args.map(x => x[i])));\n  }\n  visit() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.getVisitFn(args[0], false).apply(this, args);\n  }\n  getVisitFn(node) {\n    let throwIfNotFound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return getVisitFn(this, node, throwIfNotFound);\n  }\n  visitNull(_node) {\n    return null;\n  }\n  visitBool(_node) {\n    return null;\n  }\n  visitInt(_node) {\n    return null;\n  }\n  visitFloat(_node) {\n    return null;\n  }\n  visitUtf8(_node) {\n    return null;\n  }\n  visitBinary(_node) {\n    return null;\n  }\n  visitFixedSizeBinary(_node) {\n    return null;\n  }\n  visitDate(_node) {\n    return null;\n  }\n  visitTimestamp(_node) {\n    return null;\n  }\n  visitTime(_node) {\n    return null;\n  }\n  visitDecimal(_node) {\n    return null;\n  }\n  visitList(_node) {\n    return null;\n  }\n  visitStruct(_node) {\n    return null;\n  }\n  visitUnion(_node) {\n    return null;\n  }\n  visitDictionary(_node) {\n    return null;\n  }\n  visitInterval(_node) {\n    return null;\n  }\n  visitFixedSizeList(_node) {\n    return null;\n  }\n  visitMap(_node) {\n    return null;\n  }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node) {\n  let throwIfNotFound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let fn = null;\n  let dtype = Type.NONE;\n  // tslint:disable\n  if (node instanceof data_Data) {\n    dtype = inferDType(node.type);\n  } else if (node instanceof AbstractVector) {\n    dtype = inferDType(node.type);\n  } else if (node instanceof type_DataType) {\n    dtype = inferDType(node);\n  } else if (typeof (dtype = node) !== 'number') {\n    dtype = Type[node];\n  }\n  switch (dtype) {\n    case Type.Null:\n      fn = visitor.visitNull;\n      break;\n    case Type.Bool:\n      fn = visitor.visitBool;\n      break;\n    case Type.Int:\n      fn = visitor.visitInt;\n      break;\n    case Type.Int8:\n      fn = visitor.visitInt8 || visitor.visitInt;\n      break;\n    case Type.Int16:\n      fn = visitor.visitInt16 || visitor.visitInt;\n      break;\n    case Type.Int32:\n      fn = visitor.visitInt32 || visitor.visitInt;\n      break;\n    case Type.Int64:\n      fn = visitor.visitInt64 || visitor.visitInt;\n      break;\n    case Type.Uint8:\n      fn = visitor.visitUint8 || visitor.visitInt;\n      break;\n    case Type.Uint16:\n      fn = visitor.visitUint16 || visitor.visitInt;\n      break;\n    case Type.Uint32:\n      fn = visitor.visitUint32 || visitor.visitInt;\n      break;\n    case Type.Uint64:\n      fn = visitor.visitUint64 || visitor.visitInt;\n      break;\n    case Type.Float:\n      fn = visitor.visitFloat;\n      break;\n    case Type.Float16:\n      fn = visitor.visitFloat16 || visitor.visitFloat;\n      break;\n    case Type.Float32:\n      fn = visitor.visitFloat32 || visitor.visitFloat;\n      break;\n    case Type.Float64:\n      fn = visitor.visitFloat64 || visitor.visitFloat;\n      break;\n    case Type.Utf8:\n      fn = visitor.visitUtf8;\n      break;\n    case Type.Binary:\n      fn = visitor.visitBinary;\n      break;\n    case Type.FixedSizeBinary:\n      fn = visitor.visitFixedSizeBinary;\n      break;\n    case Type.Date:\n      fn = visitor.visitDate;\n      break;\n    case Type.DateDay:\n      fn = visitor.visitDateDay || visitor.visitDate;\n      break;\n    case Type.DateMillisecond:\n      fn = visitor.visitDateMillisecond || visitor.visitDate;\n      break;\n    case Type.Timestamp:\n      fn = visitor.visitTimestamp;\n      break;\n    case Type.TimestampSecond:\n      fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n      break;\n    case Type.TimestampMillisecond:\n      fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n      break;\n    case Type.TimestampMicrosecond:\n      fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n      break;\n    case Type.TimestampNanosecond:\n      fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n      break;\n    case Type.Time:\n      fn = visitor.visitTime;\n      break;\n    case Type.TimeSecond:\n      fn = visitor.visitTimeSecond || visitor.visitTime;\n      break;\n    case Type.TimeMillisecond:\n      fn = visitor.visitTimeMillisecond || visitor.visitTime;\n      break;\n    case Type.TimeMicrosecond:\n      fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n      break;\n    case Type.TimeNanosecond:\n      fn = visitor.visitTimeNanosecond || visitor.visitTime;\n      break;\n    case Type.Decimal:\n      fn = visitor.visitDecimal;\n      break;\n    case Type.List:\n      fn = visitor.visitList;\n      break;\n    case Type.Struct:\n      fn = visitor.visitStruct;\n      break;\n    case Type.Union:\n      fn = visitor.visitUnion;\n      break;\n    case Type.DenseUnion:\n      fn = visitor.visitDenseUnion || visitor.visitUnion;\n      break;\n    case Type.SparseUnion:\n      fn = visitor.visitSparseUnion || visitor.visitUnion;\n      break;\n    case Type.Dictionary:\n      fn = visitor.visitDictionary;\n      break;\n    case Type.Interval:\n      fn = visitor.visitInterval;\n      break;\n    case Type.IntervalDayTime:\n      fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n      break;\n    case Type.IntervalYearMonth:\n      fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n      break;\n    case Type.FixedSizeList:\n      fn = visitor.visitFixedSizeList;\n      break;\n    case Type.Map:\n      fn = visitor.visitMap;\n      break;\n  }\n  if (typeof fn === 'function') return fn;\n  if (!throwIfNotFound) return () => null;\n  throw new Error(\"Unrecognized type '\".concat(Type[dtype], \"'\"));\n}\n/** @ignore */\nfunction inferDType(type) {\n  switch (type.typeId) {\n    case Type.Null:\n      return Type.Null;\n    case Type.Int:\n      const {\n        bitWidth,\n        isSigned\n      } = type;\n      switch (bitWidth) {\n        case 8:\n          return isSigned ? Type.Int8 : Type.Uint8;\n        case 16:\n          return isSigned ? Type.Int16 : Type.Uint16;\n        case 32:\n          return isSigned ? Type.Int32 : Type.Uint32;\n        case 64:\n          return isSigned ? Type.Int64 : Type.Uint64;\n      }\n      return Type.Int;\n    case Type.Float:\n      switch (type.precision) {\n        case Precision.HALF:\n          return Type.Float16;\n        case Precision.SINGLE:\n          return Type.Float32;\n        case Precision.DOUBLE:\n          return Type.Float64;\n      }\n      return Type.Float;\n    case Type.Binary:\n      return Type.Binary;\n    case Type.Utf8:\n      return Type.Utf8;\n    case Type.Bool:\n      return Type.Bool;\n    case Type.Decimal:\n      return Type.Decimal;\n    case Type.Time:\n      switch (type.unit) {\n        case TimeUnit.SECOND:\n          return Type.TimeSecond;\n        case TimeUnit.MILLISECOND:\n          return Type.TimeMillisecond;\n        case TimeUnit.MICROSECOND:\n          return Type.TimeMicrosecond;\n        case TimeUnit.NANOSECOND:\n          return Type.TimeNanosecond;\n      }\n      return Type.Time;\n    case Type.Timestamp:\n      switch (type.unit) {\n        case TimeUnit.SECOND:\n          return Type.TimestampSecond;\n        case TimeUnit.MILLISECOND:\n          return Type.TimestampMillisecond;\n        case TimeUnit.MICROSECOND:\n          return Type.TimestampMicrosecond;\n        case TimeUnit.NANOSECOND:\n          return Type.TimestampNanosecond;\n      }\n      return Type.Timestamp;\n    case Type.Date:\n      switch (type.unit) {\n        case DateUnit.DAY:\n          return Type.DateDay;\n        case DateUnit.MILLISECOND:\n          return Type.DateMillisecond;\n      }\n      return Type.Date;\n    case Type.Interval:\n      switch (type.unit) {\n        case IntervalUnit.DAY_TIME:\n          return Type.IntervalDayTime;\n        case IntervalUnit.YEAR_MONTH:\n          return Type.IntervalYearMonth;\n      }\n      return Type.Interval;\n    case Type.Map:\n      return Type.Map;\n    case Type.List:\n      return Type.List;\n    case Type.Struct:\n      return Type.Struct;\n    case Type.Union:\n      switch (type.mode) {\n        case UnionMode.Dense:\n          return Type.DenseUnion;\n        case UnionMode.Sparse:\n          return Type.SparseUnion;\n      }\n      return Type.Union;\n    case Type.FixedSizeBinary:\n      return Type.FixedSizeBinary;\n    case Type.FixedSizeList:\n      return Type.FixedSizeList;\n    case Type.Dictionary:\n      return Type.Dictionary;\n  }\n  throw new Error(\"Unrecognized type '\".concat(Type[type.typeId], \"'\"));\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/typecomparator.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass typecomparator_TypeComparator extends Visitor {\n  compareSchemas(schema, other) {\n    return schema === other || other instanceof schema.constructor && instance.compareFields(schema.fields, other.fields);\n  }\n  compareFields(fields, others) {\n    return fields === others || Array.isArray(fields) && Array.isArray(others) && fields.length === others.length && fields.every((f, i) => instance.compareField(f, others[i]));\n  }\n  compareField(field, other) {\n    return field === other || other instanceof field.constructor && field.name === other.name && field.nullable === other.nullable && instance.visit(field.type, other.type);\n  }\n}\nfunction compareConstructor(type, other) {\n  return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n  return type === other || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n  return type === other || compareConstructor(type, other) && type.bitWidth === other.bitWidth && type.isSigned === other.isSigned;\n}\nfunction compareFloat(type, other) {\n  return type === other || compareConstructor(type, other) && type.precision === other.precision;\n}\nfunction compareFixedSizeBinary(type, other) {\n  return type === other || compareConstructor(type, other) && type.byteWidth === other.byteWidth;\n}\nfunction compareDate(type, other) {\n  return type === other || compareConstructor(type, other) && type.unit === other.unit;\n}\nfunction compareTimestamp(type, other) {\n  return type === other || compareConstructor(type, other) && type.unit === other.unit && type.timezone === other.timezone;\n}\nfunction compareTime(type, other) {\n  return type === other || compareConstructor(type, other) && type.unit === other.unit && type.bitWidth === other.bitWidth;\n}\nfunction compareList(type, other) {\n  return type === other || compareConstructor(type, other) && type.children.length === other.children.length && instance.compareFields(type.children, other.children);\n}\nfunction compareStruct(type, other) {\n  return type === other || compareConstructor(type, other) && type.children.length === other.children.length && instance.compareFields(type.children, other.children);\n}\nfunction compareUnion(type, other) {\n  return type === other || compareConstructor(type, other) && type.mode === other.mode && type.typeIds.every((x, i) => x === other.typeIds[i]) && instance.compareFields(type.children, other.children);\n}\nfunction compareDictionary(type, other) {\n  return type === other || compareConstructor(type, other) && type.id === other.id && type.isOrdered === other.isOrdered && instance.visit(type.indices, other.indices) && instance.visit(type.dictionary, other.dictionary);\n}\nfunction compareInterval(type, other) {\n  return type === other || compareConstructor(type, other) && type.unit === other.unit;\n}\nfunction compareFixedSizeList(type, other) {\n  return type === other || compareConstructor(type, other) && type.listSize === other.listSize && type.children.length === other.children.length && instance.compareFields(type.children, other.children);\n}\nfunction compareMap(type, other) {\n  return type === other || compareConstructor(type, other) && type.keysSorted === other.keysSorted && type.children.length === other.children.length && instance.compareFields(type.children, other.children);\n}\ntypecomparator_TypeComparator.prototype.visitNull = compareAny;\ntypecomparator_TypeComparator.prototype.visitBool = compareAny;\ntypecomparator_TypeComparator.prototype.visitInt = compareInt;\ntypecomparator_TypeComparator.prototype.visitInt8 = compareInt;\ntypecomparator_TypeComparator.prototype.visitInt16 = compareInt;\ntypecomparator_TypeComparator.prototype.visitInt32 = compareInt;\ntypecomparator_TypeComparator.prototype.visitInt64 = compareInt;\ntypecomparator_TypeComparator.prototype.visitUint8 = compareInt;\ntypecomparator_TypeComparator.prototype.visitUint16 = compareInt;\ntypecomparator_TypeComparator.prototype.visitUint32 = compareInt;\ntypecomparator_TypeComparator.prototype.visitUint64 = compareInt;\ntypecomparator_TypeComparator.prototype.visitFloat = compareFloat;\ntypecomparator_TypeComparator.prototype.visitFloat16 = compareFloat;\ntypecomparator_TypeComparator.prototype.visitFloat32 = compareFloat;\ntypecomparator_TypeComparator.prototype.visitFloat64 = compareFloat;\ntypecomparator_TypeComparator.prototype.visitUtf8 = compareAny;\ntypecomparator_TypeComparator.prototype.visitBinary = compareAny;\ntypecomparator_TypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\ntypecomparator_TypeComparator.prototype.visitDate = compareDate;\ntypecomparator_TypeComparator.prototype.visitDateDay = compareDate;\ntypecomparator_TypeComparator.prototype.visitDateMillisecond = compareDate;\ntypecomparator_TypeComparator.prototype.visitTimestamp = compareTimestamp;\ntypecomparator_TypeComparator.prototype.visitTimestampSecond = compareTimestamp;\ntypecomparator_TypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\ntypecomparator_TypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\ntypecomparator_TypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\ntypecomparator_TypeComparator.prototype.visitTime = compareTime;\ntypecomparator_TypeComparator.prototype.visitTimeSecond = compareTime;\ntypecomparator_TypeComparator.prototype.visitTimeMillisecond = compareTime;\ntypecomparator_TypeComparator.prototype.visitTimeMicrosecond = compareTime;\ntypecomparator_TypeComparator.prototype.visitTimeNanosecond = compareTime;\ntypecomparator_TypeComparator.prototype.visitDecimal = compareAny;\ntypecomparator_TypeComparator.prototype.visitList = compareList;\ntypecomparator_TypeComparator.prototype.visitStruct = compareStruct;\ntypecomparator_TypeComparator.prototype.visitUnion = compareUnion;\ntypecomparator_TypeComparator.prototype.visitDenseUnion = compareUnion;\ntypecomparator_TypeComparator.prototype.visitSparseUnion = compareUnion;\ntypecomparator_TypeComparator.prototype.visitDictionary = compareDictionary;\ntypecomparator_TypeComparator.prototype.visitInterval = compareInterval;\ntypecomparator_TypeComparator.prototype.visitIntervalDayTime = compareInterval;\ntypecomparator_TypeComparator.prototype.visitIntervalYearMonth = compareInterval;\ntypecomparator_TypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\ntypecomparator_TypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nconst instance = new typecomparator_TypeComparator();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/type.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nclass type_DataType {\n  /** @nocollapse */static isNull(x) {\n    return x && x.typeId === Type.Null;\n  }\n  /** @nocollapse */\n  static isInt(x) {\n    return x && x.typeId === Type.Int;\n  }\n  /** @nocollapse */\n  static isFloat(x) {\n    return x && x.typeId === Type.Float;\n  }\n  /** @nocollapse */\n  static isBinary(x) {\n    return x && x.typeId === Type.Binary;\n  }\n  /** @nocollapse */\n  static isUtf8(x) {\n    return x && x.typeId === Type.Utf8;\n  }\n  /** @nocollapse */\n  static isBool(x) {\n    return x && x.typeId === Type.Bool;\n  }\n  /** @nocollapse */\n  static isDecimal(x) {\n    return x && x.typeId === Type.Decimal;\n  }\n  /** @nocollapse */\n  static isDate(x) {\n    return x && x.typeId === Type.Date;\n  }\n  /** @nocollapse */\n  static isTime(x) {\n    return x && x.typeId === Type.Time;\n  }\n  /** @nocollapse */\n  static isTimestamp(x) {\n    return x && x.typeId === Type.Timestamp;\n  }\n  /** @nocollapse */\n  static isInterval(x) {\n    return x && x.typeId === Type.Interval;\n  }\n  /** @nocollapse */\n  static isList(x) {\n    return x && x.typeId === Type.List;\n  }\n  /** @nocollapse */\n  static isStruct(x) {\n    return x && x.typeId === Type.Struct;\n  }\n  /** @nocollapse */\n  static isUnion(x) {\n    return x && x.typeId === Type.Union;\n  }\n  /** @nocollapse */\n  static isFixedSizeBinary(x) {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  /** @nocollapse */\n  static isFixedSizeList(x) {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  /** @nocollapse */\n  static isMap(x) {\n    return x && x.typeId === Type.Map;\n  }\n  /** @nocollapse */\n  static isDictionary(x) {\n    return x && x.typeId === Type.Dictionary;\n  }\n  get typeId() {\n    return Type.NONE;\n  }\n  compareTo(other) {\n    return instance.visit(this, other);\n  }\n}\ntype_DataType[Symbol.toStringTag] = (proto => {\n  proto.children = null;\n  proto.ArrayType = Array;\n  return proto[Symbol.toStringTag] = 'DataType';\n})(type_DataType.prototype);\n/** @ignore */\nclass type_Null extends type_DataType {\n  toString() {\n    return \"Null\";\n  }\n  get typeId() {\n    return Type.Null;\n  }\n}\ntype_Null[Symbol.toStringTag] = (proto => {\n  return proto[Symbol.toStringTag] = 'Null';\n})(type_Null.prototype);\n/** @ignore */\nclass type_Int_ extends type_DataType {\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Int;\n  }\n  get ArrayType() {\n    switch (this.bitWidth) {\n      case 8:\n        return this.isSigned ? Int8Array : Uint8Array;\n      case 16:\n        return this.isSigned ? Int16Array : Uint16Array;\n      case 32:\n        return this.isSigned ? Int32Array : Uint32Array;\n      case 64:\n        return this.isSigned ? Int32Array : Uint32Array;\n    }\n    throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n  }\n  toString() {\n    return \"\".concat(this.isSigned ? \"I\" : \"Ui\", \"nt\").concat(this.bitWidth);\n  }\n}\ntype_Int_[Symbol.toStringTag] = (proto => {\n  proto.isSigned = null;\n  proto.bitWidth = null;\n  return proto[Symbol.toStringTag] = 'Int';\n})(type_Int_.prototype);\n\n/** @ignore */\nclass Int8 extends type_Int_ {\n  constructor() {\n    super(true, 8);\n  }\n}\n/** @ignore */\nclass Int16 extends type_Int_ {\n  constructor() {\n    super(true, 16);\n  }\n}\n/** @ignore */\nclass Int32 extends type_Int_ {\n  constructor() {\n    super(true, 32);\n  }\n}\n/** @ignore */\nclass Int64 extends type_Int_ {\n  constructor() {\n    super(true, 64);\n  }\n}\n/** @ignore */\nclass Uint8 extends type_Int_ {\n  constructor() {\n    super(false, 8);\n  }\n}\n/** @ignore */\nclass Uint16 extends type_Int_ {\n  constructor() {\n    super(false, 16);\n  }\n}\n/** @ignore */\nclass Uint32 extends type_Int_ {\n  constructor() {\n    super(false, 32);\n  }\n}\n/** @ignore */\nclass Uint64 extends type_Int_ {\n  constructor() {\n    super(false, 64);\n  }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', {\n  value: Int8Array\n});\nObject.defineProperty(Int16.prototype, 'ArrayType', {\n  value: Int16Array\n});\nObject.defineProperty(Int32.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Int64.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Uint8.prototype, 'ArrayType', {\n  value: Uint8Array\n});\nObject.defineProperty(Uint16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Uint32.prototype, 'ArrayType', {\n  value: Uint32Array\n});\nObject.defineProperty(Uint64.prototype, 'ArrayType', {\n  value: Uint32Array\n});\n/** @ignore */\nclass type_Float extends type_DataType {\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId() {\n    return Type.Float;\n  }\n  get ArrayType() {\n    switch (this.precision) {\n      case Precision.HALF:\n        return Uint16Array;\n      case Precision.SINGLE:\n        return Float32Array;\n      case Precision.DOUBLE:\n        return Float64Array;\n    }\n    throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n  }\n  toString() {\n    return \"Float\".concat(this.precision << 5 || 16);\n  }\n}\ntype_Float[Symbol.toStringTag] = (proto => {\n  proto.precision = null;\n  return proto[Symbol.toStringTag] = 'Float';\n})(type_Float.prototype);\n/** @ignore */\nclass type_Float16 extends type_Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\n/** @ignore */\nclass type_Float32 extends type_Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\n/** @ignore */\nclass type_Float64 extends type_Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\nObject.defineProperty(type_Float16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(type_Float32.prototype, 'ArrayType', {\n  value: Float32Array\n});\nObject.defineProperty(type_Float64.prototype, 'ArrayType', {\n  value: Float64Array\n});\n/** @ignore */\nclass type_Binary extends type_DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return \"Binary\";\n  }\n}\ntype_Binary[Symbol.toStringTag] = (proto => {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Binary';\n})(type_Binary.prototype);\n/** @ignore */\nclass type_Utf8 extends type_DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Utf8;\n  }\n  toString() {\n    return \"Utf8\";\n  }\n}\ntype_Utf8[Symbol.toStringTag] = (proto => {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Utf8';\n})(type_Utf8.prototype);\n/** @ignore */\nclass type_Bool extends type_DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Bool;\n  }\n  toString() {\n    return \"Bool\";\n  }\n}\ntype_Bool[Symbol.toStringTag] = (proto => {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Bool';\n})(type_Bool.prototype);\n/** @ignore */\nclass type_Decimal extends type_DataType {\n  constructor(scale, precision) {\n    super();\n    this.scale = scale;\n    this.precision = precision;\n  }\n  get typeId() {\n    return Type.Decimal;\n  }\n  toString() {\n    return \"Decimal[\".concat(this.precision, \"e\").concat(this.scale > 0 ? \"+\" : \"\").concat(this.scale, \"]\");\n  }\n}\ntype_Decimal[Symbol.toStringTag] = (proto => {\n  proto.scale = null;\n  proto.precision = null;\n  proto.ArrayType = Uint32Array;\n  return proto[Symbol.toStringTag] = 'Decimal';\n})(type_Decimal.prototype);\n/** @ignore */\nclass type_Date_ extends type_DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Date;\n  }\n  toString() {\n    return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n  }\n}\ntype_Date_[Symbol.toStringTag] = (proto => {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Date';\n})(type_Date_.prototype);\n/** @ignore */\nclass type_DateDay extends type_Date_ {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\n/** @ignore */\nclass type_DateMillisecond extends type_Date_ {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n/** @ignore */\nclass type_Time_ extends type_DataType {\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Time;\n  }\n  toString() {\n    return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n  }\n}\ntype_Time_[Symbol.toStringTag] = (proto => {\n  proto.unit = null;\n  proto.bitWidth = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Time';\n})(type_Time_.prototype);\n\n/** @ignore */\nclass type_TimeSecond extends type_Time_ {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\n/** @ignore */\nclass type_TimeMillisecond extends type_Time_ {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n/** @ignore */\nclass type_TimeMicrosecond extends type_Time_ {\n  constructor() {\n    super(TimeUnit.MICROSECOND, 64);\n  }\n}\n/** @ignore */\nclass type_TimeNanosecond extends type_Time_ {\n  constructor() {\n    super(TimeUnit.NANOSECOND, 64);\n  }\n}\n/** @ignore */\nclass type_Timestamp_ extends type_DataType {\n  constructor(unit, timezone) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId() {\n    return Type.Timestamp;\n  }\n  toString() {\n    return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : \"\", \">\");\n  }\n}\ntype_Timestamp_[Symbol.toStringTag] = (proto => {\n  proto.unit = null;\n  proto.timezone = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Timestamp';\n})(type_Timestamp_.prototype);\n\n/** @ignore */\nclass type_TimestampSecond extends type_Timestamp_ {\n  constructor(timezone) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\n/** @ignore */\nclass type_TimestampMillisecond extends type_Timestamp_ {\n  constructor(timezone) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\n/** @ignore */\nclass type_TimestampMicrosecond extends type_Timestamp_ {\n  constructor(timezone) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\n/** @ignore */\nclass type_TimestampNanosecond extends type_Timestamp_ {\n  constructor(timezone) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n/** @ignore */\nclass type_Interval_ extends type_DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Interval;\n  }\n  toString() {\n    return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n  }\n}\ntype_Interval_[Symbol.toStringTag] = (proto => {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Interval';\n})(type_Interval_.prototype);\n\n/** @ignore */\nclass type_IntervalDayTime extends type_Interval_ {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\n/** @ignore */\nclass type_IntervalYearMonth extends type_Interval_ {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n/** @ignore */\nclass type_List extends type_DataType {\n  constructor(child) {\n    super();\n    this.children = [child];\n  }\n  get typeId() {\n    return Type.List;\n  }\n  toString() {\n    return \"List<\".concat(this.valueType, \">\");\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  get ArrayType() {\n    return this.valueType.ArrayType;\n  }\n}\ntype_List[Symbol.toStringTag] = (proto => {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'List';\n})(type_List.prototype);\n/** @ignore */\nclass type_Struct extends type_DataType {\n  constructor(children) {\n    super();\n    this.children = children;\n  }\n  get typeId() {\n    return Type.Struct;\n  }\n  toString() {\n    return \"Struct<{\".concat(this.children.map(f => \"\".concat(f.name, \":\").concat(f.type)).join(\", \"), \"}>\");\n  }\n}\ntype_Struct[Symbol.toStringTag] = (proto => {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'Struct';\n})(type_Struct.prototype);\n/** @ignore */\nclass type_Union_ extends type_DataType {\n  constructor(mode, typeIds, children) {\n    super();\n    this.mode = mode;\n    this.children = children;\n    this.typeIds = typeIds = Int32Array.from(typeIds);\n    this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n      return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n    }, Object.create(null));\n  }\n  get typeId() {\n    return Type.Union;\n  }\n  toString() {\n    return \"\".concat(this[Symbol.toStringTag], \"<\").concat(this.children.map(x => \"\".concat(x.type)).join(\" | \"), \">\");\n  }\n}\ntype_Union_[Symbol.toStringTag] = (proto => {\n  proto.mode = null;\n  proto.typeIds = null;\n  proto.children = null;\n  proto.typeIdToChildIndex = null;\n  proto.ArrayType = Int8Array;\n  return proto[Symbol.toStringTag] = 'Union';\n})(type_Union_.prototype);\n\n/** @ignore */\nclass type_DenseUnion extends type_Union_ {\n  constructor(typeIds, children) {\n    super(UnionMode.Dense, typeIds, children);\n  }\n}\n/** @ignore */\nclass type_SparseUnion extends type_Union_ {\n  constructor(typeIds, children) {\n    super(UnionMode.Sparse, typeIds, children);\n  }\n}\n/** @ignore */\nclass type_FixedSizeBinary extends type_DataType {\n  constructor(byteWidth) {\n    super();\n    this.byteWidth = byteWidth;\n  }\n  get typeId() {\n    return Type.FixedSizeBinary;\n  }\n  toString() {\n    return \"FixedSizeBinary[\".concat(this.byteWidth, \"]\");\n  }\n}\ntype_FixedSizeBinary[Symbol.toStringTag] = (proto => {\n  proto.byteWidth = null;\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(type_FixedSizeBinary.prototype);\n/** @ignore */\nclass type_FixedSizeList extends type_DataType {\n  constructor(listSize, child) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId() {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  get ArrayType() {\n    return this.valueType.ArrayType;\n  }\n  toString() {\n    return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n  }\n}\ntype_FixedSizeList[Symbol.toStringTag] = (proto => {\n  proto.children = null;\n  proto.listSize = null;\n  return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(type_FixedSizeList.prototype);\n/** @ignore */\nclass type_Map_ extends type_DataType {\n  constructor(child) {\n    let keysSorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    super();\n    this.children = [child];\n    this.keysSorted = keysSorted;\n  }\n  get typeId() {\n    return Type.Map;\n  }\n  get keyType() {\n    return this.children[0].type.children[0].type;\n  }\n  get valueType() {\n    return this.children[0].type.children[1].type;\n  }\n  toString() {\n    return \"Map<{\".concat(this.children[0].type.children.map(f => \"\".concat(f.name, \":\").concat(f.type)).join(\", \"), \"}>\");\n  }\n}\ntype_Map_[Symbol.toStringTag] = (proto => {\n  proto.children = null;\n  proto.keysSorted = null;\n  return proto[Symbol.toStringTag] = 'Map_';\n})(type_Map_.prototype);\n/** @ignore */\nconst getId = (atomicDictionaryId => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nclass type_Dictionary extends type_DataType {\n  constructor(dictionary, indices, id, isOrdered) {\n    super();\n    this.indices = indices;\n    this.dictionary = dictionary;\n    this.isOrdered = isOrdered || false;\n    this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n  }\n  get typeId() {\n    return Type.Dictionary;\n  }\n  get children() {\n    return this.dictionary.children;\n  }\n  get valueType() {\n    return this.dictionary;\n  }\n  get ArrayType() {\n    return this.dictionary.ArrayType;\n  }\n  toString() {\n    return \"Dictionary<\".concat(this.indices, \", \").concat(this.dictionary, \">\");\n  }\n}\ntype_Dictionary[Symbol.toStringTag] = (proto => {\n  proto.id = null;\n  proto.indices = null;\n  proto.isOrdered = null;\n  proto.dictionary = null;\n  return proto[Symbol.toStringTag] = 'Dictionary';\n})(type_Dictionary.prototype);\n/** @ignore */\nfunction strideForType(type) {\n  let t = type;\n  switch (type.typeId) {\n    case Type.Decimal:\n      return 4;\n    case Type.Timestamp:\n      return 2;\n    case Type.Date:\n      return 1 + t.unit;\n    case Type.Interval:\n      return 1 + t.unit;\n    case Type.Int:\n      return 1 + +(t.bitWidth > 32);\n    case Type.Time:\n      return 1 + +(t.bitWidth > 32);\n    case Type.FixedSizeList:\n      return t.listSize;\n    case Type.FixedSizeBinary:\n      return t.byteWidth;\n    default:\n      return 1;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/data.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nconst kUnknownNullCount = -1;\n/** @ignore */\nclass data_Data {\n  constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n    this.type = type;\n    this.dictionary = dictionary;\n    this.offset = Math.floor(Math.max(offset || 0, 0));\n    this.length = Math.floor(Math.max(length || 0, 0));\n    this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n    this.childData = (childData || []).map(x => x instanceof data_Data ? x : x.data);\n    let buffer;\n    if (buffers instanceof data_Data) {\n      this.stride = buffers.stride;\n      this.values = buffers.values;\n      this.typeIds = buffers.typeIds;\n      this.nullBitmap = buffers.nullBitmap;\n      this.valueOffsets = buffers.valueOffsets;\n    } else {\n      this.stride = strideForType(type);\n      if (buffers) {\n        (buffer = buffers[0]) && (this.valueOffsets = buffer);\n        (buffer = buffers[1]) && (this.values = buffer);\n        (buffer = buffers[2]) && (this.nullBitmap = buffer);\n        (buffer = buffers[3]) && (this.typeIds = buffer);\n      }\n    }\n  }\n  get typeId() {\n    return this.type.typeId;\n  }\n  get ArrayType() {\n    return this.type.ArrayType;\n  }\n  get buffers() {\n    return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n  }\n  get byteLength() {\n    let byteLength = 0;\n    let {\n      valueOffsets,\n      values,\n      nullBitmap,\n      typeIds\n    } = this;\n    valueOffsets && (byteLength += valueOffsets.byteLength);\n    values && (byteLength += values.byteLength);\n    nullBitmap && (byteLength += nullBitmap.byteLength);\n    typeIds && (byteLength += typeIds.byteLength);\n    return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n  }\n  get nullCount() {\n    let nullCount = this._nullCount;\n    let nullBitmap;\n    if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n      this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n    }\n    return nullCount;\n  }\n  clone(type) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.offset;\n    let length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.length;\n    let nullCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this._nullCount;\n    let buffers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this;\n    let childData = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : this.childData;\n    return new data_Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n  }\n  slice(offset, length) {\n    const {\n      stride,\n      typeId,\n      childData\n    } = this;\n    // +true === 1, +false === 0, so this means\n    // we keep nullCount at 0 if it's already 0,\n    // otherwise set to the invalidated flag -1\n    const nullCount = +(this._nullCount === 0) - 1;\n    const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n    const buffers = this._sliceBuffers(offset, length, stride, typeId);\n    return this.clone(this.type, this.offset + offset, length, nullCount, buffers,\n    // Don't slice children if we have value offsets (the variable-width types)\n    !childData.length || this.valueOffsets ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n  }\n  _changeLengthAndBackfillNullBitmap(newLength) {\n    if (this.typeId === Type.Null) {\n      return this.clone(this.type, 0, newLength, 0);\n    }\n    const {\n      length,\n      nullCount\n    } = this;\n    // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n    const bitmap = new Uint8Array((newLength + 63 & ~63) >> 3).fill(255, 0, length >> 3);\n    // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n    bitmap[length >> 3] = (1 << length - (length & ~7)) - 1;\n    // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n    if (nullCount > 0) {\n      bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n    }\n    const buffers = this.buffers;\n    buffers[BufferType.VALIDITY] = bitmap;\n    return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n  }\n  _sliceBuffers(offset, length, stride, typeId) {\n    let arr,\n      {\n        buffers\n      } = this;\n    // If typeIds exist, slice the typeIds buffer\n    (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n    // If offsets exist, only slice the offsets buffer\n    (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n    // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n    (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n    return buffers;\n  }\n  _sliceChildren(childData, offset, length) {\n    return childData.map(child => child.slice(offset, length));\n  }\n  //\n  // Convenience methods for creating Data instances for each of the Arrow Vector types\n  //\n  /** @nocollapse */\n  static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n    if (buffers instanceof data_Data) {\n      buffers = buffers.buffers;\n    } else if (!buffers) {\n      buffers = [];\n    }\n    switch (type.typeId) {\n      case Type.Null:\n        return data_Data.Null(type, offset, length);\n      case Type.Int:\n        return data_Data.Int(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Dictionary:\n        return data_Data.Dictionary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary);\n      case Type.Float:\n        return data_Data.Float(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Bool:\n        return data_Data.Bool(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Decimal:\n        return data_Data.Decimal(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Date:\n        return data_Data.Date(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Time:\n        return data_Data.Time(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Timestamp:\n        return data_Data.Timestamp(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Interval:\n        return data_Data.Interval(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.FixedSizeBinary:\n        return data_Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n      case Type.Binary:\n        return data_Data.Binary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n      case Type.Utf8:\n        return data_Data.Utf8(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n      case Type.List:\n        return data_Data.List(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n      case Type.FixedSizeList:\n        return data_Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]);\n      case Type.Struct:\n        return data_Data.Struct(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []);\n      case Type.Map:\n        return data_Data.Map(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n      case Type.Union:\n        return data_Data.Union(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData);\n    }\n    throw new Error(\"Unrecognized typeId \".concat(type.typeId));\n  }\n  /** @nocollapse */\n  static Null(type, offset, length) {\n    return new data_Data(type, offset, length, 0);\n  }\n  /** @nocollapse */\n  static Int(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n  }\n  /** @nocollapse */\n  static Float(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Bool(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Date(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Time(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Interval(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n    return new data_Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n    return new data_Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n    return new data_Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n  }\n  /** @nocollapse */\n  static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n    return new data_Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n  }\n  /** @nocollapse */\n  static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n    return new data_Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n  }\n  /** @nocollapse */\n  static Struct(type, offset, length, nullCount, nullBitmap, children) {\n    return new data_Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n  }\n  /** @nocollapse */\n  static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n    return new data_Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n  }\n  /** @nocollapse */\n  static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n    const buffers = [undefined, undefined, toUint8Array(nullBitmap), toArrayBufferView(type.ArrayType, typeIds)];\n    if (type.mode === UnionMode.Sparse) {\n      return new data_Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n    }\n    buffers[BufferType.OFFSET] = toInt32Array(valueOffsetsOrChildren);\n    return new data_Data(type, offset, length, nullCount, buffers, children);\n  }\n}\ndata_Data.prototype.childData = Object.freeze([]);\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/pretty.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */const undf = void 0;\n/** @ignore */\nfunction valueToString(x) {\n  if (x === null) {\n    return 'null';\n  }\n  if (x === undf) {\n    return 'undefined';\n  }\n  switch (typeof x) {\n    case 'number':\n      return \"\".concat(x);\n    case 'bigint':\n      return \"\".concat(x);\n    case 'string':\n      return \"\\\"\".concat(x, \"\\\"\");\n  }\n  // If [Symbol.toPrimitive] is implemented (like in BN)\n  // use it instead of JSON.stringify(). This ensures we\n  // print BigInts, Decimals, and Binary in their native\n  // representation\n  if (typeof x[Symbol.toPrimitive] === 'function') {\n    return x[Symbol.toPrimitive]('string');\n  }\n  return ArrayBuffer.isView(x) ? \"[\".concat(x, \"]\") : JSON.stringify(x);\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/valid.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nfunction createIsValidFunction(nullValues) {\n  if (!nullValues || nullValues.length <= 0) {\n    // @ts-ignore\n    return function isValid(value) {\n      return true;\n    };\n  }\n  let fnBody = '';\n  let noNaNs = nullValues.filter(x => x === x);\n  if (noNaNs.length > 0) {\n    fnBody = \"\\n    switch (x) {\".concat(noNaNs.map(x => \"\\n        case \".concat(valueToCase(x), \":\")).join(''), \"\\n            return false;\\n    }\");\n  }\n  // NaN doesn't equal anything including itself, so it doesn't work as a\n  // switch case. Instead we must explicitly check for NaN before the switch.\n  if (nullValues.length !== noNaNs.length) {\n    fnBody = \"if (x !== x) return false;\\n\".concat(fnBody);\n  }\n  return new Function(\"x\", \"\".concat(fnBody, \"\\nreturn true;\"));\n}\n/** @ignore */\nfunction valueToCase(x) {\n  if (typeof x !== 'bigint') {\n    return valueToString(x);\n  } else if (BigIntAvailable) {\n    return \"\".concat(valueToString(x), \"n\");\n  }\n  return \"\\\"\".concat(valueToString(x), \"\\\"\");\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/buffer.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => (len * BPE + 63 & ~63 || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = function (arr) {\n  let len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return arr.length >= len ? arr.subarray(0, len) : memcpy(new arr.constructor(len), arr, 0);\n};\n/** @ignore */\nclass buffer_BufferBuilder {\n  constructor(buffer) {\n    let stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.buffer = buffer;\n    this.stride = stride;\n    this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n    this.ArrayType = buffer.constructor;\n    this._resize(this.length = buffer.length / stride | 0);\n  }\n  get byteLength() {\n    return this.length * this.stride * this.BYTES_PER_ELEMENT | 0;\n  }\n  get reservedLength() {\n    return this.buffer.length / this.stride;\n  }\n  get reservedByteLength() {\n    return this.buffer.byteLength;\n  }\n  // @ts-ignore\n  set(index, value) {\n    return this;\n  }\n  append(value) {\n    return this.set(this.length, value);\n  }\n  reserve(extra) {\n    if (extra > 0) {\n      this.length += extra;\n      const stride = this.stride;\n      const length = this.length * stride;\n      const reserved = this.buffer.length;\n      if (length >= reserved) {\n        this._resize(reserved === 0 ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT) : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n      }\n    }\n    return this;\n  }\n  flush() {\n    let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.length;\n    length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n    const array = sliceOrExtendArray(this.buffer, length);\n    this.clear();\n    return array;\n  }\n  clear() {\n    this.length = 0;\n    this._resize(0);\n    return this;\n  }\n  _resize(newLength) {\n    return this.buffer = memcpy(new this.ArrayType(newLength), this.buffer);\n  }\n}\nbuffer_BufferBuilder.prototype.offset = 0;\n/** @ignore */\nclass DataBufferBuilder extends buffer_BufferBuilder {\n  last() {\n    return this.get(this.length - 1);\n  }\n  get(index) {\n    return this.buffer[index];\n  }\n  set(index, value) {\n    this.reserve(index - this.length + 1);\n    this.buffer[index * this.stride] = value;\n    return this;\n  }\n}\n/** @ignore */\nclass BitmapBufferBuilder extends DataBufferBuilder {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array(0);\n    super(data, 1 / 8);\n    this.numValid = 0;\n  }\n  get numInvalid() {\n    return this.length - this.numValid;\n  }\n  get(idx) {\n    return this.buffer[idx >> 3] >> idx % 8 & 1;\n  }\n  set(idx, val) {\n    const {\n      buffer\n    } = this.reserve(idx - this.length + 1);\n    const byte = idx >> 3,\n      bit = idx % 8,\n      cur = buffer[byte] >> bit & 1;\n    // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n    // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n    val ? cur === 0 && (buffer[byte] |= 1 << bit, ++this.numValid) : cur === 1 && (buffer[byte] &= ~(1 << bit), --this.numValid);\n    return this;\n  }\n  clear() {\n    this.numValid = 0;\n    return super.clear();\n  }\n}\n/** @ignore */\nclass OffsetsBufferBuilder extends DataBufferBuilder {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Int32Array(1);\n    super(data, 1);\n  }\n  append(value) {\n    return this.set(this.length - 1, value);\n  }\n  set(index, value) {\n    const offset = this.length - 1;\n    const buffer = this.reserve(index - offset + 1).buffer;\n    if (offset < index++) {\n      buffer.fill(buffer[offset], offset, index);\n    }\n    buffer[index] = buffer[index - 1] + value;\n    return this;\n  }\n  flush() {\n    let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.length - 1;\n    if (length > this.length) {\n      this.set(length - 1, 0);\n    }\n    return super.flush(length + 1);\n  }\n}\n/** @ignore */\nclass buffer_WideBufferBuilder extends buffer_BufferBuilder {\n  get ArrayType64() {\n    return this._ArrayType64 || (this._ArrayType64 = this.buffer instanceof Int32Array ? BigInt64ArrayCtor : BigUint64ArrayCtor);\n  }\n  set(index, value) {\n    this.reserve(index - this.length + 1);\n    switch (typeof value) {\n      case 'bigint':\n        this.buffer64[index] = value;\n        break;\n      case 'number':\n        this.buffer[index * this.stride] = value;\n        break;\n      default:\n        this.buffer.set(value, index * this.stride);\n    }\n    return this;\n  }\n  _resize(newLength) {\n    const data = super._resize(newLength);\n    const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n    if (BigIntAvailable) {\n      this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n    }\n    return data;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nclass builder_Builder {\n  /**\n   * Construct a builder with the given Arrow DataType with optional null values,\n   * which will be interpreted as \"null\" when set or appended to the `Builder`.\n   * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n   */\n  constructor(_ref) {\n    let {\n      'type': type,\n      'nullValues': nulls\n    } = _ref;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    this.length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    this.finished = false;\n    this.type = type;\n    this.children = [];\n    this.nullValues = nulls;\n    this.stride = strideForType(type);\n    this._nulls = new BitmapBufferBuilder();\n    if (nulls && nulls.length > 0) {\n      this._isValid = createIsValidFunction(nulls);\n    }\n  }\n  /**\n   * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n   * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n   * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n   *\n   * @typeparam T The `DataType` of the `Builder` to create.\n   * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n   * @nocollapse\n   */\n  // @ts-ignore\n  static new(options) {}\n  /** @nocollapse */\n  // @ts-ignore\n  static throughNode(options) {\n    throw new Error(\"\\\"throughNode\\\" not available in this environment\");\n  }\n  /** @nocollapse */\n  // @ts-ignore\n  static throughDOM(options) {\n    throw new Error(\"\\\"throughDOM\\\" not available in this environment\");\n  }\n  /**\n   * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n   * sequence of Arrow Vector<T> following the chunking semantics defined in\n   * the supplied `options` argument.\n   *\n   * This function returns a function that accepts an `Iterable` of values to\n   * transform. When called, this function returns an Iterator of `Vector<T>`.\n   *\n   * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n   * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n   *\n   * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n   *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n   *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n   * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n   *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n   *   reaches or exceeds the supplied `highWaterMark`.\n   *\n   * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n   * @returns A function which accepts a JavaScript `Iterable` of values to\n   *          write, and returns an `Iterator` that yields Vectors according\n   *          to the chunking semantics defined in the `options` argument.\n   * @nocollapse\n   */\n  static throughIterable(options) {\n    return throughIterable(options);\n  }\n  /**\n   * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n   * sequence of Arrow Vector<T> following the chunking semantics defined in\n   * the supplied `options` argument.\n   *\n   * This function returns a function that accepts an `AsyncIterable` of values to\n   * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n   *\n   * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n   * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n   *\n   * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n   *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n   *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n   * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n   *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n   *   reaches or exceeds the supplied `highWaterMark`.\n   *\n   * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n   * @returns A function which accepts a JavaScript `AsyncIterable` of values\n   *          to write, and returns an `AsyncIterator` that yields Vectors\n   *          according to the chunking semantics defined in the `options`\n   *          argument.\n   * @nocollapse\n   */\n  static throughAsyncIterable(options) {\n    return throughAsyncIterable(options);\n  }\n  /**\n   * Flush the `Builder` and return a `Vector<T>`.\n   * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n   */\n  toVector() {\n    return AbstractVector.new(this.flush());\n  }\n  get ArrayType() {\n    return this.type.ArrayType;\n  }\n  get nullCount() {\n    return this._nulls.numInvalid;\n  }\n  get numChildren() {\n    return this.children.length;\n  }\n  /**\n   * @returns The aggregate length (in bytes) of the values that have been written.\n   */\n  get byteLength() {\n    let size = 0;\n    this._offsets && (size += this._offsets.byteLength);\n    this._values && (size += this._values.byteLength);\n    this._nulls && (size += this._nulls.byteLength);\n    this._typeIds && (size += this._typeIds.byteLength);\n    return this.children.reduce((size, child) => size + child.byteLength, size);\n  }\n  /**\n   * @returns The aggregate number of rows that have been reserved to write new values.\n   */\n  get reservedLength() {\n    return this._nulls.reservedLength;\n  }\n  /**\n   * @returns The aggregate length (in bytes) that has been reserved to write new values.\n   */\n  get reservedByteLength() {\n    let size = 0;\n    this._offsets && (size += this._offsets.reservedByteLength);\n    this._values && (size += this._values.reservedByteLength);\n    this._nulls && (size += this._nulls.reservedByteLength);\n    this._typeIds && (size += this._typeIds.reservedByteLength);\n    return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n  }\n  get valueOffsets() {\n    return this._offsets ? this._offsets.buffer : null;\n  }\n  get values() {\n    return this._values ? this._values.buffer : null;\n  }\n  get nullBitmap() {\n    return this._nulls ? this._nulls.buffer : null;\n  }\n  get typeIds() {\n    return this._typeIds ? this._typeIds.buffer : null;\n  }\n  /**\n   * Appends a value (or null) to this `Builder`.\n   * This is equivalent to `builder.set(builder.length, value)`.\n   * @param {T['TValue'] | TNull } value The value to append.\n   */\n  append(value) {\n    return this.set(this.length, value);\n  }\n  /**\n   * Validates whether a value is valid (true), or null (false)\n   * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n   */\n  // @ts-ignore\n  isValid(value) {\n    return this._isValid(value);\n  }\n  /**\n   * Write a value (or null-value sentinel) at the supplied index.\n   * If the value matches one of the null-value representations, a 1-bit is\n   * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n   * the null `BitmapBufferBuilder`, and the value is passed to\n   * `Builder.prototype.setValue()`.\n   * @param {number} index The index of the value to write.\n   * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n   * @returns {this} The updated `Builder` instance.\n   */\n  set(index, value) {\n    if (this.setValid(index, this.isValid(value))) {\n      this.setValue(index, value);\n    }\n    return this;\n  }\n  /**\n   * Write a value to the underlying buffers at the supplied index, bypassing\n   * the null-value check. This is a low-level method that\n   * @param {number} index\n   * @param {T['TValue'] | TNull } value\n   */\n  // @ts-ignore\n  setValue(index, value) {\n    this._setValue(this, index, value);\n  }\n  setValid(index, valid) {\n    this.length = this._nulls.set(index, +valid).length;\n    return valid;\n  }\n  // @ts-ignore\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.numChildren);\n    throw new Error(\"Cannot append children to non-nested type \\\"\".concat(this.type, \"\\\"\"));\n  }\n  /**\n   * Retrieve the child `Builder` at the supplied `index`, or null if no child\n   * exists at that index.\n   * @param {number} index The index of the child `Builder` to retrieve.\n   * @returns {Builder | null} The child Builder at the supplied index or null.\n   */\n  getChildAt(index) {\n    return this.children[index] || null;\n  }\n  /**\n   * Commit all the values that have been written to their underlying\n   * ArrayBuffers, including any child Builders if applicable, and reset\n   * the internal `Builder` state.\n   * @returns A `Data<T>` of the buffers and childData representing the values written.\n   */\n  flush() {\n    const buffers = [];\n    const values = this._values;\n    const offsets = this._offsets;\n    const typeIds = this._typeIds;\n    const {\n      length,\n      nullCount\n    } = this;\n    if (typeIds) {\n      /* Unions */\n      buffers[BufferType.TYPE] = typeIds.flush(length);\n      // DenseUnions\n      offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n    } else if (offsets) {\n      /* Variable-width primitives (Binary, Utf8) and Lists */\n      // Binary, Utf8\n      values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n      buffers[BufferType.OFFSET] = offsets.flush(length);\n    } else if (values) {\n      /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n      buffers[BufferType.DATA] = values.flush(length);\n    }\n    nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n    const data = data_Data.new(this.type, 0, length, nullCount, buffers, this.children.map(child => child.flush()));\n    this.clear();\n    return data;\n  }\n  /**\n   * Finalize this `Builder`, and child builders if applicable.\n   * @returns {this} The finalized `Builder` instance.\n   */\n  finish() {\n    this.finished = true;\n    this.children.forEach(child => child.finish());\n    return this;\n  }\n  /**\n   * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n   * @returns {this} The cleared `Builder` instance.\n   */\n  clear() {\n    this.length = 0;\n    this._offsets && this._offsets.clear();\n    this._values && this._values.clear();\n    this._nulls && this._nulls.clear();\n    this._typeIds && this._typeIds.clear();\n    this.children.forEach(child => child.clear());\n    return this;\n  }\n}\nbuilder_Builder.prototype.length = 1;\nbuilder_Builder.prototype.stride = 1;\nbuilder_Builder.prototype.children = null;\nbuilder_Builder.prototype.finished = false;\nbuilder_Builder.prototype.nullValues = null;\nbuilder_Builder.prototype._isValid = () => true;\n/** @ignore */\nclass builder_FixedWidthBuilder extends builder_Builder {\n  constructor(opts) {\n    super(opts);\n    this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n  }\n  setValue(index, value) {\n    const values = this._values;\n    values.reserve(index - values.length + 1);\n    return super.setValue(index, value);\n  }\n}\n/** @ignore */\nclass builder_VariableWidthBuilder extends builder_Builder {\n  constructor(opts) {\n    super(opts);\n    this._pendingLength = 0;\n    this._offsets = new OffsetsBufferBuilder();\n  }\n  setValue(index, value) {\n    const pending = this._pending || (this._pending = new Map());\n    const current = pending.get(index);\n    current && (this._pendingLength -= current.length);\n    this._pendingLength += value.length;\n    pending.set(index, value);\n  }\n  setValid(index, isValid) {\n    if (!super.setValid(index, isValid)) {\n      (this._pending || (this._pending = new Map())).set(index, undefined);\n      return false;\n    }\n    return true;\n  }\n  clear() {\n    this._pendingLength = 0;\n    this._pending = undefined;\n    return super.clear();\n  }\n  flush() {\n    this._flush();\n    return super.flush();\n  }\n  finish() {\n    this._flush();\n    return super.finish();\n  }\n  _flush() {\n    const pending = this._pending;\n    const pendingLength = this._pendingLength;\n    this._pendingLength = 0;\n    this._pending = undefined;\n    if (pending && pending.size > 0) {\n      this._flushPending(pending, pendingLength);\n    }\n    return this;\n  }\n}\n/** @ignore */\nfunction throughIterable(options) {\n  const {\n    ['queueingStrategy']: queueingStrategy = 'count'\n  } = options;\n  const {\n    ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14\n  } = options;\n  const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n  return function* (source) {\n    let numChunks = 0;\n    let builder = builder_Builder.new(options);\n    for (const value of source) {\n      if (builder.append(value)[sizeProperty] >= highWaterMark) {\n        ++numChunks && (yield builder.toVector());\n      }\n    }\n    if (builder.finish().length > 0 || numChunks === 0) {\n      yield builder.toVector();\n    }\n  };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n  const {\n    ['queueingStrategy']: queueingStrategy = 'count'\n  } = options;\n  const {\n    ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14\n  } = options;\n  const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n  return async function* (source) {\n    let numChunks = 0;\n    let builder = builder_Builder.new(options);\n    for await (const value of source) {\n      if (builder.append(value)[sizeProperty] >= highWaterMark) {\n        ++numChunks && (yield builder.toVector());\n      }\n    }\n    if (builder.finish().length > 0 || numChunks === 0) {\n      yield builder.toVector();\n    }\n  };\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/bool.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nclass bool_BoolBuilder extends builder_Builder {\n  constructor(options) {\n    super(options);\n    this._values = new BitmapBufferBuilder();\n  }\n  setValue(index, value) {\n    this._values.set(index, +value);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/null.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass null_NullBuilder extends builder_Builder {\n  // @ts-ignore\n  setValue(index, value) {}\n  setValid(index, valid) {\n    this.length = Math.max(index + 1, this.length);\n    return valid;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/date.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass date_DateBuilder extends builder_FixedWidthBuilder {}\n/** @ignore */\nclass DateDayBuilder extends date_DateBuilder {}\n/** @ignore */\nclass DateMillisecondBuilder extends date_DateBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/decimal.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass decimal_DecimalBuilder extends builder_FixedWidthBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/dictionary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nclass dictionary_DictionaryBuilder extends builder_Builder {\n  constructor(_ref) {\n    let {\n      'type': type,\n      'nullValues': nulls,\n      'dictionaryHashFunction': hashFn\n    } = _ref;\n    super({\n      type: new type_Dictionary(type.dictionary, type.indices, type.id, type.isOrdered)\n    });\n    this._nulls = null;\n    this._dictionaryOffset = 0;\n    this._keysToIndices = Object.create(null);\n    this.indices = builder_Builder.new({\n      'type': this.type.indices,\n      'nullValues': nulls\n    });\n    this.dictionary = builder_Builder.new({\n      'type': this.type.dictionary,\n      'nullValues': null\n    });\n    if (typeof hashFn === 'function') {\n      this.valueToKey = hashFn;\n    }\n  }\n  get values() {\n    return this.indices.values;\n  }\n  get nullCount() {\n    return this.indices.nullCount;\n  }\n  get nullBitmap() {\n    return this.indices.nullBitmap;\n  }\n  get byteLength() {\n    return this.indices.byteLength + this.dictionary.byteLength;\n  }\n  get reservedLength() {\n    return this.indices.reservedLength + this.dictionary.reservedLength;\n  }\n  get reservedByteLength() {\n    return this.indices.reservedByteLength + this.dictionary.reservedByteLength;\n  }\n  isValid(value) {\n    return this.indices.isValid(value);\n  }\n  setValid(index, valid) {\n    const indices = this.indices;\n    valid = indices.setValid(index, valid);\n    this.length = indices.length;\n    return valid;\n  }\n  setValue(index, value) {\n    let keysToIndices = this._keysToIndices;\n    let key = this.valueToKey(value);\n    let idx = keysToIndices[key];\n    if (idx === undefined) {\n      keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n    }\n    return this.indices.setValue(index, idx);\n  }\n  flush() {\n    const type = this.type;\n    const prev = this._dictionary;\n    const curr = this.dictionary.toVector();\n    const data = this.indices.flush().clone(type);\n    data.dictionary = prev ? prev.concat(curr) : curr;\n    this.finished || (this._dictionaryOffset += curr.length);\n    this._dictionary = data.dictionary;\n    this.clear();\n    return data;\n  }\n  finish() {\n    this.indices.finish();\n    this.dictionary.finish();\n    this._dictionaryOffset = 0;\n    this._keysToIndices = Object.create(null);\n    return super.finish();\n  }\n  clear() {\n    this.indices.clear();\n    this.dictionary.clear();\n    return super.clear();\n  }\n  valueToKey(val) {\n    return typeof val === 'string' ? val : \"\".concat(val);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/fixedsizebinary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass fixedsizebinary_FixedSizeBinaryBuilder extends builder_FixedWidthBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/math.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nfunction uint16ToFloat64(h) {\n  let expo = (h & 0x7C00) >> 10;\n  let sigf = (h & 0x03FF) / 1024;\n  let sign = (-1) ** ((h & 0x8000) >> 15);\n  switch (expo) {\n    case 0x1F:\n      return sign * (sigf ? NaN : 1 / 0);\n    case 0x00:\n      return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n  }\n  return sign * 2 ** (expo - 15) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nfunction float64ToUint16(d) {\n  if (d !== d) {\n    return 0x7E00;\n  } // NaN\n  f64[0] = d;\n  // Magic numbers:\n  // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n  // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n  // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n  let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n  let expo = u32[1] & 0x7ff00000,\n    sigf = 0x0000;\n  if (expo >= 0x40f00000) {\n    //\n    // If exponent overflowed, the float16 is either NaN or Infinity.\n    // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n    //\n    // Magic numbers:\n    // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n    // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n    //\n    // returns:\n    // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n    // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n    // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n    // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n    //\n    // If mantissa is greater than 23 bits, set to +Infinity like numpy\n    if (u32[0] > 0) {\n      expo = 0x7C00;\n    } else {\n      expo = (expo & 0x7C000000) >> 16;\n      sigf = (u32[1] & 0x000fffff) >> 10;\n    }\n  } else if (expo <= 0x3f000000) {\n    //\n    // If exponent underflowed, the float is either signed zero or subnormal.\n    //\n    // Magic numbers:\n    // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n    //\n    sigf = 0x100000 + (u32[1] & 0x000fffff);\n    sigf = 0x100000 + (sigf << (expo >> 20) - 998) >> 21;\n    expo = 0;\n  } else {\n    //\n    // No overflow or underflow, rebase the exponent and round the mantissa\n    // Magic numbers:\n    // 0x200 = 00000010 00000000 -- masks off the 10th bit\n    //\n    // Ensure the first mantissa bit (the 10th one) is 1 and round\n    expo = expo - 0x3f000000 >> 10;\n    sigf = (u32[1] & 0x000fffff) + 0x200 >> 10;\n  }\n  return sign | expo | sigf & 0xFFFF;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/float.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nclass float_FloatBuilder extends builder_FixedWidthBuilder {}\n/** @ignore */\nclass float_Float16Builder extends float_FloatBuilder {\n  setValue(index, value) {\n    // convert JS float64 to a uint16\n    this._values.set(index, float64ToUint16(value));\n  }\n}\n/** @ignore */\nclass Float32Builder extends float_FloatBuilder {\n  setValue(index, value) {\n    this._values.set(index, value);\n  }\n}\n/** @ignore */\nclass Float64Builder extends float_FloatBuilder {\n  setValue(index, value) {\n    this._values.set(index, value);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/bn.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nconst isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x) {\n  for (var _len = arguments.length, xs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    xs[_key - 1] = arguments[_key];\n  }\n  if (xs.length === 0) {\n    return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n  }\n  return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () {\n  return \"\\\"\".concat(bignumToString(this), \"\\\"\");\n};\nBigNum.prototype.valueOf = function () {\n  return bignumToNumber(this);\n};\nBigNum.prototype.toString = function () {\n  return bignumToString(this);\n};\nBigNum.prototype[Symbol.toPrimitive] = function () {\n  let hint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  switch (hint) {\n    case 'number':\n      return bignumToNumber(this);\n    case 'string':\n      return bignumToString(this);\n    case 'default':\n      return bignumToBigInt(this);\n  }\n  return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return BigNum.apply(this, args);\n}\n/** @ignore */\nfunction UnsignedBigNum() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return BigNum.apply(this, args);\n}\n/** @ignore */\nfunction DecimalBigNum() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n  return BigNum.apply(this, args);\n}\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, {\n  'constructor': SignedBigNum,\n  'signed': true,\n  'TypedArray': Int32Array,\n  'BigIntArray': BigInt64ArrayCtor\n});\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, {\n  'constructor': UnsignedBigNum,\n  'signed': false,\n  'TypedArray': Uint32Array,\n  'BigIntArray': BigUint64ArrayCtor\n});\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, {\n  'constructor': DecimalBigNum,\n  'signed': true,\n  'TypedArray': Uint32Array,\n  'BigIntArray': BigUint64ArrayCtor\n});\n/** @ignore */\nfunction bignumToNumber(bn) {\n  let {\n    buffer,\n    byteOffset,\n    length,\n    'signed': signed\n  } = bn;\n  let words = new Int32Array(buffer, byteOffset, length);\n  let number = 0,\n    i = 0,\n    n = words.length,\n    hi,\n    lo;\n  while (i < n) {\n    lo = words[i++];\n    hi = words[i++];\n    signed || (hi = hi >>> 0);\n    number += (lo >>> 0) + hi * i ** 32;\n  }\n  return number;\n}\n/** @ignore */\nlet bignumToString;\n/** @ignore */\nlet bignumToBigInt;\nif (!BigIntAvailable) {\n  bignumToString = decimalToString;\n  bignumToBigInt = bignumToString;\n} else {\n  bignumToBigInt = a => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a);\n  bignumToString = a => a.byteLength === 8 ? \"\".concat(new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]) : decimalToString(a);\n}\n/** @ignore */\nfunction decimalToString(a) {\n  let digits = '';\n  let base64 = new Uint32Array(2);\n  let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n  let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n  let i = -1,\n    n = base32.length - 1;\n  do {\n    for (base64[0] = base32[i = 0]; i < n;) {\n      base32[i++] = base64[1] = base64[0] / 10;\n      base64[0] = (base64[0] - base64[1] * 10 << 16) + base32[i];\n    }\n    base32[i] = base64[1] = base64[0] / 10;\n    base64[0] = base64[0] - base64[1] * 10;\n    digits = \"\".concat(base64[0]).concat(digits);\n  } while (checks[0] || checks[1] || checks[2] || checks[3]);\n  return digits ? digits : \"0\";\n}\n/** @ignore */\nclass bn_BN {\n  constructor(num, isSigned) {\n    return bn_BN.new(num, isSigned);\n  }\n  /** @nocollapse */\n  static new(num, isSigned) {\n    switch (isSigned) {\n      case true:\n        return new SignedBigNum(num);\n      case false:\n        return new UnsignedBigNum(num);\n    }\n    switch (num.constructor) {\n      case Int8Array:\n      case Int16Array:\n      case Int32Array:\n      case BigInt64ArrayCtor:\n        return new SignedBigNum(num);\n    }\n    if (num.byteLength === 16) {\n      return new DecimalBigNum(num);\n    }\n    return new UnsignedBigNum(num);\n  }\n  /** @nocollapse */\n  static signed(num) {\n    return new SignedBigNum(num);\n  }\n  /** @nocollapse */\n  static unsigned(num) {\n    return new UnsignedBigNum(num);\n  }\n  /** @nocollapse */\n  static decimal(num) {\n    return new DecimalBigNum(num);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/int.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass int_IntBuilder extends builder_FixedWidthBuilder {\n  setValue(index, value) {\n    this._values.set(index, value);\n  }\n}\n/** @ignore */\nclass Int8Builder extends int_IntBuilder {}\n/** @ignore */\nclass Int16Builder extends int_IntBuilder {}\n/** @ignore */\nclass Int32Builder extends int_IntBuilder {}\n/** @ignore */\nclass int_Int64Builder extends int_IntBuilder {\n  constructor(options) {\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    super(options);\n    this._values = new buffer_WideBufferBuilder(new Int32Array(0), 2);\n  }\n  get values64() {\n    return this._values.buffer64;\n  }\n  isValid(value) {\n    return super.isValid(toBigInt(value));\n  }\n}\n/** @ignore */\nclass Uint8Builder extends int_IntBuilder {}\n/** @ignore */\nclass Uint16Builder extends int_IntBuilder {}\n/** @ignore */\nclass Uint32Builder extends int_IntBuilder {}\n/** @ignore */\nclass int_Uint64Builder extends int_IntBuilder {\n  constructor(options) {\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    super(options);\n    this._values = new buffer_WideBufferBuilder(new Uint32Array(0), 2);\n  }\n  get values64() {\n    return this._values.buffer64;\n  }\n  isValid(value) {\n    return super.isValid(toBigInt(value));\n  }\n}\nconst toBigInt = (memo => value => {\n  if (ArrayBuffer.isView(value)) {\n    memo.buffer = value.buffer;\n    memo.byteOffset = value.byteOffset;\n    memo.byteLength = value.byteLength;\n    value = bignumToBigInt(memo);\n    memo.buffer = null;\n  }\n  return value;\n})({\n  'BigIntArray': BigInt64ArrayCtor\n});\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/time.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass time_TimeBuilder extends builder_FixedWidthBuilder {}\n/** @ignore */\nclass TimeSecondBuilder extends time_TimeBuilder {}\n/** @ignore */\nclass TimeMillisecondBuilder extends time_TimeBuilder {}\n/** @ignore */\nclass TimeMicrosecondBuilder extends time_TimeBuilder {}\n/** @ignore */\nclass TimeNanosecondBuilder extends time_TimeBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/timestamp.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass timestamp_TimestampBuilder extends builder_FixedWidthBuilder {}\n/** @ignore */\nclass TimestampSecondBuilder extends timestamp_TimestampBuilder {}\n/** @ignore */\nclass TimestampMillisecondBuilder extends timestamp_TimestampBuilder {}\n/** @ignore */\nclass TimestampMicrosecondBuilder extends timestamp_TimestampBuilder {}\n/** @ignore */\nclass TimestampNanosecondBuilder extends timestamp_TimestampBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/interval.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass interval_IntervalBuilder extends builder_FixedWidthBuilder {}\n/** @ignore */\nclass IntervalDayTimeBuilder extends interval_IntervalBuilder {}\n/** @ignore */\nclass IntervalYearMonthBuilder extends interval_IntervalBuilder {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/binary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass binary_BinaryBuilder extends builder_VariableWidthBuilder {\n  constructor(opts) {\n    super(opts);\n    this._values = new buffer_BufferBuilder(new Uint8Array(0));\n  }\n  get byteLength() {\n    let size = this._pendingLength + this.length * 4;\n    this._offsets && (size += this._offsets.byteLength);\n    this._values && (size += this._values.byteLength);\n    this._nulls && (size += this._nulls.byteLength);\n    return size;\n  }\n  setValue(index, value) {\n    return super.setValue(index, toUint8Array(value));\n  }\n  _flushPending(pending, pendingLength) {\n    const offsets = this._offsets;\n    const data = this._values.reserve(pendingLength).buffer;\n    let index = 0,\n      length = 0,\n      offset = 0,\n      value;\n    for ([index, value] of pending) {\n      if (value === undefined) {\n        offsets.set(index, 0);\n      } else {\n        length = value.length;\n        data.set(value, offset);\n        offsets.set(index, length);\n        offset += length;\n      }\n    }\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/utf8.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass utf8_Utf8Builder extends builder_VariableWidthBuilder {\n  constructor(opts) {\n    super(opts);\n    this._values = new buffer_BufferBuilder(new Uint8Array(0));\n  }\n  get byteLength() {\n    let size = this._pendingLength + this.length * 4;\n    this._offsets && (size += this._offsets.byteLength);\n    this._values && (size += this._values.byteLength);\n    this._nulls && (size += this._nulls.byteLength);\n    return size;\n  }\n  setValue(index, value) {\n    return super.setValue(index, encodeUtf8(value));\n  }\n  // @ts-ignore\n  _flushPending(pending, pendingLength) {}\n}\nutf8_Utf8Builder.prototype._flushPending = binary_BinaryBuilder.prototype._flushPending;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/run.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass run_Run {\n  get length() {\n    return this._values.length;\n  }\n  get(index) {\n    return this._values[index];\n  }\n  clear() {\n    this._values = null;\n    return this;\n  }\n  bind(values) {\n    if (values instanceof AbstractVector) {\n      return values;\n    }\n    this._values = values;\n    return this;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/row.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst kParent = Symbol.for('parent');\n/** @ignore */\nconst kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nconst kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */\nconst kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */\nconst kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass row_Row {\n  constructor(parent, numKeys) {\n    this[kParent] = parent;\n    this.size = numKeys;\n  }\n  entries() {\n    return this[Symbol.iterator]();\n  }\n  has(key) {\n    return this.get(key) !== undefined;\n  }\n  get(key) {\n    let val = undefined;\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n      if (idx !== undefined) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      } else if ((idx = this.getIndex(key)) > -1) {\n        ktoi.set(key, idx);\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n      }\n    }\n    return val;\n  }\n  set(key, val) {\n    if (key !== null && key !== undefined) {\n      const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      let idx = ktoi.get(key);\n      if (idx === undefined) {\n        ktoi.set(key, idx = this.getIndex(key));\n      }\n      if (idx > -1) {\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        itov[idx] = this.setValue(idx, val);\n      }\n    }\n    return this;\n  }\n  clear() {\n    throw new Error(\"Clearing \".concat(this[Symbol.toStringTag], \" not supported.\"));\n  }\n  delete(_) {\n    throw new Error(\"Deleting \".concat(this[Symbol.toStringTag], \" values not supported.\"));\n  }\n  *[Symbol.iterator]() {\n    const ki = this.keys();\n    const vi = this.values();\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      yield [k, v];\n    }\n  }\n  forEach(callbackfn, thisArg) {\n    const ki = this.keys();\n    const vi = this.values();\n    const callback = thisArg === undefined ? callbackfn : (v, k, m) => callbackfn.call(thisArg, v, k, m);\n    const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n    const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n    for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n      k = kr.value;\n      v = vr.value;\n      itov[i] = v;\n      ktoi.has(k) || ktoi.set(k, i);\n      callback(v, k, this);\n    }\n  }\n  toArray() {\n    return [...this.values()];\n  }\n  toJSON() {\n    const obj = {};\n    this.forEach((val, key) => obj[key] = val);\n    return obj;\n  }\n  inspect() {\n    return this.toString();\n  }\n  [kCustomInspect]() {\n    return this.toString();\n  }\n  toString() {\n    const str = [];\n    this.forEach((val, key) => {\n      key = valueToString(key);\n      val = valueToString(val);\n      str.push(\"\".concat(key, \": \").concat(val));\n    });\n    return \"{ \".concat(str.join(', '), \" }\");\n  }\n}\nrow_Row[Symbol.toStringTag] = (proto => {\n  Object.defineProperties(proto, {\n    'size': {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: 0\n    },\n    [kParent]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: null\n    },\n    [kRowIndex]: {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: -1\n    }\n  });\n  return proto[Symbol.toStringTag] = 'Row';\n})(row_Row.prototype);\nclass MapRow extends row_Row {\n  constructor(slice) {\n    super(slice, slice.length);\n    return createRowProxy(this);\n  }\n  keys() {\n    return this[kParent].getChildAt(0)[Symbol.iterator]();\n  }\n  values() {\n    return this[kParent].getChildAt(1)[Symbol.iterator]();\n  }\n  getKey(idx) {\n    return this[kParent].getChildAt(0).get(idx);\n  }\n  getIndex(key) {\n    return this[kParent].getChildAt(0).indexOf(key);\n  }\n  getValue(index) {\n    return this[kParent].getChildAt(1).get(index);\n  }\n  setValue(index, value) {\n    this[kParent].getChildAt(1).set(index, value);\n  }\n}\nclass StructRow extends row_Row {\n  constructor(parent) {\n    super(parent, parent.type.children.length);\n    return defineRowProxyProperties(this);\n  }\n  *keys() {\n    for (const field of this[kParent].type.children) {\n      yield field.name;\n    }\n  }\n  *values() {\n    for (const field of this[kParent].type.children) {\n      yield this[field.name];\n    }\n  }\n  getKey(idx) {\n    return this[kParent].type.children[idx].name;\n  }\n  getIndex(key) {\n    return this[kParent].type.children.findIndex(f => f.name === key);\n  }\n  getValue(index) {\n    return this[kParent].getChildAt(index).get(this[kRowIndex]);\n  }\n  setValue(index, value) {\n    return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n  }\n}\nObject.setPrototypeOf(row_Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n  const desc = {\n    enumerable: true,\n    configurable: false,\n    get: null,\n    set: null\n  };\n  return row => {\n    let idx = -1,\n      ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n    const getter = key => function () {\n      return this.get(key);\n    };\n    const setter = key => function (val) {\n      return this.set(key, val);\n    };\n    for (const key of row.keys()) {\n      ktoi.set(key, ++idx);\n      desc.get = getter(key);\n      desc.set = setter(key);\n      row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n      row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n    }\n    desc.get = desc.set = null;\n    return row;\n  };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n  if (typeof Proxy === 'undefined') {\n    return defineRowProxyProperties;\n  }\n  const has = row_Row.prototype.has;\n  const get = row_Row.prototype.get;\n  const set = row_Row.prototype.set;\n  const getKey = row_Row.prototype.getKey;\n  const RowProxyHandler = {\n    isExtensible() {\n      return false;\n    },\n    deleteProperty() {\n      return false;\n    },\n    preventExtensions() {\n      return true;\n    },\n    ownKeys(row) {\n      return [...row.keys()].map(x => \"\".concat(x));\n    },\n    has(row, key) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return true;\n      }\n      if (typeof key === 'number' && !row.has(key)) {\n        key = row.getKey(key);\n      }\n      return row.has(key);\n    },\n    get(row, key, receiver) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return Reflect.get(row, key, receiver);\n      }\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n      return get.call(receiver, key);\n    },\n    set(row, key, val, receiver) {\n      switch (key) {\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n          return Reflect.set(row, key, val, receiver);\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n          return false;\n      }\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n      return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n    }\n  };\n  return row => new Proxy(row, RowProxyHandler);\n})();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/vector.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nfunction clampIndex(source, index, then) {\n  const length = source.length;\n  const adjust = index > -1 ? index : length + index % length;\n  return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nfunction clampRange(source, begin, end, then) {\n  // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n  // clamp between 0 and length, and wrap around on negative indices, e.g.\n  // slice(-1, 5) or slice(5, -1)\n  let {\n    length: len = 0\n  } = source;\n  let lhs = typeof begin !== 'number' ? 0 : begin;\n  let rhs = typeof end !== 'number' ? len : end;\n  // wrap around on negative start/end positions\n  lhs < 0 && (lhs = (lhs % len + len) % len);\n  rhs < 0 && (rhs = (rhs % len + len) % len);\n  // ensure lhs <= rhs\n  rhs < lhs && (tmp = lhs, lhs = rhs, rhs = tmp);\n  // ensure rhs <= length\n  rhs > len && (rhs = len);\n  return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigIntCtor(0) : 0;\nconst isNaNFast = value => value !== value;\n/** @ignore */\nfunction createElementComparator(search) {\n  let typeofSearch = typeof search;\n  // Compare primitives\n  if (typeofSearch !== 'object' || search === null) {\n    // Compare NaN\n    if (isNaNFast(search)) {\n      return isNaNFast;\n    }\n    return typeofSearch !== 'bigint' ? value => value === search : value => big0 + value === search;\n  }\n  // Compare Dates\n  if (search instanceof Date) {\n    const valueOfSearch = search.valueOf();\n    return value => value instanceof Date ? value.valueOf() === valueOfSearch : false;\n  }\n  // Compare TypedArrays\n  if (ArrayBuffer.isView(search)) {\n    return value => value ? compareArrayLike(search, value) : false;\n  }\n  // Compare Maps and Rows\n  if (search instanceof Map) {\n    return creatMapComparator(search);\n  }\n  // Compare Array-likes\n  if (Array.isArray(search)) {\n    return createArrayLikeComparator(search);\n  }\n  // Compare Vectors\n  if (search instanceof AbstractVector) {\n    return createVectorComparator(search);\n  }\n  // Compare non-empty Objects\n  return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n  const comparators = [];\n  for (let i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[i]);\n  }\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n  let i = -1;\n  const comparators = [];\n  lhs.forEach(v => comparators[++i] = createElementComparator(v));\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n  const comparators = [];\n  for (let i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs.get(i));\n  }\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n  const keys = Object.keys(lhs);\n  // Only compare non-empty Objects\n  if (keys.length === 0) {\n    return () => false;\n  }\n  const comparators = [];\n  for (let i = -1, n = keys.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[keys[i]]);\n  }\n  return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n  return rhs => {\n    if (!rhs || typeof rhs !== 'object') {\n      return false;\n    }\n    switch (rhs.constructor) {\n      case Array:\n        return compareArray(comparators, rhs);\n      case Map:\n      case MapRow:\n      case StructRow:\n        return compareObject(comparators, rhs, rhs.keys());\n      case Object:\n      case undefined:\n        // support `Object.create(null)` objects\n        return compareObject(comparators, rhs, keys || Object.keys(rhs));\n    }\n    return rhs instanceof AbstractVector ? compareVector(comparators, rhs) : false;\n  };\n}\nfunction compareArray(comparators, arr) {\n  const n = comparators.length;\n  if (arr.length !== n) {\n    return false;\n  }\n  for (let i = -1; ++i < n;) {\n    if (!comparators[i](arr[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction compareVector(comparators, vec) {\n  const n = comparators.length;\n  if (vec.length !== n) {\n    return false;\n  }\n  for (let i = -1; ++i < n;) {\n    if (!comparators[i](vec.get(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction compareObject(comparators, obj, keys) {\n  const lKeyItr = keys[Symbol.iterator]();\n  const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n  const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n  let i = 0;\n  let n = comparators.length;\n  let rVal = rValItr.next();\n  let lKey = lKeyItr.next();\n  let rKey = rKeyItr.next();\n  for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n    if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n      break;\n    }\n  }\n  if (i === n && lKey.done && rKey.done && rVal.done) {\n    return true;\n  }\n  lKeyItr.return && lKeyItr.return();\n  rKeyItr.return && rKeyItr.return();\n  rValItr.return && rValItr.return();\n  return false;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/chunked.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass chunked_Chunked extends AbstractVector {\n  constructor(type) {\n    let chunks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let offsets = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : calculateOffsets(chunks);\n    super();\n    this._nullCount = -1;\n    this._type = type;\n    this._chunks = chunks;\n    this._chunkOffsets = offsets;\n    this._length = offsets[offsets.length - 1];\n    this._numChildren = (this._type.children || []).length;\n  }\n  /** @nocollapse */\n  static flatten() {\n    for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n      vectors[_key] = arguments[_key];\n    }\n    return selectChunkArgs(AbstractVector, vectors);\n  }\n  /** @nocollapse */\n  static concat() {\n    const chunks = chunked_Chunked.flatten(...arguments);\n    return new chunked_Chunked(chunks[0].type, chunks);\n  }\n  get type() {\n    return this._type;\n  }\n  get length() {\n    return this._length;\n  }\n  get chunks() {\n    return this._chunks;\n  }\n  get typeId() {\n    return this._type.typeId;\n  }\n  get VectorName() {\n    return \"Chunked<\".concat(this._type, \">\");\n  }\n  get data() {\n    return this._chunks[0] ? this._chunks[0].data : null;\n  }\n  get ArrayType() {\n    return this._type.ArrayType;\n  }\n  get numChildren() {\n    return this._numChildren;\n  }\n  get stride() {\n    return this._chunks[0] ? this._chunks[0].stride : 1;\n  }\n  get byteLength() {\n    return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n  }\n  get nullCount() {\n    let nullCount = this._nullCount;\n    if (nullCount < 0) {\n      this._nullCount = nullCount = this._chunks.reduce((x, _ref) => {\n        let {\n          nullCount\n        } = _ref;\n        return x + nullCount;\n      }, 0);\n    }\n    return nullCount;\n  }\n  get indices() {\n    if (type_DataType.isDictionary(this._type)) {\n      if (!this._indices) {\n        const chunks = this._chunks;\n        this._indices = chunks.length === 1 ? chunks[0].indices : chunked_Chunked.concat(...chunks.map(x => x.indices));\n      }\n      return this._indices;\n    }\n    return null;\n  }\n  get dictionary() {\n    if (type_DataType.isDictionary(this._type)) {\n      return this._chunks[this._chunks.length - 1].data.dictionary;\n    }\n    return null;\n  }\n  *[Symbol.iterator]() {\n    for (const chunk of this._chunks) {\n      yield* chunk;\n    }\n  }\n  clone() {\n    let chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._chunks;\n    return new chunked_Chunked(this._type, chunks);\n  }\n  concat() {\n    for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      others[_key2] = arguments[_key2];\n    }\n    return this.clone(chunked_Chunked.flatten(this, ...others));\n  }\n  slice(begin, end) {\n    return clampRange(this, begin, end, this._sliceInternal);\n  }\n  getChildAt(index) {\n    if (index < 0 || index >= this._numChildren) {\n      return null;\n    }\n    let columns = this._children || (this._children = []);\n    let child, field, chunks;\n    if (child = columns[index]) {\n      return child;\n    }\n    if (field = (this._type.children || [])[index]) {\n      chunks = this._chunks.map(vector => vector.getChildAt(index)).filter(vec => vec != null);\n      if (chunks.length > 0) {\n        return columns[index] = new chunked_Chunked(field.type, chunks);\n      }\n    }\n    return null;\n  }\n  search(index, then) {\n    let idx = index;\n    // binary search to find the child vector and value indices\n    let offsets = this._chunkOffsets,\n      rhs = offsets.length - 1;\n    // return early if out of bounds, or if there's just one child\n    if (idx < 0) {\n      return null;\n    }\n    if (idx >= offsets[rhs]) {\n      return null;\n    }\n    if (rhs <= 1) {\n      return then ? then(this, 0, idx) : [0, idx];\n    }\n    let lhs = 0,\n      pos = 0,\n      mid = 0;\n    do {\n      if (lhs + 1 === rhs) {\n        return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n      }\n      mid = lhs + (rhs - lhs) / 2 | 0;\n      idx >= offsets[mid] ? lhs = mid : rhs = mid;\n    } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n    return null;\n  }\n  isValid(index) {\n    return !!this.search(index, this.isValidInternal);\n  }\n  get(index) {\n    return this.search(index, this.getInternal);\n  }\n  set(index, value) {\n    this.search(index, (_ref2, i, j) => {\n      let {\n        chunks\n      } = _ref2;\n      return chunks[i].set(j, value);\n    });\n  }\n  indexOf(element, offset) {\n    if (offset && typeof offset === 'number') {\n      return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n    }\n    return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n  }\n  toArray() {\n    const {\n      chunks\n    } = this;\n    const n = chunks.length;\n    let ArrayType = this._type.ArrayType;\n    if (n <= 0) {\n      return new ArrayType(0);\n    }\n    if (n <= 1) {\n      return chunks[0].toArray();\n    }\n    let len = 0,\n      src = new Array(n);\n    for (let i = -1; ++i < n;) {\n      len += (src[i] = chunks[i].toArray()).length;\n    }\n    if (ArrayType !== src[0].constructor) {\n      ArrayType = src[0].constructor;\n    }\n    let dst = new ArrayType(len);\n    let set = ArrayType === Array ? arraySet : typedSet;\n    for (let i = -1, idx = 0; ++i < n;) {\n      idx = set(src[i], dst, idx);\n    }\n    return dst;\n  }\n  getInternal(_ref3, i, j) {\n    let {\n      _chunks\n    } = _ref3;\n    return _chunks[i].get(j);\n  }\n  isValidInternal(_ref4, i, j) {\n    let {\n      _chunks\n    } = _ref4;\n    return _chunks[i].isValid(j);\n  }\n  indexOfInternal(_ref5, chunkIndex, fromIndex, element) {\n    let {\n      _chunks\n    } = _ref5;\n    let i = chunkIndex - 1,\n      n = _chunks.length;\n    let start = fromIndex,\n      offset = 0,\n      found = -1;\n    while (++i < n) {\n      if (~(found = _chunks[i].indexOf(element, start))) {\n        return offset + found;\n      }\n      start = 0;\n      offset += _chunks[i].length;\n    }\n    return -1;\n  }\n  _sliceInternal(self, begin, end) {\n    const slices = [];\n    const {\n      chunks,\n      _chunkOffsets: chunkOffsets\n    } = self;\n    for (let i = -1, n = chunks.length; ++i < n;) {\n      const chunk = chunks[i];\n      const chunkLength = chunk.length;\n      const chunkOffset = chunkOffsets[i];\n      // If the child is to the right of the slice boundary, we can stop\n      if (chunkOffset >= end) {\n        break;\n      }\n      // If the child is to the left of of the slice boundary, exclude\n      if (begin >= chunkOffset + chunkLength) {\n        continue;\n      }\n      // If the child is between both left and right boundaries, include w/o slicing\n      if (chunkOffset >= begin && chunkOffset + chunkLength <= end) {\n        slices.push(chunk);\n        continue;\n      }\n      // If the child overlaps one of the slice boundaries, include that slice\n      const from = Math.max(0, begin - chunkOffset);\n      const to = Math.min(end - chunkOffset, chunkLength);\n      slices.push(chunk.slice(from, to));\n    }\n    return self.clone(slices);\n  }\n}\n/** @ignore */\nfunction calculateOffsets(vectors) {\n  let offsets = new Uint32Array((vectors || []).length + 1);\n  let offset = offsets[0] = 0,\n    length = offsets.length;\n  for (let index = 0; ++index < length;) {\n    offsets[index] = offset += vectors[index - 1].length;\n  }\n  return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n  dst.set(src, offset);\n  return offset + src.length;\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n  let idx = offset;\n  for (let i = -1, n = src.length; ++i < n;) {\n    dst[idx++] = src[i];\n  }\n  return idx;\n};\n// CONCATENATED MODULE: ./node_modules/apache-arrow/column.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\nclass column_Column extends chunked_Chunked {\n  constructor(field) {\n    let vectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let offsets = arguments.length > 2 ? arguments[2] : undefined;\n    vectors = chunked_Chunked.flatten(...vectors);\n    super(field.type, vectors, offsets);\n    this._field = field;\n    if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n      return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n    }\n  }\n  /** @nocollapse */\n  static new(field, data) {\n    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      rest[_key - 2] = arguments[_key];\n    }\n    const chunks = chunked_Chunked.flatten(Array.isArray(data) ? [...data, ...rest] : data instanceof AbstractVector ? [data, ...rest] : [AbstractVector.new(data, ...rest)]);\n    if (typeof field === 'string') {\n      const type = chunks[0].data.type;\n      field = new schema_Field(field, type, true);\n    } else if (!field.nullable && chunks.some(_ref => {\n      let {\n        nullCount\n      } = _ref;\n      return nullCount > 0;\n    })) {\n      field = field.clone({\n        nullable: true\n      });\n    }\n    return new column_Column(field, chunks);\n  }\n  get field() {\n    return this._field;\n  }\n  get name() {\n    return this._field.name;\n  }\n  get nullable() {\n    return this._field.nullable;\n  }\n  get metadata() {\n    return this._field.metadata;\n  }\n  clone() {\n    let chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._chunks;\n    return new column_Column(this._field, chunks);\n  }\n  getChildAt(index) {\n    if (index < 0 || index >= this.numChildren) {\n      return null;\n    }\n    let columns = this._children || (this._children = []);\n    let column, field, chunks;\n    if (column = columns[index]) {\n      return column;\n    }\n    if (field = (this.type.children || [])[index]) {\n      chunks = this._chunks.map(vector => vector.getChildAt(index)).filter(vec => vec != null);\n      if (chunks.length > 0) {\n        return columns[index] = new column_Column(field, chunks);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nclass SingleChunkColumn extends column_Column {\n  constructor(field, vector, offsets) {\n    super(field, [vector], offsets);\n    this._chunk = vector;\n  }\n  search(index, then) {\n    return then ? then(this, 0, index) : [0, index];\n  }\n  isValid(index) {\n    return this._chunk.isValid(index);\n  }\n  get(index) {\n    return this._chunk.get(index);\n  }\n  set(index, value) {\n    this._chunk.set(index, value);\n  }\n  indexOf(element, offset) {\n    return this._chunk.indexOf(element, offset);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/args.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\nconst isArray = Array.isArray;\n/** @ignore */\nconst selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nconst selectColumnArgs = args => {\n  const [fields, values] = _selectFieldArgs(args, [[], []]);\n  return values.map((x, i) => x instanceof column_Column ? column_Column.new(x.field.clone(fields[i]), x) : x instanceof AbstractVector ? column_Column.new(fields[i], x) : column_Column.new(fields[i], []));\n};\n/** @ignore */\nconst selectFieldArgs = args => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nconst selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nconst selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nconst selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n  let value,\n    j = idx;\n  let i = -1,\n    n = vals.length;\n  while (++i < n) {\n    if (isArray(value = vals[i])) {\n      j = _selectArgs(Ctor, value, res, j).length;\n    } else if (value instanceof Ctor) {\n      res[j++] = value;\n    }\n  }\n  return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n  let value,\n    j = idx;\n  let i = -1,\n    n = vals.length;\n  while (++i < n) {\n    if (isArray(value = vals[i])) {\n      j = _selectChunkArgs(Ctor, value, res, j).length;\n    } else if (value instanceof chunked_Chunked) {\n      j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n    } else if (value instanceof Ctor) {\n      res[j++] = value;\n    }\n  }\n  return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n  let value,\n    j = idx;\n  let i = -1,\n    n = vals.length;\n  while (++i < n) {\n    if (isArray(value = vals[i])) {\n      j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n    } else if (value instanceof Ctor) {\n      j = _selectArgs(AbstractVector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n    } else if (value instanceof AbstractVector) {\n      res[j++] = value;\n    }\n  }\n  return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n  let value,\n    j = idx;\n  let i = -1,\n    n = vals.length;\n  while (++i < n) {\n    if (isArray(value = vals[i])) {\n      j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n    } else if (value instanceof Ctor) {\n      j = _selectArgs(column_Column, value.schema.fields.map((f, i) => column_Column.new(f, value.getChildAt(i))), res, j).length;\n    } else if (value instanceof column_Column) {\n      res[j++] = value;\n    }\n  }\n  return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, _ref, i) => {\n  let [k, v] = _ref;\n  return xs[0][i] = k, xs[1][i] = v, xs;\n};\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n  let keys, n;\n  switch (n = vals.length) {\n    case 0:\n      return ret;\n    case 1:\n      keys = ret[0];\n      if (!vals[0]) {\n        return ret;\n      }\n      if (isArray(vals[0])) {\n        return _selectFieldArgs(vals[0], ret);\n      }\n      if (!(vals[0] instanceof data_Data || vals[0] instanceof AbstractVector || vals[0] instanceof type_DataType)) {\n        [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n      }\n      break;\n    default:\n      !isArray(keys = vals[n - 1]) ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = []) : vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1);\n  }\n  let fieldIndex = -1;\n  let valueIndex = -1;\n  let idx = -1,\n    len = vals.length;\n  let field;\n  let val;\n  let [fields, values] = ret;\n  while (++idx < len) {\n    val = vals[idx];\n    if (val instanceof column_Column && (values[++valueIndex] = val)) {\n      fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n    } else {\n      ({\n        [idx]: field = idx\n      } = keys);\n      if (val instanceof type_DataType && (values[++valueIndex] = val)) {\n        fields[++fieldIndex] = schema_Field.new(field, val, true);\n      } else if (val && val.type && (values[++valueIndex] = val)) {\n        val instanceof data_Data && (values[valueIndex] = val = AbstractVector.new(val));\n        fields[++fieldIndex] = schema_Field.new(field, val.type, true);\n      }\n    }\n  }\n  return ret;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/schema.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\nclass schema_Schema {\n  constructor() {\n    let fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let metadata = arguments.length > 1 ? arguments[1] : undefined;\n    let dictionaries = arguments.length > 2 ? arguments[2] : undefined;\n    this.fields = fields || [];\n    this.metadata = metadata || new Map();\n    if (!dictionaries) {\n      dictionaries = generateDictionaryMap(fields);\n    }\n    this.dictionaries = dictionaries;\n  }\n  /** @nocollapse */\n  static from() {\n    return schema_Schema.new(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n  }\n  /** @nocollapse */\n  static new() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new schema_Schema(selectFieldArgs(args)[0]);\n  }\n  get [Symbol.toStringTag]() {\n    return 'Schema';\n  }\n  toString() {\n    return \"Schema<{ \".concat(this.fields.map((f, i) => \"\".concat(i, \": \").concat(f)).join(', '), \" }>\");\n  }\n  compareTo(other) {\n    return instance.compareSchemas(this, other);\n  }\n  select() {\n    for (var _len2 = arguments.length, columnNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      columnNames[_key2] = arguments[_key2];\n    }\n    const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n    return new schema_Schema(this.fields.filter(f => names[f.name]), this.metadata);\n  }\n  selectAt() {\n    for (var _len3 = arguments.length, columnIndices = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      columnIndices[_key3] = arguments[_key3];\n    }\n    return new schema_Schema(columnIndices.map(i => this.fields[i]).filter(Boolean), this.metadata);\n  }\n  assign() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    const other = args[0] instanceof schema_Schema ? args[0] : new schema_Schema(selectArgs(schema_Field, args));\n    const curFields = [...this.fields];\n    const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n    const newFields = other.fields.filter(f2 => {\n      const i = curFields.findIndex(f => f.name === f2.name);\n      return ~i ? (curFields[i] = f2.clone({\n        metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n      })) && false : true;\n    });\n    const newDictionaries = generateDictionaryMap(newFields, new Map());\n    return new schema_Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n  }\n}\nclass schema_Field {\n  constructor(name, type) {\n    let nullable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let metadata = arguments.length > 3 ? arguments[3] : undefined;\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata || new Map();\n  }\n  /** @nocollapse */\n  static new() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    let [name, type, nullable, metadata] = args;\n    if (args[0] && typeof args[0] === 'object') {\n      ({\n        name\n      } = args[0]);\n      type === undefined && (type = args[0].type);\n      nullable === undefined && (nullable = args[0].nullable);\n      metadata === undefined && (metadata = args[0].metadata);\n    }\n    return new schema_Field(\"\".concat(name), type, nullable, metadata);\n  }\n  get typeId() {\n    return this.type.typeId;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Field';\n  }\n  toString() {\n    return \"\".concat(this.name, \": \").concat(this.type);\n  }\n  compareTo(other) {\n    return instance.compareField(this, other);\n  }\n  clone() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    let [name, type, nullable, metadata] = args;\n    !args[0] || typeof args[0] !== 'object' ? [name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args : ({\n      name = this.name,\n      type = this.type,\n      nullable = this.nullable,\n      metadata = this.metadata\n    } = args[0]);\n    return schema_Field.new(name, type, nullable, metadata);\n  }\n}\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields) {\n  let dictionaries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  for (let i = -1, n = fields.length; ++i < n;) {\n    const field = fields[i];\n    const type = field.type;\n    if (type_DataType.isDictionary(type)) {\n      if (!dictionaries.has(type.id)) {\n        dictionaries.set(type.id, type.dictionary);\n      } else if (dictionaries.get(type.id) !== type.dictionary) {\n        throw new Error(\"Cannot create Schema containing two different dictionaries with the same Id\");\n      }\n    }\n    if (type.children && type.children.length > 0) {\n      generateDictionaryMap(type.children, dictionaries);\n    }\n  }\n  return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nschema_Schema.prototype.fields = null;\nschema_Schema.prototype.metadata = null;\nschema_Schema.prototype.dictionaries = null;\nschema_Field.prototype.type = null;\nschema_Field.prototype.name = null;\nschema_Field.prototype.nullable = null;\nschema_Field.prototype.metadata = null;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/list.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nclass list_ListBuilder extends builder_VariableWidthBuilder {\n  constructor(opts) {\n    super(opts);\n    this._run = new run_Run();\n    this._offsets = new OffsetsBufferBuilder();\n  }\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n    if (this.numChildren > 0) {\n      throw new Error('ListBuilder can only have one child.');\n    }\n    this.children[this.numChildren] = child;\n    this.type = new type_List(new schema_Field(name, child.type, true));\n    return this.numChildren - 1;\n  }\n  clear() {\n    this._run.clear();\n    return super.clear();\n  }\n  _flushPending(pending) {\n    const run = this._run;\n    const offsets = this._offsets;\n    const setValue = this._setValue;\n    let index = 0,\n      value;\n    for ([index, value] of pending) {\n      if (value === undefined) {\n        offsets.set(index, 0);\n      } else {\n        offsets.set(index, value.length);\n        setValue(this, index, run.bind(value));\n      }\n    }\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/fixedsizelist.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass fixedsizelist_FixedSizeListBuilder extends builder_Builder {\n  constructor() {\n    super(...arguments);\n    this._run = new run_Run();\n  }\n  setValue(index, value) {\n    super.setValue(index, this._run.bind(value));\n  }\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n    if (this.numChildren > 0) {\n      throw new Error('FixedSizeListBuilder can only have one child.');\n    }\n    const childIndex = this.children.push(child);\n    this.type = new type_FixedSizeList(this.type.listSize, new schema_Field(name, child.type, true));\n    return childIndex;\n  }\n  clear() {\n    this._run.clear();\n    return super.clear();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/map.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass map_MapBuilder extends builder_VariableWidthBuilder {\n  set(index, value) {\n    return super.set(index, value);\n  }\n  setValue(index, value) {\n    value = value instanceof Map ? value : new Map(Object.entries(value));\n    const pending = this._pending || (this._pending = new Map());\n    const current = pending.get(index);\n    current && (this._pendingLength -= current.size);\n    this._pendingLength += value.size;\n    pending.set(index, value);\n  }\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.numChildren);\n    if (this.numChildren > 0) {\n      throw new Error('ListBuilder can only have one child.');\n    }\n    this.children[this.numChildren] = child;\n    this.type = new type_Map_(new schema_Field(name, child.type, true), this.type.keysSorted);\n    return this.numChildren - 1;\n  }\n  _flushPending(pending) {\n    const offsets = this._offsets;\n    const setValue = this._setValue;\n    pending.forEach((value, index) => {\n      if (value === undefined) {\n        offsets.set(index, 0);\n      } else {\n        offsets.set(index, value.size);\n        setValue(this, index, value);\n      }\n    });\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/struct.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass struct_StructBuilder extends builder_Builder {\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.numChildren);\n    const childIndex = this.children.push(child);\n    this.type = new type_Struct([...this.type.children, new schema_Field(name, child.type, true)]);\n    return childIndex;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/union.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass union_UnionBuilder extends builder_Builder {\n  constructor(options) {\n    super(options);\n    this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n    if (typeof options['valueToChildTypeId'] === 'function') {\n      this._valueToChildTypeId = options['valueToChildTypeId'];\n    }\n  }\n  get typeIdToChildIndex() {\n    return this.type.typeIdToChildIndex;\n  }\n  append(value, childTypeId) {\n    return this.set(this.length, value, childTypeId);\n  }\n  set(index, value, childTypeId) {\n    if (childTypeId === undefined) {\n      childTypeId = this._valueToChildTypeId(this, value, index);\n    }\n    if (this.setValid(index, this.isValid(value))) {\n      this.setValue(index, value, childTypeId);\n    }\n    return this;\n  }\n  // @ts-ignore\n  setValue(index, value, childTypeId) {\n    this._typeIds.set(index, childTypeId);\n    super.setValue(index, value);\n  }\n  // @ts-ignore\n  addChild(child) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.children.length);\n    const childTypeId = this.children.push(child);\n    const {\n      type: {\n        children,\n        mode,\n        typeIds\n      }\n    } = this;\n    const fields = [...children, new schema_Field(name, child.type)];\n    this.type = new type_Union_(mode, [...typeIds, childTypeId], fields);\n    return childTypeId;\n  }\n  /** @ignore */\n  // @ts-ignore\n  _valueToChildTypeId(builder, value, offset) {\n    throw new Error(\"Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.\");\n  }\n}\n/** @ignore */\nclass SparseUnionBuilder extends union_UnionBuilder {}\n/** @ignore */\nclass union_DenseUnionBuilder extends union_UnionBuilder {\n  constructor(options) {\n    super(options);\n    this._offsets = new DataBufferBuilder(new Int32Array(0));\n  }\n  /** @ignore */\n  setValue(index, value, childTypeId) {\n    const childIndex = this.type.typeIdToChildIndex[childTypeId];\n    this._offsets.set(index, this.getChildAt(childIndex).length);\n    return super.setValue(index, value, childTypeId);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/set.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n/** @ignore */\nclass set_SetVisitor extends Visitor {}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => {\n  data[index] = epochMs / 86400000 | 0;\n};\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n  data[index] = epochMs % 4294967296 | 0;\n  data[index + 1] = epochMs / 4294967296 | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n  data[index] = epochMs * 1000 % 4294967296 | 0;\n  data[index + 1] = epochMs * 1000 / 4294967296 | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n  data[index] = epochMs * 1000000 % 4294967296 | 0;\n  data[index + 1] = epochMs * 1000000 / 4294967296 | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n  const {\n    [index]: x,\n    [index + 1]: y\n  } = valueOffsets;\n  if (x != null && y != null) {\n    values.set(value.subarray(0, y - x), x);\n  }\n};\n/** @ignore */\nconst set_setBool = (_ref, index, val) => {\n  let {\n    offset,\n    values\n  } = _ref;\n  const idx = offset + index;\n  val ? values[idx >> 3] |= 1 << idx % 8 // true\n  : values[idx >> 3] &= ~(1 << idx % 8); // false\n};\n/** @ignore */\nconst setDateDay = (_ref2, index, value) => {\n  let {\n    values\n  } = _ref2;\n  setEpochMsToDays(values, index, value.valueOf());\n};\n/** @ignore */\nconst setDateMillisecond = (_ref3, index, value) => {\n  let {\n    values\n  } = _ref3;\n  setEpochMsToMillisecondsLong(values, index * 2, value.valueOf());\n};\n/** @ignore */\nconst setNumeric = (_ref4, index, value) => {\n  let {\n    stride,\n    values\n  } = _ref4;\n  values[stride * index] = value;\n};\n/** @ignore */\nconst setFloat16 = (_ref5, index, value) => {\n  let {\n    stride,\n    values\n  } = _ref5;\n  values[stride * index] = float64ToUint16(value);\n};\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n  switch (typeof value) {\n    case 'bigint':\n      vector.values64[index] = value;\n      break;\n    case 'number':\n      vector.values[index * vector.stride] = value;\n      break;\n    default:\n      const val = value;\n      const {\n        stride,\n        ArrayType\n      } = vector;\n      const long = toArrayBufferView(ArrayType, val);\n      vector.values.set(long.subarray(0, stride), stride * index);\n  }\n};\n/** @ignore */\nconst setFixedSizeBinary = (_ref6, index, value) => {\n  let {\n    stride,\n    values\n  } = _ref6;\n  values.set(value.subarray(0, stride), stride * index);\n};\n/** @ignore */\nconst setBinary = (_ref7, index, value) => {\n  let {\n    values,\n    valueOffsets\n  } = _ref7;\n  return setVariableWidthBytes(values, valueOffsets, index, value);\n};\n/** @ignore */\nconst setUtf8 = (_ref8, index, value) => {\n  let {\n    values,\n    valueOffsets\n  } = _ref8;\n  setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n  vector.type.bitWidth < 64 ? setNumeric(vector, index, value) : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n  vector.type.precision !== Precision.HALF ? setNumeric(vector, index, value) : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n  vector.type.unit === DateUnit.DAY ? setDateDay(vector, index, value) : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = (_ref9, index, value) => {\n  let {\n    values\n  } = _ref9;\n  return setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n};\n/** @ignore */\nconst setTimestampMillisecond = (_ref10, index, value) => {\n  let {\n    values\n  } = _ref10;\n  return setEpochMsToMillisecondsLong(values, index * 2, value);\n};\n/** @ignore */\nconst setTimestampMicrosecond = (_ref11, index, value) => {\n  let {\n    values\n  } = _ref11;\n  return setEpochMsToMicrosecondsLong(values, index * 2, value);\n};\n/** @ignore */\nconst setTimestampNanosecond = (_ref12, index, value) => {\n  let {\n    values\n  } = _ref12;\n  return setEpochMsToNanosecondsLong(values, index * 2, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n  switch (vector.type.unit) {\n    case TimeUnit.SECOND:\n      return setTimestampSecond(vector, index, value);\n    case TimeUnit.MILLISECOND:\n      return setTimestampMillisecond(vector, index, value);\n    case TimeUnit.MICROSECOND:\n      return setTimestampMicrosecond(vector, index, value);\n    case TimeUnit.NANOSECOND:\n      return setTimestampNanosecond(vector, index, value);\n  }\n};\n/** @ignore */\nconst setTimeSecond = (_ref13, index, value) => {\n  let {\n    values,\n    stride\n  } = _ref13;\n  values[stride * index] = value;\n};\n/** @ignore */\nconst setTimeMillisecond = (_ref14, index, value) => {\n  let {\n    values,\n    stride\n  } = _ref14;\n  values[stride * index] = value;\n};\n/** @ignore */\nconst setTimeMicrosecond = (_ref15, index, value) => {\n  let {\n    values\n  } = _ref15;\n  values.set(value.subarray(0, 2), 2 * index);\n};\n/** @ignore */\nconst setTimeNanosecond = (_ref16, index, value) => {\n  let {\n    values\n  } = _ref16;\n  values.set(value.subarray(0, 2), 2 * index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n  switch (vector.type.unit) {\n    case TimeUnit.SECOND:\n      return setTimeSecond(vector, index, value);\n    case TimeUnit.MILLISECOND:\n      return setTimeMillisecond(vector, index, value);\n    case TimeUnit.MICROSECOND:\n      return setTimeMicrosecond(vector, index, value);\n    case TimeUnit.NANOSECOND:\n      return setTimeNanosecond(vector, index, value);\n  }\n};\n/** @ignore */\nconst setDecimal = (_ref17, index, value) => {\n  let {\n    values\n  } = _ref17;\n  values.set(value.subarray(0, 4), 4 * index);\n};\n/** @ignore */\nconst setList = (vector, index, value) => {\n  const values = vector.getChildAt(0),\n    valueOffsets = vector.valueOffsets;\n  for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n    values.set(itr++, value.get(++idx));\n  }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n  const values = vector.getChildAt(0),\n    valueOffsets = vector.valueOffsets;\n  const entries = value instanceof Map ? [...value] : Object.entries(value);\n  for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n    values.set(itr++, entries[++idx]);\n  }\n};\n/** @ignore */\nconst _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */\nconst _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */\nconst _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */\nconst _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n  const setValue = value instanceof Map ? _setStructMapValue(index, value) : value instanceof AbstractVector ? _setStructVectorValue(index, value) : Array.isArray(value) ? _setStructArrayValue(index, value) : _setStructObjectValue(index, value);\n  vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n  vector.type.mode === UnionMode.Dense ? setDenseUnion(vector, index, value) : setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n  const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n  const child = vector.getChildAt(childIndex);\n  child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n  const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n  const child = vector.getChildAt(childIndex);\n  child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n  const key = vector.getKey(index);\n  if (key !== null) {\n    vector.setValue(key, value);\n  }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n  vector.type.unit === IntervalUnit.DAY_TIME ? setIntervalDayTime(vector, index, value) : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = (_ref18, index, value) => {\n  let {\n    values\n  } = _ref18;\n  values.set(value.subarray(0, 2), 2 * index);\n};\n/** @ignore */\nconst setIntervalYearMonth = (_ref19, index, value) => {\n  let {\n    values\n  } = _ref19;\n  values[index] = value[0] * 12 + value[1] % 12;\n};\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n  const child = vector.getChildAt(0),\n    {\n      stride\n    } = vector;\n  for (let idx = -1, offset = index * stride; ++idx < stride;) {\n    child.set(offset + idx, value.get(idx));\n  }\n};\nset_SetVisitor.prototype.visitBool = set_setBool;\nset_SetVisitor.prototype.visitInt = setInt;\nset_SetVisitor.prototype.visitInt8 = setNumeric;\nset_SetVisitor.prototype.visitInt16 = setNumeric;\nset_SetVisitor.prototype.visitInt32 = setNumeric;\nset_SetVisitor.prototype.visitInt64 = setNumericX2;\nset_SetVisitor.prototype.visitUint8 = setNumeric;\nset_SetVisitor.prototype.visitUint16 = setNumeric;\nset_SetVisitor.prototype.visitUint32 = setNumeric;\nset_SetVisitor.prototype.visitUint64 = setNumericX2;\nset_SetVisitor.prototype.visitFloat = setFloat;\nset_SetVisitor.prototype.visitFloat16 = setFloat16;\nset_SetVisitor.prototype.visitFloat32 = setNumeric;\nset_SetVisitor.prototype.visitFloat64 = setNumeric;\nset_SetVisitor.prototype.visitUtf8 = setUtf8;\nset_SetVisitor.prototype.visitBinary = setBinary;\nset_SetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nset_SetVisitor.prototype.visitDate = setDate;\nset_SetVisitor.prototype.visitDateDay = setDateDay;\nset_SetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nset_SetVisitor.prototype.visitTimestamp = setTimestamp;\nset_SetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nset_SetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nset_SetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nset_SetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nset_SetVisitor.prototype.visitTime = setTime;\nset_SetVisitor.prototype.visitTimeSecond = setTimeSecond;\nset_SetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nset_SetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nset_SetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nset_SetVisitor.prototype.visitDecimal = setDecimal;\nset_SetVisitor.prototype.visitList = setList;\nset_SetVisitor.prototype.visitStruct = setStruct;\nset_SetVisitor.prototype.visitUnion = setUnion;\nset_SetVisitor.prototype.visitDenseUnion = setDenseUnion;\nset_SetVisitor.prototype.visitSparseUnion = setSparseUnion;\nset_SetVisitor.prototype.visitDictionary = setDictionary;\nset_SetVisitor.prototype.visitInterval = setIntervalValue;\nset_SetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nset_SetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nset_SetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nset_SetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nconst set_instance = new set_SetVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/builderctor.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @ignore */\nclass builderctor_GetBuilderCtor extends Visitor {\n  visitNull() {\n    return null_NullBuilder;\n  }\n  visitBool() {\n    return bool_BoolBuilder;\n  }\n  visitInt() {\n    return int_IntBuilder;\n  }\n  visitInt8() {\n    return Int8Builder;\n  }\n  visitInt16() {\n    return Int16Builder;\n  }\n  visitInt32() {\n    return Int32Builder;\n  }\n  visitInt64() {\n    return int_Int64Builder;\n  }\n  visitUint8() {\n    return Uint8Builder;\n  }\n  visitUint16() {\n    return Uint16Builder;\n  }\n  visitUint32() {\n    return Uint32Builder;\n  }\n  visitUint64() {\n    return int_Uint64Builder;\n  }\n  visitFloat() {\n    return float_FloatBuilder;\n  }\n  visitFloat16() {\n    return float_Float16Builder;\n  }\n  visitFloat32() {\n    return Float32Builder;\n  }\n  visitFloat64() {\n    return Float64Builder;\n  }\n  visitUtf8() {\n    return utf8_Utf8Builder;\n  }\n  visitBinary() {\n    return binary_BinaryBuilder;\n  }\n  visitFixedSizeBinary() {\n    return fixedsizebinary_FixedSizeBinaryBuilder;\n  }\n  visitDate() {\n    return date_DateBuilder;\n  }\n  visitDateDay() {\n    return DateDayBuilder;\n  }\n  visitDateMillisecond() {\n    return DateMillisecondBuilder;\n  }\n  visitTimestamp() {\n    return timestamp_TimestampBuilder;\n  }\n  visitTimestampSecond() {\n    return TimestampSecondBuilder;\n  }\n  visitTimestampMillisecond() {\n    return TimestampMillisecondBuilder;\n  }\n  visitTimestampMicrosecond() {\n    return TimestampMicrosecondBuilder;\n  }\n  visitTimestampNanosecond() {\n    return TimestampNanosecondBuilder;\n  }\n  visitTime() {\n    return time_TimeBuilder;\n  }\n  visitTimeSecond() {\n    return TimeSecondBuilder;\n  }\n  visitTimeMillisecond() {\n    return TimeMillisecondBuilder;\n  }\n  visitTimeMicrosecond() {\n    return TimeMicrosecondBuilder;\n  }\n  visitTimeNanosecond() {\n    return TimeNanosecondBuilder;\n  }\n  visitDecimal() {\n    return decimal_DecimalBuilder;\n  }\n  visitList() {\n    return list_ListBuilder;\n  }\n  visitStruct() {\n    return struct_StructBuilder;\n  }\n  visitUnion() {\n    return union_UnionBuilder;\n  }\n  visitDenseUnion() {\n    return union_DenseUnionBuilder;\n  }\n  visitSparseUnion() {\n    return SparseUnionBuilder;\n  }\n  visitDictionary() {\n    return dictionary_DictionaryBuilder;\n  }\n  visitInterval() {\n    return interval_IntervalBuilder;\n  }\n  visitIntervalDayTime() {\n    return IntervalDayTimeBuilder;\n  }\n  visitIntervalYearMonth() {\n    return IntervalYearMonthBuilder;\n  }\n  visitFixedSizeList() {\n    return fixedsizelist_FixedSizeListBuilder;\n  }\n  visitMap() {\n    return map_MapBuilder;\n  }\n}\n/** @ignore */\nconst builderctor_instance = new builderctor_GetBuilderCtor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/builder/index.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @nocollapse */\nbuilder_Builder.new = newBuilder;\nfunction newBuilder(options) {\n  const type = options.type;\n  const builder = new (builderctor_instance.getVisitFn(type)())(options);\n  if (type.children && type.children.length > 0) {\n    const children = options['children'] || [];\n    const defaultOptions = {\n      'nullValues': options['nullValues']\n    };\n    const getChildOptions = Array.isArray(children) ? (_, i) => children[i] || defaultOptions : _ref => {\n      let {\n        name\n      } = _ref;\n      return children[name] || defaultOptions;\n    };\n    type.children.forEach((field, index) => {\n      const {\n        type\n      } = field;\n      const opts = getChildOptions(field, index);\n      builder.children.push(newBuilder({\n        ...opts,\n        type\n      }));\n    });\n  }\n  return builder;\n}\nObject.keys(Type).map(T => Type[T]).filter(T => typeof T === 'number' && T !== Type.NONE).forEach(typeId => {\n  const BuilderCtor = builderctor_instance.visit(typeId);\n  BuilderCtor.prototype._setValue = set_instance.getVisitFn(typeId);\n});\nutf8_Utf8Builder.prototype._setValue = set_instance.visitBinary;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/fb/File.mjs\n// automatically generated by the FlatBuffers compiler, do not modify\n\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nvar File_org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Footer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Footer= obj\n           * @returns Footer\n           */\n          static getRootAsFooter(bb, obj) {\n            return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? ( /**  */this.bb.readInt16(this.bb_pos + offset)) : Schema_org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.Schema= obj\n           * @returns org.apache.arrow.flatbuf.Schema|null\n           */\n          schema(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new Schema_org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          dictionaries(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          dictionariesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          recordBatches(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          recordBatchesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFooter(builder) {\n            builder.startObject(4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, Schema_org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset schemaOffset\n           */\n          static addSchema(builder, schemaOffset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionariesOffset\n           */\n          static addDictionaries(builder, dictionariesOffset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startDictionariesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset recordBatchesOffset\n           */\n          static addRecordBatches(builder, recordBatchesOffset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startRecordBatchesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFooter(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n          static finishFooterBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n          static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n          }\n        }\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(File_org || (File_org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Block {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * Index to the start of the RecordBlock (note this is past the Message header)\n           *\n           * @returns flatbuffers.Long\n           */\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * Length of the metadata\n           *\n           * @returns number\n           */\n          metaDataLength() {\n            return this.bb.readInt32(this.bb_pos + 8);\n          }\n          /**\n           * Length of the data (this is aligned so there can be a gap between this and\n           * the metatdata).\n           *\n           * @returns flatbuffers.Long\n           */\n          bodyLength() {\n            return this.bb.readInt64(this.bb_pos + 16);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param number metaDataLength\n           * @param flatbuffers.Long bodyLength\n           * @returns flatbuffers.Offset\n           */\n          static createBlock(builder, offset, metaDataLength, bodyLength) {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n        }\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(File_org || (File_org = {}));\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/metadata/file.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\n\n\nvar Long = flatbuffers.Long;\nvar file_Builder = flatbuffers.Builder;\nvar file_ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_org.apache.arrow.flatbuf.Block;\nvar _Footer = File_org.apache.arrow.flatbuf.Footer;\n\n\n\n/** @ignore */\nclass file_Footer_ {\n  constructor(schema) {\n    let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MetadataVersion.V4;\n    let recordBatches = arguments.length > 2 ? arguments[2] : undefined;\n    let dictionaryBatches = arguments.length > 3 ? arguments[3] : undefined;\n    this.schema = schema;\n    this.version = version;\n    recordBatches && (this._recordBatches = recordBatches);\n    dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n  }\n  /** @nocollapse */\n  static decode(buf) {\n    buf = new file_ByteBuffer(toUint8Array(buf));\n    const footer = _Footer.getRootAsFooter(buf);\n    const schema = schema_Schema.decode(footer.schema());\n    return new OffHeapFooter(schema, footer);\n  }\n  /** @nocollapse */\n  static encode(footer) {\n    const b = new file_Builder();\n    const schemaOffset = schema_Schema.encode(b, footer.schema);\n    _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n    [...footer.recordBatches()].slice().reverse().forEach(rb => FileBlock.encode(b, rb));\n    const recordBatchesOffset = b.endVector();\n    _Footer.startDictionariesVector(b, footer.numDictionaries);\n    [...footer.dictionaryBatches()].slice().reverse().forEach(db => FileBlock.encode(b, db));\n    const dictionaryBatchesOffset = b.endVector();\n    _Footer.startFooter(b);\n    _Footer.addSchema(b, schemaOffset);\n    _Footer.addVersion(b, MetadataVersion.V4);\n    _Footer.addRecordBatches(b, recordBatchesOffset);\n    _Footer.addDictionaries(b, dictionaryBatchesOffset);\n    _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n    return b.asUint8Array();\n  }\n  get numRecordBatches() {\n    return this._recordBatches.length;\n  }\n  get numDictionaries() {\n    return this._dictionaryBatches.length;\n  }\n  *recordBatches() {\n    for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n      if (block = this.getRecordBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  *dictionaryBatches() {\n    for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n      if (block = this.getDictionaryBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  getRecordBatch(index) {\n    return index >= 0 && index < this.numRecordBatches && this._recordBatches[index] || null;\n  }\n  getDictionaryBatch(index) {\n    return index >= 0 && index < this.numDictionaries && this._dictionaryBatches[index] || null;\n  }\n}\n\n/** @ignore */\nclass OffHeapFooter extends file_Footer_ {\n  constructor(schema, _footer) {\n    super(schema, _footer.version());\n    this._footer = _footer;\n  }\n  get numRecordBatches() {\n    return this._footer.recordBatchesLength();\n  }\n  get numDictionaries() {\n    return this._footer.dictionariesLength();\n  }\n  getRecordBatch(index) {\n    if (index >= 0 && index < this.numRecordBatches) {\n      const fileBlock = this._footer.recordBatches(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n  getDictionaryBatch(index) {\n    if (index >= 0 && index < this.numDictionaries) {\n      const fileBlock = this._footer.dictionaries(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nclass FileBlock {\n  /** @nocollapse */\n  static decode(block) {\n    return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n  }\n  /** @nocollapse */\n  static encode(b, fileBlock) {\n    const {\n      metaDataLength\n    } = fileBlock;\n    const offset = new Long(fileBlock.offset, 0);\n    const bodyLength = new Long(fileBlock.bodyLength, 0);\n    return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n  }\n  constructor(metaDataLength, bodyLength, offset) {\n    this.metaDataLength = metaDataLength;\n    this.offset = typeof offset === 'number' ? offset : offset.low;\n    this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/stream.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nclass stream_AsyncByteQueue extends interfaces_AsyncQueue {\n  write(value) {\n    if ((value = toUint8Array(value)).byteLength > 0) {\n      return super.write(value);\n    }\n  }\n  toString() {\n    let sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return sync ? decodeUtf8(this.toUint8Array(true)) : this.toUint8Array(false).then(decodeUtf8);\n  }\n  toUint8Array() {\n    let sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return sync ? joinUint8Arrays(this._values)[0] : (async () => {\n      let buffers = [],\n        byteLength = 0;\n      for await (const chunk of this) {\n        buffers.push(chunk);\n        byteLength += chunk.byteLength;\n      }\n      return joinUint8Arrays(buffers, byteLength)[0];\n    })();\n  }\n}\n/** @ignore */\nclass stream_ByteStream {\n  constructor(source) {\n    if (source) {\n      this.source = new stream_ByteStreamSource(adapters.fromIterable(source));\n    }\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next(value) {\n    return this.source.next(value);\n  }\n  throw(value) {\n    return this.source.throw(value);\n  }\n  return(value) {\n    return this.source.return(value);\n  }\n  peek(size) {\n    return this.source.peek(size);\n  }\n  read(size) {\n    return this.source.read(size);\n  }\n}\n/** @ignore */\nclass stream_AsyncByteStream {\n  constructor(source) {\n    if (source instanceof stream_AsyncByteStream) {\n      this.source = source.source;\n    } else if (source instanceof stream_AsyncByteQueue) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromAsyncIterable(source));\n    } else if (isReadableNodeStream(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromNodeStream(source));\n    } else if (isReadableDOMStream(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromDOMStream(source));\n    } else if (isFetchResponse(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromDOMStream(source.body));\n    } else if (isIterable(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromIterable(source));\n    } else if (isPromise(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromAsyncIterable(source));\n    } else if (isAsyncIterable(source)) {\n      this.source = new stream_AsyncByteStreamSource(adapters.fromAsyncIterable(source));\n    }\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  next(value) {\n    return this.source.next(value);\n  }\n  throw(value) {\n    return this.source.throw(value);\n  }\n  return(value) {\n    return this.source.return(value);\n  }\n  get closed() {\n    return this.source.closed;\n  }\n  cancel(reason) {\n    return this.source.cancel(reason);\n  }\n  peek(size) {\n    return this.source.peek(size);\n  }\n  read(size) {\n    return this.source.read(size);\n  }\n}\n/** @ignore */\nclass stream_ByteStreamSource {\n  constructor(source) {\n    this.source = source;\n  }\n  cancel(reason) {\n    this.return(reason);\n  }\n  peek(size) {\n    return this.next(size, 'peek').value;\n  }\n  read(size) {\n    return this.next(size, 'read').value;\n  }\n  next(size) {\n    let cmd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'read';\n    return this.source.next({\n      cmd,\n      size\n    });\n  }\n  throw(value) {\n    return Object.create(this.source.throw && this.source.throw(value) || ITERATOR_DONE);\n  }\n  return(value) {\n    return Object.create(this.source.return && this.source.return(value) || ITERATOR_DONE);\n  }\n}\n/** @ignore */\nclass stream_AsyncByteStreamSource {\n  constructor(source) {\n    this.source = source;\n    this._closedPromise = new Promise(r => this._closedPromiseResolve = r);\n  }\n  async cancel(reason) {\n    await this.return(reason);\n  }\n  get closed() {\n    return this._closedPromise;\n  }\n  async read(size) {\n    return (await this.next(size, 'read')).value;\n  }\n  async peek(size) {\n    return (await this.next(size, 'peek')).value;\n  }\n  async next(size) {\n    let cmd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'read';\n    return await this.source.next({\n      cmd,\n      size\n    });\n  }\n  async throw(value) {\n    const result = this.source.throw && (await this.source.throw(value)) || ITERATOR_DONE;\n    this._closedPromiseResolve && this._closedPromiseResolve();\n    this._closedPromiseResolve = undefined;\n    return Object.create(result);\n  }\n  async return(value) {\n    const result = this.source.return && (await this.source.return(value)) || ITERATOR_DONE;\n    this._closedPromiseResolve && this._closedPromiseResolve();\n    this._closedPromiseResolve = undefined;\n    return Object.create(result);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/file.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nclass file_RandomAccessFile extends stream_ByteStream {\n  constructor(buffer, byteLength) {\n    super();\n    this.position = 0;\n    this.buffer = toUint8Array(buffer);\n    this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n  }\n  readInt32(position) {\n    const {\n      buffer,\n      byteOffset\n    } = this.readAt(position, 4);\n    return new DataView(buffer, byteOffset).getInt32(0, true);\n  }\n  seek(position) {\n    this.position = Math.min(position, this.size);\n    return position < this.size;\n  }\n  read(nBytes) {\n    const {\n      buffer,\n      size,\n      position\n    } = this;\n    if (buffer && position < size) {\n      if (typeof nBytes !== 'number') {\n        nBytes = Infinity;\n      }\n      this.position = Math.min(size, position + Math.min(size - position, nBytes));\n      return buffer.subarray(position, this.position);\n    }\n    return null;\n  }\n  readAt(position, nBytes) {\n    const buf = this.buffer;\n    const end = Math.min(this.size, position + nBytes);\n    return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n  }\n  close() {\n    this.buffer && (this.buffer = null);\n  }\n  throw(value) {\n    this.close();\n    return {\n      done: true,\n      value\n    };\n  }\n  return(value) {\n    this.close();\n    return {\n      done: true,\n      value\n    };\n  }\n}\n/** @ignore */\nclass file_AsyncRandomAccessFile extends stream_AsyncByteStream {\n  constructor(file, byteLength) {\n    super();\n    this.position = 0;\n    this._handle = file;\n    if (typeof byteLength === 'number') {\n      this.size = byteLength;\n    } else {\n      this._pending = (async () => {\n        this.size = (await file.stat()).size;\n        delete this._pending;\n      })();\n    }\n  }\n  async readInt32(position) {\n    const {\n      buffer,\n      byteOffset\n    } = await this.readAt(position, 4);\n    return new DataView(buffer, byteOffset).getInt32(0, true);\n  }\n  async seek(position) {\n    this._pending && (await this._pending);\n    this.position = Math.min(position, this.size);\n    return position < this.size;\n  }\n  async read(nBytes) {\n    this._pending && (await this._pending);\n    const {\n      _handle: file,\n      size,\n      position\n    } = this;\n    if (file && position < size) {\n      if (typeof nBytes !== 'number') {\n        nBytes = Infinity;\n      }\n      let pos = position,\n        offset = 0,\n        bytesRead = 0;\n      let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n      let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n      while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n        ({\n          bytesRead\n        } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n      }\n      return buffer;\n    }\n    return null;\n  }\n  async readAt(position, nBytes) {\n    this._pending && (await this._pending);\n    const {\n      _handle: file,\n      size\n    } = this;\n    if (file && position + nBytes < size) {\n      const end = Math.min(size, position + nBytes);\n      const buffer = new Uint8Array(end - position);\n      return (await file.read(buffer, 0, nBytes, position)).buffer;\n    }\n    return new Uint8Array(nBytes);\n  }\n  async close() {\n    const f = this._handle;\n    this._handle = null;\n    f && (await f.close());\n  }\n  async throw(value) {\n    await this.close();\n    return {\n      done: true,\n      value\n    };\n  }\n  async return(value) {\n    await this.close();\n    return {\n      done: true,\n      value\n    };\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/int.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n  if (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n  }\n  return \"0x\".concat(value.toString(16));\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000];\n/** @ignore */\nclass BaseInt64 {\n  constructor(buffer) {\n    this.buffer = buffer;\n  }\n  high() {\n    return this.buffer[1];\n  }\n  low() {\n    return this.buffer[0];\n  }\n  _times(other) {\n    // Break the left and right numbers into 16 bit chunks\n    // so that we can multiply them without overflow.\n    const L = new Uint32Array([this.buffer[1] >>> 16, this.buffer[1] & 0xFFFF, this.buffer[0] >>> 16, this.buffer[0] & 0xFFFF]);\n    const R = new Uint32Array([other.buffer[1] >>> 16, other.buffer[1] & 0xFFFF, other.buffer[0] >>> 16, other.buffer[0] & 0xFFFF]);\n    let product = L[3] * R[3];\n    this.buffer[0] = product & 0xFFFF;\n    let sum = product >>> 16;\n    product = L[2] * R[3];\n    sum += product;\n    product = L[3] * R[2] >>> 0;\n    sum += product;\n    this.buffer[0] += sum << 16;\n    this.buffer[1] = sum >>> 0 < product ? carryBit16 : 0;\n    this.buffer[1] += sum >>> 16;\n    this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n    this.buffer[1] += L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0] << 16;\n    return this;\n  }\n  _plus(other) {\n    const sum = this.buffer[0] + other.buffer[0] >>> 0;\n    this.buffer[1] += other.buffer[1];\n    if (sum < this.buffer[0] >>> 0) {\n      ++this.buffer[1];\n    }\n    this.buffer[0] = sum;\n  }\n  lessThan(other) {\n    return this.buffer[1] < other.buffer[1] || this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0];\n  }\n  equals(other) {\n    return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n  }\n  greaterThan(other) {\n    return other.lessThan(this);\n  }\n  hex() {\n    return \"\".concat(intAsHex(this.buffer[1]), \" \").concat(intAsHex(this.buffer[0]));\n  }\n}\n/** @ignore */\nclass int_Uint64 extends BaseInt64 {\n  times(other) {\n    this._times(other);\n    return this;\n  }\n  plus(other) {\n    this._plus(other);\n    return this;\n  }\n  /** @nocollapse */\n  static from(val) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    return int_Uint64.fromString(typeof val === 'string' ? val : val.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromNumber(num) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    // Always parse numbers as strings - pulling out high and low bits\n    // directly seems to lose precision sometimes\n    // For example:\n    //     > -4613034156400212000 >>> 0\n    //     721782784\n    // The correct lower 32-bits are 721782752\n    return int_Uint64.fromString(num.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromString(str) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    const length = str.length;\n    let out = new int_Uint64(out_buffer);\n    for (let posn = 0; posn < length;) {\n      const group = kInt32DecimalDigits < length - posn ? kInt32DecimalDigits : length - posn;\n      const chunk = new int_Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n      const multiple = new int_Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n      out.times(multiple);\n      out.plus(chunk);\n      posn += group;\n    }\n    return out;\n  }\n  /** @nocollapse */\n  static convertArray(values) {\n    const data = new Uint32Array(values.length * 2);\n    for (let i = -1, n = values.length; ++i < n;) {\n      int_Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n    }\n    return data;\n  }\n  /** @nocollapse */\n  static multiply(left, right) {\n    let rtrn = new int_Uint64(new Uint32Array(left.buffer));\n    return rtrn.times(right);\n  }\n  /** @nocollapse */\n  static add(left, right) {\n    let rtrn = new int_Uint64(new Uint32Array(left.buffer));\n    return rtrn.plus(right);\n  }\n}\n/** @ignore */\nclass int_Int64 extends BaseInt64 {\n  negate() {\n    this.buffer[0] = ~this.buffer[0] + 1;\n    this.buffer[1] = ~this.buffer[1];\n    if (this.buffer[0] == 0) {\n      ++this.buffer[1];\n    }\n    return this;\n  }\n  times(other) {\n    this._times(other);\n    return this;\n  }\n  plus(other) {\n    this._plus(other);\n    return this;\n  }\n  lessThan(other) {\n    // force high bytes to be signed\n    const this_high = this.buffer[1] << 0;\n    const other_high = other.buffer[1] << 0;\n    return this_high < other_high || this_high === other_high && this.buffer[0] < other.buffer[0];\n  }\n  /** @nocollapse */\n  static from(val) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    return int_Int64.fromString(typeof val === 'string' ? val : val.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromNumber(num) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    // Always parse numbers as strings - pulling out high and low bits\n    // directly seems to lose precision sometimes\n    // For example:\n    //     > -4613034156400212000 >>> 0\n    //     721782784\n    // The correct lower 32-bits are 721782752\n    return int_Int64.fromString(num.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromString(str) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(2);\n    // TODO: Assert that out_buffer is 0 and length = 2\n    const negate = str.startsWith('-');\n    const length = str.length;\n    let out = new int_Int64(out_buffer);\n    for (let posn = negate ? 1 : 0; posn < length;) {\n      const group = kInt32DecimalDigits < length - posn ? kInt32DecimalDigits : length - posn;\n      const chunk = new int_Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n      const multiple = new int_Int64(new Uint32Array([kPowersOfTen[group], 0]));\n      out.times(multiple);\n      out.plus(chunk);\n      posn += group;\n    }\n    return negate ? out.negate() : out;\n  }\n  /** @nocollapse */\n  static convertArray(values) {\n    const data = new Uint32Array(values.length * 2);\n    for (let i = -1, n = values.length; ++i < n;) {\n      int_Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n    }\n    return data;\n  }\n  /** @nocollapse */\n  static multiply(left, right) {\n    let rtrn = new int_Int64(new Uint32Array(left.buffer));\n    return rtrn.times(right);\n  }\n  /** @nocollapse */\n  static add(left, right) {\n    let rtrn = new int_Int64(new Uint32Array(left.buffer));\n    return rtrn.plus(right);\n  }\n}\n/** @ignore */\nclass Int128 {\n  constructor(buffer) {\n    this.buffer = buffer;\n    // buffer[3] MSB (high)\n    // buffer[2]\n    // buffer[1]\n    // buffer[0] LSB (low)\n  }\n  high() {\n    return new int_Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n  }\n  low() {\n    return new int_Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n  }\n  negate() {\n    this.buffer[0] = ~this.buffer[0] + 1;\n    this.buffer[1] = ~this.buffer[1];\n    this.buffer[2] = ~this.buffer[2];\n    this.buffer[3] = ~this.buffer[3];\n    if (this.buffer[0] == 0) {\n      ++this.buffer[1];\n    }\n    if (this.buffer[1] == 0) {\n      ++this.buffer[2];\n    }\n    if (this.buffer[2] == 0) {\n      ++this.buffer[3];\n    }\n    return this;\n  }\n  times(other) {\n    // Break the left and right numbers into 32 bit chunks\n    // so that we can multiply them without overflow.\n    const L0 = new int_Uint64(new Uint32Array([this.buffer[3], 0]));\n    const L1 = new int_Uint64(new Uint32Array([this.buffer[2], 0]));\n    const L2 = new int_Uint64(new Uint32Array([this.buffer[1], 0]));\n    const L3 = new int_Uint64(new Uint32Array([this.buffer[0], 0]));\n    const R0 = new int_Uint64(new Uint32Array([other.buffer[3], 0]));\n    const R1 = new int_Uint64(new Uint32Array([other.buffer[2], 0]));\n    const R2 = new int_Uint64(new Uint32Array([other.buffer[1], 0]));\n    const R3 = new int_Uint64(new Uint32Array([other.buffer[0], 0]));\n    let product = int_Uint64.multiply(L3, R3);\n    this.buffer[0] = product.low();\n    let sum = new int_Uint64(new Uint32Array([product.high(), 0]));\n    product = int_Uint64.multiply(L2, R3);\n    sum.plus(product);\n    product = int_Uint64.multiply(L3, R2);\n    sum.plus(product);\n    this.buffer[1] = sum.low();\n    this.buffer[3] = sum.lessThan(product) ? 1 : 0;\n    this.buffer[2] = sum.high();\n    let high = new int_Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    high.plus(int_Uint64.multiply(L1, R3)).plus(int_Uint64.multiply(L2, R2)).plus(int_Uint64.multiply(L3, R1));\n    this.buffer[3] += int_Uint64.multiply(L0, R3).plus(int_Uint64.multiply(L1, R2)).plus(int_Uint64.multiply(L2, R1)).plus(int_Uint64.multiply(L3, R0)).low();\n    return this;\n  }\n  plus(other) {\n    let sums = new Uint32Array(4);\n    sums[3] = this.buffer[3] + other.buffer[3] >>> 0;\n    sums[2] = this.buffer[2] + other.buffer[2] >>> 0;\n    sums[1] = this.buffer[1] + other.buffer[1] >>> 0;\n    sums[0] = this.buffer[0] + other.buffer[0] >>> 0;\n    if (sums[0] < this.buffer[0] >>> 0) {\n      ++sums[1];\n    }\n    if (sums[1] < this.buffer[1] >>> 0) {\n      ++sums[2];\n    }\n    if (sums[2] < this.buffer[2] >>> 0) {\n      ++sums[3];\n    }\n    this.buffer[3] = sums[3];\n    this.buffer[2] = sums[2];\n    this.buffer[1] = sums[1];\n    this.buffer[0] = sums[0];\n    return this;\n  }\n  hex() {\n    return \"\".concat(intAsHex(this.buffer[3]), \" \").concat(intAsHex(this.buffer[2]), \" \").concat(intAsHex(this.buffer[1]), \" \").concat(intAsHex(this.buffer[0]));\n  }\n  /** @nocollapse */\n  static multiply(left, right) {\n    let rtrn = new Int128(new Uint32Array(left.buffer));\n    return rtrn.times(right);\n  }\n  /** @nocollapse */\n  static add(left, right) {\n    let rtrn = new Int128(new Uint32Array(left.buffer));\n    return rtrn.plus(right);\n  }\n  /** @nocollapse */\n  static from(val) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(4);\n    return Int128.fromString(typeof val === 'string' ? val : val.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromNumber(num) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(4);\n    // Always parse numbers as strings - pulling out high and low bits\n    // directly seems to lose precision sometimes\n    // For example:\n    //     > -4613034156400212000 >>> 0\n    //     721782784\n    // The correct lower 32-bits are 721782752\n    return Int128.fromString(num.toString(), out_buffer);\n  }\n  /** @nocollapse */\n  static fromString(str) {\n    let out_buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint32Array(4);\n    // TODO: Assert that out_buffer is 0 and length = 4\n    const negate = str.startsWith('-');\n    const length = str.length;\n    let out = new Int128(out_buffer);\n    for (let posn = negate ? 1 : 0; posn < length;) {\n      const group = kInt32DecimalDigits < length - posn ? kInt32DecimalDigits : length - posn;\n      const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n      const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n      out.times(multiple);\n      out.plus(chunk);\n      posn += group;\n    }\n    return negate ? out.negate() : out;\n  }\n  /** @nocollapse */\n  static convertArray(values) {\n    // TODO: Distinguish between string and number at compile-time\n    const data = new Uint32Array(values.length * 4);\n    for (let i = -1, n = values.length; ++i < n;) {\n      Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n    }\n    return data;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/vectorloader.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n/** @ignore */\nclass vectorloader_VectorLoader extends Visitor {\n  constructor(bytes, nodes, buffers, dictionaries) {\n    super();\n    this.nodesIndex = -1;\n    this.buffersIndex = -1;\n    this.bytes = bytes;\n    this.nodes = nodes;\n    this.buffers = buffers;\n    this.dictionaries = dictionaries;\n  }\n  visit(node) {\n    return super.visit(node instanceof schema_Field ? node.type : node);\n  }\n  visitNull(type) {\n    let {\n      length\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Null(type, 0, length);\n  }\n  visitBool(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitInt(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitFloat(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitUtf8(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));\n  }\n  visitBinary(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));\n  }\n  visitFixedSizeBinary(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitDate(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitTimestamp(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitTime(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitDecimal(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitList(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));\n  }\n  visitStruct(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));\n  }\n  visitUnion(type) {\n    return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type);\n  }\n  visitDenseUnion(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children));\n  }\n  visitSparseUnion(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));\n  }\n  visitDictionary(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));\n  }\n  visitInterval(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));\n  }\n  visitFixedSizeList(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));\n  }\n  visitMap(type) {\n    let {\n      length,\n      nullCount\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode();\n    return data_Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));\n  }\n  nextFieldNode() {\n    return this.nodes[++this.nodesIndex];\n  }\n  nextBufferRange() {\n    return this.buffers[++this.buffersIndex];\n  }\n  readNullBitmap(type, nullCount) {\n    let buffer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nextBufferRange();\n    return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n  }\n  readOffsets(type, buffer) {\n    return this.readData(type, buffer);\n  }\n  readTypeIds(type, buffer) {\n    return this.readData(type, buffer);\n  }\n  readData(_type) {\n    let {\n      length,\n      offset\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange();\n    return this.bytes.subarray(offset, offset + length);\n  }\n  readDictionary(type) {\n    return this.dictionaries.get(type.id);\n  }\n}\n/** @ignore */\nclass vectorloader_JSONVectorLoader extends vectorloader_VectorLoader {\n  constructor(sources, nodes, buffers, dictionaries) {\n    super(new Uint8Array(0), nodes, buffers, dictionaries);\n    this.sources = sources;\n  }\n  readNullBitmap(_type, nullCount) {\n    let {\n      offset\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nextBufferRange();\n    return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n  }\n  readOffsets(_type) {\n    let {\n      offset\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange();\n    return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n  }\n  readTypeIds(type) {\n    let {\n      offset\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange();\n    return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n  }\n  readData(type) {\n    let {\n      offset\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange();\n    const {\n      sources\n    } = this;\n    if (type_DataType.isTimestamp(type)) {\n      return toArrayBufferView(Uint8Array, int_Int64.convertArray(sources[offset]));\n    } else if ((type_DataType.isInt(type) || type_DataType.isTime(type)) && type.bitWidth === 64) {\n      return toArrayBufferView(Uint8Array, int_Int64.convertArray(sources[offset]));\n    } else if (type_DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n      return toArrayBufferView(Uint8Array, int_Int64.convertArray(sources[offset]));\n    } else if (type_DataType.isDecimal(type)) {\n      return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n    } else if (type_DataType.isBinary(type) || type_DataType.isFixedSizeBinary(type)) {\n      return binaryDataFromJSON(sources[offset]);\n    } else if (type_DataType.isBool(type)) {\n      return packBools(sources[offset]);\n    } else if (type_DataType.isUtf8(type)) {\n      return encodeUtf8(sources[offset].join(''));\n    }\n    return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map(x => +x)));\n  }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n  // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n  // There are definitely more efficient ways to do this... but it gets the\n  // job done.\n  const joined = values.join('');\n  const data = new Uint8Array(joined.length / 2);\n  for (let i = 0; i < joined.length; i += 2) {\n    data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n  }\n  return data;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/typeassembler.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nvar typeassembler_Long = flatbuffers.Long;\n\n\nvar typeassembler_Null = Schema_org.apache.arrow.flatbuf.Null;\nvar Int = Schema_org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_org.apache.arrow.flatbuf.FloatingPoint;\nvar typeassembler_Binary = Schema_org.apache.arrow.flatbuf.Binary;\nvar typeassembler_Bool = Schema_org.apache.arrow.flatbuf.Bool;\nvar typeassembler_Utf8 = Schema_org.apache.arrow.flatbuf.Utf8;\nvar typeassembler_Decimal = Schema_org.apache.arrow.flatbuf.Decimal;\nvar typeassembler_Date = Schema_org.apache.arrow.flatbuf.Date;\nvar Time = Schema_org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_org.apache.arrow.flatbuf.Interval;\nvar typeassembler_List = Schema_org.apache.arrow.flatbuf.List;\nvar typeassembler_Struct = Schema_org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_org.apache.arrow.flatbuf.DictionaryEncoding;\nvar typeassembler_FixedSizeBinary = Schema_org.apache.arrow.flatbuf.FixedSizeBinary;\nvar typeassembler_FixedSizeList = Schema_org.apache.arrow.flatbuf.FixedSizeList;\nvar typeassembler_Map_ = Schema_org.apache.arrow.flatbuf.Map;\n/** @ignore */\nclass typeassembler_TypeAssembler extends Visitor {\n  visit(node, builder) {\n    return node == null || builder == null ? undefined : super.visit(node, builder);\n  }\n  visitNull(_node, b) {\n    typeassembler_Null.startNull(b);\n    return typeassembler_Null.endNull(b);\n  }\n  visitInt(node, b) {\n    Int.startInt(b);\n    Int.addBitWidth(b, node.bitWidth);\n    Int.addIsSigned(b, node.isSigned);\n    return Int.endInt(b);\n  }\n  visitFloat(node, b) {\n    FloatingPoint.startFloatingPoint(b);\n    FloatingPoint.addPrecision(b, node.precision);\n    return FloatingPoint.endFloatingPoint(b);\n  }\n  visitBinary(_node, b) {\n    typeassembler_Binary.startBinary(b);\n    return typeassembler_Binary.endBinary(b);\n  }\n  visitBool(_node, b) {\n    typeassembler_Bool.startBool(b);\n    return typeassembler_Bool.endBool(b);\n  }\n  visitUtf8(_node, b) {\n    typeassembler_Utf8.startUtf8(b);\n    return typeassembler_Utf8.endUtf8(b);\n  }\n  visitDecimal(node, b) {\n    typeassembler_Decimal.startDecimal(b);\n    typeassembler_Decimal.addScale(b, node.scale);\n    typeassembler_Decimal.addPrecision(b, node.precision);\n    return typeassembler_Decimal.endDecimal(b);\n  }\n  visitDate(node, b) {\n    typeassembler_Date.startDate(b);\n    typeassembler_Date.addUnit(b, node.unit);\n    return typeassembler_Date.endDate(b);\n  }\n  visitTime(node, b) {\n    Time.startTime(b);\n    Time.addUnit(b, node.unit);\n    Time.addBitWidth(b, node.bitWidth);\n    return Time.endTime(b);\n  }\n  visitTimestamp(node, b) {\n    const timezone = node.timezone && b.createString(node.timezone) || undefined;\n    Timestamp.startTimestamp(b);\n    Timestamp.addUnit(b, node.unit);\n    if (timezone !== undefined) {\n      Timestamp.addTimezone(b, timezone);\n    }\n    return Timestamp.endTimestamp(b);\n  }\n  visitInterval(node, b) {\n    Interval.startInterval(b);\n    Interval.addUnit(b, node.unit);\n    return Interval.endInterval(b);\n  }\n  visitList(_node, b) {\n    typeassembler_List.startList(b);\n    return typeassembler_List.endList(b);\n  }\n  visitStruct(_node, b) {\n    typeassembler_Struct.startStruct_(b);\n    return typeassembler_Struct.endStruct_(b);\n  }\n  visitUnion(node, b) {\n    Union.startTypeIdsVector(b, node.typeIds.length);\n    const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n    Union.startUnion(b);\n    Union.addMode(b, node.mode);\n    Union.addTypeIds(b, typeIds);\n    return Union.endUnion(b);\n  }\n  visitDictionary(node, b) {\n    const indexType = this.visit(node.indices, b);\n    DictionaryEncoding.startDictionaryEncoding(b);\n    DictionaryEncoding.addId(b, new typeassembler_Long(node.id, 0));\n    DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n    if (indexType !== undefined) {\n      DictionaryEncoding.addIndexType(b, indexType);\n    }\n    return DictionaryEncoding.endDictionaryEncoding(b);\n  }\n  visitFixedSizeBinary(node, b) {\n    typeassembler_FixedSizeBinary.startFixedSizeBinary(b);\n    typeassembler_FixedSizeBinary.addByteWidth(b, node.byteWidth);\n    return typeassembler_FixedSizeBinary.endFixedSizeBinary(b);\n  }\n  visitFixedSizeList(node, b) {\n    typeassembler_FixedSizeList.startFixedSizeList(b);\n    typeassembler_FixedSizeList.addListSize(b, node.listSize);\n    return typeassembler_FixedSizeList.endFixedSizeList(b);\n  }\n  visitMap(node, b) {\n    typeassembler_Map_.startMap(b);\n    typeassembler_Map_.addKeysSorted(b, node.keysSorted);\n    return typeassembler_Map_.endMap(b);\n  }\n}\n/** @ignore */\nconst typeassembler_instance = new typeassembler_TypeAssembler();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/metadata/json.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nfunction schemaFromJSON(_schema) {\n  let dictionaries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  return new schema_Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nfunction recordBatchFromJSON(b) {\n  return new message_RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nfunction dictionaryBatchFromJSON(b) {\n  return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n  return (_schema['fields'] || []).filter(Boolean).map(f => schema_Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n  return (_field['children'] || []).filter(Boolean).map(f => schema_Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n  return (xs || []).reduce((fieldNodes, column) => [...fieldNodes, new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])), ...fieldNodesFromJSON(column['children'])], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs) {\n  let buffers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  for (let i = -1, n = (xs || []).length; ++i < n;) {\n    const column = xs[i];\n    column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n    column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n    column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n    column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n    buffers = buffersFromJSON(column['children'], buffers);\n  }\n  return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n  return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nfunction fieldFromJSON(_field, dictionaries) {\n  let id;\n  let keys;\n  let field;\n  let dictMeta;\n  let type;\n  let dictType;\n  // If no dictionary encoding\n  if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n    type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n    field = new schema_Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n  }\n  // tslint:disable\n  // If dictionary encoded and the first time we've seen this dictionary id, decode\n  // the data type and child fields, then wrap in a Dictionary type and insert the\n  // data type into the dictionary types map.\n  else if (!dictionaries.has(id = dictMeta['id'])) {\n    // a dictionary index defaults to signed 32 bit int if unspecified\n    keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n    dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n    dictType = new type_Dictionary(type, keys, id, dictMeta['isOrdered']);\n    field = new schema_Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n  }\n  // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n  // data type and wrap in a new Dictionary type and field.\n  else {\n    // a dictionary index defaults to signed 32 bit int if unspecified\n    keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n    dictType = new type_Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n    field = new schema_Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n  }\n  return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n  return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n  return new type_Int_(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n  const typeId = f['type']['name'];\n  switch (typeId) {\n    case 'NONE':\n      return new type_Null();\n    case 'null':\n      return new type_Null();\n    case 'binary':\n      return new type_Binary();\n    case 'utf8':\n      return new type_Utf8();\n    case 'bool':\n      return new type_Bool();\n    case 'list':\n      return new type_List((children || [])[0]);\n    case 'struct':\n      return new type_Struct(children || []);\n    case 'struct_':\n      return new type_Struct(children || []);\n  }\n  switch (typeId) {\n    case 'int':\n      {\n        const t = f['type'];\n        return new type_Int_(t['isSigned'], t['bitWidth']);\n      }\n    case 'floatingpoint':\n      {\n        const t = f['type'];\n        return new type_Float(Precision[t['precision']]);\n      }\n    case 'decimal':\n      {\n        const t = f['type'];\n        return new type_Decimal(t['scale'], t['precision']);\n      }\n    case 'date':\n      {\n        const t = f['type'];\n        return new type_Date_(DateUnit[t['unit']]);\n      }\n    case 'time':\n      {\n        const t = f['type'];\n        return new type_Time_(TimeUnit[t['unit']], t['bitWidth']);\n      }\n    case 'timestamp':\n      {\n        const t = f['type'];\n        return new type_Timestamp_(TimeUnit[t['unit']], t['timezone']);\n      }\n    case 'interval':\n      {\n        const t = f['type'];\n        return new type_Interval_(IntervalUnit[t['unit']]);\n      }\n    case 'union':\n      {\n        const t = f['type'];\n        return new type_Union_(UnionMode[t['mode']], t['typeIds'] || [], children || []);\n      }\n    case 'fixedsizebinary':\n      {\n        const t = f['type'];\n        return new type_FixedSizeBinary(t['byteWidth']);\n      }\n    case 'fixedsizelist':\n      {\n        const t = f['type'];\n        return new type_FixedSizeList(t['listSize'], (children || [])[0]);\n      }\n    case 'map':\n      {\n        const t = f['type'];\n        return new type_Map_((children || [])[0], t['keysSorted']);\n      }\n  }\n  throw new Error(\"Unrecognized type: \\\"\".concat(typeId, \"\\\"\"));\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/metadata/message.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\nvar message_Long = flatbuffers.Long;\nvar message_Builder = flatbuffers.Builder;\nvar message_ByteBuffer = flatbuffers.ByteBuffer;\nvar message_Type = Schema_org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_org.apache.arrow.flatbuf.Schema;\nvar message_Buffer = Schema_org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_org.apache.arrow.flatbuf.DictionaryBatch;\n\n/**\n * @ignore\n * @private\n **/\nclass message_Message {\n  constructor(bodyLength, version, headerType, header) {\n    this._version = version;\n    this._headerType = headerType;\n    this.body = new Uint8Array(0);\n    header && (this._createHeader = () => header);\n    this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n  }\n  /** @nocollapse */\n  static fromJSON(msg, headerType) {\n    const message = new message_Message(0, MetadataVersion.V4, headerType);\n    message._createHeader = messageHeaderFromJSON(msg, headerType);\n    return message;\n  }\n  /** @nocollapse */\n  static decode(buf) {\n    buf = new message_ByteBuffer(toUint8Array(buf));\n    const _message = _Message.getRootAsMessage(buf);\n    const bodyLength = _message.bodyLength();\n    const version = _message.version();\n    const headerType = _message.headerType();\n    const message = new message_Message(bodyLength, version, headerType);\n    message._createHeader = decodeMessageHeader(_message, headerType);\n    return message;\n  }\n  /** @nocollapse */\n  static encode(message) {\n    let b = new message_Builder(),\n      headerOffset = -1;\n    if (message.isSchema()) {\n      headerOffset = schema_Schema.encode(b, message.header());\n    } else if (message.isRecordBatch()) {\n      headerOffset = message_RecordBatch.encode(b, message.header());\n    } else if (message.isDictionaryBatch()) {\n      headerOffset = DictionaryBatch.encode(b, message.header());\n    }\n    _Message.startMessage(b);\n    _Message.addVersion(b, MetadataVersion.V4);\n    _Message.addHeader(b, headerOffset);\n    _Message.addHeaderType(b, message.headerType);\n    _Message.addBodyLength(b, new message_Long(message.bodyLength, 0));\n    _Message.finishMessageBuffer(b, _Message.endMessage(b));\n    return b.asUint8Array();\n  }\n  /** @nocollapse */\n  static from(header) {\n    let bodyLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (header instanceof schema_Schema) {\n      return new message_Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n    }\n    if (header instanceof message_RecordBatch) {\n      return new message_Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n    }\n    if (header instanceof DictionaryBatch) {\n      return new message_Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n    }\n    throw new Error(\"Unrecognized Message header: \".concat(header));\n  }\n  get type() {\n    return this.headerType;\n  }\n  get version() {\n    return this._version;\n  }\n  get headerType() {\n    return this._headerType;\n  }\n  get bodyLength() {\n    return this._bodyLength;\n  }\n  header() {\n    return this._createHeader();\n  }\n  isSchema() {\n    return this.headerType === MessageHeader.Schema;\n  }\n  isRecordBatch() {\n    return this.headerType === MessageHeader.RecordBatch;\n  }\n  isDictionaryBatch() {\n    return this.headerType === MessageHeader.DictionaryBatch;\n  }\n}\n/**\n * @ignore\n * @private\n **/\nclass message_RecordBatch {\n  get nodes() {\n    return this._nodes;\n  }\n  get length() {\n    return this._length;\n  }\n  get buffers() {\n    return this._buffers;\n  }\n  constructor(length, nodes, buffers) {\n    this._nodes = nodes;\n    this._buffers = buffers;\n    this._length = typeof length === 'number' ? length : length.low;\n  }\n}\n/**\n * @ignore\n * @private\n **/\nclass DictionaryBatch {\n  get id() {\n    return this._id;\n  }\n  get data() {\n    return this._data;\n  }\n  get isDelta() {\n    return this._isDelta;\n  }\n  get length() {\n    return this.data.length;\n  }\n  get nodes() {\n    return this.data.nodes;\n  }\n  get buffers() {\n    return this.data.buffers;\n  }\n  constructor(data, id) {\n    let isDelta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this._data = data;\n    this._isDelta = isDelta;\n    this._id = typeof id === 'number' ? id : id.low;\n  }\n}\n/**\n * @ignore\n * @private\n **/\nclass BufferRegion {\n  constructor(offset, length) {\n    this.offset = typeof offset === 'number' ? offset : offset.low;\n    this.length = typeof length === 'number' ? length : length.low;\n  }\n}\n/**\n * @ignore\n * @private\n **/\nclass FieldNode {\n  constructor(length, nullCount) {\n    this.length = typeof length === 'number' ? length : length.low;\n    this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n  }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n  return () => {\n    switch (type) {\n      case MessageHeader.Schema:\n        return schema_Schema.fromJSON(message);\n      case MessageHeader.RecordBatch:\n        return message_RecordBatch.fromJSON(message);\n      case MessageHeader.DictionaryBatch:\n        return DictionaryBatch.fromJSON(message);\n    }\n    throw new Error(\"Unrecognized Message type: { name: \".concat(MessageHeader[type], \", type: \").concat(type, \" }\"));\n  };\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n  return () => {\n    switch (type) {\n      case MessageHeader.Schema:\n        return schema_Schema.decode(message.header(new _Schema()));\n      case MessageHeader.RecordBatch:\n        return message_RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n      case MessageHeader.DictionaryBatch:\n        return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n    }\n    throw new Error(\"Unrecognized Message type: { name: \".concat(MessageHeader[type], \", type: \").concat(type, \" }\"));\n  };\n}\nschema_Field['encode'] = encodeField;\nschema_Field['decode'] = decodeField;\nschema_Field['fromJSON'] = fieldFromJSON;\nschema_Schema['encode'] = encodeSchema;\nschema_Schema['decode'] = decodeSchema;\nschema_Schema['fromJSON'] = schemaFromJSON;\nmessage_RecordBatch['encode'] = encodeRecordBatch;\nmessage_RecordBatch['decode'] = decodeRecordBatch;\nmessage_RecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema) {\n  let dictionaries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  const fields = decodeSchemaFields(_schema, dictionaries);\n  return new schema_Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch) {\n  let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MetadataVersion.V4;\n  return new message_RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch) {\n  let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MetadataVersion.V4;\n  return new DictionaryBatch(message_RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n  return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n  return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n  const nodes = [];\n  for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n    if (f = batch.nodes(i)) {\n      nodes[++j] = FieldNode.decode(f);\n    }\n  }\n  return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n  const bufferRegions = [];\n  for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n    if (b = batch.buffers(i)) {\n      // If this Arrow buffer was written before version 4,\n      // advance the buffer's bb_pos 8 bytes to skip past\n      // the now-removed page_id field\n      if (version < MetadataVersion.V4) {\n        b.bb_pos += 8 * (i + 1);\n      }\n      bufferRegions[++j] = BufferRegion.decode(b);\n    }\n  }\n  return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n  const fields = [];\n  for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n    if (f = schema.fields(i)) {\n      fields[++j] = schema_Field.decode(f, dictionaries);\n    }\n  }\n  return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n  const children = [];\n  for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n    if (f = field.children(i)) {\n      children[++j] = schema_Field.decode(f, dictionaries);\n    }\n  }\n  return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n  let id;\n  let field;\n  let type;\n  let keys;\n  let dictType;\n  let dictMeta;\n  // If no dictionary encoding\n  if (!dictionaries || !(dictMeta = f.dictionary())) {\n    type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n    field = new schema_Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n  }\n  // tslint:disable\n  // If dictionary encoded and the first time we've seen this dictionary id, decode\n  // the data type and child fields, then wrap in a Dictionary type and insert the\n  // data type into the dictionary types map.\n  else if (!dictionaries.has(id = dictMeta.id().low)) {\n    // a dictionary index defaults to signed 32 bit int if unspecified\n    keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n    dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n    dictType = new type_Dictionary(type, keys, id, dictMeta.isOrdered());\n    field = new schema_Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n  }\n  // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n  // data type and wrap in a new Dictionary type and field.\n  else {\n    // a dictionary index defaults to signed 32 bit int if unspecified\n    keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n    dictType = new type_Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n    field = new schema_Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n  }\n  return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n  const data = new Map();\n  if (parent) {\n    for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n      if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n        data.set(key, entry.value());\n      }\n    }\n  }\n  return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n  return new type_Int_(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n  const typeId = f.typeType();\n  switch (typeId) {\n    case message_Type.NONE:\n      return new type_Null();\n    case message_Type.Null:\n      return new type_Null();\n    case message_Type.Binary:\n      return new type_Binary();\n    case message_Type.Utf8:\n      return new type_Utf8();\n    case message_Type.Bool:\n      return new type_Bool();\n    case message_Type.List:\n      return new type_List((children || [])[0]);\n    case message_Type.Struct_:\n      return new type_Struct(children || []);\n  }\n  switch (typeId) {\n    case message_Type.Int:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Int());\n        return new type_Int_(t.isSigned(), t.bitWidth());\n      }\n    case message_Type.FloatingPoint:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.FloatingPoint());\n        return new type_Float(t.precision());\n      }\n    case message_Type.Decimal:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Decimal());\n        return new type_Decimal(t.scale(), t.precision());\n      }\n    case message_Type.Date:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Date());\n        return new type_Date_(t.unit());\n      }\n    case message_Type.Time:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Time());\n        return new type_Time_(t.unit(), t.bitWidth());\n      }\n    case message_Type.Timestamp:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Timestamp());\n        return new type_Timestamp_(t.unit(), t.timezone());\n      }\n    case message_Type.Interval:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Interval());\n        return new type_Interval_(t.unit());\n      }\n    case message_Type.Union:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Union());\n        return new type_Union_(t.mode(), t.typeIdsArray() || [], children || []);\n      }\n    case message_Type.FixedSizeBinary:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.FixedSizeBinary());\n        return new type_FixedSizeBinary(t.byteWidth());\n      }\n    case message_Type.FixedSizeList:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.FixedSizeList());\n        return new type_FixedSizeList(t.listSize(), (children || [])[0]);\n      }\n    case message_Type.Map:\n      {\n        const t = f.type(new Schema_org.apache.arrow.flatbuf.Map());\n        return new type_Map_((children || [])[0], t.keysSorted());\n      }\n  }\n  throw new Error(\"Unrecognized type: \\\"\".concat(message_Type[typeId], \"\\\" (\").concat(typeId, \")\"));\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n  const fieldOffsets = schema.fields.map(f => schema_Field.encode(b, f));\n  _Schema.startFieldsVector(b, fieldOffsets.length);\n  const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n  const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 : _Schema.createCustomMetadataVector(b, [...schema.metadata].map(_ref => {\n    let [k, v] = _ref;\n    const key = b.createString(\"\".concat(k));\n    const val = b.createString(\"\".concat(v));\n    _KeyValue.startKeyValue(b);\n    _KeyValue.addKey(b, key);\n    _KeyValue.addValue(b, val);\n    return _KeyValue.endKeyValue(b);\n  }));\n  _Schema.startSchema(b);\n  _Schema.addFields(b, fieldsVectorOffset);\n  _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n  if (metadataOffset !== -1) {\n    _Schema.addCustomMetadata(b, metadataOffset);\n  }\n  return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n  let nameOffset = -1;\n  let typeOffset = -1;\n  let dictionaryOffset = -1;\n  let type = field.type;\n  let typeId = field.typeId;\n  if (!type_DataType.isDictionary(type)) {\n    typeOffset = typeassembler_instance.visit(type, b);\n  } else {\n    typeId = type.dictionary.typeId;\n    dictionaryOffset = typeassembler_instance.visit(type, b);\n    typeOffset = typeassembler_instance.visit(type.dictionary, b);\n  }\n  const childOffsets = (type.children || []).map(f => schema_Field.encode(b, f));\n  const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n  const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 : _Field.createCustomMetadataVector(b, [...field.metadata].map(_ref2 => {\n    let [k, v] = _ref2;\n    const key = b.createString(\"\".concat(k));\n    const val = b.createString(\"\".concat(v));\n    _KeyValue.startKeyValue(b);\n    _KeyValue.addKey(b, key);\n    _KeyValue.addValue(b, val);\n    return _KeyValue.endKeyValue(b);\n  }));\n  if (field.name) {\n    nameOffset = b.createString(field.name);\n  }\n  _Field.startField(b);\n  _Field.addType(b, typeOffset);\n  _Field.addTypeType(b, typeId);\n  _Field.addChildren(b, childrenVectorOffset);\n  _Field.addNullable(b, !!field.nullable);\n  if (nameOffset !== -1) {\n    _Field.addName(b, nameOffset);\n  }\n  if (dictionaryOffset !== -1) {\n    _Field.addDictionary(b, dictionaryOffset);\n  }\n  if (metadataOffset !== -1) {\n    _Field.addCustomMetadata(b, metadataOffset);\n  }\n  return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n  const nodes = recordBatch.nodes || [];\n  const buffers = recordBatch.buffers || [];\n  _RecordBatch.startNodesVector(b, nodes.length);\n  nodes.slice().reverse().forEach(n => FieldNode.encode(b, n));\n  const nodesVectorOffset = b.endVector();\n  _RecordBatch.startBuffersVector(b, buffers.length);\n  buffers.slice().reverse().forEach(b_ => BufferRegion.encode(b, b_));\n  const buffersVectorOffset = b.endVector();\n  _RecordBatch.startRecordBatch(b);\n  _RecordBatch.addLength(b, new message_Long(recordBatch.length, 0));\n  _RecordBatch.addNodes(b, nodesVectorOffset);\n  _RecordBatch.addBuffers(b, buffersVectorOffset);\n  return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n  const dataOffset = message_RecordBatch.encode(b, dictionaryBatch.data);\n  _DictionaryBatch.startDictionaryBatch(b);\n  _DictionaryBatch.addId(b, new message_Long(dictionaryBatch.id, 0));\n  _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n  _DictionaryBatch.addData(b, dataOffset);\n  return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n  return _FieldNode.createFieldNode(b, new message_Long(node.length, 0), new message_Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n  return message_Buffer.createBuffer(b, new message_Long(node.offset, 0), new message_Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = function () {\n  const buffer = new ArrayBuffer(2);\n  new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 256;\n}();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/message.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\nvar ipc_message_ByteBuffer = flatbuffers.ByteBuffer;\n\n\n\n\n\n\n/** @ignore */\nconst invalidMessageType = type => \"Expected \".concat(MessageHeader[type], \" Message in stream, but was null or length 0.\");\n/** @ignore */\nconst nullMessage = type => \"Header pointer of flatbuffer-encoded \".concat(MessageHeader[type], \" Message is null or length 0.\");\n/** @ignore */\nconst invalidMessageMetadata = (expected, actual) => \"Expected to read \".concat(expected, \" metadata bytes, but only read \").concat(actual, \".\");\n/** @ignore */\nconst invalidMessageBodyLength = (expected, actual) => \"Expected to read \".concat(expected, \" bytes for message body, but only read \").concat(actual, \".\");\n/** @ignore */\nclass message_MessageReader {\n  constructor(source) {\n    this.source = source instanceof stream_ByteStream ? source : new stream_ByteStream(source);\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    let r;\n    if ((r = this.readMetadataLength()).done) {\n      return ITERATOR_DONE;\n    }\n    // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n    // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n    // pre-v0.15 message, where the first 4 bytes are the metadata length.\n    if (r.value === -1 && (r = this.readMetadataLength()).done) {\n      return ITERATOR_DONE;\n    }\n    if ((r = this.readMetadata(r.value)).done) {\n      return ITERATOR_DONE;\n    }\n    return r;\n  }\n  throw(value) {\n    return this.source.throw(value);\n  }\n  return(value) {\n    return this.source.return(value);\n  }\n  readMessage(type) {\n    let r;\n    if ((r = this.next()).done) {\n      return null;\n    }\n    if (type != null && r.value.headerType !== type) {\n      throw new Error(invalidMessageType(type));\n    }\n    return r.value;\n  }\n  readMessageBody(bodyLength) {\n    if (bodyLength <= 0) {\n      return new Uint8Array(0);\n    }\n    const buf = toUint8Array(this.source.read(bodyLength));\n    if (buf.byteLength < bodyLength) {\n      throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n    }\n    // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n    // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n    return /* 1. */buf.byteOffset % 8 === 0 && /* 2. */buf.byteOffset + buf.byteLength <= buf.buffer.byteLength ? buf : buf.slice();\n  }\n  readSchema() {\n    let throwIfNull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const type = MessageHeader.Schema;\n    const message = this.readMessage(type);\n    const schema = message && message.header();\n    if (throwIfNull && !schema) {\n      throw new Error(nullMessage(type));\n    }\n    return schema;\n  }\n  readMetadataLength() {\n    const buf = this.source.read(PADDING);\n    const bb = buf && new ipc_message_ByteBuffer(buf);\n    const len = bb && bb.readInt32(0) || 0;\n    return {\n      done: len === 0,\n      value: len\n    };\n  }\n  readMetadata(metadataLength) {\n    const buf = this.source.read(metadataLength);\n    if (!buf) {\n      return ITERATOR_DONE;\n    }\n    if (buf.byteLength < metadataLength) {\n      throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n    }\n    return {\n      done: false,\n      value: message_Message.decode(buf)\n    };\n  }\n}\n/** @ignore */\nclass message_AsyncMessageReader {\n  constructor(source, byteLength) {\n    this.source = source instanceof stream_AsyncByteStream ? source : isFileHandle(source) ? new file_AsyncRandomAccessFile(source, byteLength) : new stream_AsyncByteStream(source);\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  async next() {\n    let r;\n    if ((r = await this.readMetadataLength()).done) {\n      return ITERATOR_DONE;\n    }\n    // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n    // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n    // pre-v0.15 message, where the first 4 bytes are the metadata length.\n    if (r.value === -1 && (r = await this.readMetadataLength()).done) {\n      return ITERATOR_DONE;\n    }\n    if ((r = await this.readMetadata(r.value)).done) {\n      return ITERATOR_DONE;\n    }\n    return r;\n  }\n  async throw(value) {\n    return await this.source.throw(value);\n  }\n  async return(value) {\n    return await this.source.return(value);\n  }\n  async readMessage(type) {\n    let r;\n    if ((r = await this.next()).done) {\n      return null;\n    }\n    if (type != null && r.value.headerType !== type) {\n      throw new Error(invalidMessageType(type));\n    }\n    return r.value;\n  }\n  async readMessageBody(bodyLength) {\n    if (bodyLength <= 0) {\n      return new Uint8Array(0);\n    }\n    const buf = toUint8Array(await this.source.read(bodyLength));\n    if (buf.byteLength < bodyLength) {\n      throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n    }\n    // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n    // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n    return /* 1. */buf.byteOffset % 8 === 0 && /* 2. */buf.byteOffset + buf.byteLength <= buf.buffer.byteLength ? buf : buf.slice();\n  }\n  async readSchema() {\n    let throwIfNull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const type = MessageHeader.Schema;\n    const message = await this.readMessage(type);\n    const schema = message && message.header();\n    if (throwIfNull && !schema) {\n      throw new Error(nullMessage(type));\n    }\n    return schema;\n  }\n  async readMetadataLength() {\n    const buf = await this.source.read(PADDING);\n    const bb = buf && new ipc_message_ByteBuffer(buf);\n    const len = bb && bb.readInt32(0) || 0;\n    return {\n      done: len === 0,\n      value: len\n    };\n  }\n  async readMetadata(metadataLength) {\n    const buf = await this.source.read(metadataLength);\n    if (!buf) {\n      return ITERATOR_DONE;\n    }\n    if (buf.byteLength < metadataLength) {\n      throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n    }\n    return {\n      done: false,\n      value: message_Message.decode(buf)\n    };\n  }\n}\n/** @ignore */\nclass message_JSONMessageReader extends message_MessageReader {\n  constructor(source) {\n    super(new Uint8Array(0));\n    this._schema = false;\n    this._body = [];\n    this._batchIndex = 0;\n    this._dictionaryIndex = 0;\n    this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n  }\n  next() {\n    const {\n      _json\n    } = this;\n    if (!this._schema) {\n      this._schema = true;\n      const message = message_Message.fromJSON(_json.schema, MessageHeader.Schema);\n      return {\n        done: false,\n        value: message\n      };\n    }\n    if (this._dictionaryIndex < _json.dictionaries.length) {\n      const batch = _json.dictionaries[this._dictionaryIndex++];\n      this._body = batch['data']['columns'];\n      const message = message_Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n      return {\n        done: false,\n        value: message\n      };\n    }\n    if (this._batchIndex < _json.batches.length) {\n      const batch = _json.batches[this._batchIndex++];\n      this._body = batch['columns'];\n      const message = message_Message.fromJSON(batch, MessageHeader.RecordBatch);\n      return {\n        done: false,\n        value: message\n      };\n    }\n    this._body = [];\n    return ITERATOR_DONE;\n  }\n  readMessageBody(_bodyLength) {\n    return flattenDataSources(this._body);\n    function flattenDataSources(xs) {\n      return (xs || []).reduce((buffers, column) => [...buffers, ...(column['VALIDITY'] && [column['VALIDITY']] || []), ...(column['TYPE'] && [column['TYPE']] || []), ...(column['OFFSET'] && [column['OFFSET']] || []), ...(column['DATA'] && [column['DATA']] || []), ...flattenDataSources(column['children'])], []);\n    }\n  }\n  readMessage(type) {\n    let r;\n    if ((r = this.next()).done) {\n      return null;\n    }\n    if (type != null && r.value.headerType !== type) {\n      throw new Error(invalidMessageType(type));\n    }\n    return r.value;\n  }\n  readSchema() {\n    const type = MessageHeader.Schema;\n    const message = this.readMessage(type);\n    const schema = message && message.header();\n    if (!message || !schema) {\n      throw new Error(nullMessage(type));\n    }\n    return schema;\n  }\n}\n/** @ignore */\nconst PADDING = 4;\n/** @ignore */\nconst MAGIC_STR = 'ARROW1';\n/** @ignore */\nconst MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n  MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nfunction checkForMagicArrowString(buffer) {\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  for (let i = -1, n = MAGIC.length; ++i < n;) {\n    if (MAGIC[i] !== buffer[index + i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/** @ignore */\nconst magicLength = MAGIC.length;\n/** @ignore */\nconst magicAndPadding = magicLength + PADDING;\n/** @ignore */\nconst magicX2AndPadding = magicLength * 2 + PADDING;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/vectorassembler.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n/** @ignore */\nclass vectorassembler_VectorAssembler extends Visitor {\n  constructor() {\n    super();\n    this._byteLength = 0;\n    this._nodes = [];\n    this._buffers = [];\n    this._bufferRegions = [];\n  }\n  /** @nocollapse */\n  static assemble() {\n    const assembler = new vectorassembler_VectorAssembler();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const vectorChildren = selectVectorChildrenArgs(recordbatch_RecordBatch, args);\n    const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n    return assembleResult;\n  }\n  visit(vector) {\n    if (!type_DataType.isDictionary(vector.type)) {\n      const {\n        data,\n        length,\n        nullCount\n      } = vector;\n      if (length > 2147483647) {\n        /* istanbul ignore next */\n        throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n      }\n      if (!type_DataType.isNull(vector.type)) {\n        addBuffer.call(this, nullCount <= 0 ? new Uint8Array(0) // placeholder validity buffer\n        : truncateBitmap(data.offset, length, data.nullBitmap));\n      }\n      this.nodes.push(new FieldNode(length, nullCount));\n    }\n    return super.visit(vector);\n  }\n  visitNull(_nullV) {\n    return this;\n  }\n  visitDictionary(vector) {\n    // Assemble the indices here, Dictionary assembled separately.\n    return this.visit(vector.indices);\n  }\n  get nodes() {\n    return this._nodes;\n  }\n  get buffers() {\n    return this._buffers;\n  }\n  get byteLength() {\n    return this._byteLength;\n  }\n  get bufferRegions() {\n    return this._bufferRegions;\n  }\n}\n/** @ignore */\nfunction addBuffer(values) {\n  const byteLength = values.byteLength + 7 & ~7; // Round up to a multiple of 8\n  this.buffers.push(values);\n  this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n  this._byteLength += byteLength;\n  return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n  const {\n    type,\n    length,\n    typeIds,\n    valueOffsets\n  } = vector;\n  // All Union Vectors have a typeIds buffer\n  addBuffer.call(this, typeIds);\n  // If this is a Sparse Union, treat it like all other Nested types\n  if (type.mode === UnionMode.Sparse) {\n    return assembleNestedVector.call(this, vector);\n  } else if (type.mode === UnionMode.Dense) {\n    // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n    if (vector.offset <= 0) {\n      // If the Vector hasn't been sliced, write the existing valueOffsets\n      addBuffer.call(this, valueOffsets);\n      // We can treat this like all other Nested types\n      return assembleNestedVector.call(this, vector);\n    } else {\n      // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n      // each child vector, we need to \"rebase\" the valueOffsets for each child\n      // Union typeIds are not necessary 0-indexed\n      const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n      const childLengths = new Int32Array(maxChildTypeId + 1);\n      // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n      const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n      const shiftedOffsets = new Int32Array(length);\n      // If we have a non-zero offset, then the value offsets do not start at\n      // zero. We must a) create a new offsets array with shifted offsets and\n      // b) slice the values array accordingly\n      const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n      for (let typeId, shift, index = -1; ++index < length;) {\n        if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n          shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n        }\n        shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n        ++childLengths[typeId];\n      }\n      addBuffer.call(this, shiftedOffsets);\n      // Slice and visit children accordingly\n      for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n        if (child = vector.getChildAt(childIndex)) {\n          const typeId = type.typeIds[childIndex];\n          const childLength = Math.min(length, childLengths[typeId]);\n          this.visit(child.slice(childOffsets[typeId], childLength));\n        }\n      }\n    }\n  }\n  return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n  // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n  let values;\n  if (vector.nullCount >= vector.length) {\n    // If all values are null, just insert a placeholder empty data buffer (fastest path)\n    return addBuffer.call(this, new Uint8Array(0));\n  } else if ((values = vector.values) instanceof Uint8Array) {\n    // If values is already a Uint8Array, slice the bitmap (fast path)\n    return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n  }\n  // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n  // values as bools and re-pack them into a Uint8Array. This code isn't\n  // reachable unless you're trying to manipulate the Data internals,\n  // we we're only doing this for safety.\n  /* istanbul ignore next */\n  return addBuffer.call(this, packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n  return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n  const {\n    length,\n    values,\n    valueOffsets\n  } = vector;\n  const firstOffset = valueOffsets[0];\n  const lastOffset = valueOffsets[length];\n  const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n  // Push in the order FlatList types read their buffers\n  addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n  addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n  return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n  const {\n    length,\n    valueOffsets\n  } = vector;\n  // If we have valueOffsets (MapVector, ListVector), push that buffer first\n  if (valueOffsets) {\n    addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n  }\n  // Then insert the List's values child\n  return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n  return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nvectorassembler_VectorAssembler.prototype.visitBool = assembleBoolVector;\nvectorassembler_VectorAssembler.prototype.visitInt = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitFloat = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nvectorassembler_VectorAssembler.prototype.visitBinary = assembleFlatListVector;\nvectorassembler_VectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitDate = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitTime = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitDecimal = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitList = assembleListVector;\nvectorassembler_VectorAssembler.prototype.visitStruct = assembleNestedVector;\nvectorassembler_VectorAssembler.prototype.visitUnion = assembleUnion;\nvectorassembler_VectorAssembler.prototype.visitInterval = assembleFlatVector;\nvectorassembler_VectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nvectorassembler_VectorAssembler.prototype.visitMap = assembleListVector;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/jsontypeassembler.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nclass jsontypeassembler_JSONTypeAssembler extends Visitor {\n  visit(node) {\n    return node == null ? undefined : super.visit(node);\n  }\n  visitNull(_ref) {\n    let {\n      typeId\n    } = _ref;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitInt(_ref2) {\n    let {\n      typeId,\n      bitWidth,\n      isSigned\n    } = _ref2;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'bitWidth': bitWidth,\n      'isSigned': isSigned\n    };\n  }\n  visitFloat(_ref3) {\n    let {\n      typeId,\n      precision\n    } = _ref3;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'precision': Precision[precision]\n    };\n  }\n  visitBinary(_ref4) {\n    let {\n      typeId\n    } = _ref4;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitBool(_ref5) {\n    let {\n      typeId\n    } = _ref5;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitUtf8(_ref6) {\n    let {\n      typeId\n    } = _ref6;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitDecimal(_ref7) {\n    let {\n      typeId,\n      scale,\n      precision\n    } = _ref7;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'scale': scale,\n      'precision': precision\n    };\n  }\n  visitDate(_ref8) {\n    let {\n      typeId,\n      unit\n    } = _ref8;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'unit': DateUnit[unit]\n    };\n  }\n  visitTime(_ref9) {\n    let {\n      typeId,\n      unit,\n      bitWidth\n    } = _ref9;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'unit': TimeUnit[unit],\n      bitWidth\n    };\n  }\n  visitTimestamp(_ref10) {\n    let {\n      typeId,\n      timezone,\n      unit\n    } = _ref10;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'unit': TimeUnit[unit],\n      timezone\n    };\n  }\n  visitInterval(_ref11) {\n    let {\n      typeId,\n      unit\n    } = _ref11;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'unit': IntervalUnit[unit]\n    };\n  }\n  visitList(_ref12) {\n    let {\n      typeId\n    } = _ref12;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitStruct(_ref13) {\n    let {\n      typeId\n    } = _ref13;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase()\n    };\n  }\n  visitUnion(_ref14) {\n    let {\n      typeId,\n      mode,\n      typeIds\n    } = _ref14;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'mode': UnionMode[mode],\n      'typeIds': [...typeIds]\n    };\n  }\n  visitDictionary(node) {\n    return this.visit(node.dictionary);\n  }\n  visitFixedSizeBinary(_ref15) {\n    let {\n      typeId,\n      byteWidth\n    } = _ref15;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'byteWidth': byteWidth\n    };\n  }\n  visitFixedSizeList(_ref16) {\n    let {\n      typeId,\n      listSize\n    } = _ref16;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'listSize': listSize\n    };\n  }\n  visitMap(_ref17) {\n    let {\n      typeId,\n      keysSorted\n    } = _ref17;\n    return {\n      'name': enum_ArrowType[typeId].toLowerCase(),\n      'keysSorted': keysSorted\n    };\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/jsonvectorassembler.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n/** @ignore */\nclass jsonvectorassembler_JSONVectorAssembler extends Visitor {\n  /** @nocollapse */\n  static assemble() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new jsonvectorassembler_JSONVectorAssembler().visitMany(selectColumnChildrenArgs(recordbatch_RecordBatch, args));\n  }\n  visit(column) {\n    const {\n      data,\n      name,\n      length\n    } = column;\n    const {\n      offset,\n      nullCount,\n      nullBitmap\n    } = data;\n    const type = type_DataType.isDictionary(column.type) ? column.type.indices : column.type;\n    const buffers = Object.assign([], data.buffers, {\n      [BufferType.VALIDITY]: undefined\n    });\n    return {\n      'name': name,\n      'count': length,\n      'VALIDITY': type_DataType.isNull(type) ? undefined : nullCount <= 0 ? Array.from({\n        length\n      }, () => 1) : [...iterateBits(nullBitmap, offset, length, null, getBit)],\n      ...super.visit(AbstractVector.new(data.clone(type, offset, length, 0, buffers)))\n    };\n  }\n  visitNull() {\n    return {};\n  }\n  visitBool(_ref) {\n    let {\n      values,\n      offset,\n      length\n    } = _ref;\n    return {\n      'DATA': [...iterateBits(values, offset, length, null, getBool)]\n    };\n  }\n  visitInt(vector) {\n    return {\n      'DATA': vector.type.bitWidth < 64 ? [...vector.values] : [...bigNumsToStrings(vector.values, 2)]\n    };\n  }\n  visitFloat(vector) {\n    return {\n      'DATA': [...vector.values]\n    };\n  }\n  visitUtf8(vector) {\n    return {\n      'DATA': [...vector],\n      'OFFSET': [...vector.valueOffsets]\n    };\n  }\n  visitBinary(vector) {\n    return {\n      'DATA': [...binaryToString(vector)],\n      OFFSET: [...vector.valueOffsets]\n    };\n  }\n  visitFixedSizeBinary(vector) {\n    return {\n      'DATA': [...binaryToString(vector)]\n    };\n  }\n  visitDate(vector) {\n    return {\n      'DATA': vector.type.unit === DateUnit.DAY ? [...vector.values] : [...bigNumsToStrings(vector.values, 2)]\n    };\n  }\n  visitTimestamp(vector) {\n    return {\n      'DATA': [...bigNumsToStrings(vector.values, 2)]\n    };\n  }\n  visitTime(vector) {\n    return {\n      'DATA': vector.type.unit < TimeUnit.MICROSECOND ? [...vector.values] : [...bigNumsToStrings(vector.values, 2)]\n    };\n  }\n  visitDecimal(vector) {\n    return {\n      'DATA': [...bigNumsToStrings(vector.values, 4)]\n    };\n  }\n  visitList(vector) {\n    return {\n      'OFFSET': [...vector.valueOffsets],\n      'children': vector.type.children.map((f, i) => this.visit(new column_Column(f, [vector.getChildAt(i)])))\n    };\n  }\n  visitStruct(vector) {\n    return {\n      'children': vector.type.children.map((f, i) => this.visit(new column_Column(f, [vector.getChildAt(i)])))\n    };\n  }\n  visitUnion(vector) {\n    return {\n      'TYPE': [...vector.typeIds],\n      'OFFSET': vector.type.mode === UnionMode.Dense ? [...vector.valueOffsets] : undefined,\n      'children': vector.type.children.map((f, i) => this.visit(new column_Column(f, [vector.getChildAt(i)])))\n    };\n  }\n  visitInterval(vector) {\n    return {\n      'DATA': [...vector.values]\n    };\n  }\n  visitFixedSizeList(vector) {\n    return {\n      'children': vector.type.children.map((f, i) => this.visit(new column_Column(f, [vector.getChildAt(i)])))\n    };\n  }\n  visitMap(vector) {\n    return {\n      'OFFSET': [...vector.valueOffsets],\n      'children': vector.type.children.map((f, i) => this.visit(new column_Column(f, [vector.getChildAt(i)])))\n    };\n  }\n}\n/** @ignore */\nfunction* binaryToString(vector) {\n  for (const octets of vector) {\n    yield octets.reduce((str, byte) => {\n      return \"\".concat(str).concat(('0' + (byte & 0xFF).toString(16)).slice(-2));\n    }, '').toUpperCase();\n  }\n}\n/** @ignore */\nfunction* bigNumsToStrings(values, stride) {\n  for (let i = -1, n = values.length / stride; ++i < n;) {\n    yield \"\".concat(bn_BN.new(values.subarray((i + 0) * stride, (i + 1) * stride), false));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/writer.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass writer_RecordBatchWriter extends ReadableInterop {\n  constructor(options) {\n    super();\n    this._position = 0;\n    this._started = false;\n    // @ts-ignore\n    this._sink = new stream_AsyncByteQueue();\n    this._schema = null;\n    this._dictionaryBlocks = [];\n    this._recordBatchBlocks = [];\n    this._dictionaryDeltaOffsets = new Map();\n    compat_isObject(options) || (options = {\n      autoDestroy: true,\n      writeLegacyIpcFormat: false\n    });\n    this._autoDestroy = typeof options.autoDestroy === 'boolean' ? options.autoDestroy : true;\n    this._writeLegacyIpcFormat = typeof options.writeLegacyIpcFormat === 'boolean' ? options.writeLegacyIpcFormat : false;\n  }\n  /** @nocollapse */\n  // @ts-ignore\n  static throughNode(options) {\n    throw new Error(\"\\\"throughNode\\\" not available in this environment\");\n  }\n  /** @nocollapse */\n  static throughDOM(\n  // @ts-ignore\n  writableStrategy,\n  // @ts-ignore\n  readableStrategy) {\n    throw new Error(\"\\\"throughDOM\\\" not available in this environment\");\n  }\n  toString() {\n    let sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return this._sink.toString(sync);\n  }\n  toUint8Array() {\n    let sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return this._sink.toUint8Array(sync);\n  }\n  writeAll(input) {\n    if (isPromise(input)) {\n      return input.then(x => this.writeAll(x));\n    } else if (isAsyncIterable(input)) {\n      return writeAllAsync(this, input);\n    }\n    return writeAll(this, input);\n  }\n  get closed() {\n    return this._sink.closed;\n  }\n  [Symbol.asyncIterator]() {\n    return this._sink[Symbol.asyncIterator]();\n  }\n  toDOMStream(options) {\n    return this._sink.toDOMStream(options);\n  }\n  toNodeStream(options) {\n    return this._sink.toNodeStream(options);\n  }\n  close() {\n    return this.reset()._sink.close();\n  }\n  abort(reason) {\n    return this.reset()._sink.abort(reason);\n  }\n  finish() {\n    this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n    return this;\n  }\n  reset() {\n    let sink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._sink;\n    let schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (sink === this._sink || sink instanceof stream_AsyncByteQueue) {\n      this._sink = sink;\n    } else {\n      this._sink = new stream_AsyncByteQueue();\n      if (sink && isWritableDOMStream(sink)) {\n        this.toDOMStream({\n          type: 'bytes'\n        }).pipeTo(sink);\n      } else if (sink && isWritableNodeStream(sink)) {\n        this.toNodeStream({\n          objectMode: false\n        }).pipe(sink);\n      }\n    }\n    if (this._started && this._schema) {\n      this._writeFooter(this._schema);\n    }\n    this._started = false;\n    this._dictionaryBlocks = [];\n    this._recordBatchBlocks = [];\n    this._dictionaryDeltaOffsets = new Map();\n    if (!schema || !schema.compareTo(this._schema)) {\n      if (schema === null) {\n        this._position = 0;\n        this._schema = null;\n      } else {\n        this._started = true;\n        this._schema = schema;\n        this._writeSchema(schema);\n      }\n    }\n    return this;\n  }\n  write(payload) {\n    let schema = null;\n    if (!this._sink) {\n      throw new Error(\"RecordBatchWriter is closed\");\n    } else if (payload === null || payload === undefined) {\n      return this.finish() && undefined;\n    } else if (payload instanceof table_Table && !(schema = payload.schema)) {\n      return this.finish() && undefined;\n    } else if (payload instanceof recordbatch_RecordBatch && !(schema = payload.schema)) {\n      return this.finish() && undefined;\n    }\n    if (schema && !schema.compareTo(this._schema)) {\n      if (this._started && this._autoDestroy) {\n        return this.close();\n      }\n      this.reset(this._sink, schema);\n    }\n    if (payload instanceof recordbatch_RecordBatch) {\n      if (!(payload instanceof recordbatch_InternalEmptyPlaceholderRecordBatch)) {\n        this._writeRecordBatch(payload);\n      }\n    } else if (payload instanceof table_Table) {\n      this.writeAll(payload.chunks);\n    } else if (isIterable(payload)) {\n      this.writeAll(payload);\n    }\n  }\n  _writeMessage(message) {\n    let alignment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    const a = alignment - 1;\n    const buffer = message_Message.encode(message);\n    const flatbufferSize = buffer.byteLength;\n    const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n    const alignedSize = flatbufferSize + prefixSize + a & ~a;\n    const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n    if (message.headerType === MessageHeader.RecordBatch) {\n      this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n    } else if (message.headerType === MessageHeader.DictionaryBatch) {\n      this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n    }\n    // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n    if (!this._writeLegacyIpcFormat) {\n      this._write(Int32Array.of(-1));\n    }\n    // Write the flatbuffer size prefix including padding\n    this._write(Int32Array.of(alignedSize - prefixSize));\n    // Write the flatbuffer\n    if (flatbufferSize > 0) {\n      this._write(buffer);\n    }\n    // Write any padding\n    return this._writePadding(nPaddingBytes);\n  }\n  _write(chunk) {\n    if (this._started) {\n      const buffer = toUint8Array(chunk);\n      if (buffer && buffer.byteLength > 0) {\n        this._sink.write(buffer);\n        this._position += buffer.byteLength;\n      }\n    }\n    return this;\n  }\n  _writeSchema(schema) {\n    return this._writeMessage(message_Message.from(schema));\n  }\n  // @ts-ignore\n  _writeFooter(schema) {\n    // eos bytes\n    return this._writeLegacyIpcFormat ? this._write(Int32Array.of(0)) : this._write(Int32Array.of(-1, 0));\n  }\n  _writeMagic() {\n    return this._write(MAGIC);\n  }\n  _writePadding(nBytes) {\n    return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n  }\n  _writeRecordBatch(batch) {\n    const {\n      byteLength,\n      nodes,\n      bufferRegions,\n      buffers\n    } = vectorassembler_VectorAssembler.assemble(batch);\n    const recordBatch = new message_RecordBatch(batch.length, nodes, bufferRegions);\n    const message = message_Message.from(recordBatch, byteLength);\n    return this._writeDictionaries(batch)._writeMessage(message)._writeBodyBuffers(buffers);\n  }\n  _writeDictionaryBatch(dictionary, id) {\n    let isDelta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n    const {\n      byteLength,\n      nodes,\n      bufferRegions,\n      buffers\n    } = vectorassembler_VectorAssembler.assemble(dictionary);\n    const recordBatch = new message_RecordBatch(dictionary.length, nodes, bufferRegions);\n    const dictionaryBatch = new DictionaryBatch(recordBatch, id, isDelta);\n    const message = message_Message.from(dictionaryBatch, byteLength);\n    return this._writeMessage(message)._writeBodyBuffers(buffers);\n  }\n  _writeBodyBuffers(buffers) {\n    let buffer;\n    let size, padding;\n    for (let i = -1, n = buffers.length; ++i < n;) {\n      if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n        this._write(buffer);\n        if ((padding = (size + 7 & ~7) - size) > 0) {\n          this._writePadding(padding);\n        }\n      }\n    }\n    return this;\n  }\n  _writeDictionaries(batch) {\n    for (let [id, dictionary] of batch.dictionaries) {\n      let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n      if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n        const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n        for (const chunk of chunks) {\n          this._writeDictionaryBatch(chunk, id, offset > 0);\n          offset += chunk.length;\n        }\n      }\n    }\n    return this;\n  }\n}\n/** @ignore */\nclass writer_RecordBatchStreamWriter extends writer_RecordBatchWriter {\n  /** @nocollapse */\n  static writeAll(input, options) {\n    const writer = new writer_RecordBatchStreamWriter(options);\n    if (isPromise(input)) {\n      return input.then(x => writer.writeAll(x));\n    } else if (isAsyncIterable(input)) {\n      return writeAllAsync(writer, input);\n    }\n    return writeAll(writer, input);\n  }\n}\n/** @ignore */\nclass writer_RecordBatchFileWriter extends writer_RecordBatchWriter {\n  constructor() {\n    super();\n    this._autoDestroy = true;\n  }\n  /** @nocollapse */\n  static writeAll(input) {\n    const writer = new writer_RecordBatchFileWriter();\n    if (isPromise(input)) {\n      return input.then(x => writer.writeAll(x));\n    } else if (isAsyncIterable(input)) {\n      return writeAllAsync(writer, input);\n    }\n    return writeAll(writer, input);\n  }\n  // @ts-ignore\n  _writeSchema(schema) {\n    return this._writeMagic()._writePadding(2);\n  }\n  _writeFooter(schema) {\n    const buffer = file_Footer_.encode(new file_Footer_(schema, MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n    return super._writeFooter(schema) // EOS bytes for sequential readers\n    ._write(buffer) // Write the flatbuffer\n    ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n    ._writeMagic(); // then the magic suffix\n  }\n}\n/** @ignore */\nclass writer_RecordBatchJSONWriter extends writer_RecordBatchWriter {\n  constructor() {\n    super();\n    this._autoDestroy = true;\n    this._recordBatches = [];\n    this._dictionaries = [];\n  }\n  /** @nocollapse */\n  static writeAll(input) {\n    return new writer_RecordBatchJSONWriter().writeAll(input);\n  }\n  _writeMessage() {\n    return this;\n  }\n  // @ts-ignore\n  _writeFooter(schema) {\n    return this;\n  }\n  _writeSchema(schema) {\n    return this._write(\"{\\n  \\\"schema\\\": \".concat(JSON.stringify({\n      fields: schema.fields.map(fieldToJSON)\n    }, null, 2)));\n  }\n  _writeDictionaries(batch) {\n    if (batch.dictionaries.size > 0) {\n      this._dictionaries.push(batch);\n    }\n    return this;\n  }\n  _writeDictionaryBatch(dictionary, id) {\n    let isDelta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n    this._write(this._dictionaryBlocks.length === 0 ? \"    \" : \",\\n    \");\n    this._write(\"\".concat(dictionaryBatchToJSON(dictionary, id, isDelta)));\n    this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n    return this;\n  }\n  _writeRecordBatch(batch) {\n    this._writeDictionaries(batch);\n    this._recordBatches.push(batch);\n    return this;\n  }\n  close() {\n    if (this._dictionaries.length > 0) {\n      this._write(\",\\n  \\\"dictionaries\\\": [\\n\");\n      for (const batch of this._dictionaries) {\n        super._writeDictionaries(batch);\n      }\n      this._write(\"\\n  ]\");\n    }\n    if (this._recordBatches.length > 0) {\n      for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n        this._write(i === 0 ? \",\\n  \\\"batches\\\": [\\n    \" : \",\\n    \");\n        this._write(\"\".concat(recordBatchToJSON(this._recordBatches[i])));\n        this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n      }\n      this._write(\"\\n  ]\");\n    }\n    if (this._schema) {\n      this._write(\"\\n}\");\n    }\n    this._dictionaries = [];\n    this._recordBatches = [];\n    return super.close();\n  }\n}\n/** @ignore */\nfunction writeAll(writer, input) {\n  let chunks = input;\n  if (input instanceof table_Table) {\n    chunks = input.chunks;\n    writer.reset(undefined, input.schema);\n  }\n  for (const batch of chunks) {\n    writer.write(batch);\n  }\n  return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n  for await (const batch of batches) {\n    writer.write(batch);\n  }\n  return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON(_ref) {\n  let {\n    name,\n    type,\n    nullable\n  } = _ref;\n  const assembler = new jsontypeassembler_JSONTypeAssembler();\n  return {\n    'name': name,\n    'nullable': nullable,\n    'type': assembler.visit(type),\n    'children': (type.children || []).map(fieldToJSON),\n    'dictionary': !type_DataType.isDictionary(type) ? undefined : {\n      'id': type.id,\n      'isOrdered': type.isOrdered,\n      'indexType': assembler.visit(type.indices)\n    }\n  };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id) {\n  let isDelta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const field = new schema_Field(\"\".concat(id), dictionary.type, dictionary.nullCount > 0);\n  const columns = jsonvectorassembler_JSONVectorAssembler.assemble(new column_Column(field, [dictionary]));\n  return JSON.stringify({\n    'id': id,\n    'isDelta': isDelta,\n    'data': {\n      'count': dictionary.length,\n      'columns': columns\n    }\n  }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n  return JSON.stringify({\n    'count': records.length,\n    'columns': jsonvectorassembler_JSONVectorAssembler.assemble(records)\n  }, null, 2);\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/recordbatch.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = bitmapLength => [noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf];\n/** @ignore */\nfunction ensureSameLengthData(schema, chunks) {\n  let batchLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : chunks.reduce((l, c) => Math.max(l, c.length), 0);\n  let data;\n  let field;\n  let i = -1,\n    n = chunks.length;\n  const fields = [...schema.fields];\n  const batchData = [];\n  const bitmapLength = (batchLength + 63 & ~63) >> 3;\n  while (++i < n) {\n    if ((data = chunks[i]) && data.length === batchLength) {\n      batchData[i] = data;\n    } else {\n      (field = fields[i]).nullable || (fields[i] = fields[i].clone({\n        nullable: true\n      }));\n      batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength) : data_Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n    }\n  }\n  return [new schema_Schema(fields), batchLength, batchData];\n}\n/** @ignore */\nfunction distributeColumnsIntoRecordBatches(columns) {\n  return distributeVectorsIntoRecordBatches(new schema_Schema(columns.map(_ref => {\n    let {\n      field\n    } = _ref;\n    return field;\n  })), columns);\n}\n/** @ignore */\nfunction distributeVectorsIntoRecordBatches(schema, vecs) {\n  return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map(v => v instanceof chunked_Chunked ? v.chunks.map(c => c.data) : [v.data]));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n  const fields = [...schema.fields];\n  const batchArgs = [];\n  const memo = {\n    numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0)\n  };\n  let numBatches = 0,\n    batchLength = 0;\n  let i = -1,\n    numColumns = columns.length;\n  let child,\n    childData = [];\n  while (memo.numBatches-- > 0) {\n    for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n      childData[i] = child = columns[i].shift();\n      batchLength = Math.min(batchLength, child ? child.length : batchLength);\n    }\n    if (isFinite(batchLength)) {\n      childData = distributeChildData(fields, batchLength, childData, columns, memo);\n      if (batchLength > 0) {\n        batchArgs[numBatches++] = [batchLength, childData.slice()];\n      }\n    }\n  }\n  return [schema = new schema_Schema(fields, schema.metadata), batchArgs.map(xs => new recordbatch_RecordBatch(schema, ...xs))];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n  let data;\n  let field;\n  let length = 0,\n    i = -1,\n    n = columns.length;\n  const bitmapLength = (batchLength + 63 & ~63) >> 3;\n  while (++i < n) {\n    if ((data = childData[i]) && (length = data.length) >= batchLength) {\n      if (length === batchLength) {\n        childData[i] = data;\n      } else {\n        childData[i] = data.slice(0, batchLength);\n        data = data.slice(batchLength, length - batchLength);\n        memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n      }\n    } else {\n      (field = fields[i]).nullable || (fields[i] = field.clone({\n        nullable: true\n      }));\n      childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength) : data_Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n    }\n  }\n  return childData;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/base.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass base_BaseVector extends AbstractVector {\n  constructor(data, children) {\n    super();\n    this._children = children;\n    this.numChildren = data.childData.length;\n    this._bindDataAccessors(this.data = data);\n  }\n  get type() {\n    return this.data.type;\n  }\n  get typeId() {\n    return this.data.typeId;\n  }\n  get length() {\n    return this.data.length;\n  }\n  get offset() {\n    return this.data.offset;\n  }\n  get stride() {\n    return this.data.stride;\n  }\n  get nullCount() {\n    return this.data.nullCount;\n  }\n  get byteLength() {\n    return this.data.byteLength;\n  }\n  get VectorName() {\n    return \"\".concat(Type[this.typeId], \"Vector\");\n  }\n  get ArrayType() {\n    return this.type.ArrayType;\n  }\n  get values() {\n    return this.data.values;\n  }\n  get typeIds() {\n    return this.data.typeIds;\n  }\n  get nullBitmap() {\n    return this.data.nullBitmap;\n  }\n  get valueOffsets() {\n    return this.data.valueOffsets;\n  }\n  get [Symbol.toStringTag]() {\n    return \"\".concat(this.VectorName, \"<\").concat(this.type[Symbol.toStringTag], \">\");\n  }\n  clone(data) {\n    let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._children;\n    return AbstractVector.new(data, children);\n  }\n  concat() {\n    for (var _len = arguments.length, others = new Array(_len), _key = 0; _key < _len; _key++) {\n      others[_key] = arguments[_key];\n    }\n    return chunked_Chunked.concat(this, ...others);\n  }\n  slice(begin, end) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    return clampRange(this, begin, end, this._sliceInternal);\n  }\n  isValid(index) {\n    if (this.nullCount > 0) {\n      const idx = this.offset + index;\n      const val = this.nullBitmap[idx >> 3];\n      const mask = val & 1 << idx % 8;\n      return mask !== 0;\n    }\n    return true;\n  }\n  getChildAt(index) {\n    return index < 0 || index >= this.numChildren ? null : (this._children || (this._children = []))[index] || (this._children[index] = AbstractVector.new(this.data.childData[index]));\n  }\n  toJSON() {\n    return [...this];\n  }\n  _sliceInternal(self, begin, end) {\n    return self.clone(self.data.slice(begin, end - begin), null);\n  }\n  // @ts-ignore\n  _bindDataAccessors(data) {\n    // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n  }\n}\nbase_BaseVector.prototype[Symbol.isConcatSpreadable] = true;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/binary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass binary_BinaryVector extends base_BaseVector {\n  asUtf8() {\n    return AbstractVector.new(this.data.clone(new type_Utf8()));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/bool.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass bool_BoolVector extends base_BaseVector {\n  /** @nocollapse */\n  static from(input) {\n    return vectorFromValuesWithType(() => new type_Bool(), input);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/date.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass date_DateVector extends base_BaseVector {\n  /** @nocollapse */\n  static from() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 2) {\n      return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new type_DateDay() : new type_DateMillisecond(), args[0]);\n    }\n    return vectorFromValuesWithType(() => new type_DateMillisecond(), args[0]);\n  }\n}\n/** @ignore */\nclass DateDayVector extends date_DateVector {}\n/** @ignore */\nclass DateMillisecondVector extends date_DateVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/decimal.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass decimal_DecimalVector extends base_BaseVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/dictionary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nclass dictionary_DictionaryVector extends base_BaseVector {\n  constructor(data) {\n    super(data);\n    this.indices = AbstractVector.new(data.clone(this.type.indices));\n  }\n  /** @nocollapse */\n  static from() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 3) {\n      const [values, indices, keys] = args;\n      const type = new type_Dictionary(values.type, indices, null, null);\n      return AbstractVector.new(data_Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n    }\n    return vectorFromValuesWithType(() => args[0].type, args[0]);\n  }\n  get dictionary() {\n    return this.data.dictionary;\n  }\n  reverseLookup(value) {\n    return this.dictionary.indexOf(value);\n  }\n  getKey(idx) {\n    return this.indices.get(idx);\n  }\n  getValue(key) {\n    return this.dictionary.get(key);\n  }\n  setKey(idx, key) {\n    return this.indices.set(idx, key);\n  }\n  setValue(key, value) {\n    return this.dictionary.set(key, value);\n  }\n}\ndictionary_DictionaryVector.prototype.indices = null;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/fixedsizebinary.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass fixedsizebinary_FixedSizeBinaryVector extends base_BaseVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/fixedsizelist.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass fixedsizelist_FixedSizeListVector extends base_BaseVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/float.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nclass float_FloatVector extends base_BaseVector {\n  /** @nocollapse */\n  static from(input) {\n    let ArrowType = vectorTypeToDataType(this);\n    if (input instanceof ArrayBuffer || ArrayBuffer.isView(input)) {\n      let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n      // Special case, infer the Arrow DataType from the input if calling the base\n      // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n      if (ArrowType === null) {\n        ArrowType = InputType;\n      }\n      // If the DataType inferred from the Vector constructor matches the\n      // DataType inferred from the input arguments, return zero-copy view\n      if (ArrowType && ArrowType === InputType) {\n        let type = new ArrowType();\n        let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n        // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n        // let the Float16Builder handle casting the input values to Uint16s.\n        if (!convertTo16Bit(ArrowType, input.constructor)) {\n          return AbstractVector.new(data_Data.Float(type, 0, length, 0, null, input));\n        }\n      }\n    }\n    if (ArrowType) {\n      // If the DataType inferred from the Vector constructor is different than\n      // the DataType inferred from the input TypedArray, or if input isn't a\n      // TypedArray, use the Builders to construct the result Vector\n      return vectorFromValuesWithType(() => new ArrowType(), input);\n    }\n    if (input instanceof DataView || input instanceof ArrayBuffer) {\n      throw new TypeError(\"Cannot infer float type from instance of \".concat(input.constructor.name));\n    }\n    throw new TypeError('Unrecognized FloatVector input');\n  }\n}\n/** @ignore */\nclass Float16Vector extends float_FloatVector {\n  // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n  // of the underlying Uint16Array data. This behavior ensures we don't incur\n  // extra compute or copies if you're calling `toArray()` in order to create\n  // a buffer for something like WebGL. Buf if you're using JS and want typed\n  // arrays of 4-to-8-byte precision, these methods will enumerate the values\n  // and clamp to the desired byte lengths.\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n  toFloat64Array() {\n    return new Float64Array(this);\n  }\n}\n/** @ignore */\nclass Float32Vector extends float_FloatVector {}\n/** @ignore */\nclass Float64Vector extends float_FloatVector {}\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n  return typeCtor === type_Float16 && dataCtor !== Uint16Array;\n};\n/** @ignore */\nconst arrayTypeToDataType = ctor => {\n  switch (ctor) {\n    case Uint16Array:\n      return type_Float16;\n    case Float32Array:\n      return type_Float32;\n    case Float64Array:\n      return type_Float64;\n    default:\n      return null;\n  }\n};\n/** @ignore */\nconst vectorTypeToDataType = ctor => {\n  switch (ctor) {\n    case Float16Vector:\n      return type_Float16;\n    case Float32Vector:\n      return type_Float32;\n    case Float64Vector:\n      return type_Float64;\n    default:\n      return null;\n  }\n};\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/interval.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass interval_IntervalVector extends base_BaseVector {}\n/** @ignore */\nclass IntervalDayTimeVector extends interval_IntervalVector {}\n/** @ignore */\nclass IntervalYearMonthVector extends interval_IntervalVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/int.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n/** @ignore */\nclass int_IntVector extends base_BaseVector {\n  /** @nocollapse */\n  static from() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    let [input, is64bit = false] = args;\n    let ArrowType = int_vectorTypeToDataType(this, is64bit);\n    if (input instanceof ArrayBuffer || ArrayBuffer.isView(input)) {\n      let InputType = int_arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n      // Special case, infer the Arrow DataType from the input if calling the base\n      // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n      if (ArrowType === null) {\n        ArrowType = InputType;\n      }\n      // If the DataType inferred from the Vector constructor matches the\n      // DataType inferred from the input arguments, return zero-copy view\n      if (ArrowType && ArrowType === InputType) {\n        let type = new ArrowType();\n        let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n        // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n        if (convert32To64Bit(ArrowType, input.constructor)) {\n          length *= 0.5;\n        }\n        return AbstractVector.new(data_Data.Int(type, 0, length, 0, null, input));\n      }\n    }\n    if (ArrowType) {\n      // If the DataType inferred from the Vector constructor is different than\n      // the DataType inferred from the input TypedArray, or if input isn't a\n      // TypedArray, use the Builders to construct the result Vector\n      return vectorFromValuesWithType(() => new ArrowType(), input);\n    }\n    if (input instanceof DataView || input instanceof ArrayBuffer) {\n      throw new TypeError(\"Cannot infer integer type from instance of \".concat(input.constructor.name));\n    }\n    throw new TypeError('Unrecognized IntVector input');\n  }\n}\n/** @ignore */\nclass Int8Vector extends int_IntVector {}\n/** @ignore */\nclass Int16Vector extends int_IntVector {}\n/** @ignore */\nclass Int32Vector extends int_IntVector {}\n/** @ignore */\nclass int_Int64Vector extends int_IntVector {\n  toBigInt64Array() {\n    return toBigInt64Array(this.values);\n  }\n  get values64() {\n    return this._values64 || (this._values64 = this.toBigInt64Array());\n  }\n}\n/** @ignore */\nclass Uint8Vector extends int_IntVector {}\n/** @ignore */\nclass Uint16Vector extends int_IntVector {}\n/** @ignore */\nclass Uint32Vector extends int_IntVector {}\n/** @ignore */\nclass int_Uint64Vector extends int_IntVector {\n  toBigUint64Array() {\n    return toBigUint64Array(this.values);\n  }\n  get values64() {\n    return this._values64 || (this._values64 = this.toBigUint64Array());\n  }\n}\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n  return (typeCtor === Int64 || typeCtor === Uint64) && (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst int_arrayTypeToDataType = (ctor, is64bit) => {\n  switch (ctor) {\n    case Int8Array:\n      return Int8;\n    case Int16Array:\n      return Int16;\n    case Int32Array:\n      return is64bit ? Int64 : Int32;\n    case BigInt64ArrayCtor:\n      return Int64;\n    case Uint8Array:\n      return Uint8;\n    case Uint16Array:\n      return Uint16;\n    case Uint32Array:\n      return is64bit ? Uint64 : Uint32;\n    case BigUint64ArrayCtor:\n      return Uint64;\n    default:\n      return null;\n  }\n};\n/** @ignore */\nconst int_vectorTypeToDataType = (ctor, is64bit) => {\n  switch (ctor) {\n    case Int8Vector:\n      return Int8;\n    case Int16Vector:\n      return Int16;\n    case Int32Vector:\n      return is64bit ? Int64 : Int32;\n    case int_Int64Vector:\n      return Int64;\n    case Uint8Vector:\n      return Uint8;\n    case Uint16Vector:\n      return Uint16;\n    case Uint32Vector:\n      return is64bit ? Uint64 : Uint32;\n    case int_Uint64Vector:\n      return Uint64;\n    default:\n      return null;\n  }\n};\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/list.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass list_ListVector extends base_BaseVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/map.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass map_MapVector extends base_BaseVector {\n  asList() {\n    const child = this.type.children[0];\n    return AbstractVector.new(this.data.clone(new type_List(child)));\n  }\n  bind(index) {\n    const child = this.getChildAt(0);\n    const {\n      [index]: begin,\n      [index + 1]: end\n    } = this.valueOffsets;\n    return new MapRow(child.slice(begin, end));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/null.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass null_NullVector extends base_BaseVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/struct.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nconst struct_kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nclass struct_StructVector extends base_BaseVector {\n  bind(index) {\n    const proto = this._row || (this._row = new StructRow(this));\n    const bound = Object.create(proto);\n    bound[struct_kRowIndex] = index;\n    return bound;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/timestamp.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass timestamp_TimestampVector extends base_BaseVector {}\n/** @ignore */\nclass TimestampSecondVector extends timestamp_TimestampVector {}\n/** @ignore */\nclass TimestampMillisecondVector extends timestamp_TimestampVector {}\n/** @ignore */\nclass TimestampMicrosecondVector extends timestamp_TimestampVector {}\n/** @ignore */\nclass TimestampNanosecondVector extends timestamp_TimestampVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/time.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass time_TimeVector extends base_BaseVector {}\n/** @ignore */\nclass TimeSecondVector extends time_TimeVector {}\n/** @ignore */\nclass TimeMillisecondVector extends time_TimeVector {}\n/** @ignore */\nclass TimeMicrosecondVector extends time_TimeVector {}\n/** @ignore */\nclass TimeNanosecondVector extends time_TimeVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/union.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass union_UnionVector extends base_BaseVector {\n  get typeIdToChildIndex() {\n    return this.data.type.typeIdToChildIndex;\n  }\n}\n/** @ignore */\nclass DenseUnionVector extends union_UnionVector {\n  get valueOffsets() {\n    return this.data.valueOffsets;\n  }\n}\n/** @ignore */\nclass SparseUnionVector extends union_UnionVector {}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/utf8.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass utf8_Utf8Vector extends base_BaseVector {\n  /** @nocollapse */\n  static from(input) {\n    return vectorFromValuesWithType(() => new type_Utf8(), input);\n  }\n  asBinary() {\n    return AbstractVector.new(this.data.clone(new type_Binary()));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/util/fn.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nfunction partial0(visit) {\n  return function () {\n    return visit(this);\n  };\n}\n/** @ignore */\nfunction partial1(visit) {\n  return function (a) {\n    return visit(this, a);\n  };\n}\n/** @ignore */\nfunction partial2(visit) {\n  return function (a, b) {\n    return visit(this, a, b);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/get.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n/** @ignore */\nclass get_GetVisitor extends Visitor {}\n/** @ignore */\nconst epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */\nconst epochMillisecondsLongToMs = (data, index) => 4294967296 * data[index + 1] + (data[index] >>> 0);\n/** @ignore */\nconst epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + (data[index] >>> 0) / 1000;\n/** @ignore */\nconst epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + (data[index] >>> 0) / 1000000;\n/** @ignore */\nconst epochMillisecondsToDate = epochMs => new Date(epochMs);\n/** @ignore */\nconst epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */\nconst epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n  const {\n    [index]: x,\n    [index + 1]: y\n  } = valueOffsets;\n  return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst get_getBool = (_ref, index) => {\n  let {\n    offset,\n    values\n  } = _ref;\n  const idx = offset + index;\n  const byte = values[idx >> 3];\n  return (byte & 1 << idx % 8) !== 0;\n};\n/** @ignore */\nconst getDateDay = (_ref2, index) => {\n  let {\n    values\n  } = _ref2;\n  return epochDaysToDate(values, index);\n};\n/** @ignore */\nconst getDateMillisecond = (_ref3, index) => {\n  let {\n    values\n  } = _ref3;\n  return epochMillisecondsLongToDate(values, index * 2);\n};\n/** @ignore */\nconst getNumeric = (_ref4, index) => {\n  let {\n    stride,\n    values\n  } = _ref4;\n  return values[stride * index];\n};\n/** @ignore */\nconst getFloat16 = (_ref5, index) => {\n  let {\n    stride,\n    values\n  } = _ref5;\n  return uint16ToFloat64(values[stride * index]);\n};\n/** @ignore */\nconst getBigInts = (_ref6, index) => {\n  let {\n    stride,\n    values,\n    type\n  } = _ref6;\n  return bn_BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n};\n/** @ignore */\nconst getFixedSizeBinary = (_ref7, index) => {\n  let {\n    stride,\n    values\n  } = _ref7;\n  return values.subarray(stride * index, stride * (index + 1));\n};\n/** @ignore */\nconst getBinary = (_ref8, index) => {\n  let {\n    values,\n    valueOffsets\n  } = _ref8;\n  return getVariableWidthBytes(values, valueOffsets, index);\n};\n/** @ignore */\nconst getUtf8 = (_ref9, index) => {\n  let {\n    values,\n    valueOffsets\n  } = _ref9;\n  const bytes = getVariableWidthBytes(values, valueOffsets, index);\n  return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => vector.type.bitWidth < 64 ? getNumeric(vector, index) : getBigInts(vector, index);\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => vector.type.precision !== Precision.HALF ? getNumeric(vector, index) : getFloat16(vector, index);\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => vector.type.unit === DateUnit.DAY ? getDateDay(vector, index) : getDateMillisecond(vector, index);\n/** @ignore */\nconst getTimestampSecond = (_ref10, index) => {\n  let {\n    values\n  } = _ref10;\n  return 1000 * epochMillisecondsLongToMs(values, index * 2);\n};\n/** @ignore */\nconst getTimestampMillisecond = (_ref11, index) => {\n  let {\n    values\n  } = _ref11;\n  return epochMillisecondsLongToMs(values, index * 2);\n};\n/** @ignore */\nconst getTimestampMicrosecond = (_ref12, index) => {\n  let {\n    values\n  } = _ref12;\n  return epochMicrosecondsLongToMs(values, index * 2);\n};\n/** @ignore */\nconst getTimestampNanosecond = (_ref13, index) => {\n  let {\n    values\n  } = _ref13;\n  return epochNanosecondsLongToMs(values, index * 2);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n  switch (vector.type.unit) {\n    case TimeUnit.SECOND:\n      return getTimestampSecond(vector, index);\n    case TimeUnit.MILLISECOND:\n      return getTimestampMillisecond(vector, index);\n    case TimeUnit.MICROSECOND:\n      return getTimestampMicrosecond(vector, index);\n    case TimeUnit.NANOSECOND:\n      return getTimestampNanosecond(vector, index);\n  }\n};\n/** @ignore */\nconst getTimeSecond = (_ref14, index) => {\n  let {\n    values,\n    stride\n  } = _ref14;\n  return values[stride * index];\n};\n/** @ignore */\nconst getTimeMillisecond = (_ref15, index) => {\n  let {\n    values,\n    stride\n  } = _ref15;\n  return values[stride * index];\n};\n/** @ignore */\nconst getTimeMicrosecond = (_ref16, index) => {\n  let {\n    values\n  } = _ref16;\n  return bn_BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n};\n/** @ignore */\nconst getTimeNanosecond = (_ref17, index) => {\n  let {\n    values\n  } = _ref17;\n  return bn_BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n  switch (vector.type.unit) {\n    case TimeUnit.SECOND:\n      return getTimeSecond(vector, index);\n    case TimeUnit.MILLISECOND:\n      return getTimeMillisecond(vector, index);\n    case TimeUnit.MICROSECOND:\n      return getTimeMicrosecond(vector, index);\n    case TimeUnit.NANOSECOND:\n      return getTimeNanosecond(vector, index);\n  }\n};\n/** @ignore */\nconst getDecimal = (_ref18, index) => {\n  let {\n    values\n  } = _ref18;\n  return bn_BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n};\n/** @ignore */\nconst getList = (vector, index) => {\n  const child = vector.getChildAt(0),\n    {\n      valueOffsets,\n      stride\n    } = vector;\n  return child.slice(valueOffsets[index * stride], valueOffsets[index * stride + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n  return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n  return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n  return vector.type.mode === UnionMode.Dense ? getDenseUnion(vector, index) : getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n  const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n  const child = vector.getChildAt(childIndex);\n  return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n  const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n  const child = vector.getChildAt(childIndex);\n  return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n  return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => vector.type.unit === IntervalUnit.DAY_TIME ? getIntervalDayTime(vector, index) : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = (_ref19, index) => {\n  let {\n    values\n  } = _ref19;\n  return values.subarray(2 * index, 2 * (index + 1));\n};\n/** @ignore */\nconst getIntervalYearMonth = (_ref20, index) => {\n  let {\n    values\n  } = _ref20;\n  const interval = values[index];\n  const int32s = new Int32Array(2);\n  int32s[0] = interval / 12 | 0; /* years */\n  int32s[1] = interval % 12 | 0; /* months */\n  return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n  const child = vector.getChildAt(0),\n    {\n      stride\n    } = vector;\n  return child.slice(index * stride, (index + 1) * stride);\n};\nget_GetVisitor.prototype.visitNull = getNull;\nget_GetVisitor.prototype.visitBool = get_getBool;\nget_GetVisitor.prototype.visitInt = getInt;\nget_GetVisitor.prototype.visitInt8 = getNumeric;\nget_GetVisitor.prototype.visitInt16 = getNumeric;\nget_GetVisitor.prototype.visitInt32 = getNumeric;\nget_GetVisitor.prototype.visitInt64 = getBigInts;\nget_GetVisitor.prototype.visitUint8 = getNumeric;\nget_GetVisitor.prototype.visitUint16 = getNumeric;\nget_GetVisitor.prototype.visitUint32 = getNumeric;\nget_GetVisitor.prototype.visitUint64 = getBigInts;\nget_GetVisitor.prototype.visitFloat = getFloat;\nget_GetVisitor.prototype.visitFloat16 = getFloat16;\nget_GetVisitor.prototype.visitFloat32 = getNumeric;\nget_GetVisitor.prototype.visitFloat64 = getNumeric;\nget_GetVisitor.prototype.visitUtf8 = getUtf8;\nget_GetVisitor.prototype.visitBinary = getBinary;\nget_GetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nget_GetVisitor.prototype.visitDate = getDate;\nget_GetVisitor.prototype.visitDateDay = getDateDay;\nget_GetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nget_GetVisitor.prototype.visitTimestamp = getTimestamp;\nget_GetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nget_GetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nget_GetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nget_GetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nget_GetVisitor.prototype.visitTime = getTime;\nget_GetVisitor.prototype.visitTimeSecond = getTimeSecond;\nget_GetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nget_GetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nget_GetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nget_GetVisitor.prototype.visitDecimal = getDecimal;\nget_GetVisitor.prototype.visitList = getList;\nget_GetVisitor.prototype.visitStruct = getStruct;\nget_GetVisitor.prototype.visitUnion = getUnion;\nget_GetVisitor.prototype.visitDenseUnion = getDenseUnion;\nget_GetVisitor.prototype.visitSparseUnion = getSparseUnion;\nget_GetVisitor.prototype.visitDictionary = getDictionary;\nget_GetVisitor.prototype.visitInterval = getInterval;\nget_GetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nget_GetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nget_GetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nget_GetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nconst get_instance = new get_GetVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/indexof.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass indexof_IndexOfVisitor extends Visitor {}\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n  // if you're looking for nulls and the vector isn't empty, we've got 'em!\n  return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n  const {\n    nullBitmap\n  } = vector;\n  if (!nullBitmap || vector.nullCount <= 0) {\n    return -1;\n  }\n  let i = 0;\n  for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n    if (!isValid) {\n      return i;\n    }\n    ++i;\n  }\n  return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n  if (searchElement === undefined) {\n    return -1;\n  }\n  if (searchElement === null) {\n    return indexOfNull(vector, fromIndex);\n  }\n  const compare = createElementComparator(searchElement);\n  for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n    if (compare(vector.get(i))) {\n      return i;\n    }\n  }\n  return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n  // Unions are special -- they do have a nullBitmap, but so can their children.\n  // If the searchElement is null, we don't know whether it came from the Union's\n  // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n  // since that will report the wrong index if a child has a null before the Union.\n  const compare = createElementComparator(searchElement);\n  for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n    if (compare(vector.get(i))) {\n      return i;\n    }\n  }\n  return -1;\n}\nindexof_IndexOfVisitor.prototype.visitNull = nullIndexOf;\nindexof_IndexOfVisitor.prototype.visitBool = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInt = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInt8 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInt16 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInt32 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInt64 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUint8 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUint16 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUint32 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUint64 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFloat = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitBinary = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitDate = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitDateDay = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTime = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitDecimal = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitList = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitStruct = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitUnion = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nindexof_IndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nindexof_IndexOfVisitor.prototype.visitDictionary = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitInterval = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nindexof_IndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nconst indexof_instance = new indexof_IndexOfVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/iterator.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n/** @ignore */\nclass iterator_IteratorVisitor extends Visitor {}\n/** @ignore */\nfunction nullableIterator(vector) {\n  const getFn = get_instance.getVisitFn(vector);\n  return iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => (nullByte & 1 << nullBit) !== 0 ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n  // If nullable, iterate manually\n  if (vector.nullCount > 0) {\n    return nullableIterator(vector);\n  }\n  const {\n    type,\n    typeId,\n    length\n  } = vector;\n  // Fast case, defer to native iterators if possible\n  if (vector.stride === 1 && (typeId === Type.Timestamp || typeId === Type.Int && type.bitWidth !== 64 || typeId === Type.Time && type.bitWidth !== 64 || typeId === Type.Float && type.precision > 0 /* Precision.HALF */)) {\n    return vector.values.subarray(0, length)[Symbol.iterator]();\n  }\n  // Otherwise, iterate manually\n  return function* (getFn) {\n    for (let index = -1; ++index < length;) {\n      yield getFn(vector, index);\n    }\n  }(get_instance.getVisitFn(vector));\n}\niterator_IteratorVisitor.prototype.visitNull = vectorIterator;\niterator_IteratorVisitor.prototype.visitBool = vectorIterator;\niterator_IteratorVisitor.prototype.visitInt = vectorIterator;\niterator_IteratorVisitor.prototype.visitInt8 = vectorIterator;\niterator_IteratorVisitor.prototype.visitInt16 = vectorIterator;\niterator_IteratorVisitor.prototype.visitInt32 = vectorIterator;\niterator_IteratorVisitor.prototype.visitInt64 = vectorIterator;\niterator_IteratorVisitor.prototype.visitUint8 = vectorIterator;\niterator_IteratorVisitor.prototype.visitUint16 = vectorIterator;\niterator_IteratorVisitor.prototype.visitUint32 = vectorIterator;\niterator_IteratorVisitor.prototype.visitUint64 = vectorIterator;\niterator_IteratorVisitor.prototype.visitFloat = vectorIterator;\niterator_IteratorVisitor.prototype.visitFloat16 = vectorIterator;\niterator_IteratorVisitor.prototype.visitFloat32 = vectorIterator;\niterator_IteratorVisitor.prototype.visitFloat64 = vectorIterator;\niterator_IteratorVisitor.prototype.visitUtf8 = vectorIterator;\niterator_IteratorVisitor.prototype.visitBinary = vectorIterator;\niterator_IteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\niterator_IteratorVisitor.prototype.visitDate = vectorIterator;\niterator_IteratorVisitor.prototype.visitDateDay = vectorIterator;\niterator_IteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimestamp = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTime = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimeSecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\niterator_IteratorVisitor.prototype.visitDecimal = vectorIterator;\niterator_IteratorVisitor.prototype.visitList = vectorIterator;\niterator_IteratorVisitor.prototype.visitStruct = vectorIterator;\niterator_IteratorVisitor.prototype.visitUnion = vectorIterator;\niterator_IteratorVisitor.prototype.visitDenseUnion = vectorIterator;\niterator_IteratorVisitor.prototype.visitSparseUnion = vectorIterator;\niterator_IteratorVisitor.prototype.visitDictionary = vectorIterator;\niterator_IteratorVisitor.prototype.visitInterval = vectorIterator;\niterator_IteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\niterator_IteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\niterator_IteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\niterator_IteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nconst iterator_instance = new iterator_IteratorVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/toarray.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n/** @ignore */\nclass toarray_ToArrayVisitor extends Visitor {}\n/** @ignore */\nfunction arrayOfVector(vector) {\n  const {\n    type,\n    length,\n    stride\n  } = vector;\n  // Fast case, return subarray if possible\n  switch (type.typeId) {\n    case Type.Int:\n    case Type.Float:\n    case Type.Decimal:\n    case Type.Time:\n    case Type.Timestamp:\n      return vector.values.subarray(0, length * stride);\n  }\n  // Otherwise if not primitive, slow copy\n  return [...iterator_instance.visit(vector)];\n}\ntoarray_ToArrayVisitor.prototype.visitNull = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitBool = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInt = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInt8 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInt16 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInt32 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInt64 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUint8 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUint16 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUint32 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUint64 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFloat = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitBinary = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDate = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDateDay = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTime = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDecimal = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitList = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitStruct = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitUnion = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitDictionary = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitInterval = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\ntoarray_ToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nconst toarray_instance = new toarray_ToArrayVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/bytewidth.mjs\n/* istanbul ignore file */\n\n\n/** @ignore */\nconst sum = (x, y) => x + y;\n/** @ignore */\nconst variableWidthColumnErrorMessage = type => \"Cannot compute the byte width of variable-width column \".concat(type);\n/** @ignore */\nclass bytewidth_ByteWidthVisitor extends Visitor {\n  visitNull(____) {\n    return 0;\n  }\n  visitInt(type) {\n    return type.bitWidth / 8;\n  }\n  visitFloat(type) {\n    return type.ArrayType.BYTES_PER_ELEMENT;\n  }\n  visitBinary(type) {\n    throw new Error(variableWidthColumnErrorMessage(type));\n  }\n  visitUtf8(type) {\n    throw new Error(variableWidthColumnErrorMessage(type));\n  }\n  visitBool(____) {\n    return 1 / 8;\n  }\n  visitDecimal(____) {\n    return 16;\n  }\n  visitDate(type) {\n    return (type.unit + 1) * 4;\n  }\n  visitTime(type) {\n    return type.bitWidth / 8;\n  }\n  visitTimestamp(type) {\n    return type.unit === TimeUnit.SECOND ? 4 : 8;\n  }\n  visitInterval(type) {\n    return (type.unit + 1) * 4;\n  }\n  visitList(type) {\n    throw new Error(variableWidthColumnErrorMessage(type));\n  }\n  visitStruct(type) {\n    return this.visitFields(type.children).reduce(sum, 0);\n  }\n  visitUnion(type) {\n    return this.visitFields(type.children).reduce(sum, 0);\n  }\n  visitFixedSizeBinary(type) {\n    return type.byteWidth;\n  }\n  visitFixedSizeList(type) {\n    return type.listSize * this.visitFields(type.children).reduce(sum, 0);\n  }\n  visitMap(type) {\n    return this.visitFields(type.children).reduce(sum, 0);\n  }\n  visitDictionary(type) {\n    return this.visit(type.indices);\n  }\n  visitFields(fields) {\n    return (fields || []).map(field => this.visit(field.type));\n  }\n  visitSchema(schema) {\n    return this.visitFields(schema.fields).reduce(sum, 0);\n  }\n}\n/** @ignore */\nconst bytewidth_instance = new bytewidth_ByteWidthVisitor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/visitor/vectorctor.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @ignore */\nclass vectorctor_GetVectorConstructor extends Visitor {\n  visitNull() {\n    return null_NullVector;\n  }\n  visitBool() {\n    return bool_BoolVector;\n  }\n  visitInt() {\n    return int_IntVector;\n  }\n  visitInt8() {\n    return Int8Vector;\n  }\n  visitInt16() {\n    return Int16Vector;\n  }\n  visitInt32() {\n    return Int32Vector;\n  }\n  visitInt64() {\n    return int_Int64Vector;\n  }\n  visitUint8() {\n    return Uint8Vector;\n  }\n  visitUint16() {\n    return Uint16Vector;\n  }\n  visitUint32() {\n    return Uint32Vector;\n  }\n  visitUint64() {\n    return int_Uint64Vector;\n  }\n  visitFloat() {\n    return float_FloatVector;\n  }\n  visitFloat16() {\n    return Float16Vector;\n  }\n  visitFloat32() {\n    return Float32Vector;\n  }\n  visitFloat64() {\n    return Float64Vector;\n  }\n  visitUtf8() {\n    return utf8_Utf8Vector;\n  }\n  visitBinary() {\n    return binary_BinaryVector;\n  }\n  visitFixedSizeBinary() {\n    return fixedsizebinary_FixedSizeBinaryVector;\n  }\n  visitDate() {\n    return date_DateVector;\n  }\n  visitDateDay() {\n    return DateDayVector;\n  }\n  visitDateMillisecond() {\n    return DateMillisecondVector;\n  }\n  visitTimestamp() {\n    return timestamp_TimestampVector;\n  }\n  visitTimestampSecond() {\n    return TimestampSecondVector;\n  }\n  visitTimestampMillisecond() {\n    return TimestampMillisecondVector;\n  }\n  visitTimestampMicrosecond() {\n    return TimestampMicrosecondVector;\n  }\n  visitTimestampNanosecond() {\n    return TimestampNanosecondVector;\n  }\n  visitTime() {\n    return time_TimeVector;\n  }\n  visitTimeSecond() {\n    return TimeSecondVector;\n  }\n  visitTimeMillisecond() {\n    return TimeMillisecondVector;\n  }\n  visitTimeMicrosecond() {\n    return TimeMicrosecondVector;\n  }\n  visitTimeNanosecond() {\n    return TimeNanosecondVector;\n  }\n  visitDecimal() {\n    return decimal_DecimalVector;\n  }\n  visitList() {\n    return list_ListVector;\n  }\n  visitStruct() {\n    return struct_StructVector;\n  }\n  visitUnion() {\n    return union_UnionVector;\n  }\n  visitDenseUnion() {\n    return DenseUnionVector;\n  }\n  visitSparseUnion() {\n    return SparseUnionVector;\n  }\n  visitDictionary() {\n    return dictionary_DictionaryVector;\n  }\n  visitInterval() {\n    return interval_IntervalVector;\n  }\n  visitIntervalDayTime() {\n    return IntervalDayTimeVector;\n  }\n  visitIntervalYearMonth() {\n    return IntervalYearMonthVector;\n  }\n  visitFixedSizeList() {\n    return fixedsizelist_FixedSizeListVector;\n  }\n  visitMap() {\n    return map_MapVector;\n  }\n}\n/** @ignore */\nconst vectorctor_instance = new vectorctor_GetVectorConstructor();\n// CONCATENATED MODULE: ./node_modules/apache-arrow/vector/index.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @nocollapse */\nAbstractVector.new = newVector;\n/** @nocollapse */\nAbstractVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return new (vectorctor_instance.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nfunction vectorFromValuesWithType(newDataType, input) {\n  if (isIterable(input)) {\n    return AbstractVector.from({\n      'nullValues': [null, undefined],\n      type: newDataType(),\n      'values': input\n    });\n  } else if (isAsyncIterable(input)) {\n    return AbstractVector.from({\n      'nullValues': [null, undefined],\n      type: newDataType(),\n      'values': input\n    });\n  }\n  const {\n    'values': values = [],\n    'type': type = newDataType(),\n    'nullValues': nullValues = [null, undefined]\n  } = {\n    ...input\n  };\n  return isIterable(values) ? AbstractVector.from({\n    nullValues,\n    ...input,\n    type\n  }) : AbstractVector.from({\n    nullValues,\n    ...input,\n    type\n  });\n}\nfunction vectorFrom(input) {\n  const {\n    'values': values = [],\n    ...options\n  } = {\n    'nullValues': [null, undefined],\n    ...input\n  };\n  if (isIterable(values)) {\n    const chunks = [...builder_Builder.throughIterable(options)(values)];\n    return chunks.length === 1 ? chunks[0] : chunked_Chunked.concat(chunks);\n  }\n  return (async chunks => {\n    const transform = builder_Builder.throughAsyncIterable(options);\n    for await (const chunk of transform(values)) {\n      chunks.push(chunk);\n    }\n    return chunks.length === 1 ? chunks[0] : chunked_Chunked.concat(chunks);\n  })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nbase_BaseVector.prototype.get = function baseVectorGet(index) {\n  return get_instance.visit(this, index);\n};\nbase_BaseVector.prototype.set = function baseVectorSet(index, value) {\n  return set_instance.visit(this, index, value);\n};\nbase_BaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n  return indexof_instance.visit(this, value, fromIndex);\n};\nbase_BaseVector.prototype.toArray = function baseVectorToArray() {\n  return toarray_instance.visit(this);\n};\nbase_BaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n  return bytewidth_instance.visit(this.type);\n};\nbase_BaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n  return iterator_instance.visit(this);\n};\nbase_BaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type).map(T => Type[T]).filter(T => typeof T === 'number').filter(typeId => typeId !== Type.NONE).forEach(typeId => {\n  const VectorCtor = vectorctor_instance.visit(typeId);\n  VectorCtor.prototype['get'] = partial1(get_instance.getVisitFn(typeId));\n  VectorCtor.prototype['set'] = partial2(set_instance.getVisitFn(typeId));\n  VectorCtor.prototype['indexOf'] = partial2(indexof_instance.getVisitFn(typeId));\n  VectorCtor.prototype['toArray'] = partial0(toarray_instance.getVisitFn(typeId));\n  VectorCtor.prototype['getByteWidth'] = partialType0(bytewidth_instance.getVisitFn(typeId));\n  VectorCtor.prototype[Symbol.iterator] = partial0(iterator_instance.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n  return function () {\n    return visit(this.type);\n  };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n  return function (i) {\n    return this.isValid(i) ? fn.call(this, i) : null;\n  };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n  return function (i, a) {\n    if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n      fn.call(this, i, a);\n    }\n  };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n  const nullBitmap = this.nullBitmap;\n  if (nullBitmap && nullBitmap.byteLength > 0) {\n    this.get = wrapNullableGet(this.get);\n    this.set = wrapNullableSet(this.set);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/table.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\nclass table_Table extends chunked_Chunked {\n  constructor() {\n    let schema = null;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args[0] instanceof schema_Schema) {\n      schema = args.shift();\n    }\n    let chunks = selectArgs(recordbatch_RecordBatch, args);\n    if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n      throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n    }\n    chunks[0] || (chunks[0] = new recordbatch_InternalEmptyPlaceholderRecordBatch(schema));\n    super(new type_Struct(schema.fields), chunks);\n    this._schema = schema;\n    this._chunks = chunks;\n  }\n  /** @nocollapse */\n  static empty() {\n    let schema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new schema_Schema([]);\n    return new table_Table(schema, []);\n  }\n  /** @nocollapse */\n  static from(input) {\n    if (!input) {\n      return table_Table.empty();\n    }\n    if (typeof input === 'object') {\n      let table = isIterable(input['values']) ? tableFromIterable(input) : isAsyncIterable(input['values']) ? tableFromAsyncIterable(input) : null;\n      if (table !== null) {\n        return table;\n      }\n    }\n    let reader = reader_RecordBatchReader.from(input);\n    if (isPromise(reader)) {\n      return (async () => await table_Table.from(await reader))();\n    }\n    if (reader.isSync() && (reader = reader.open())) {\n      return !reader.schema ? table_Table.empty() : new table_Table(reader.schema, [...reader]);\n    }\n    return (async opening => {\n      const reader = await opening;\n      const schema = reader.schema;\n      const batches = [];\n      if (schema) {\n        for await (let batch of reader) {\n          batches.push(batch);\n        }\n        return new table_Table(schema, batches);\n      }\n      return table_Table.empty();\n    })(reader.open());\n  }\n  /** @nocollapse */\n  static async fromAsync(source) {\n    return await table_Table.from(source);\n  }\n  /** @nocollapse */\n  static fromStruct(vector) {\n    return table_Table.new(vector.data.childData, vector.type.children);\n  }\n  /** @nocollapse */\n  static new() {\n    for (var _len2 = arguments.length, cols = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      cols[_key2] = arguments[_key2];\n    }\n    return new table_Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n  }\n  get schema() {\n    return this._schema;\n  }\n  get length() {\n    return this._length;\n  }\n  get chunks() {\n    return this._chunks;\n  }\n  get numCols() {\n    return this._numChildren;\n  }\n  clone() {\n    let chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._chunks;\n    return new table_Table(this._schema, chunks);\n  }\n  getColumn(name) {\n    return this.getColumnAt(this.getColumnIndex(name));\n  }\n  getColumnAt(index) {\n    return this.getChildAt(index);\n  }\n  getColumnIndex(name) {\n    return this._schema.fields.findIndex(f => f.name === name);\n  }\n  getChildAt(index) {\n    if (index < 0 || index >= this.numChildren) {\n      return null;\n    }\n    let field, child;\n    const fields = this._schema.fields;\n    const columns = this._children || (this._children = []);\n    if (child = columns[index]) {\n      return child;\n    }\n    if (field = fields[index]) {\n      const chunks = this._chunks.map(chunk => chunk.getChildAt(index)).filter(vec => vec != null);\n      if (chunks.length > 0) {\n        return columns[index] = new column_Column(field, chunks);\n      }\n    }\n    return null;\n  }\n  // @ts-ignore\n  serialize() {\n    let encoding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'binary';\n    let stream = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const Writer = !stream ? writer_RecordBatchFileWriter : writer_RecordBatchStreamWriter;\n    return Writer.writeAll(this).toUint8Array(true);\n  }\n  count() {\n    return this._length;\n  }\n  select() {\n    const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n    for (var _len3 = arguments.length, columnNames = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      columnNames[_key3] = arguments[_key3];\n    }\n    return this.selectAt(...columnNames.map(columnName => nameToIndex.get(columnName)).filter(x => x > -1));\n  }\n  selectAt() {\n    for (var _len4 = arguments.length, columnIndices = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      columnIndices[_key4] = arguments[_key4];\n    }\n    const schema = this._schema.selectAt(...columnIndices);\n    return new table_Table(schema, this._chunks.map(_ref => {\n      let {\n        length,\n        data: {\n          childData\n        }\n      } = _ref;\n      return new recordbatch_RecordBatch(schema, length, columnIndices.map(i => childData[i]).filter(Boolean));\n    }));\n  }\n  assign(other) {\n    var _this = this;\n    const fields = this._schema.fields;\n    const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n      const [indices, oldToNew] = memo;\n      const i = fields.findIndex(f => f.name === f2.name);\n      ~i ? oldToNew[i] = newIdx : indices.push(newIdx);\n      return memo;\n    }, [[], []]);\n    const schema = this._schema.assign(other.schema);\n    const columns = [...fields.map(function (_f, i, _fs) {\n      let j = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : oldToNew[i];\n      return j === undefined ? _this.getColumnAt(i) : other.getColumnAt(j);\n    }), ...indices.map(i => other.getColumnAt(i))].filter(Boolean);\n    return new table_Table(...distributeVectorsIntoRecordBatches(schema, columns));\n  }\n}\nfunction tableFromIterable(input) {\n  const {\n    type\n  } = input;\n  if (type instanceof type_Struct) {\n    return table_Table.fromStruct(struct_StructVector.from(input));\n  }\n  return null;\n}\nfunction tableFromAsyncIterable(input) {\n  const {\n    type\n  } = input;\n  if (type instanceof type_Struct) {\n    return struct_StructVector.from(input).then(vector => table_Table.fromStruct(vector));\n  }\n  return null;\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/recordbatch.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\nclass recordbatch_RecordBatch extends struct_StructVector {\n  constructor() {\n    let data;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    let schema = args[0];\n    let children;\n    if (args[1] instanceof data_Data) {\n      [, data, children] = args;\n    } else {\n      const fields = schema.fields;\n      const [, length, childData] = args;\n      data = data_Data.Struct(new type_Struct(fields), 0, length, 0, null, childData);\n    }\n    super(data, children);\n    this._schema = schema;\n  }\n  /** @nocollapse */\n  static from(options) {\n    if (isIterable(options['values'])) {\n      return table_Table.from(options);\n    }\n    return table_Table.from(options);\n  }\n  /** @nocollapse */\n  static new() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const [fs, xs] = selectFieldArgs(args);\n    const vs = xs.filter(x => x instanceof AbstractVector);\n    return new recordbatch_RecordBatch(...ensureSameLengthData(new schema_Schema(fs), vs.map(x => x.data)));\n  }\n  clone(data) {\n    let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._children;\n    return new recordbatch_RecordBatch(this._schema, data, children);\n  }\n  concat() {\n    for (var _len3 = arguments.length, others = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      others[_key3] = arguments[_key3];\n    }\n    const schema = this._schema,\n      chunks = chunked_Chunked.flatten(this, ...others);\n    return new table_Table(schema, chunks.map(_ref => {\n      let {\n        data\n      } = _ref;\n      return new recordbatch_RecordBatch(schema, data);\n    }));\n  }\n  get schema() {\n    return this._schema;\n  }\n  get numCols() {\n    return this._schema.fields.length;\n  }\n  get dictionaries() {\n    return this._dictionaries || (this._dictionaries = recordbatch_DictionaryCollector.collect(this));\n  }\n  select() {\n    const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n    for (var _len4 = arguments.length, columnNames = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      columnNames[_key4] = arguments[_key4];\n    }\n    return this.selectAt(...columnNames.map(columnName => nameToIndex.get(columnName)).filter(x => x > -1));\n  }\n  selectAt() {\n    for (var _len5 = arguments.length, columnIndices = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      columnIndices[_key5] = arguments[_key5];\n    }\n    const schema = this._schema.selectAt(...columnIndices);\n    const childData = columnIndices.map(i => this.data.childData[i]).filter(Boolean);\n    return new recordbatch_RecordBatch(schema, this.length, childData);\n  }\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nclass recordbatch_InternalEmptyPlaceholderRecordBatch extends recordbatch_RecordBatch {\n  constructor(schema) {\n    super(schema, 0, schema.fields.map(f => data_Data.new(f.type, 0, 0, 0)));\n  }\n}\n/** @ignore */\nclass recordbatch_DictionaryCollector extends Visitor {\n  constructor() {\n    super(...arguments);\n    this.dictionaries = new Map();\n  }\n  static collect(batch) {\n    return new recordbatch_DictionaryCollector().visit(batch.data, new type_Struct(batch.schema.fields)).dictionaries;\n  }\n  visit(data, type) {\n    if (type_DataType.isDictionary(type)) {\n      return this.visitDictionary(data, type);\n    } else {\n      data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n    }\n    return this;\n  }\n  visitDictionary(data, type) {\n    const dictionary = data.dictionary;\n    if (dictionary && dictionary.length > 0) {\n      this.dictionaries.set(type.id, dictionary);\n    }\n    return this;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/ipc/reader.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\nclass reader_RecordBatchReader extends ReadableInterop {\n  constructor(impl) {\n    super();\n    this._impl = impl;\n  }\n  get closed() {\n    return this._impl.closed;\n  }\n  get schema() {\n    return this._impl.schema;\n  }\n  get autoDestroy() {\n    return this._impl.autoDestroy;\n  }\n  get dictionaries() {\n    return this._impl.dictionaries;\n  }\n  get numDictionaries() {\n    return this._impl.numDictionaries;\n  }\n  get numRecordBatches() {\n    return this._impl.numRecordBatches;\n  }\n  get footer() {\n    return this._impl.isFile() ? this._impl.footer : null;\n  }\n  isSync() {\n    return this._impl.isSync();\n  }\n  isAsync() {\n    return this._impl.isAsync();\n  }\n  isFile() {\n    return this._impl.isFile();\n  }\n  isStream() {\n    return this._impl.isStream();\n  }\n  next() {\n    return this._impl.next();\n  }\n  throw(value) {\n    return this._impl.throw(value);\n  }\n  return(value) {\n    return this._impl.return(value);\n  }\n  cancel() {\n    return this._impl.cancel();\n  }\n  reset(schema) {\n    this._impl.reset(schema);\n    this._DOMStream = undefined;\n    this._nodeStream = undefined;\n    return this;\n  }\n  open(options) {\n    const opening = this._impl.open(options);\n    return isPromise(opening) ? opening.then(() => this) : this;\n  }\n  readRecordBatch(index) {\n    return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n  }\n  [Symbol.iterator]() {\n    return this._impl[Symbol.iterator]();\n  }\n  [Symbol.asyncIterator]() {\n    return this._impl[Symbol.asyncIterator]();\n  }\n  toDOMStream() {\n    return adapters.toDOMStream(this.isSync() ? {\n      [Symbol.iterator]: () => this\n    } : {\n      [Symbol.asyncIterator]: () => this\n    });\n  }\n  toNodeStream() {\n    return adapters.toNodeStream(this.isSync() ? {\n      [Symbol.iterator]: () => this\n    } : {\n      [Symbol.asyncIterator]: () => this\n    }, {\n      objectMode: true\n    });\n  }\n  /** @nocollapse */\n  // @ts-ignore\n  static throughNode(options) {\n    throw new Error(\"\\\"throughNode\\\" not available in this environment\");\n  }\n  /** @nocollapse */\n  static throughDOM(\n  // @ts-ignore\n  writableStrategy,\n  // @ts-ignore\n  readableStrategy) {\n    throw new Error(\"\\\"throughDOM\\\" not available in this environment\");\n  }\n  /** @nocollapse */\n  static from(source) {\n    if (source instanceof reader_RecordBatchReader) {\n      return source;\n    } else if (isArrowJSON(source)) {\n      return fromArrowJSON(source);\n    } else if (isFileHandle(source)) {\n      return fromFileHandle(source);\n    } else if (isPromise(source)) {\n      return (async () => await reader_RecordBatchReader.from(await source))();\n    } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n      return fromAsyncByteStream(new stream_AsyncByteStream(source));\n    }\n    return fromByteStream(new stream_ByteStream(source));\n  }\n  /** @nocollapse */\n  static readAll(source) {\n    if (source instanceof reader_RecordBatchReader) {\n      return source.isSync() ? readAllSync(source) : readAllAsync(source);\n    } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n      return readAllSync(source);\n    }\n    return readAllAsync(source);\n  }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nclass RecordBatchStreamReader extends reader_RecordBatchReader {\n  constructor(_impl) {\n    super(_impl);\n    this._impl = _impl;\n  }\n  [Symbol.iterator]() {\n    return this._impl[Symbol.iterator]();\n  }\n  async *[Symbol.asyncIterator]() {\n    yield* this[Symbol.iterator]();\n  }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReader extends reader_RecordBatchReader {\n  constructor(_impl) {\n    super(_impl);\n    this._impl = _impl;\n  }\n  [Symbol.iterator]() {\n    throw new Error(\"AsyncRecordBatchStreamReader is not Iterable\");\n  }\n  [Symbol.asyncIterator]() {\n    return this._impl[Symbol.asyncIterator]();\n  }\n}\n/** @ignore */\nclass RecordBatchFileReader extends RecordBatchStreamReader {\n  constructor(_impl) {\n    super(_impl);\n    this._impl = _impl;\n  }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n  constructor(_impl) {\n    super(_impl);\n    this._impl = _impl;\n  }\n}\n/** @ignore */\nclass reader_RecordBatchReaderImpl {\n  constructor() {\n    let dictionaries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Map();\n    this.closed = false;\n    this.autoDestroy = true;\n    this._dictionaryIndex = 0;\n    this._recordBatchIndex = 0;\n    this.dictionaries = dictionaries;\n  }\n  get numDictionaries() {\n    return this._dictionaryIndex;\n  }\n  get numRecordBatches() {\n    return this._recordBatchIndex;\n  }\n  isSync() {\n    return false;\n  }\n  isAsync() {\n    return false;\n  }\n  isFile() {\n    return false;\n  }\n  isStream() {\n    return false;\n  }\n  reset(schema) {\n    this._dictionaryIndex = 0;\n    this._recordBatchIndex = 0;\n    this.schema = schema;\n    this.dictionaries = new Map();\n    return this;\n  }\n  _loadRecordBatch(header, body) {\n    return new recordbatch_RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n  }\n  _loadDictionaryBatch(header, body) {\n    const {\n      id,\n      isDelta,\n      data\n    } = header;\n    const {\n      dictionaries,\n      schema\n    } = this;\n    const dictionary = dictionaries.get(id);\n    if (isDelta || !dictionary) {\n      const type = schema.dictionaries.get(id);\n      return dictionary && isDelta ? dictionary.concat(AbstractVector.new(this._loadVectors(data, body, [type])[0])) : AbstractVector.new(this._loadVectors(data, body, [type])[0]);\n    }\n    return dictionary;\n  }\n  _loadVectors(header, body, types) {\n    return new vectorloader_VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n  }\n}\n/** @ignore */\nclass reader_RecordBatchStreamReaderImpl extends reader_RecordBatchReaderImpl {\n  constructor(source, dictionaries) {\n    super(dictionaries);\n    this._reader = !isArrowJSON(source) ? new message_MessageReader(this._handle = source) : new message_JSONMessageReader(this._handle = source);\n  }\n  isSync() {\n    return true;\n  }\n  isStream() {\n    return true;\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  cancel() {\n    if (!this.closed && (this.closed = true)) {\n      this.reset()._reader.return();\n      this._reader = null;\n      this.dictionaries = null;\n    }\n  }\n  open(options) {\n    if (!this.closed) {\n      this.autoDestroy = shouldAutoDestroy(this, options);\n      if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n        this.cancel();\n      }\n    }\n    return this;\n  }\n  throw(value) {\n    if (!this.closed && this.autoDestroy && (this.closed = true)) {\n      return this.reset()._reader.throw(value);\n    }\n    return ITERATOR_DONE;\n  }\n  return(value) {\n    if (!this.closed && this.autoDestroy && (this.closed = true)) {\n      return this.reset()._reader.return(value);\n    }\n    return ITERATOR_DONE;\n  }\n  next() {\n    if (this.closed) {\n      return ITERATOR_DONE;\n    }\n    let message,\n      {\n        _reader: reader\n      } = this;\n    while (message = this._readNextMessageAndValidate()) {\n      if (message.isSchema()) {\n        this.reset(message.header());\n      } else if (message.isRecordBatch()) {\n        this._recordBatchIndex++;\n        const header = message.header();\n        const buffer = reader.readMessageBody(message.bodyLength);\n        const recordBatch = this._loadRecordBatch(header, buffer);\n        return {\n          done: false,\n          value: recordBatch\n        };\n      } else if (message.isDictionaryBatch()) {\n        this._dictionaryIndex++;\n        const header = message.header();\n        const buffer = reader.readMessageBody(message.bodyLength);\n        const vector = this._loadDictionaryBatch(header, buffer);\n        this.dictionaries.set(header.id, vector);\n      }\n    }\n    if (this.schema && this._recordBatchIndex === 0) {\n      this._recordBatchIndex++;\n      return {\n        done: false,\n        value: new recordbatch_InternalEmptyPlaceholderRecordBatch(this.schema)\n      };\n    }\n    return this.return();\n  }\n  _readNextMessageAndValidate(type) {\n    return this._reader.readMessage(type);\n  }\n}\n/** @ignore */\nclass reader_AsyncRecordBatchStreamReaderImpl extends reader_RecordBatchReaderImpl {\n  constructor(source, dictionaries) {\n    super(dictionaries);\n    this._reader = new message_AsyncMessageReader(this._handle = source);\n  }\n  isAsync() {\n    return true;\n  }\n  isStream() {\n    return true;\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  async cancel() {\n    if (!this.closed && (this.closed = true)) {\n      await this.reset()._reader.return();\n      this._reader = null;\n      this.dictionaries = null;\n    }\n  }\n  async open(options) {\n    if (!this.closed) {\n      this.autoDestroy = shouldAutoDestroy(this, options);\n      if (!(this.schema || (this.schema = await this._reader.readSchema()))) {\n        await this.cancel();\n      }\n    }\n    return this;\n  }\n  async throw(value) {\n    if (!this.closed && this.autoDestroy && (this.closed = true)) {\n      return await this.reset()._reader.throw(value);\n    }\n    return ITERATOR_DONE;\n  }\n  async return(value) {\n    if (!this.closed && this.autoDestroy && (this.closed = true)) {\n      return await this.reset()._reader.return(value);\n    }\n    return ITERATOR_DONE;\n  }\n  async next() {\n    if (this.closed) {\n      return ITERATOR_DONE;\n    }\n    let message,\n      {\n        _reader: reader\n      } = this;\n    while (message = await this._readNextMessageAndValidate()) {\n      if (message.isSchema()) {\n        await this.reset(message.header());\n      } else if (message.isRecordBatch()) {\n        this._recordBatchIndex++;\n        const header = message.header();\n        const buffer = await reader.readMessageBody(message.bodyLength);\n        const recordBatch = this._loadRecordBatch(header, buffer);\n        return {\n          done: false,\n          value: recordBatch\n        };\n      } else if (message.isDictionaryBatch()) {\n        this._dictionaryIndex++;\n        const header = message.header();\n        const buffer = await reader.readMessageBody(message.bodyLength);\n        const vector = this._loadDictionaryBatch(header, buffer);\n        this.dictionaries.set(header.id, vector);\n      }\n    }\n    if (this.schema && this._recordBatchIndex === 0) {\n      this._recordBatchIndex++;\n      return {\n        done: false,\n        value: new recordbatch_InternalEmptyPlaceholderRecordBatch(this.schema)\n      };\n    }\n    return await this.return();\n  }\n  async _readNextMessageAndValidate(type) {\n    return await this._reader.readMessage(type);\n  }\n}\n/** @ignore */\nclass reader_RecordBatchFileReaderImpl extends reader_RecordBatchStreamReaderImpl {\n  constructor(source, dictionaries) {\n    super(source instanceof file_RandomAccessFile ? source : new file_RandomAccessFile(source), dictionaries);\n  }\n  get footer() {\n    return this._footer;\n  }\n  get numDictionaries() {\n    return this._footer ? this._footer.numDictionaries : 0;\n  }\n  get numRecordBatches() {\n    return this._footer ? this._footer.numRecordBatches : 0;\n  }\n  isSync() {\n    return true;\n  }\n  isFile() {\n    return true;\n  }\n  open(options) {\n    if (!this.closed && !this._footer) {\n      this.schema = (this._footer = this._readFooter()).schema;\n      for (const block of this._footer.dictionaryBatches()) {\n        block && this._readDictionaryBatch(this._dictionaryIndex++);\n      }\n    }\n    return super.open(options);\n  }\n  readRecordBatch(index) {\n    if (this.closed) {\n      return null;\n    }\n    if (!this._footer) {\n      this.open();\n    }\n    const block = this._footer && this._footer.getRecordBatch(index);\n    if (block && this._handle.seek(block.offset)) {\n      const message = this._reader.readMessage(MessageHeader.RecordBatch);\n      if (message && message.isRecordBatch()) {\n        const header = message.header();\n        const buffer = this._reader.readMessageBody(message.bodyLength);\n        const recordBatch = this._loadRecordBatch(header, buffer);\n        return recordBatch;\n      }\n    }\n    return null;\n  }\n  _readDictionaryBatch(index) {\n    const block = this._footer && this._footer.getDictionaryBatch(index);\n    if (block && this._handle.seek(block.offset)) {\n      const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n      if (message && message.isDictionaryBatch()) {\n        const header = message.header();\n        const buffer = this._reader.readMessageBody(message.bodyLength);\n        const vector = this._loadDictionaryBatch(header, buffer);\n        this.dictionaries.set(header.id, vector);\n      }\n    }\n  }\n  _readFooter() {\n    const {\n      _handle\n    } = this;\n    const offset = _handle.size - magicAndPadding;\n    const length = _handle.readInt32(offset);\n    const buffer = _handle.readAt(offset - length, length);\n    return file_Footer_.decode(buffer);\n  }\n  _readNextMessageAndValidate(type) {\n    if (!this._footer) {\n      this.open();\n    }\n    if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n      const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n      if (block && this._handle.seek(block.offset)) {\n        return this._reader.readMessage(type);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nclass reader_AsyncRecordBatchFileReaderImpl extends reader_AsyncRecordBatchStreamReaderImpl {\n  constructor(source) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n    const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n    super(source instanceof file_AsyncRandomAccessFile ? source : new file_AsyncRandomAccessFile(source, byteLength), dictionaries);\n  }\n  get footer() {\n    return this._footer;\n  }\n  get numDictionaries() {\n    return this._footer ? this._footer.numDictionaries : 0;\n  }\n  get numRecordBatches() {\n    return this._footer ? this._footer.numRecordBatches : 0;\n  }\n  isFile() {\n    return true;\n  }\n  isAsync() {\n    return true;\n  }\n  async open(options) {\n    if (!this.closed && !this._footer) {\n      this.schema = (this._footer = await this._readFooter()).schema;\n      for (const block of this._footer.dictionaryBatches()) {\n        block && (await this._readDictionaryBatch(this._dictionaryIndex++));\n      }\n    }\n    return await super.open(options);\n  }\n  async readRecordBatch(index) {\n    if (this.closed) {\n      return null;\n    }\n    if (!this._footer) {\n      await this.open();\n    }\n    const block = this._footer && this._footer.getRecordBatch(index);\n    if (block && (await this._handle.seek(block.offset))) {\n      const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n      if (message && message.isRecordBatch()) {\n        const header = message.header();\n        const buffer = await this._reader.readMessageBody(message.bodyLength);\n        const recordBatch = this._loadRecordBatch(header, buffer);\n        return recordBatch;\n      }\n    }\n    return null;\n  }\n  async _readDictionaryBatch(index) {\n    const block = this._footer && this._footer.getDictionaryBatch(index);\n    if (block && (await this._handle.seek(block.offset))) {\n      const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n      if (message && message.isDictionaryBatch()) {\n        const header = message.header();\n        const buffer = await this._reader.readMessageBody(message.bodyLength);\n        const vector = this._loadDictionaryBatch(header, buffer);\n        this.dictionaries.set(header.id, vector);\n      }\n    }\n  }\n  async _readFooter() {\n    const {\n      _handle\n    } = this;\n    _handle._pending && (await _handle._pending);\n    const offset = _handle.size - magicAndPadding;\n    const length = await _handle.readInt32(offset);\n    const buffer = await _handle.readAt(offset - length, length);\n    return file_Footer_.decode(buffer);\n  }\n  async _readNextMessageAndValidate(type) {\n    if (!this._footer) {\n      await this.open();\n    }\n    if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n      const block = this._footer.getRecordBatch(this._recordBatchIndex);\n      if (block && (await this._handle.seek(block.offset))) {\n        return await this._reader.readMessage(type);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nclass reader_RecordBatchJSONReaderImpl extends reader_RecordBatchStreamReaderImpl {\n  constructor(source, dictionaries) {\n    super(source, dictionaries);\n  }\n  _loadVectors(header, body, types) {\n    return new vectorloader_JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n  }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n  return options && typeof options['autoDestroy'] === 'boolean' ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n  const reader = reader_RecordBatchReader.from(source);\n  try {\n    if (!reader.open({\n      autoDestroy: false\n    }).closed) {\n      do {\n        yield reader;\n      } while (!reader.reset().open().closed);\n    }\n  } finally {\n    reader.cancel();\n  }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n  const reader = await reader_RecordBatchReader.from(source);\n  try {\n    if (!(await reader.open({\n      autoDestroy: false\n    })).closed) {\n      do {\n        yield reader;\n      } while (!(await reader.reset().open()).closed);\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n  return new RecordBatchStreamReader(new reader_RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n  const bytes = source.peek(magicLength + 7 & ~7);\n  return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes) ? new RecordBatchStreamReader(new reader_RecordBatchStreamReaderImpl(source)) : new RecordBatchFileReader(new reader_RecordBatchFileReaderImpl(source.read())) : new RecordBatchStreamReader(new reader_RecordBatchStreamReaderImpl(function* () {}()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n  const bytes = await source.peek(magicLength + 7 & ~7);\n  return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes) ? new AsyncRecordBatchStreamReader(new reader_AsyncRecordBatchStreamReaderImpl(source)) : new RecordBatchFileReader(new reader_RecordBatchFileReaderImpl(await source.read())) : new AsyncRecordBatchStreamReader(new reader_AsyncRecordBatchStreamReaderImpl(async function* () {}()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n  const {\n    size\n  } = await source.stat();\n  const file = new file_AsyncRandomAccessFile(source, size);\n  if (size >= magicX2AndPadding) {\n    if (checkForMagicArrowString(await file.readAt(0, magicLength + 7 & ~7))) {\n      return new AsyncRecordBatchFileReader(new reader_AsyncRecordBatchFileReaderImpl(file));\n    }\n  }\n  return new AsyncRecordBatchStreamReader(new reader_AsyncRecordBatchStreamReaderImpl(file));\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/whatwg/iterable.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nfunction toDOMStream(source, options) {\n  if (isAsyncIterable(source)) {\n    return asyncIterableAsReadableDOMStream(source, options);\n  }\n  if (isIterable(source)) {\n    return iterableAsReadableDOMStream(source, options);\n  }\n  /* istanbul ignore next */\n  throw new Error(\"toDOMStream() must be called with an Iterable or AsyncIterable\");\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n  let it = null;\n  const bm = options && options.type === 'bytes' || false;\n  const hwm = options && options.highWaterMark || 2 ** 24;\n  return new ReadableStream({\n    ...options,\n    start(controller) {\n      next(controller, it || (it = source[Symbol.iterator]()));\n    },\n    pull(controller) {\n      it ? next(controller, it) : controller.close();\n    },\n    cancel() {\n      (it && it.return && it.return() || true) && (it = null);\n    }\n  }, {\n    highWaterMark: bm ? hwm : undefined,\n    ...options\n  });\n  function next(controller, it) {\n    let buf;\n    let r = null;\n    let size = controller.desiredSize || null;\n    while (!(r = it.next(bm ? size : null)).done) {\n      if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n        size != null && bm && (size = size - buf.byteLength + 1);\n        r.value = buf;\n      }\n      controller.enqueue(r.value);\n      if (size != null && --size <= 0) {\n        return;\n      }\n    }\n    controller.close();\n  }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n  let it = null;\n  const bm = options && options.type === 'bytes' || false;\n  const hwm = options && options.highWaterMark || 2 ** 24;\n  return new ReadableStream({\n    ...options,\n    async start(controller) {\n      await next(controller, it || (it = source[Symbol.asyncIterator]()));\n    },\n    async pull(controller) {\n      it ? await next(controller, it) : controller.close();\n    },\n    async cancel() {\n      (it && it.return && (await it.return()) || true) && (it = null);\n    }\n  }, {\n    highWaterMark: bm ? hwm : undefined,\n    ...options\n  });\n  async function next(controller, it) {\n    let buf;\n    let r = null;\n    let size = controller.desiredSize || null;\n    while (!(r = await it.next(bm ? size : null)).done) {\n      if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n        size != null && bm && (size = size - buf.byteLength + 1);\n        r.value = buf;\n      }\n      controller.enqueue(r.value);\n      if (size != null && --size <= 0) {\n        return;\n      }\n    }\n    controller.close();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/whatwg/builder.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nfunction builderThroughDOMStream(options) {\n  return new builder_BuilderTransform(options);\n}\n/** @ignore */\nclass builder_BuilderTransform {\n  constructor(options) {\n    // Access properties by string indexers to defeat closure compiler\n    this._numChunks = 0;\n    this._finished = false;\n    this._bufferedSize = 0;\n    const {\n      ['readableStrategy']: readableStrategy,\n      ['writableStrategy']: writableStrategy,\n      ['queueingStrategy']: queueingStrategy = 'count',\n      ...builderOptions\n    } = options;\n    this._controller = null;\n    this._builder = builder_Builder.new(builderOptions);\n    this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n    const {\n      ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000\n    } = {\n      ...readableStrategy\n    };\n    const {\n      ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000\n    } = {\n      ...writableStrategy\n    };\n    this['readable'] = new ReadableStream({\n      ['cancel']: () => {\n        this._builder.clear();\n      },\n      ['pull']: c => {\n        this._maybeFlush(this._builder, this._controller = c);\n      },\n      ['start']: c => {\n        this._maybeFlush(this._builder, this._controller = c);\n      }\n    }, {\n      'highWaterMark': readableHighWaterMark,\n      'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength\n    });\n    this['writable'] = new WritableStream({\n      ['abort']: () => {\n        this._builder.clear();\n      },\n      ['write']: () => {\n        this._maybeFlush(this._builder, this._controller);\n      },\n      ['close']: () => {\n        this._maybeFlush(this._builder.finish(), this._controller);\n      }\n    }, {\n      'highWaterMark': writableHighWaterMark,\n      'size': value => this._writeValueAndReturnChunkSize(value)\n    });\n  }\n  _writeValueAndReturnChunkSize(value) {\n    const bufferedSize = this._bufferedSize;\n    this._bufferedSize = this._getSize(this._builder.append(value));\n    return this._bufferedSize - bufferedSize;\n  }\n  _maybeFlush(builder, controller) {\n    if (controller === null) {\n      return;\n    }\n    if (this._bufferedSize >= controller.desiredSize) {\n      ++this._numChunks && this._enqueue(controller, builder.toVector());\n    }\n    if (builder.finished) {\n      if (builder.length > 0 || this._numChunks === 0) {\n        ++this._numChunks && this._enqueue(controller, builder.toVector());\n      }\n      if (!this._finished && (this._finished = true)) {\n        this._enqueue(controller, null);\n      }\n    }\n  }\n  _enqueue(controller, chunk) {\n    this._bufferedSize = 0;\n    this._controller = null;\n    chunk === null ? controller.close() : controller.enqueue(chunk);\n  }\n}\n/** @ignore */\nconst chunkLength = chunk => chunk.length;\n/** @ignore */\nconst chunkByteLength = chunk => chunk.byteLength;\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/whatwg/reader.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n/** @ignore */\nfunction recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n  const queue = new stream_AsyncByteQueue();\n  let reader = null;\n  const readable = new ReadableStream({\n    async cancel() {\n      await queue.close();\n    },\n    async start(controller) {\n      await next(controller, reader || (reader = await open()));\n    },\n    async pull(controller) {\n      reader ? await next(controller, reader) : controller.close();\n    }\n  });\n  return {\n    writable: new WritableStream(queue, {\n      'highWaterMark': 2 ** 14,\n      ...writableStrategy\n    }),\n    readable\n  };\n  async function open() {\n    return await (await reader_RecordBatchReader.from(queue)).open(readableStrategy);\n  }\n  async function next(controller, reader) {\n    let size = controller.desiredSize;\n    let r = null;\n    while (!(r = await reader.next()).done) {\n      controller.enqueue(r.value);\n      if (size != null && --size <= 0) {\n        return;\n      }\n    }\n    controller.close();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/io/whatwg/writer.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nfunction recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n  const writer = new this(writableStrategy);\n  const reader = new stream_AsyncByteStream(writer);\n  const readable = new ReadableStream({\n    type: 'bytes',\n    async cancel() {\n      await reader.cancel();\n    },\n    async pull(controller) {\n      await next(controller);\n    },\n    async start(controller) {\n      await next(controller);\n    }\n  }, {\n    'highWaterMark': 2 ** 14,\n    ...readableStrategy\n  });\n  return {\n    writable: new WritableStream(writer, writableStrategy),\n    readable\n  };\n  async function next(controller) {\n    let buf = null;\n    let size = controller.desiredSize;\n    while (buf = await reader.read(size || null)) {\n      controller.enqueue(buf);\n      if (size != null && (size -= buf.byteLength) <= 0) {\n        return;\n      }\n    }\n    controller.close();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/compute/predicate.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nclass Value {\n  eq(other) {\n    if (!(other instanceof Value)) {\n      other = new Literal(other);\n    }\n    return new predicate_Equals(this, other);\n  }\n  le(other) {\n    if (!(other instanceof Value)) {\n      other = new Literal(other);\n    }\n    return new LTeq(this, other);\n  }\n  ge(other) {\n    if (!(other instanceof Value)) {\n      other = new Literal(other);\n    }\n    return new GTeq(this, other);\n  }\n  lt(other) {\n    return new Not(this.ge(other));\n  }\n  gt(other) {\n    return new Not(this.le(other));\n  }\n  ne(other) {\n    return new Not(this.eq(other));\n  }\n}\n/** @ignore */\nclass Literal extends Value {\n  constructor(v) {\n    super();\n    this.v = v;\n  }\n}\n/** @ignore */\nclass Col extends Value {\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n  bind(batch) {\n    if (!this.colidx) {\n      // Assume column index doesn't change between calls to bind\n      //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n      this.colidx = -1;\n      const fields = batch.schema.fields;\n      for (let idx = -1; ++idx < fields.length;) {\n        if (fields[idx].name === this.name) {\n          this.colidx = idx;\n          break;\n        }\n      }\n      if (this.colidx < 0) {\n        throw new Error(\"Failed to bind Col \\\"\".concat(this.name, \"\\\"\"));\n      }\n    }\n    const vec = this.vector = batch.getChildAt(this.colidx);\n    return idx => vec.get(idx);\n  }\n}\n/** @ignore */\nclass Predicate {\n  and() {\n    for (var _len = arguments.length, expr = new Array(_len), _key = 0; _key < _len; _key++) {\n      expr[_key] = arguments[_key];\n    }\n    return new And(this, ...expr);\n  }\n  or() {\n    for (var _len2 = arguments.length, expr = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      expr[_key2] = arguments[_key2];\n    }\n    return new Or(this, ...expr);\n  }\n  not() {\n    return new Not(this);\n  }\n}\n/** @ignore */\nclass ComparisonPredicate extends Predicate {\n  constructor(left, right) {\n    super();\n    this.left = left;\n    this.right = right;\n  }\n  bind(batch) {\n    if (this.left instanceof Literal) {\n      if (this.right instanceof Literal) {\n        return this._bindLitLit(batch, this.left, this.right);\n      } else {\n        // right is a Col\n        return this._bindLitCol(batch, this.left, this.right);\n      }\n    } else {\n      // left is a Col\n      if (this.right instanceof Literal) {\n        return this._bindColLit(batch, this.left, this.right);\n      } else {\n        // right is a Col\n        return this._bindColCol(batch, this.left, this.right);\n      }\n    }\n  }\n}\n/** @ignore */\nclass CombinationPredicate extends Predicate {\n  constructor() {\n    super();\n    for (var _len3 = arguments.length, children = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      children[_key3] = arguments[_key3];\n    }\n    this.children = children;\n  }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nclass And extends CombinationPredicate {\n  constructor() {\n    for (var _len4 = arguments.length, children = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      children[_key4] = arguments[_key4];\n    }\n    // Flatten any Ands\n    children = children.reduce((accum, p) => {\n      return accum.concat(p instanceof And ? p.children : p);\n    }, []);\n    super(...children);\n  }\n  bind(batch) {\n    const bound = this.children.map(p => p.bind(batch));\n    return (idx, batch) => bound.every(p => p(idx, batch));\n  }\n}\n/** @ignore */\nclass Or extends CombinationPredicate {\n  constructor() {\n    for (var _len5 = arguments.length, children = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      children[_key5] = arguments[_key5];\n    }\n    // Flatten any Ors\n    children = children.reduce((accum, p) => {\n      return accum.concat(p instanceof Or ? p.children : p);\n    }, []);\n    super(...children);\n  }\n  bind(batch) {\n    const bound = this.children.map(p => p.bind(batch));\n    return (idx, batch) => bound.some(p => p(idx, batch));\n  }\n}\n/** @ignore */\nclass predicate_Equals extends ComparisonPredicate {\n  _bindLitLit(_batch, left, right) {\n    const rtrn = left.v == right.v;\n    return () => rtrn;\n  }\n  _bindColCol(batch, left, right) {\n    const left_func = left.bind(batch);\n    const right_func = right.bind(batch);\n    return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n  }\n  _bindColLit(batch, col, lit) {\n    const col_func = col.bind(batch);\n    if (col.vector instanceof dictionary_DictionaryVector) {\n      let key;\n      const vector = col.vector;\n      if (vector.dictionary !== this.lastDictionary) {\n        key = vector.reverseLookup(lit.v);\n        this.lastDictionary = vector.dictionary;\n        this.lastKey = key;\n      } else {\n        key = this.lastKey;\n      }\n      if (key === -1) {\n        // the value doesn't exist in the dictionary - always return\n        // false\n        // TODO: special-case of PredicateFunc that encapsulates this\n        // \"always false\" behavior. That way filtering operations don't\n        // have to bother checking\n        return () => false;\n      } else {\n        return idx => {\n          return vector.getKey(idx) === key;\n        };\n      }\n    } else {\n      return (idx, cols) => col_func(idx, cols) == lit.v;\n    }\n  }\n  _bindLitCol(batch, lit, col) {\n    // Equals is commutative\n    return this._bindColLit(batch, col, lit);\n  }\n}\n/** @ignore */\nclass LTeq extends ComparisonPredicate {\n  _bindLitLit(_batch, left, right) {\n    const rtrn = left.v <= right.v;\n    return () => rtrn;\n  }\n  _bindColCol(batch, left, right) {\n    const left_func = left.bind(batch);\n    const right_func = right.bind(batch);\n    return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n  }\n  _bindColLit(batch, col, lit) {\n    const col_func = col.bind(batch);\n    return (idx, cols) => col_func(idx, cols) <= lit.v;\n  }\n  _bindLitCol(batch, lit, col) {\n    const col_func = col.bind(batch);\n    return (idx, cols) => lit.v <= col_func(idx, cols);\n  }\n}\n/** @ignore */\nclass GTeq extends ComparisonPredicate {\n  _bindLitLit(_batch, left, right) {\n    const rtrn = left.v >= right.v;\n    return () => rtrn;\n  }\n  _bindColCol(batch, left, right) {\n    const left_func = left.bind(batch);\n    const right_func = right.bind(batch);\n    return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n  }\n  _bindColLit(batch, col, lit) {\n    const col_func = col.bind(batch);\n    return (idx, cols) => col_func(idx, cols) >= lit.v;\n  }\n  _bindLitCol(batch, lit, col) {\n    const col_func = col.bind(batch);\n    return (idx, cols) => lit.v >= col_func(idx, cols);\n  }\n}\n/** @ignore */\nclass Not extends Predicate {\n  constructor(child) {\n    super();\n    this.child = child;\n  }\n  bind(batch) {\n    const func = this.child.bind(batch);\n    return (idx, batch) => !func(idx, batch);\n  }\n}\n/** @ignore */\nclass CustomPredicate extends Predicate {\n  constructor(next, bind_) {\n    super();\n    this.next = next;\n    this.bind_ = bind_;\n  }\n  bind(batch) {\n    this.bind_(batch);\n    return this.next;\n  }\n}\nfunction predicate_lit(v) {\n  return new Literal(v);\n}\nfunction predicate_col(n) {\n  return new Col(n);\n}\nfunction and() {\n  for (var _len6 = arguments.length, p = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    p[_key6] = arguments[_key6];\n  }\n  return new And(...p);\n}\nfunction or() {\n  for (var _len7 = arguments.length, p = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    p[_key7] = arguments[_key7];\n  }\n  return new Or(...p);\n}\nfunction custom(next, bind) {\n  return new CustomPredicate(next, bind);\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/compute/dataframe.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\ntable_Table.prototype.countBy = function (name) {\n  return new dataframe_DataFrame(this.chunks).countBy(name);\n};\ntable_Table.prototype.scan = function (next, bind) {\n  return new dataframe_DataFrame(this.chunks).scan(next, bind);\n};\ntable_Table.prototype.scanReverse = function (next, bind) {\n  return new dataframe_DataFrame(this.chunks).scanReverse(next, bind);\n};\ntable_Table.prototype.filter = function (predicate) {\n  return new dataframe_DataFrame(this.chunks).filter(predicate);\n};\nclass dataframe_DataFrame extends table_Table {\n  filter(predicate) {\n    return new dataframe_FilteredDataFrame(this.chunks, predicate);\n  }\n  scan(next, bind) {\n    const batches = this.chunks,\n      numBatches = batches.length;\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      if (bind) {\n        bind(batch);\n      }\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        next(index, batch);\n      }\n    }\n  }\n  scanReverse(next, bind) {\n    const batches = this.chunks,\n      numBatches = batches.length;\n    for (let batchIndex = numBatches; --batchIndex >= 0;) {\n      // load batches\n      const batch = batches[batchIndex];\n      if (bind) {\n        bind(batch);\n      }\n      // yield all indices\n      for (let index = batch.length; --index >= 0;) {\n        next(index, batch);\n      }\n    }\n  }\n  countBy(name) {\n    const batches = this.chunks,\n      numBatches = batches.length;\n    const count_by = typeof name === 'string' ? new Col(name) : name;\n    // Assume that all dictionary batches are deltas, which means that the\n    // last record batch has the most complete dictionary\n    count_by.bind(batches[numBatches - 1]);\n    const vector = count_by.vector;\n    if (!type_DataType.isDictionary(vector.type)) {\n      throw new Error('countBy currently only supports dictionary-encoded columns');\n    }\n    const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n    const CountsArrayType = countByteLength == 4 ? Uint32Array : countByteLength >= 2 ? Uint16Array : Uint8Array;\n    const counts = new CountsArrayType(vector.dictionary.length);\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      // rebind the countBy Col\n      count_by.bind(batch);\n      const keys = count_by.vector.indices;\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        let key = keys.get(index);\n        if (key !== null) {\n          counts[key]++;\n        }\n      }\n    }\n    return new dataframe_CountByResult(vector.dictionary, int_IntVector.from(counts));\n  }\n}\n/** @ignore */\nclass dataframe_CountByResult extends table_Table {\n  constructor(values, counts) {\n    const schema = new schema_Schema([new schema_Field('values', values.type), new schema_Field('counts', counts.type)]);\n    super(new recordbatch_RecordBatch(schema, counts.length, [values, counts]));\n  }\n  toJSON() {\n    const values = this.getColumnAt(0);\n    const counts = this.getColumnAt(1);\n    const result = {};\n    for (let i = -1; ++i < this.length;) {\n      result[values.get(i)] = counts.get(i);\n    }\n    return result;\n  }\n}\n/** @ignore */\nclass dataframe_FilteredDataFrame extends dataframe_DataFrame {\n  constructor(batches, predicate) {\n    super(batches);\n    this._predicate = predicate;\n  }\n  scan(next, bind) {\n    // inlined version of this:\n    // this.parent.scan((idx, columns) => {\n    //     if (this.predicate(idx, columns)) next(idx, columns);\n    // });\n    const batches = this._chunks;\n    const numBatches = batches.length;\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      const predicate = this._predicate.bind(batch);\n      let isBound = false;\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        if (predicate(index, batch)) {\n          // bind batches lazily - if predicate doesn't match anything\n          // in the batch we don't need to call bind on the batch\n          if (bind && !isBound) {\n            bind(batch);\n            isBound = true;\n          }\n          next(index, batch);\n        }\n      }\n    }\n  }\n  scanReverse(next, bind) {\n    const batches = this._chunks;\n    const numBatches = batches.length;\n    for (let batchIndex = numBatches; --batchIndex >= 0;) {\n      // load batches\n      const batch = batches[batchIndex];\n      const predicate = this._predicate.bind(batch);\n      let isBound = false;\n      // yield all indices\n      for (let index = batch.length; --index >= 0;) {\n        if (predicate(index, batch)) {\n          // bind batches lazily - if predicate doesn't match anything\n          // in the batch we don't need to call bind on the batch\n          if (bind && !isBound) {\n            bind(batch);\n            isBound = true;\n          }\n          next(index, batch);\n        }\n      }\n    }\n  }\n  count() {\n    // inlined version of this:\n    // let sum = 0;\n    // this.parent.scan((idx, columns) => {\n    //     if (this.predicate(idx, columns)) ++sum;\n    // });\n    // return sum;\n    let sum = 0;\n    const batches = this._chunks;\n    const numBatches = batches.length;\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      const predicate = this._predicate.bind(batch);\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        if (predicate(index, batch)) {\n          ++sum;\n        }\n      }\n    }\n    return sum;\n  }\n  *[Symbol.iterator]() {\n    // inlined version of this:\n    // this.parent.scan((idx, columns) => {\n    //     if (this.predicate(idx, columns)) next(idx, columns);\n    // });\n    const batches = this._chunks;\n    const numBatches = batches.length;\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      // TODO: bind batches lazily\n      // If predicate doesn't match anything in the batch we don't need\n      // to bind the callback\n      const predicate = this._predicate.bind(batch);\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        if (predicate(index, batch)) {\n          yield batch.get(index);\n        }\n      }\n    }\n  }\n  filter(predicate) {\n    return new dataframe_FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n  }\n  countBy(name) {\n    const batches = this._chunks,\n      numBatches = batches.length;\n    const count_by = typeof name === 'string' ? new Col(name) : name;\n    // Assume that all dictionary batches are deltas, which means that the\n    // last record batch has the most complete dictionary\n    count_by.bind(batches[numBatches - 1]);\n    const vector = count_by.vector;\n    if (!type_DataType.isDictionary(vector.type)) {\n      throw new Error('countBy currently only supports dictionary-encoded columns');\n    }\n    const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n    const CountsArrayType = countByteLength == 4 ? Uint32Array : countByteLength >= 2 ? Uint16Array : Uint8Array;\n    const counts = new CountsArrayType(vector.dictionary.length);\n    for (let batchIndex = -1; ++batchIndex < numBatches;) {\n      // load batches\n      const batch = batches[batchIndex];\n      const predicate = this._predicate.bind(batch);\n      // rebind the countBy Col\n      count_by.bind(batch);\n      const keys = count_by.vector.indices;\n      // yield all indices\n      for (let index = -1, numRows = batch.length; ++index < numRows;) {\n        let key = keys.get(index);\n        if (key !== null && predicate(index, batch)) {\n          counts[key]++;\n        }\n      }\n    }\n    return new dataframe_CountByResult(vector.dictionary, int_IntVector.from(counts));\n  }\n}\n// CONCATENATED MODULE: ./node_modules/apache-arrow/Arrow.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @ignore */\nconst util = {\n  ...bn_namespaceObject,\n  ...util_int_namespaceObject,\n  ...bit_namespaceObject,\n  ...math_namespaceObject,\n  ...buffer_namespaceObject,\n  ...util_vector_namespaceObject\n};\n// CONCATENATED MODULE: ./node_modules/apache-arrow/Arrow.dom.mjs\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n\n\n\n\n\n\n\nadapters.toDOMStream = toDOMStream;\nbuilder_Builder['throughDOM'] = builderThroughDOMStream;\nreader_RecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nwriter_RecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\n// CONCATENATED MODULE: ./node_modules/streamlit-component-lib/dist/ArrowTable.js\n/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar ArrowTable_ArrowTable = /** @class */function () {\n  function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n    var _this = this;\n    this.getCell = function (rowIndex, columnIndex) {\n      var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n      var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n      var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n      if (isBlankCell) {\n        var classNames = [\"blank\"];\n        if (columnIndex > 0) {\n          classNames.push(\"level\" + rowIndex);\n        }\n        return {\n          type: \"blank\",\n          classNames: classNames.join(\" \"),\n          content: \"\"\n        };\n      } else if (isColumnsCell) {\n        var dataColumnIndex = columnIndex - _this.headerColumns;\n        var classNames = [\"col_heading\", \"level\" + rowIndex, \"col\" + dataColumnIndex];\n        return {\n          type: \"columns\",\n          classNames: classNames.join(\" \"),\n          content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n        };\n      } else if (isIndexCell) {\n        var dataRowIndex = rowIndex - _this.headerRows;\n        var classNames = [\"row_heading\", \"level\" + columnIndex, \"row\" + dataRowIndex];\n        return {\n          type: \"index\",\n          id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n          classNames: classNames.join(\" \"),\n          content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n        };\n      } else {\n        var dataRowIndex = rowIndex - _this.headerRows;\n        var dataColumnIndex = columnIndex - _this.headerColumns;\n        var classNames = [\"data\", \"row\" + dataRowIndex, \"col\" + dataColumnIndex];\n        var content = _this.styler ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex) : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n        return {\n          type: \"data\",\n          id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n          classNames: classNames.join(\" \"),\n          content: content\n        };\n      }\n    };\n    this.getContent = function (table, rowIndex, columnIndex) {\n      var column = table.getColumnAt(columnIndex);\n      if (column === null) {\n        return \"\";\n      }\n      var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n      switch (columnTypeId) {\n        case Type.Timestamp:\n          {\n            return _this.nanosToDate(column.get(rowIndex));\n          }\n        default:\n          {\n            return column.get(rowIndex);\n          }\n      }\n    };\n    this.dataTable = table_Table.from(dataBuffer);\n    this.indexTable = table_Table.from(indexBuffer);\n    this.columnsTable = table_Table.from(columnsBuffer);\n    this.styler = styler ? {\n      caption: styler.caption,\n      displayValuesTable: table_Table.from(styler.displayValues),\n      styles: styler.styles,\n      uuid: styler.uuid\n    } : undefined;\n  }\n  Object.defineProperty(ArrowTable.prototype, \"rows\", {\n    get: function () {\n      return this.indexTable.length + this.columnsTable.numCols;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"columns\", {\n    get: function () {\n      return this.indexTable.numCols + this.columnsTable.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n    get: function () {\n      return this.rows - this.dataRows;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n    get: function () {\n      return this.columns - this.dataColumns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n    get: function () {\n      return this.dataTable.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n    get: function () {\n      return this.dataTable.numCols;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n    get: function () {\n      return this.styler && this.styler.uuid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"caption\", {\n    get: function () {\n      return this.styler && this.styler.caption;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"styles\", {\n    get: function () {\n      return this.styler && this.styler.styles;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"table\", {\n    get: function () {\n      return this.dataTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"index\", {\n    get: function () {\n      return this.indexTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n    get: function () {\n      return this.columnsTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Serialize arrow table.\n   */\n  ArrowTable.prototype.serialize = function () {\n    return {\n      data: this.dataTable.serialize(),\n      index: this.indexTable.serialize(),\n      columns: this.columnsTable.serialize()\n    };\n  };\n  /**\n   * Returns apache-arrow specific typeId of column.\n   */\n  ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n    return table.schema.fields[columnIndex].type.typeId;\n  };\n  ArrowTable.prototype.nanosToDate = function (nanos) {\n    return new Date(nanos / 1e6);\n  };\n  return ArrowTable;\n}();\n\n// CONCATENATED MODULE: ./node_modules/streamlit-component-lib/dist/streamlit.js\n/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = undefined && undefined.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\n\n\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n  // A component sends this message when it's ready to receive messages\n  // from Streamlit. Streamlit won't send any messages until it gets this.\n  // Data: { apiVersion: number }\n  ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n  // The component has a new widget value. Send it back to Streamlit, which\n  // will then re-run the app.\n  // Data: { value: any }\n  ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n  // The component has a new height for its iframe.\n  // Data: { height: number }\n  ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar streamlit_Streamlit = /** @class */function () {\n  function Streamlit() {}\n  /**\n   * The Streamlit component API version we're targetting.\n   * There's currently only 1!\n   */\n  Streamlit.API_VERSION = 1;\n  Streamlit.RENDER_EVENT = \"streamlit:render\";\n  /** Dispatches events received from Streamlit. */\n  Streamlit.events = new EventTarget();\n  Streamlit.registeredMessageListener = false;\n  /**\n   * Tell Streamlit that the component is ready to start receiving data.\n   * Streamlit will defer emitting RENDER events until it receives the\n   * COMPONENT_READY message.\n   */\n  Streamlit.setComponentReady = function () {\n    if (!Streamlit.registeredMessageListener) {\n      // Register for message events if we haven't already\n      window.addEventListener(\"message\", Streamlit.onMessageEvent);\n      Streamlit.registeredMessageListener = true;\n    }\n    Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n      apiVersion: Streamlit.API_VERSION\n    });\n  };\n  /**\n   * Report the component's height to Streamlit.\n   * This should be called every time the component changes its DOM - that is,\n   * when it's first loaded, and any time it updates.\n   */\n  Streamlit.setFrameHeight = function (height) {\n    if (height === undefined) {\n      // `height` is optional. If undefined, it defaults to scrollHeight,\n      // which is the entire height of the element minus its border,\n      // scrollbar, and margin.\n      height = document.body.scrollHeight;\n    }\n    if (height === Streamlit.lastFrameHeight) {\n      // Don't bother updating if our height hasn't changed.\n      return;\n    }\n    Streamlit.lastFrameHeight = height;\n    Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, {\n      height: height\n    });\n  };\n  /**\n   * Set the component's value. This value will be returned to the Python\n   * script, and the script will be re-run.\n   *\n   * For example:\n   *\n   * JavaScript:\n   * Streamlit.setComponentValue(\"ahoy!\")\n   *\n   * Python:\n   * value = st.my_component(...)\n   * st.write(value) # -> \"ahoy!\"\n   *\n   * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n   * serializable to JSON.\n   */\n  Streamlit.setComponentValue = function (value) {\n    var dataType;\n    if (value instanceof ArrowTable_ArrowTable) {\n      dataType = \"dataframe\";\n      value = value.serialize();\n    } else if (isTypedArray(value)) {\n      // All typed arrays get sent as Uint8Array, because that's what our\n      // protobuf library uses for the \"bytes\" field type.\n      dataType = \"bytes\";\n      value = new Uint8Array(value.buffer);\n    } else if (value instanceof ArrayBuffer) {\n      dataType = \"bytes\";\n      value = new Uint8Array(value);\n    } else {\n      dataType = \"json\";\n    }\n    Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n      value: value,\n      dataType: dataType\n    });\n  };\n  /** Receive a ForwardMsg from the Streamlit app */\n  Streamlit.onMessageEvent = function (event) {\n    var type = event.data[\"type\"];\n    switch (type) {\n      case Streamlit.RENDER_EVENT:\n        Streamlit.onRenderMessage(event.data);\n        break;\n    }\n  };\n  /**\n   * Handle an untyped Streamlit render event and redispatch it as a\n   * StreamlitRenderEvent.\n   */\n  Streamlit.onRenderMessage = function (data) {\n    var args = data[\"args\"];\n    if (args == null) {\n      console.error(\"Got null args in onRenderMessage. This should never happen\");\n      args = {};\n    }\n    // Parse our dataframe arguments with arrow, and merge them into our args dict\n    var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0 ? Streamlit.argsDataframeToObject(data[\"dfs\"]) : {};\n    args = __assign(__assign({}, args), dataframeArgs);\n    var disabled = Boolean(data[\"disabled\"]);\n    var theme = data[\"theme\"];\n    if (theme) {\n      _injectTheme(theme);\n    }\n    // Dispatch a render event!\n    var eventData = {\n      disabled: disabled,\n      args: args,\n      theme: theme\n    };\n    var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n      detail: eventData\n    });\n    Streamlit.events.dispatchEvent(event);\n  };\n  Streamlit.argsDataframeToObject = function (argsDataframe) {\n    var argsDataframeArrow = argsDataframe.map(function (_a) {\n      var key = _a.key,\n        value = _a.value;\n      return [key, Streamlit.toArrowTable(value)];\n    });\n    return Object.fromEntries(argsDataframeArrow);\n  };\n  Streamlit.toArrowTable = function (df) {\n    var _a = df.data,\n      data = _a.data,\n      index = _a.index,\n      columns = _a.columns,\n      styler = _a.styler;\n    return new ArrowTable_ArrowTable(data, index, columns, styler);\n  };\n  /** Post a message to the Streamlit app. */\n  Streamlit.sendBackMsg = function (type, data) {\n    window.parent.postMessage(__assign({\n      isStreamlitMessage: true,\n      type: type\n    }, data), \"*\");\n  };\n  return Streamlit;\n}();\n\nvar _injectTheme = function (theme) {\n  var style = document.createElement(\"style\");\n  document.head.appendChild(style);\n  style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n  var isBigIntArray = false;\n  try {\n    isBigIntArray = value instanceof BigInt64Array || value instanceof BigUint64Array;\n  } catch (e) {\n    // Ignore cause Safari does not support this\n    // https://caniuse.com/mdn-javascript_builtins_bigint64array\n  }\n  return value instanceof Int8Array || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int16Array || value instanceof Uint16Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Float32Array || value instanceof Float64Array || isBigIntArray;\n}\n// CONCATENATED MODULE: ./node_modules/streamlit-component-lib/dist/StreamlitReact.js\n/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\n\n\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitReact_StreamlitComponentBase = /** @class */function (_super) {\n  __extends(StreamlitComponentBase, _super);\n  function StreamlitComponentBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StreamlitComponentBase.prototype.componentDidMount = function () {\n    // After we're rendered for the first time, tell Streamlit that our height\n    // has changed.\n    streamlit_Streamlit.setFrameHeight();\n  };\n  StreamlitComponentBase.prototype.componentDidUpdate = function () {\n    // After we're updated, tell Streamlit that our height may have changed.\n    streamlit_Streamlit.setFrameHeight();\n  };\n  return StreamlitComponentBase;\n}(react_default.a.PureComponent);\n\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nfunction withStreamlitConnection(WrappedComponent) {\n  var ComponentWrapper = /** @class */function (_super) {\n    __extends(ComponentWrapper, _super);\n    function ComponentWrapper(props) {\n      var _this = _super.call(this, props) || this;\n      _this.componentDidMount = function () {\n        // Set up event listeners, and signal to Streamlit that we're ready.\n        // We won't render the component until we receive the first RENDER_EVENT.\n        streamlit_Streamlit.events.addEventListener(streamlit_Streamlit.RENDER_EVENT, _this.onRenderEvent);\n        streamlit_Streamlit.setComponentReady();\n      };\n      _this.componentDidUpdate = function () {\n        // If our child threw an error, we display it in render(). In this\n        // case, the child won't be mounted and therefore won't call\n        // `setFrameHeight` on its own. We do it here so that the rendered\n        // error will be visible.\n        if (_this.state.componentError != null) {\n          streamlit_Streamlit.setFrameHeight();\n        }\n      };\n      _this.componentWillUnmount = function () {\n        streamlit_Streamlit.events.removeEventListener(streamlit_Streamlit.RENDER_EVENT, _this.onRenderEvent);\n      };\n      /**\n       * Streamlit is telling this component to redraw.\n       * We save the render data in State, so that it can be passed to the\n       * component in our own render() function.\n       */\n      _this.onRenderEvent = function (event) {\n        // Update our state with the newest render data\n        var renderEvent = event;\n        _this.setState({\n          renderData: renderEvent.detail\n        });\n      };\n      _this.render = function () {\n        // If our wrapped component threw an error, display it.\n        if (_this.state.componentError != null) {\n          return react_default.a.createElement(\"div\", null, react_default.a.createElement(\"h1\", null, \"Component Error\"), react_default.a.createElement(\"span\", null, _this.state.componentError.message));\n        }\n        // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n        if (_this.state.renderData == null) {\n          return null;\n        }\n        return react_default.a.createElement(WrappedComponent, {\n          width: window.innerWidth,\n          disabled: _this.state.renderData.disabled,\n          args: _this.state.renderData.args,\n          theme: _this.state.renderData.theme\n        });\n      };\n      _this.state = {\n        renderData: undefined,\n        componentError: undefined\n      };\n      return _this;\n    }\n    /**\n     * Error boundary function. This will be called if our wrapped\n     * component throws an error. We store the caught error in our state,\n     * and display it in the next render().\n     */\n    ComponentWrapper.getDerivedStateFromError = function (error) {\n      return {\n        componentError: error\n      };\n    };\n    return ComponentWrapper;\n  }(react_default.a.PureComponent);\n  return hoist_non_react_statics_cjs_default()(ComponentWrapper, WrappedComponent);\n}\n// CONCATENATED MODULE: ./node_modules/streamlit-component-lib/dist/index.js\n/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar reactIs = __webpack_require__(4);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n    var keys = getOwnPropertyNames(sourceComponent);\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n  return targetComponent;\n}\nmodule.exports = hoistNonReactStatics;\n\n/***/ }),\n/* 3 */,\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(5);\n} else {}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar b = \"function\" === typeof Symbol && Symbol.for,\n  c = b ? Symbol.for(\"react.element\") : 60103,\n  d = b ? Symbol.for(\"react.portal\") : 60106,\n  e = b ? Symbol.for(\"react.fragment\") : 60107,\n  f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n  g = b ? Symbol.for(\"react.profiler\") : 60114,\n  h = b ? Symbol.for(\"react.provider\") : 60109,\n  k = b ? Symbol.for(\"react.context\") : 60110,\n  l = b ? Symbol.for(\"react.async_mode\") : 60111,\n  m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n  n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n  p = b ? Symbol.for(\"react.suspense\") : 60113,\n  q = b ? Symbol.for(\"react.suspense_list\") : 60120,\n  r = b ? Symbol.for(\"react.memo\") : 60115,\n  t = b ? Symbol.for(\"react.lazy\") : 60116,\n  v = b ? Symbol.for(\"react.block\") : 60121,\n  w = b ? Symbol.for(\"react.fundamental\") : 60117,\n  x = b ? Symbol.for(\"react.responder\") : 60118,\n  y = b ? Symbol.for(\"react.scope\") : 60119;\nfunction z(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case t:\n              case r:\n              case h:\n                return a;\n              default:\n                return u;\n            }\n        }\n      case d:\n        return u;\n    }\n  }\n}\nfunction A(a) {\n  return z(a) === m;\n}\nexports.AsyncMode = l;\nexports.ConcurrentMode = m;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = n;\nexports.Fragment = e;\nexports.Lazy = t;\nexports.Memo = r;\nexports.Portal = d;\nexports.Profiler = g;\nexports.StrictMode = f;\nexports.Suspense = p;\nexports.isAsyncMode = function (a) {\n  return A(a) || z(a) === l;\n};\nexports.isConcurrentMode = A;\nexports.isContextConsumer = function (a) {\n  return z(a) === k;\n};\nexports.isContextProvider = function (a) {\n  return z(a) === h;\n};\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\nexports.isForwardRef = function (a) {\n  return z(a) === n;\n};\nexports.isFragment = function (a) {\n  return z(a) === e;\n};\nexports.isLazy = function (a) {\n  return z(a) === t;\n};\nexports.isMemo = function (a) {\n  return z(a) === r;\n};\nexports.isPortal = function (a) {\n  return z(a) === d;\n};\nexports.isProfiler = function (a) {\n  return z(a) === g;\n};\nexports.isStrictMode = function (a) {\n  return z(a) === f;\n};\nexports.isSuspense = function (a) {\n  return z(a) === p;\n};\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n};\nexports.typeOf = z;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar l = __webpack_require__(7),\n  n = \"function\" === typeof Symbol && Symbol.for,\n  p = n ? Symbol.for(\"react.element\") : 60103,\n  q = n ? Symbol.for(\"react.portal\") : 60106,\n  r = n ? Symbol.for(\"react.fragment\") : 60107,\n  t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n  u = n ? Symbol.for(\"react.profiler\") : 60114,\n  v = n ? Symbol.for(\"react.provider\") : 60109,\n  w = n ? Symbol.for(\"react.context\") : 60110,\n  x = n ? Symbol.for(\"react.forward_ref\") : 60112,\n  y = n ? Symbol.for(\"react.suspense\") : 60113,\n  z = n ? Symbol.for(\"react.memo\") : 60115,\n  A = n ? Symbol.for(\"react.lazy\") : 60116,\n  B = \"function\" === typeof Symbol && Symbol.iterator;\nfunction C(a) {\n  for (var b = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 1; c < arguments.length; c++) b += \"&args[]=\" + encodeURIComponent(arguments[c]);\n  return \"Minified React error #\" + a + \"; visit \" + b + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\";\n}\nvar D = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  E = {};\nfunction F(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = E;\n  this.updater = c || D;\n}\nF.prototype.isReactComponent = {};\nF.prototype.setState = function (a, b) {\n  if (\"object\" !== typeof a && \"function\" !== typeof a && null != a) throw Error(C(85));\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\nF.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\nfunction G() {}\nG.prototype = F.prototype;\nfunction H(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = E;\n  this.updater = c || D;\n}\nvar I = H.prototype = new G();\nI.constructor = H;\nl(I, F.prototype);\nI.isPureReactComponent = !0;\nvar J = {\n    current: null\n  },\n  K = Object.prototype.hasOwnProperty,\n  L = {\n    key: !0,\n    ref: !0,\n    __self: !0,\n    __source: !0\n  };\nfunction M(a, b, c) {\n  var e,\n    d = {},\n    g = null,\n    k = null;\n  if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);\n  var f = arguments.length - 2;\n  if (1 === f) d.children = c;else if (1 < f) {\n    for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];\n    d.children = h;\n  }\n  if (a && a.defaultProps) for (e in f = a.defaultProps, f) void 0 === d[e] && (d[e] = f[e]);\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: k,\n    props: d,\n    _owner: J.current\n  };\n}\nfunction N(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\nfunction O(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\nvar P = /\\/+/g,\n  Q = [];\nfunction R(a, b, c, e) {\n  if (Q.length) {\n    var d = Q.pop();\n    d.result = a;\n    d.keyPrefix = b;\n    d.func = c;\n    d.context = e;\n    d.count = 0;\n    return d;\n  }\n  return {\n    result: a,\n    keyPrefix: b,\n    func: c,\n    context: e,\n    count: 0\n  };\n}\nfunction S(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > Q.length && Q.push(a);\n}\nfunction T(a, b, c, e) {\n  var d = typeof a;\n  if (\"undefined\" === d || \"boolean\" === d) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (d) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n  }\n  if (g) return c(e, a, \"\" === b ? \".\" + U(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {\n    d = a[k];\n    var f = b + U(d, k);\n    g += T(d, f, c, e);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = B && a[B] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) d = d.value, f = b + U(d, k++), g += T(d, f, c, e);else if (\"object\" === d) throw c = \"\" + a, Error(C(31, \"[object Object]\" === c ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : c, \"\"));\n  return g;\n}\nfunction V(a, b, c) {\n  return null == a ? 0 : T(a, \"\", b, c);\n}\nfunction U(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\nfunction W(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\nfunction aa(a, b, c) {\n  var e = a.result,\n    d = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? X(a, e, c, function (a) {\n    return a;\n  }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(P, \"$&/\") + \"/\") + c)), e.push(a));\n}\nfunction X(a, b, c, e, d) {\n  var g = \"\";\n  null != c && (g = (\"\" + c).replace(P, \"$&/\") + \"/\");\n  b = R(b, g, e, d);\n  V(a, aa, b);\n  S(b);\n}\nvar Y = {\n  current: null\n};\nfunction Z() {\n  var a = Y.current;\n  if (null === a) throw Error(C(321));\n  return a;\n}\nvar ba = {\n  ReactCurrentDispatcher: Y,\n  ReactCurrentBatchConfig: {\n    suspense: null\n  },\n  ReactCurrentOwner: J,\n  IsSomeRendererActing: {\n    current: !1\n  },\n  assign: l\n};\nexports.Children = {\n  map: function (a, b, c) {\n    if (null == a) return a;\n    var e = [];\n    X(a, e, null, b, c);\n    return e;\n  },\n  forEach: function (a, b, c) {\n    if (null == a) return a;\n    b = R(null, null, b, c);\n    V(a, W, b);\n    S(b);\n  },\n  count: function (a) {\n    return V(a, function () {\n      return null;\n    }, null);\n  },\n  toArray: function (a) {\n    var b = [];\n    X(a, b, null, function (a) {\n      return a;\n    });\n    return b;\n  },\n  only: function (a) {\n    if (!O(a)) throw Error(C(143));\n    return a;\n  }\n};\nexports.Component = F;\nexports.Fragment = r;\nexports.Profiler = u;\nexports.PureComponent = H;\nexports.StrictMode = t;\nexports.Suspense = y;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;\nexports.cloneElement = function (a, b, c) {\n  if (null === a || void 0 === a) throw Error(C(267, a));\n  var e = l({}, a.props),\n    d = a.key,\n    g = a.ref,\n    k = a._owner;\n  if (null != b) {\n    void 0 !== b.ref && (g = b.ref, k = J.current);\n    void 0 !== b.key && (d = \"\" + b.key);\n    if (a.type && a.type.defaultProps) var f = a.type.defaultProps;\n    for (h in b) K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);\n  }\n  var h = arguments.length - 2;\n  if (1 === h) e.children = c;else if (1 < h) {\n    f = Array(h);\n    for (var m = 0; m < h; m++) f[m] = arguments[m + 2];\n    e.children = f;\n  }\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: d,\n    ref: g,\n    props: e,\n    _owner: k\n  };\n};\nexports.createContext = function (a, b) {\n  void 0 === b && (b = null);\n  a = {\n    $$typeof: w,\n    _calculateChangedBits: b,\n    _currentValue: a,\n    _currentValue2: a,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  a.Provider = {\n    $$typeof: v,\n    _context: a\n  };\n  return a.Consumer = a;\n};\nexports.createElement = M;\nexports.createFactory = function (a) {\n  var b = M.bind(null, a);\n  b.type = a;\n  return b;\n};\nexports.createRef = function () {\n  return {\n    current: null\n  };\n};\nexports.forwardRef = function (a) {\n  return {\n    $$typeof: x,\n    render: a\n  };\n};\nexports.isValidElement = O;\nexports.lazy = function (a) {\n  return {\n    $$typeof: A,\n    _ctor: a,\n    _status: -1,\n    _result: null\n  };\n};\nexports.memo = function (a, b) {\n  return {\n    $$typeof: z,\n    type: a,\n    compare: void 0 === b ? null : b\n  };\n};\nexports.useCallback = function (a, b) {\n  return Z().useCallback(a, b);\n};\nexports.useContext = function (a, b) {\n  return Z().useContext(a, b);\n};\nexports.useDebugValue = function () {};\nexports.useEffect = function (a, b) {\n  return Z().useEffect(a, b);\n};\nexports.useImperativeHandle = function (a, b, c) {\n  return Z().useImperativeHandle(a, b, c);\n};\nexports.useLayoutEffect = function (a, b) {\n  return Z().useLayoutEffect(a, b);\n};\nexports.useMemo = function (a, b) {\n  return Z().useMemo(a, b);\n};\nexports.useReducer = function (a, b, c) {\n  return Z().useReducer(a, b, c);\n};\nexports.useRef = function (a) {\n  return Z().useRef(a);\n};\nexports.useState = function (a) {\n  return Z().useState(a);\n};\nexports.version = \"16.14.0\";\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n  return Object(val);\n}\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    }\n\n    // Detect buggy property enumeration order in older V8 versions.\n\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n    test1[5] = 'de';\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    }\n\n    // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    var test2 = {};\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n    if (order2.join('') !== '0123456789') {\n      return false;\n    }\n\n    // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n};\n\n/***/ })\n]]);","inputSourceMap":{"version":3,"sources":["D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/react/index.js","../src/event.mjs","../src/event-target.mjs","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/flatbuffers/js/flatbuffers.mjs","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","util/utf8.ts","io/interfaces.ts","util/compat.ts","util/buffer.ts","io/adapters.ts","vector.ts","fb/Schema.ts","fb/Message.ts","enum.ts","util/bit.ts","visitor.ts","visitor/typecomparator.ts","type.ts","data.ts","util/pretty.ts","builder/valid.ts","builder/buffer.ts","builder.ts","builder/bool.ts","builder/null.ts","builder/date.ts","builder/decimal.ts","builder/dictionary.ts","builder/fixedsizebinary.ts","util/math.ts","builder/float.ts","util/bn.ts","builder/int.ts","builder/time.ts","builder/timestamp.ts","builder/interval.ts","builder/binary.ts","builder/utf8.ts","builder/run.ts","vector/row.ts","util/vector.ts","vector/chunked.ts","column.ts","util/args.ts","schema.ts","builder/list.ts","builder/fixedsizelist.ts","builder/map.ts","builder/struct.ts","builder/union.ts","visitor/set.ts","visitor/builderctor.ts","builder/index.ts","fb/File.ts","ipc/metadata/file.ts","io/stream.ts","io/file.ts","util/int.ts","visitor/vectorloader.ts","visitor/typeassembler.ts","ipc/metadata/json.ts","ipc/metadata/message.ts","ipc/message.ts","visitor/vectorassembler.ts","visitor/jsontypeassembler.ts","visitor/jsonvectorassembler.ts","ipc/writer.ts","util/recordbatch.ts","vector/base.ts","vector/binary.ts","vector/bool.ts","vector/date.ts","vector/decimal.ts","vector/dictionary.ts","vector/fixedsizebinary.ts","vector/fixedsizelist.ts","vector/float.ts","vector/interval.ts","vector/int.ts","vector/list.ts","vector/map.ts","vector/null.ts","vector/struct.ts","vector/timestamp.ts","vector/time.ts","vector/union.ts","vector/utf8.ts","util/fn.ts","visitor/get.ts","visitor/indexof.ts","visitor/iterator.ts","visitor/toarray.ts","visitor/bytewidth.ts","visitor/vectorctor.ts","vector/index.ts","table.ts","recordbatch.ts","ipc/reader.ts","io/whatwg/iterable.ts","io/whatwg/builder.ts","io/whatwg/reader.ts","io/whatwg/writer.ts","compute/predicate.ts","compute/dataframe.ts","Arrow.ts","Arrow.dom.ts","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/streamlit-component-lib/dist/ArrowTable.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/streamlit-component-lib/dist/streamlit.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/streamlit-component-lib/dist/StreamlitReact.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/streamlit-component-lib/dist/index.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/react-is/index.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/react-is/cjs/react-is.production.min.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/react/cjs/react.production.min.js","D:/Download/streamlit-cookies-manager-0.2.0/st-cookies-manager-0.2.0/st_cookies_manager/node_modules/object-assign/index.js"],"names":["process","module","exports","require","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","create","ZERO","prototype","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","i","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","set","startObject","numfields","endObject","vtableloc","trimmed_size","standard_fields","len","existing_vtable","vt1","outer_loop","length","vt2","readInt16","j","push","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","ok","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","a","b","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","c","d","__indirect","__vector","__vector_len","__has_identifier","ident","inRange","min","max","ToDictionary","o","undefined","Object","TypeError","stringToCodePoints","string","n","u","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","slice","call","endOfStream","read","shift","prepend","token","Array","isArray","unshift","pop","finished","decoderError","fatal","opt_code_point","Decoder","handler","stream","bite","Encoder","code_point","DEFAULT_ENCODING","TextDecoder","encoding","options","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","defineProperty","decode","input","ArrayBuffer","byteOffset","byteLength","UTF8Decoder","input_stream","apply","indexOf","TextEncoder","_encoder","_options","encode","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","count","temp","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","type","join","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","id","uuid","indexTable","displayValuesTable","dataTable","column","getColumnAt","columnTypeId","getColumnTypeId","Type","Timestamp","nanosToDate","get","from","caption","displayValues","styles","numCols","enumerable","configurable","rows","dataRows","columns","dataColumns","serialize","data","index","schema","fields","typeId","nanos","Date","__assign","assign","arguments","p","hasOwnProperty","ComponentMessageType","Streamlit","API_VERSION","RENDER_EVENT","events","EventTarget","registeredMessageListener","setComponentReady","window","addEventListener","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","body","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isTypedArray","SET_COMPONENT_VALUE","event","onRenderMessage","args","console","error","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","CustomEvent","detail","dispatchEvent","argsDataframe","argsDataframeArrow","map","_a","key","toArrowTable","fromEntries","df","parent","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","isBigIntArray","BigInt64Array","BigUint64Array","e","Int8Array","Uint8ClampedArray","Int16Array","Uint32Array","__extends","extendStatics","setPrototypeOf","__proto__","__","constructor","StreamlitComponentBase","_super","componentDidMount","componentDidUpdate","React","PureComponent","withStreamlitConnection","WrappedComponent","ComponentWrapper","props","onRenderEvent","state","componentError","componentWillUnmount","removeEventListener","renderEvent","setState","renderData","render","message","width","innerWidth","getDerivedStateFromError","hoistNonReactStatics","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","name","caller","callee","arity","FORWARD_REF_STATICS","MEMO_STATICS","compare","TYPE_STATICS","ForwardRef","Memo","getStatics","component","isMemo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","descriptor","Symbol","for","f","g","h","k","l","m","q","r","v","w","x","y","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","iterator","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","context","refs","updater","isReactComponent","forceUpdate","G","H","I","isPureReactComponent","J","current","K","L","ref","__self","__source","M","children","_owner","N","O","escape","replace","P","Q","R","keyPrefix","func","S","T","U","next","done","V","toString","W","aa","X","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","forEach","toArray","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","bind","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","memo","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","propIsEnumerable","propertyIsEnumerable","toObject","val","shouldUseNative","test1","test2","order2","test3","split","letter","err","target","source","to","symbols"],"mappings":";;;;;AAAa;;AAEb,IAAIA,IAAqC,EAAE;EACzCC,MAAM,CAACC,OAAO,GAAGC,mBAAO,CAAC,CAA+B,CAAC;AAC3D,CAAC,MAAM,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJP;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,WAAW,GAAG,IAAI,OAAO;;;;;;;AAO/B,MAAM,QAAQ,GAAG,IAAI,OAAO;;;;;;;;AAQ5B,SAAS,EAAE,CAAC,KAAK,EAAE;EACf,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK;EAClC,OAAO,CAAC,MAAM,CACV,IAAI,IAAI,IAAI,EACZ,6CAA6C,EAC7C,K,CACH;EACD,OAAO,IAAI;AACd;;;;;;AAMD,SAAS,aAAa,CAAC,IAAI,EAAE;EACzB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;IAC9B,IACI,OAAO,OAAO,KAAK,WAAW,IAC9B,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EACrC;MACE,OAAO,CAAC,KAAK,CACT,oEAAoE,EACpE,IAAI,CAAC,e,CACR;IACJ;IACD;EACH;EACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;IACxB;EACH;EAED,IAAI,CAAC,QAAQ,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,UAAU,EAAE;IACjD,IAAI,CAAC,KAAK,CAAC,cAAc;EAC5B;AACJ;;;;;;;;;;;;AAYD,SAAS,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE;EAC/B,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE;IAClB,WAAW;IACX,KAAK;IACL,UAAU,EAAE,CAAC;IACb,aAAa,EAAE,WAAW;IAC1B,QAAQ,EAAE,KAAK;IACf,OAAO,EAAE,KAAK;IACd,gBAAgB,EAAE,KAAK;IACvB,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG;GACzC;;;EAGD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;IAAE,KAAK,EAAE,KAAK;IAAE,UAAU,EAAE;EAAI,CAAE;;;EAG3E,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;EAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC;IAClB,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE;MAChB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,wBAAwB,CAAC,GAAG,CAAC;IACjE;EACJ;AACJ;;;AAGD,KAAK,CAAC,SAAS,GAAG;;;;;EAKd,IAAI,IAAI,GAAG;IACP,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI;GAC7B;;;;;EAMD,IAAI,MAAM,GAAG;IACT,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW;GAC9B;;;;;EAMD,IAAI,aAAa,GAAG;IAChB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,aAAa;GAChC;;;;EAKD,YAAY,GAAG;IACX,MAAM,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,aAAa,IAAI,IAAI,EAAE;MACvB,OAAO,EAAE;IACZ;IACD,OAAO,CAAC,aAAa,CAAC;GACzB;;;;;EAMD,IAAI,IAAI,GAAG;IACP,OAAO,CAAC;GACX;;;;;EAMD,IAAI,eAAe,GAAG;IAClB,OAAO,CAAC;GACX;;;;;EAMD,IAAI,SAAS,GAAG;IACZ,OAAO,CAAC;GACX;;;;;EAMD,IAAI,cAAc,GAAG;IACjB,OAAO,CAAC;GACX;;;;;EAMD,IAAI,UAAU,GAAG;IACb,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU;GAC7B;;;;;EAMD,eAAe,GAAG;IACd,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI;IAEpB,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,KAAK,UAAU,EAAE;MAClD,IAAI,CAAC,KAAK,CAAC,eAAe;IAC7B;GACJ;;;;;EAMD,wBAAwB,GAAG;IACvB,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI;IAEpB,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,CAAC,gBAAgB,GAAG;IACxB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,wBAAwB,KAAK,UAAU,EAAE;MAC3D,IAAI,CAAC,KAAK,CAAC,wBAAwB;IACtC;GACJ;;;;;EAMD,IAAI,OAAO,GAAG;IACV,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;GACzC;;;;;EAMD,IAAI,UAAU,GAAG;IACb,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;GAC5C;;;;;EAMD,cAAc,GAAG;IACb,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC;GACzB;;;;;EAMD,IAAI,gBAAgB,GAAG;IACnB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ;GAC3B;;;;;EAMD,IAAI,QAAQ,GAAG;IACX,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;GAC1C;;;;;EAMD,IAAI,SAAS,GAAG;IACZ,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS;GAC5B;;;;;;EAOD,IAAI,UAAU,GAAG;IACb,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW;GAC9B;;;;;;EAOD,IAAI,YAAY,GAAG;IACf,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO;GAC1B;EACD,IAAI,YAAY,CAAC,KAAK,EAAE;IACpB,IAAI,CAAC,KAAK,EAAE;MACR;IACH;IACD,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI;IAEpB,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,SAAS,EAAE;MAC9C,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG;IAC7B;GACJ;;;;;;EAOD,IAAI,WAAW,GAAG;IACd,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ;GAC5B;EACD,IAAI,WAAW,CAAC,KAAK,EAAE;IACnB,IAAI,CAAC,KAAK,EAAE;MACR,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC;IACzB;GACJ;;;;;;;;EASD,SAAS,GAAG;;;CAGf;;;AAGD,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,EAAE;EAClD,KAAK,EAAE,KAAK;EACZ,YAAY,EAAE,IAAI;EAClB,QAAQ,EAAE;CACb;;;AAGD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE;EACtE,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,SAAS;;;EAG7D,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK;AAC7C;;;;;;;;AAQD,SAAS,wBAAwB,CAAC,GAAG,EAAE;EACnC,OAAO;IACH,GAAG,GAAG;MACF,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;KAC7B;IACD,GAAG,CAAC,KAAK,EAAE;MACP,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;KACzB;IACD,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE;GACf;AACJ;;;;;;;;AAQD,SAAS,oBAAoB,CAAC,GAAG,EAAE;EAC/B,OAAO;IACH,KAAK,GAAG;MACJ,MAAM,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;MACvB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC;KAC5C;IACD,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE;GACf;AACJ;;;;;;;;;AASD,SAAS,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE;EACrC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;EAC9B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACnB,OAAO,SAAS;EACnB;;;EAGD,SAAS,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE;IACrC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK;EAC1C;EAED,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;IACvD,WAAW,EAAE;MAAE,KAAK,EAAE,WAAW;MAAE,YAAY,EAAE,IAAI;MAAE,QAAQ,EAAE;IAAI;GACxE;;;EAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC;IAClB,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE;MAC/B,MAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG;MAC7D,MAAM,MAAM,GAAG,OAAO,UAAU,CAAC,KAAK,KAAK;MAC3C,MAAM,CAAC,cAAc,CACjB,WAAW,CAAC,SAAS,EACrB,GAAG,EACH,MAAM,GACA,oBAAoB,CAAC,GAAG,CAAC,GACzB,wBAAwB,CAAC,GAAG,C,CACrC;IACJ;EACJ;EAED,OAAO,WAAW;AACrB;;;;;;;;AAQD,SAAS,UAAU,CAAC,KAAK,EAAE;EACvB,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,MAAM,CAAC,SAAS,EAAE;IAC7C,OAAO,KAAK;EACf;EAED,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK;EAChC,IAAI,OAAO,IAAI,IAAI,EAAE;IACjB,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK;IACvE,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO;EAC9B;EACD,OAAO,OAAO;AACjB;;;;;;;;;AASM,SAAS,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE;EAC1C,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC;EACvD,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;AACzC;;;;;;;;AAQM,SAAS,SAAS,CAAC,KAAK,EAAE;EAC7B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,gBAAgB;AACpC;;;;;;;;;AASM,SAAS,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE;EAC7C,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG;AAC1B;;;;;;;;;AASM,SAAS,gBAAgB,CAAC,KAAK,EAAE,aAAa,EAAE;EACnD,EAAE,CAAC,KAAK,CAAC,CAAC,aAAa,GAAG;AAC7B;;;;;;;;;AASM,SAAS,kBAAkB,CAAC,KAAK,EAAE,eAAe,EAAE;EACvD,EAAE,CAAC,KAAK,CAAC,CAAC,eAAe,GAAG;AAC/B;;ACtdD;;;;;;;;;;;;;;AAcA,MAAM,YAAY,GAAG,IAAI,OAAO;;;AAGhC,MAAM,OAAO,GAAG;AAChB,MAAM,MAAM,GAAG;AACf,MAAM,SAAS,GAAG;;;;;;;AAOlB,SAAS,QAAQ,CAAC,CAAC,EAAE;EACjB,OAAO,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ;AAC7C;;;;;;;;AAQD,SAAS,YAAY,CAAC,WAAW,EAAE;EAC/B,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,WAAW;EAC9C,IAAI,SAAS,IAAI,IAAI,EAAE;IACnB,MAAM,IAAI,SAAS,CACf,kE,CACH;EACJ;EACD,OAAO,SAAS;AACnB;;;;;;;;AAQD,SAAS,8BAA8B,CAAC,SAAS,EAAE;EAC/C,OAAO;IACH,GAAG,GAAG;MACF,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI;MACnC,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS;MAClC,OAAO,IAAI,IAAI,IAAI,EAAE;QACjB,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;UACjC,OAAO,IAAI,CAAC,QAAQ;QACvB;QACD,IAAI,GAAG,IAAI,CAAC;MACf;MACD,OAAO,IAAI;KACd;IAED,GAAG,CAAC,QAAQ,EAAE;MACV,IAAI,OAAO,QAAQ,KAAK,UAAU,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACvD,QAAQ,GAAG,KAAI;MAClB;MACD,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI;;;MAGnC,IAAI,IAAI,GAAG;MACX,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS;MAClC,OAAO,IAAI,IAAI,IAAI,EAAE;QACjB,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;;UAEjC,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;WACpB,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI;WACrC,MAAM;YACH,SAAS,CAAC,MAAM,CAAC,SAAS;UAC7B;SACJ,MAAM;UACH,IAAI,GAAG;QACV;QAED,IAAI,GAAG,IAAI,CAAC;MACf;;;MAGD,IAAI,QAAQ,KAAK,IAAI,EAAE;QACnB,MAAM,OAAO,GAAG;UACZ,QAAQ;UACR,YAAY,EAAE,SAAS;UACvB,OAAO,EAAE,KAAK;UACd,IAAI,EAAE,KAAK;UACX,IAAI,EAAE;SACT;QACD,IAAI,IAAI,KAAK,IAAI,EAAE;UACf,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO;SACnC,MAAM;UACH,IAAI,CAAC,IAAI,GAAG;QACf;MACJ;KACJ;IACD,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE;GACf;AACJ;;;;;;;;AAQD,SAAS,oBAAoB,CAAC,oBAAoB,EAAE,SAAS,EAAE;EAC3D,MAAM,CAAC,cAAc,CACjB,oBAAoB,cACf,SAAS,GACd,8BAA8B,CAAC,SAAS,C,CAC3C;AACJ;;;;;;;;AAQD,SAAS,uBAAuB,CAAC,UAAU,EAAE;;EAEzC,SAAS,iBAAiB,GAAG;IACzB,WAAW,CAAC,IAAI,CAAC,IAAI;EACxB;EAED,iBAAiB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE;IAC/D,WAAW,EAAE;MACT,KAAK,EAAE,iBAAiB;MACxB,YAAY,EAAE,IAAI;MAClB,QAAQ,EAAE;IACb;GACJ;EAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACxC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;EAClE;EAED,OAAO,iBAAiB;AAC3B;;;;;;;;;;;;;;;AAeD,SAAS,WAAW,GAAG;;EAEnB,IAAI,IAAI,YAAY,WAAW,EAAE;IAC7B,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE;IAChC;EACH;EACD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;IACvD,OAAO,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/C;EACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACtB,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM;IACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;MACvC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IACzB;IACD,OAAO,uBAAuB,CAAC,KAAK,CAAC;EACxC;EACD,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC;;AAE3D;;;AAGD,WAAW,CAAC,SAAS,GAAG;;;;;;;;EAQpB,gBAAgB,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC3C,IAAI,QAAQ,IAAI,IAAI,EAAE;MAClB;IACH;IACD,IAAI,OAAO,QAAQ,KAAK,UAAU,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACvD,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC;IACvE;IAED,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI;IACnC,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO;IACrC,MAAM,OAAO,GAAG,YAAY,GACtB,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GACxB,OAAO,CAAC,OAAO;IACrB,MAAM,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG;IACzC,MAAM,OAAO,GAAG;MACZ,QAAQ;MACR,YAAY;MACZ,OAAO,EAAE,YAAY,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAI,EAAE,YAAY,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;MAC3C,IAAI,EAAE;KACT;;;IAGD,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS;IAClC,IAAI,IAAI,KAAK,SAAS,EAAE;MACpB,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO;MAChC;IACH;;;IAGD,IAAI,IAAI,GAAG;IACX,OAAO,IAAI,IAAI,IAAI,EAAE;MACjB,IACI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAC1B,IAAI,CAAC,YAAY,KAAK,YAAY,EACpC;;QAEE;MACH;MACD,IAAI,GAAG;MACP,IAAI,GAAG,IAAI,CAAC;IACf;;;IAGD,IAAI,CAAC,IAAI,GAAG;GACf;;;;;;;;EASD,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC9C,IAAI,QAAQ,IAAI,IAAI,EAAE;MAClB;IACH;IAED,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI;IACnC,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,GAC3B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GACxB,OAAO,CAAC,OAAO;IACrB,MAAM,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG;IAEzC,IAAI,IAAI,GAAG;IACX,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS;IAClC,OAAO,IAAI,IAAI,IAAI,EAAE;MACjB,IACI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAC1B,IAAI,CAAC,YAAY,KAAK,YAAY,EACpC;QACE,IAAI,IAAI,KAAK,IAAI,EAAE;UACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;UAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI;SACrC,MAAM;UACH,SAAS,CAAC,MAAM,CAAC,SAAS;QAC7B;QACD;MACH;MAED,IAAI,GAAG;MACP,IAAI,GAAG,IAAI,CAAC;IACf;GACJ;;;;;;EAOD,aAAa,CAAC,KAAK,EAAE;IACjB,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;MACjD,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC;IAC1D;;;IAGD,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI;IACnC,MAAM,SAAS,GAAG,KAAK,CAAC;IACxB,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS;IAClC,IAAI,IAAI,IAAI,IAAI,EAAE;MACd,OAAO,IAAI;IACd;;;IAGD,MAAM,YAAY,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK;;;;IAI1C,IAAI,IAAI,GAAG;IACX,OAAO,IAAI,IAAI,IAAI,EAAE;;MAEjB,IAAI,IAAI,CAAC,IAAI,EAAE;QACX,IAAI,IAAI,KAAK,IAAI,EAAE;UACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;UAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI;SACrC,MAAM;UACH,SAAS,CAAC,MAAM,CAAC,SAAS;QAC7B;OACJ,MAAM;QACH,IAAI,GAAG;MACV;;;MAGD,kBAAkB,CACd,YAAY,EACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,I,CAClC;MACD,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;QACrC,IAAI;UACA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY;SACxC,CAAC,OAAO,GAAG,EAAE;UACV,IACI,OAAO,OAAO,KAAK,WAAW,IAC9B,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EACrC;YACE,OAAO,CAAC,KAAK,CAAC,GAAG;UACpB;QACJ;OACJ,MAAM,IACH,IAAI,CAAC,YAAY,KAAK,SAAS,IAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,UAAU,EACjD;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY;MACzC;;;MAGD,IAAI,SAAS,CAAC,YAAY,CAAC,EAAE;QACzB;MACH;MAED,IAAI,GAAG,IAAI,CAAC;IACf;IACD,kBAAkB,CAAC,YAAY,EAAE,IAAI;IACrC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC7B,gBAAgB,CAAC,YAAY,EAAE,IAAI;IAEnC,OAAO,CAAC,YAAY,CAAC,gBAAgB;EACxC;CACJ;;;AAGD,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE;EACxD,KAAK,EAAE,WAAW;EAClB,YAAY,EAAE,IAAI;EAClB,QAAQ,EAAE;CACb;;;AAGD,IACI,OAAO,MAAM,KAAK,WAAW,IAC7B,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,EAC3C;EACE,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,SAAS;AAC5E;;;;AC5XD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,CAAC,CAAC;;AAEpB;AACA;AACA;AACAA,WAAW,CAACC,MAAM;;AAElB;AACA;AACA;AACA;AACA;AACA;AACAD,WAAW,CAACE,KAAK;;AAEjB;AACA;AACA;AACA;AACAF,WAAW,CAACG,YAAY,GAAG,CAAC;;AAE5B;AACA;AACA;AACA;AACAH,WAAW,CAACI,UAAU,GAAG,CAAC;;AAE1B;AACA;AACA;AACA;AACAJ,WAAW,CAACK,sBAAsB,GAAG,CAAC;;AAEtC;AACA;AACA;AACAL,WAAW,CAACM,QAAQ,GAAG;EACrBC,UAAU,EAAE,CAAC;EACbC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACAR,WAAW,CAACS,KAAK,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACAV,WAAW,CAACW,OAAO,GAAG,IAAIC,YAAY,CAACZ,WAAW,CAACS,KAAK,CAACI,MAAM,CAAC;;AAEhE;AACA;AACA;AACA;AACAb,WAAW,CAACc,OAAO,GAAG,IAAIC,YAAY,CAACf,WAAW,CAACS,KAAK,CAACI,MAAM,CAAC;;AAEhE;AACA;AACA;AACA;AACAb,WAAW,CAACgB,cAAc,GAAG,IAAIC,WAAW,CAAC,IAAIC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;;AAEpF;;AAEA;AACA;AACA;AACA;AACA;AACAb,WAAW,CAACmB,IAAI,GAAG,UAASC,GAAG,EAAEC,IAAI,EAAE;EACrC;AACF;AACA;AACA;EACE,IAAI,CAACD,GAAG,GAAGA,GAAG,GAAG,CAAC;;EAElB;AACF;AACA;AACA;EACE,IAAI,CAACC,IAAI,GAAGA,IAAI,GAAG,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACArB,WAAW,CAACmB,IAAI,CAACG,MAAM,GAAG,UAASF,GAAG,EAAEC,IAAI,EAAE;EAC5C;EACA,OAAOD,GAAG,IAAI,CAAC,IAAIC,IAAI,IAAI,CAAC,GAAGrB,WAAW,CAACmB,IAAI,CAACI,IAAI,GAAG,IAAIvB,WAAW,CAACmB,IAAI,CAACC,GAAG,EAAEC,IAAI,CAAC;AACxF,CAAC;;AAED;AACA;AACA;AACArB,WAAW,CAACmB,IAAI,CAACK,SAAS,CAACC,SAAS,GAAG,YAAW;EAChD,OAAO,CAAC,IAAI,CAACL,GAAG,KAAK,CAAC,IAAI,IAAI,CAACC,IAAI,GAAG,WAAW;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACArB,WAAW,CAACmB,IAAI,CAACK,SAAS,CAACE,MAAM,GAAG,UAASC,KAAK,EAAE;EAClD,OAAO,IAAI,CAACP,GAAG,IAAIO,KAAK,CAACP,GAAG,IAAI,IAAI,CAACC,IAAI,IAAIM,KAAK,CAACN,IAAI;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACArB,WAAW,CAACmB,IAAI,CAACI,IAAI,GAAG,IAAIvB,WAAW,CAACmB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,WAAW,CAAC4B,OAAO,GAAG,UAASC,gBAAgB,EAAE;EAC/C,IAAI,CAACA,gBAAgB,EAAE;IACrB,IAAIC,YAAY,GAAG,IAAI;EACzB,CAAC,MAAM;IACL,IAAIA,YAAY,GAAGD,gBAAgB;EACrC;;EAEA;AACF;AACA;AACA;EACE,IAAI,CAACE,EAAE,GAAG/B,WAAW,CAACgC,UAAU,CAACC,QAAQ,CAACH,YAAY,CAAC;;EAEvD;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACI,KAAK,GAAGJ,YAAY;;EAEzB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACK,QAAQ,GAAG,CAAC;;EAEjB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAG,IAAI;;EAElB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAG,CAAC;;EAEtB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,QAAQ,GAAG,KAAK;;EAErB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,YAAY,GAAG,CAAC;;EAErB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,OAAO,GAAG,EAAE;;EAEjB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,gBAAgB,GAAG,CAAC;;EAEzB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,KAAK;AAC7B,CAAC;AAED1C,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACmB,KAAK,GAAG,YAAW;EAC/C,IAAI,CAACZ,EAAE,CAACY,KAAK,CAAC,CAAC;EACf,IAAI,CAACT,KAAK,GAAG,IAAI,CAACH,EAAE,CAACa,QAAQ,CAAC,CAAC;EAC/B,IAAI,CAACT,QAAQ,GAAG,CAAC;EACjB,IAAI,CAACC,MAAM,GAAG,IAAI;EAClB,IAAI,CAACC,aAAa,GAAG,CAAC;EACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,YAAY,GAAG,CAAC;EACrB,IAAI,CAACC,OAAO,GAAG,EAAE;EACjB,IAAI,CAACC,gBAAgB,GAAG,CAAC;EACzB,IAAI,CAACC,cAAc,GAAG,KAAK;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA1C,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACqB,aAAa,GAAG,UAASA,aAAa,EAAE;EACpE,IAAI,CAACH,cAAc,GAAGG,aAAa;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA7C,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACsB,UAAU,GAAG,YAAW;EACpD,OAAO,IAAI,CAACf,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA/B,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACuB,YAAY,GAAG,YAAW;EACtD,OAAO,IAAI,CAAChB,EAAE,CAACiB,KAAK,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAClB,EAAE,CAACmB,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACnB,EAAE,CAACmB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;AACzF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnD,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC4B,IAAI,GAAG,UAASC,IAAI,EAAEC,gBAAgB,EAAE;EACpE;EACA,IAAID,IAAI,GAAG,IAAI,CAAClB,QAAQ,EAAE;IACxB,IAAI,CAACA,QAAQ,GAAGkB,IAAI;EACtB;;EAEA;EACA;EACA,IAAIE,UAAU,GAAK,EAAE,IAAI,CAACxB,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACV,KAAK,GAAGoB,gBAAgB,CAAC,GAAI,CAAC,GAAKD,IAAI,GAAG,CAAE;;EAE3F;EACA,OAAO,IAAI,CAACnB,KAAK,GAAGqB,UAAU,GAAGF,IAAI,GAAGC,gBAAgB,EAAE;IACxD,IAAIE,YAAY,GAAG,IAAI,CAACzB,EAAE,CAACa,QAAQ,CAAC,CAAC;IACrC,IAAI,CAACb,EAAE,GAAG/B,WAAW,CAAC4B,OAAO,CAAC6B,cAAc,CAAC,IAAI,CAAC1B,EAAE,CAAC;IACrD,IAAI,CAACG,KAAK,IAAI,IAAI,CAACH,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAGY,YAAY;EACjD;EAEA,IAAI,CAACE,GAAG,CAACH,UAAU,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACAvD,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACkC,GAAG,GAAG,UAASC,SAAS,EAAE;EACtD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;IAClC,IAAI,CAAC7B,EAAE,CAAC8B,SAAS,CAAC,EAAE,IAAI,CAAC3B,KAAK,EAAE,CAAC,CAAC;EACpC;AACF,CAAC;;AAED;AACA;AACA;AACAlC,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACqC,SAAS,GAAG,UAASC,KAAK,EAAE;EACxD,IAAI,CAAC/B,EAAE,CAAC8B,SAAS,CAAC,IAAI,CAAC3B,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACuC,UAAU,GAAG,UAASD,KAAK,EAAE;EACzD,IAAI,CAAC/B,EAAE,CAACgC,UAAU,CAAC,IAAI,CAAC7B,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACwC,UAAU,GAAG,UAASF,KAAK,EAAE;EACzD,IAAI,CAAC/B,EAAE,CAACiC,UAAU,CAAC,IAAI,CAAC9B,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACyC,UAAU,GAAG,UAASH,KAAK,EAAE;EACzD,IAAI,CAAC/B,EAAE,CAACkC,UAAU,CAAC,IAAI,CAAC/B,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC0C,YAAY,GAAG,UAASJ,KAAK,EAAE;EAC3D,IAAI,CAAC/B,EAAE,CAACmC,YAAY,CAAC,IAAI,CAAChC,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC9C,CAAC;;AAED;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC2C,YAAY,GAAG,UAASL,KAAK,EAAE;EAC3D,IAAI,CAAC/B,EAAE,CAACoC,YAAY,CAAC,IAAI,CAACjC,KAAK,IAAI,CAAC,EAAE4B,KAAK,CAAC;AAC9C,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC4C,OAAO,GAAG,UAASN,KAAK,EAAE;EACtD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACS,SAAS,CAACC,KAAK,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC6C,QAAQ,GAAG,UAASP,KAAK,EAAE;EACvD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACW,UAAU,CAACD,KAAK,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC8C,QAAQ,GAAG,UAASR,KAAK,EAAE;EACvD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACY,UAAU,CAACF,KAAK,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC+C,QAAQ,GAAG,UAAST,KAAK,EAAE;EACvD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACa,UAAU,CAACH,KAAK,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACgD,UAAU,GAAG,UAASV,KAAK,EAAE;EACzD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACc,YAAY,CAACJ,KAAK,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACiD,UAAU,GAAG,UAASX,KAAK,EAAE;EACzD,IAAI,CAACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACf,IAAI,CAACe,YAAY,CAACL,KAAK,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA9D,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACkD,YAAY,GAAG,UAASC,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EAClF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACR,OAAO,CAACN,KAAK,CAAC;IACnB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACsD,aAAa,GAAG,UAASH,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACnF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACP,QAAQ,CAACP,KAAK,CAAC;IACpB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACuD,aAAa,GAAG,UAASJ,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACnF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACN,QAAQ,CAACR,KAAK,CAAC;IACpB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACwD,aAAa,GAAG,UAASL,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACnF,IAAI,IAAI,CAAClC,cAAc,IAAI,CAACoB,KAAK,CAACpC,MAAM,CAACkD,YAAY,CAAC,EAAE;IACtD,IAAI,CAACL,QAAQ,CAACT,KAAK,CAAC;IACpB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACyD,eAAe,GAAG,UAASN,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACrF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACJ,UAAU,CAACV,KAAK,CAAC;IACtB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC0D,eAAe,GAAG,UAASP,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACrF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACH,UAAU,CAACX,KAAK,CAAC;IACtB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC2D,cAAc,GAAG,UAASR,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACpF,IAAI,IAAI,CAAClC,cAAc,IAAIoB,KAAK,IAAIc,YAAY,EAAE;IAChD,IAAI,CAACQ,SAAS,CAACtB,KAAK,CAAC;IACrB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC6D,cAAc,GAAG,UAASV,OAAO,EAAEb,KAAK,EAAEc,YAAY,EAAE;EACpF,IAAId,KAAK,IAAIc,YAAY,EAAE;IACzB,IAAI,CAACU,MAAM,CAACxB,KAAK,CAAC;IAClB,IAAI,CAACe,IAAI,CAACF,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA3E,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC8D,MAAM,GAAG,UAASC,GAAG,EAAE;EACnD,IAAIA,GAAG,IAAI,IAAI,CAACpC,MAAM,CAAC,CAAC,EAAE;IACxB,MAAM,IAAIqC,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACAxF,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACiE,SAAS,GAAG,YAAW;EACnD,IAAI,IAAI,CAACnD,QAAQ,EAAE;IACjB,MAAM,IAAIkD,KAAK,CAAC,uDAAuD,CAAC;EAC1E;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAxF,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACqD,IAAI,GAAG,UAASF,OAAO,EAAE;EACrD,IAAI,CAACvC,MAAM,CAACuC,OAAO,CAAC,GAAG,IAAI,CAACxB,MAAM,CAAC,CAAC;AACtC,CAAC;;AAED;AACA;AACA;AACAnD,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC2B,MAAM,GAAG,YAAW;EAChD,OAAO,IAAI,CAACpB,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACV,KAAK;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlC,WAAW,CAAC4B,OAAO,CAAC6B,cAAc,GAAG,UAAS1B,EAAE,EAAE;EAChD,IAAIyB,YAAY,GAAGzB,EAAE,CAACa,QAAQ,CAAC,CAAC;;EAEhC;EACA,IAAIY,YAAY,GAAG,UAAU,EAAE;IAC7B,MAAM,IAAIgC,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAEA,IAAIE,YAAY,GAAGlC,YAAY,IAAI,CAAC;EACpC,IAAImC,GAAG,GAAG3F,WAAW,CAACgC,UAAU,CAACC,QAAQ,CAACyD,YAAY,CAAC;EACvDC,GAAG,CAACC,WAAW,CAACF,YAAY,GAAGlC,YAAY,CAAC;EAC5CmC,GAAG,CAAC3C,KAAK,CAAC,CAAC,CAAC6C,GAAG,CAAC9D,EAAE,CAACiB,KAAK,CAAC,CAAC,EAAE0C,YAAY,GAAGlC,YAAY,CAAC;EACxD,OAAOmC,GAAG;AACZ,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA3F,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC4D,SAAS,GAAG,UAASjC,MAAM,EAAE;EACzD,IAAI,CAACC,IAAI,CAACpD,WAAW,CAACI,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;EACtC,IAAI,CAAC4D,UAAU,CAAC,IAAI,CAACb,MAAM,CAAC,CAAC,GAAGA,MAAM,GAAGnD,WAAW,CAACI,UAAU,CAAC;AAClE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACsE,WAAW,GAAG,UAASC,SAAS,EAAE;EAC9D,IAAI,CAACN,SAAS,CAAC,CAAC;EAChB,IAAI,IAAI,CAACrD,MAAM,IAAI,IAAI,EAAE;IACvB,IAAI,CAACA,MAAM,GAAG,EAAE;EAClB;EACA,IAAI,CAACC,aAAa,GAAG0D,SAAS;EAC9B,KAAK,IAAInC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmC,SAAS,EAAEnC,CAAC,EAAE,EAAE;IAClC,IAAI,CAACxB,MAAM,CAACwB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACtB;EACA,IAAI,CAACtB,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACY,MAAM,CAAC,CAAC;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAnD,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACwE,SAAS,GAAG,YAAW;EACnD,IAAI,IAAI,CAAC5D,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE;IACzC,MAAM,IAAIkD,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,IAAI,CAAClB,QAAQ,CAAC,CAAC,CAAC;EAChB,IAAI2B,SAAS,GAAG,IAAI,CAAC9C,MAAM,CAAC,CAAC;;EAE7B;EACA,IAAIS,CAAC,GAAG,IAAI,CAACvB,aAAa,GAAG,CAAC;EAC9B,OAAOuB,CAAC,IAAI,CAAC,IAAI,IAAI,CAACxB,MAAM,CAACwB,CAAC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,CAAC;EAC5C,IAAIsC,YAAY,GAAGtC,CAAC,GAAG,CAAC;;EAExB;EACA,OAAOA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAClB;IACA,IAAI,CAACS,QAAQ,CAAC,IAAI,CAACjC,MAAM,CAACwB,CAAC,CAAC,IAAI,CAAC,GAAGqC,SAAS,GAAG,IAAI,CAAC7D,MAAM,CAACwB,CAAC,CAAC,GAAG,CAAC,CAAC;EACrE;EAEA,IAAIuC,eAAe,GAAG,CAAC,CAAC,CAAC;EACzB,IAAI,CAAC9B,QAAQ,CAAC4B,SAAS,GAAG,IAAI,CAAC1D,YAAY,CAAC;EAC5C,IAAI6D,GAAG,GAAG,CAACF,YAAY,GAAGC,eAAe,IAAInG,WAAW,CAACG,YAAY;EACrE,IAAI,CAACkE,QAAQ,CAAC+B,GAAG,CAAC;;EAElB;EACA,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,GAAG,GAAG,IAAI,CAACpE,KAAK;EACtBqE,UAAU,EACR,KAAK3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpB,OAAO,CAACgE,MAAM,EAAE5C,CAAC,EAAE,EAAE;IACxC,IAAI6C,GAAG,GAAG,IAAI,CAAC1E,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACoB,CAAC,CAAC;IAC9C,IAAIwC,GAAG,IAAI,IAAI,CAACrE,EAAE,CAAC2E,SAAS,CAACD,GAAG,CAAC,EAAE;MACjC,KAAK,IAAIE,CAAC,GAAG3G,WAAW,CAACG,YAAY,EAAEwG,CAAC,GAAGP,GAAG,EAAEO,CAAC,IAAI3G,WAAW,CAACG,YAAY,EAAE;QAC7E,IAAI,IAAI,CAAC4B,EAAE,CAAC2E,SAAS,CAACJ,GAAG,GAAGK,CAAC,CAAC,IAAI,IAAI,CAAC5E,EAAE,CAAC2E,SAAS,CAACD,GAAG,GAAGE,CAAC,CAAC,EAAE;UAC5D,SAASJ,UAAU;QACrB;MACF;MACAF,eAAe,GAAG,IAAI,CAAC7D,OAAO,CAACoB,CAAC,CAAC;MACjC;IACF;EACF;EAEA,IAAIyC,eAAe,EAAE;IACnB;IACA;IACA,IAAI,CAACnE,KAAK,GAAG,IAAI,CAACH,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAGqD,SAAS;;IAE3C;IACA,IAAI,CAAClE,EAAE,CAACiC,UAAU,CAAC,IAAI,CAAC9B,KAAK,EAAEmE,eAAe,GAAGJ,SAAS,CAAC;EAC7D,CAAC,MAAM;IACL;IACA;IACA,IAAI,CAACzD,OAAO,CAACoE,IAAI,CAAC,IAAI,CAACzD,MAAM,CAAC,CAAC,CAAC;;IAEhC;IACA,IAAI,CAACpB,EAAE,CAACiC,UAAU,CAAC,IAAI,CAACjC,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAGqD,SAAS,EAAE,IAAI,CAAC9C,MAAM,CAAC,CAAC,GAAG8C,SAAS,CAAC;EAC/E;EAEA,IAAI,CAAC3D,QAAQ,GAAG,KAAK;EACrB,OAAO2D,SAAS;AAClB,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAjG,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACqF,MAAM,GAAG,UAASC,UAAU,EAAEC,mBAAmB,EAAE;EAC/E,IAAIA,mBAAmB,EAAE;IACvB,IAAIC,eAAe,GAAGD,mBAAmB;IACzC,IAAI,CAAC3D,IAAI,CAAC,IAAI,CAACjB,QAAQ,EAAEnC,WAAW,CAACI,UAAU,GAC7CJ,WAAW,CAACK,sBAAsB,CAAC;IACrC,IAAI2G,eAAe,CAACR,MAAM,IAAIxG,WAAW,CAACK,sBAAsB,EAAE;MAChE,MAAM,IAAImF,KAAK,CAAC,8CAA8C,GAC5DxF,WAAW,CAACK,sBAAsB,CAAC;IACvC;IACA,KAAK,IAAIuD,CAAC,GAAG5D,WAAW,CAACK,sBAAsB,GAAG,CAAC,EAAEuD,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAChE,IAAI,CAACC,SAAS,CAACmD,eAAe,CAACC,UAAU,CAACrD,CAAC,CAAC,CAAC;IAC/C;EACF;EACA,IAAI,CAACR,IAAI,CAAC,IAAI,CAACjB,QAAQ,EAAEnC,WAAW,CAACI,UAAU,CAAC;EAChD,IAAI,CAACgF,SAAS,CAAC0B,UAAU,CAAC;EAC1B,IAAI,CAAC/E,EAAE,CAAC6D,WAAW,CAAC,IAAI,CAAC1D,KAAK,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlC,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC0F,aAAa,GAAG,UAASC,KAAK,EAAEC,KAAK,EAAE;EACnE,IAAIC,WAAW,GAAG,IAAI,CAACtF,EAAE,CAACa,QAAQ,CAAC,CAAC,GAAGuE,KAAK;EAC5C,IAAIG,YAAY,GAAGD,WAAW,GAAG,IAAI,CAACtF,EAAE,CAACwF,SAAS,CAACF,WAAW,CAAC;EAC/D,IAAIG,EAAE,GAAG,IAAI,CAACzF,EAAE,CAAC2E,SAAS,CAACY,YAAY,GAAGF,KAAK,CAAC,IAAI,CAAC;;EAErD;EACA,IAAI,CAACI,EAAE,EAAE;IACP,MAAM,IAAIhC,KAAK,CAAC,qBAAqB,GAAG4B,KAAK,GAAG,cAAc,CAAC;EACjE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApH,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACiG,WAAW,GAAG,UAASC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAE;EACpF,IAAI,CAACnC,SAAS,CAAC,CAAC;EAChB,IAAI,CAAChD,gBAAgB,GAAGkF,SAAS;EACjC,IAAI,CAACvE,IAAI,CAACpD,WAAW,CAACI,UAAU,EAAEsH,SAAS,GAAGC,SAAS,CAAC;EACxD,IAAI,CAACvE,IAAI,CAACwE,SAAS,EAAEF,SAAS,GAAGC,SAAS,CAAC,CAAC,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA3H,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACqG,SAAS,GAAG,YAAW;EACnD,IAAI,CAAC7D,UAAU,CAAC,IAAI,CAACvB,gBAAgB,CAAC;EACtC,OAAO,IAAI,CAACU,MAAM,CAAC,CAAC;AACtB,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnD,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAACsG,YAAY,GAAG,UAASC,CAAC,EAAE;EACvD,IAAIA,CAAC,YAAY7G,UAAU,EAAE;IAC3B,IAAI8G,IAAI,GAAGD,CAAC;EACd,CAAC,MAAM;IACL,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIpE,CAAC,GAAG,CAAC;IAET,OAAOA,CAAC,GAAGmE,CAAC,CAACvB,MAAM,EAAE;MACnB,IAAIyB,SAAS;;MAEb;MACA,IAAIC,CAAC,GAAGH,CAAC,CAACd,UAAU,CAACrD,CAAC,EAAE,CAAC;MACzB,IAAIsE,CAAC,GAAG,MAAM,IAAIA,CAAC,IAAI,MAAM,EAAE;QAC7BD,SAAS,GAAGC,CAAC;MACf,CAAC,MAAM;QACL,IAAIC,CAAC,GAAGJ,CAAC,CAACd,UAAU,CAACrD,CAAC,EAAE,CAAC;QACzBqE,SAAS,GAAG,CAACC,CAAC,IAAI,EAAE,IAAIC,CAAC,IAAI,OAAO,IAAI,MAAM,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC;MACjE;;MAEA;MACA,IAAIF,SAAS,GAAG,IAAI,EAAE;QACpBD,IAAI,CAACpB,IAAI,CAACqB,SAAS,CAAC;MACtB,CAAC,MAAM;QACL,IAAIA,SAAS,GAAG,KAAK,EAAE;UACrBD,IAAI,CAACpB,IAAI,CAAGqB,SAAS,IAAI,CAAC,GAAI,IAAI,GAAI,IAAI,CAAC;QAC7C,CAAC,MAAM;UACL,IAAIA,SAAS,GAAG,OAAO,EAAE;YACvBD,IAAI,CAACpB,IAAI,CAAGqB,SAAS,IAAI,EAAE,GAAI,IAAI,GAAI,IAAI,CAAC;UAC9C,CAAC,MAAM;YACLD,IAAI,CAACpB,IAAI,CACLqB,SAAS,IAAI,EAAE,GAAI,IAAI,GAAI,IAAI,EAC/BA,SAAS,IAAI,EAAE,GAAI,IAAI,GAAI,IAAI,CAAC;UACtC;UACAD,IAAI,CAACpB,IAAI,CAAGqB,SAAS,IAAI,CAAC,GAAI,IAAI,GAAI,IAAI,CAAC;QAC7C;QACAD,IAAI,CAACpB,IAAI,CAAEqB,SAAS,GAAG,IAAI,GAAI,IAAI,CAAC;MACtC;IACF;EACF;EAEA,IAAI,CAAC7D,OAAO,CAAC,CAAC,CAAC;EACf,IAAI,CAACqD,WAAW,CAAC,CAAC,EAAEO,IAAI,CAACxB,MAAM,EAAE,CAAC,CAAC;EACnC,IAAI,CAACzE,EAAE,CAAC6D,WAAW,CAAC,IAAI,CAAC1D,KAAK,IAAI8F,IAAI,CAACxB,MAAM,CAAC;EAC9C,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAET,MAAM,GAAG,IAAI,CAACjB,KAAK,EAAEc,KAAK,GAAG,IAAI,CAACjB,EAAE,CAACiB,KAAK,CAAC,CAAC,EAAEY,CAAC,GAAGoE,IAAI,CAACxB,MAAM,EAAE5C,CAAC,EAAE,EAAE;IAClFZ,KAAK,CAACG,MAAM,EAAE,CAAC,GAAG6E,IAAI,CAACpE,CAAC,CAAC;EAC3B;EACA,OAAO,IAAI,CAACiE,SAAS,CAAC,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA7H,WAAW,CAAC4B,OAAO,CAACJ,SAAS,CAAC4G,UAAU,GAAG,UAAShH,GAAG,EAAEC,IAAI,EAAE;EAC7D,OAAOrB,WAAW,CAACmB,IAAI,CAACG,MAAM,CAACF,GAAG,EAAEC,IAAI,CAAC;AAC3C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArB,WAAW,CAACgC,UAAU,GAAG,UAASgB,KAAK,EAAE;EACvC;AACF;AACA;AACA;EACE,IAAI,CAACqF,MAAM,GAAGrF,KAAK;;EAEnB;AACF;AACA;AACA;EACE,IAAI,CAACsF,SAAS,GAAG,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAtI,WAAW,CAACgC,UAAU,CAACC,QAAQ,GAAG,UAAS0B,SAAS,EAAE;EACpD,OAAO,IAAI3D,WAAW,CAACgC,UAAU,CAAC,IAAId,UAAU,CAACyC,SAAS,CAAC,CAAC;AAC9D,CAAC;AAED3D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACmB,KAAK,GAAG,YAAW;EAClD,IAAI,CAAC2F,SAAS,GAAG,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAtI,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACwB,KAAK,GAAG,YAAW;EAClD,OAAO,IAAI,CAACqF,MAAM;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACArI,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC0B,QAAQ,GAAG,YAAW;EACrD,OAAO,IAAI,CAACoF,SAAS;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAtI,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACoE,WAAW,GAAG,UAAS1C,QAAQ,EAAE;EAChE,IAAI,CAACoF,SAAS,GAAGpF,QAAQ;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAlD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACoB,QAAQ,GAAG,YAAW;EACrD,OAAO,IAAI,CAACyF,MAAM,CAAC7B,MAAM;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACAxG,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC+G,QAAQ,GAAG,UAASpF,MAAM,EAAE;EAC3D,OAAO,IAAI,CAACqF,SAAS,CAACrF,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACgH,SAAS,GAAG,UAASrF,MAAM,EAAE;EAC5D,OAAO,IAAI,CAACkF,MAAM,CAAClF,MAAM,CAAC;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACkF,SAAS,GAAG,UAASvD,MAAM,EAAE;EAC5D,OAAO,IAAI,CAACsF,UAAU,CAACtF,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACiH,UAAU,GAAG,UAAStF,MAAM,EAAE;EAC7D,OAAO,IAAI,CAACkF,MAAM,CAAClF,MAAM,CAAC,GAAG,IAAI,CAACkF,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;AAC3D,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC+F,SAAS,GAAG,UAASpE,MAAM,EAAE;EAC5D,OAAO,IAAI,CAACkF,MAAM,CAAClF,MAAM,CAAC,GAAG,IAAI,CAACkF,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAACkF,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAACkF,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;AAC3H,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACkH,UAAU,GAAG,UAASvF,MAAM,EAAE;EAC7D,OAAO,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC,KAAK,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACmH,SAAS,GAAG,UAASxF,MAAM,EAAE;EAC5D,OAAO,IAAInD,WAAW,CAACmB,IAAI,CAAC,IAAI,CAACoG,SAAS,CAACpE,MAAM,CAAC,EAAE,IAAI,CAACoE,SAAS,CAACpE,MAAM,GAAG,CAAC,CAAC,CAAC;AACjF,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACoH,UAAU,GAAG,UAASzF,MAAM,EAAE;EAC7D,OAAO,IAAInD,WAAW,CAACmB,IAAI,CAAC,IAAI,CAACuH,UAAU,CAACvF,MAAM,CAAC,EAAE,IAAI,CAACuF,UAAU,CAACvF,MAAM,GAAG,CAAC,CAAC,CAAC;AACnF,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACqH,WAAW,GAAG,UAAS1F,MAAM,EAAE;EAC9DnD,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC8G,SAAS,CAACpE,MAAM,CAAC;EAC7C,OAAOnD,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACAX,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACsH,WAAW,GAAG,UAAS3F,MAAM,EAAE;EAC9DnD,WAAW,CAACS,KAAK,CAACT,WAAW,CAACgB,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACuG,SAAS,CAACpE,MAAM,CAAC;EAC9EnD,WAAW,CAACS,KAAK,CAACT,WAAW,CAACgB,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACuG,SAAS,CAACpE,MAAM,GAAG,CAAC,CAAC;EAClF,OAAOnD,WAAW,CAACc,OAAO,CAAC,CAAC,CAAC;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACAd,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACqC,SAAS,GAAG,UAASV,MAAM,EAAEW,KAAK,EAAE;EACnE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAG,qBAAsBW,KAAM;AACpD,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACuH,UAAU,GAAG,UAAS5F,MAAM,EAAEW,KAAK,EAAE;EACpE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAGW,KAAK;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACuC,UAAU,GAAG,UAASZ,MAAM,EAAEW,KAAK,EAAE;EACpE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAGW,KAAK;EAC3B,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,CAAC;AACtC,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACwH,WAAW,GAAG,UAAS7F,MAAM,EAAEW,KAAK,EAAE;EACnE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAGW,KAAK;EAC3B,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACwC,UAAU,GAAG,UAASb,MAAM,EAAEW,KAAK,EAAE;EACpE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAGW,KAAK;EAC3B,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,CAAC;EACpC,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,EAAE;EACrC,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,EAAE;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACyH,WAAW,GAAG,UAAS9F,MAAM,EAAEW,KAAK,EAAE;EACnE,IAAI,CAACuE,MAAM,CAAClF,MAAM,CAAC,GAAGW,KAAK;EAC3B,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,CAAC;EACpC,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,EAAE;EACrC,IAAI,CAACuE,MAAM,CAAClF,MAAM,GAAG,CAAC,CAAC,GAAGW,KAAK,IAAI,EAAE;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA9D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACyC,UAAU,GAAG,UAASd,MAAM,EAAEW,KAAK,EAAE;EACpE,IAAI,CAACE,UAAU,CAACb,MAAM,EAAEW,KAAK,CAAC1C,GAAG,CAAC;EAClC,IAAI,CAAC4C,UAAU,CAACb,MAAM,GAAG,CAAC,EAAEW,KAAK,CAACzC,IAAI,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACArB,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC0H,WAAW,GAAG,UAAS/F,MAAM,EAAEW,KAAK,EAAE;EACnE,IAAI,CAACmF,WAAW,CAAC9F,MAAM,EAAEW,KAAK,CAAC1C,GAAG,CAAC;EACnC,IAAI,CAAC6H,WAAW,CAAC9F,MAAM,GAAG,CAAC,EAAEW,KAAK,CAACzC,IAAI,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACArB,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC0C,YAAY,GAAG,UAASf,MAAM,EAAEW,KAAK,EAAE;EACtE9D,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC,GAAGmD,KAAK;EAC9B,IAAI,CAACE,UAAU,CAACb,MAAM,EAAEnD,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACAT,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC2C,YAAY,GAAG,UAAShB,MAAM,EAAEW,KAAK,EAAE;EACtE9D,WAAW,CAACc,OAAO,CAAC,CAAC,CAAC,GAAGgD,KAAK;EAC9B,IAAI,CAACE,UAAU,CAACb,MAAM,EAAEnD,WAAW,CAACS,KAAK,CAACT,WAAW,CAACgB,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9E,IAAI,CAACgD,UAAU,CAACb,MAAM,GAAG,CAAC,EAAEnD,WAAW,CAACS,KAAK,CAACT,WAAW,CAACgB,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACpF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAhB,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC2H,mBAAmB,GAAG,YAAW;EAChE,IAAI,IAAI,CAACd,MAAM,CAAC7B,MAAM,GAAG,IAAI,CAAC8B,SAAS,GAAGtI,WAAW,CAACI,UAAU,GAC5DJ,WAAW,CAACK,sBAAsB,EAAE;IACtC,MAAM,IAAImF,KAAK,CACX,gEAAgE,CAAC;EACvE;EACA,IAAI4D,MAAM,GAAG,EAAE;EACf,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5D,WAAW,CAACK,sBAAsB,EAAEuD,CAAC,EAAE,EAAE;IAC3DwF,MAAM,IAAIC,MAAM,CAACC,YAAY,CACzB,IAAI,CAACf,QAAQ,CAAC,IAAI,CAACD,SAAS,GAAGtI,WAAW,CAACI,UAAU,GAAGwD,CAAC,CAAC,CAAC;EACjE;EACA,OAAOwF,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApJ,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC+H,QAAQ,GAAG,UAASC,MAAM,EAAEC,aAAa,EAAE;EAC1E,IAAIrH,MAAM,GAAGoH,MAAM,GAAG,IAAI,CAACjC,SAAS,CAACiC,MAAM,CAAC;EAC5C,OAAOC,aAAa,GAAG,IAAI,CAAC/C,SAAS,CAACtE,MAAM,CAAC,GAAG,IAAI,CAACsE,SAAS,CAACtE,MAAM,GAAGqH,aAAa,CAAC,GAAG,CAAC;AAC5F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAzJ,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACkI,OAAO,GAAG,UAASC,CAAC,EAAExG,MAAM,EAAE;EAC7DwG,CAAC,CAACH,MAAM,GAAGrG,MAAM,GAAG,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC;EAC1CwG,CAAC,CAAC5H,EAAE,GAAG,IAAI;EACX,OAAO4H,CAAC;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3J,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACoI,QAAQ,GAAG,UAASzG,MAAM,EAAE0G,YAAY,EAAE;EACzE1G,MAAM,IAAI,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC;EAEhC,IAAIqD,MAAM,GAAG,IAAI,CAACe,SAAS,CAACpE,MAAM,CAAC;EACnC,IAAIiG,MAAM,GAAG,EAAE;EACf,IAAIxF,CAAC,GAAG,CAAC;EAETT,MAAM,IAAInD,WAAW,CAACI,UAAU;EAEhC,IAAIyJ,YAAY,KAAK7J,WAAW,CAACM,QAAQ,CAACC,UAAU,EAAE;IACpD,OAAO,IAAI,CAAC8H,MAAM,CAACpF,QAAQ,CAACE,MAAM,EAAEA,MAAM,GAAGqD,MAAM,CAAC;EACtD;EAEA,OAAO5C,CAAC,GAAG4C,MAAM,EAAE;IACjB,IAAIyB,SAAS;;IAEb;IACA,IAAIC,CAAC,GAAG,IAAI,CAACM,SAAS,CAACrF,MAAM,GAAGS,CAAC,EAAE,CAAC;IACpC,IAAIsE,CAAC,GAAG,IAAI,EAAE;MACZD,SAAS,GAAGC,CAAC;IACf,CAAC,MAAM;MACL,IAAIC,CAAC,GAAG,IAAI,CAACK,SAAS,CAACrF,MAAM,GAAGS,CAAC,EAAE,CAAC;MACpC,IAAIsE,CAAC,GAAG,IAAI,EAAE;QACZD,SAAS,GACN,CAACC,CAAC,GAAG,IAAI,KAAK,CAAC,GACfC,CAAC,GAAG,IAAK;MACd,CAAC,MAAM;QACL,IAAI2B,CAAC,GAAG,IAAI,CAACtB,SAAS,CAACrF,MAAM,GAAGS,CAAC,EAAE,CAAC;QACpC,IAAIsE,CAAC,GAAG,IAAI,EAAE;UACZD,SAAS,GACN,CAACC,CAAC,GAAG,IAAI,KAAK,EAAE,GAChB,CAACC,CAAC,GAAG,IAAI,KAAK,CAAE,GAChB2B,CAAC,GAAG,IAAK;QACd,CAAC,MAAM;UACL,IAAIC,CAAC,GAAG,IAAI,CAACvB,SAAS,CAACrF,MAAM,GAAGS,CAAC,EAAE,CAAC;UACpCqE,SAAS,GACN,CAACC,CAAC,GAAG,IAAI,KAAK,EAAE,GAChB,CAACC,CAAC,GAAG,IAAI,KAAK,EAAG,GACjB,CAAC2B,CAAC,GAAG,IAAI,KAAK,CAAE,GAChBC,CAAC,GAAG,IAAK;QACd;MACF;IACF;;IAEA;IACA,IAAI9B,SAAS,GAAG,OAAO,EAAE;MACvBmB,MAAM,IAAIC,MAAM,CAACC,YAAY,CAACrB,SAAS,CAAC;IAC1C,CAAC,MAAM;MACLA,SAAS,IAAI,OAAO;MACpBmB,MAAM,IAAIC,MAAM,CAACC,YAAY,CAC3B,CAACrB,SAAS,IAAI,EAAE,IAAI,MAAM,EAC1B,CAACA,SAAS,GAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAE,IAAI,MAAM,CAAC;IAC3C;EACF;EAEA,OAAOmB,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACApJ,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACwI,UAAU,GAAG,UAAS7G,MAAM,EAAE;EAC7D,OAAOA,MAAM,GAAG,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAACyI,QAAQ,GAAG,UAAS9G,MAAM,EAAE;EAC3D,OAAOA,MAAM,GAAG,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC,GAAGnD,WAAW,CAACI,UAAU,CAAC,CAAC;AACnE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAJ,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC0I,YAAY,GAAG,UAAS/G,MAAM,EAAE;EAC/D,OAAO,IAAI,CAACoE,SAAS,CAACpE,MAAM,GAAG,IAAI,CAACoE,SAAS,CAACpE,MAAM,CAAC,CAAC;AACxD,CAAC;;AAED;AACA;AACA;AACA;AACAnD,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC2I,gBAAgB,GAAG,UAASC,KAAK,EAAE;EAClE,IAAIA,KAAK,CAAC5D,MAAM,IAAIxG,WAAW,CAACK,sBAAsB,EAAE;IACtD,MAAM,IAAImF,KAAK,CAAC,8CAA8C,GAC9CxF,WAAW,CAACK,sBAAsB,CAAC;EACrD;EACA,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5D,WAAW,CAACK,sBAAsB,EAAEuD,CAAC,EAAE,EAAE;IAC3D,IAAIwG,KAAK,CAACnD,UAAU,CAACrD,CAAC,CAAC,IAAI,IAAI,CAAC2E,QAAQ,CAAC,IAAI,CAACD,SAAS,GAAGtI,WAAW,CAACI,UAAU,GAAGwD,CAAC,CAAC,EAAE;MACrF,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA5D,WAAW,CAACgC,UAAU,CAACR,SAAS,CAAC4G,UAAU,GAAG,UAAShH,GAAG,EAAEC,IAAI,EAAE;EAChE,OAAOrB,WAAW,CAACmB,IAAI,CAACG,MAAM,CAACF,GAAG,EAAEC,IAAI,CAAC;AAC3C,CAAC;;AAED;AACuB;;AAEvB;AACA,M;;ACrtCa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgJ,OAAOA,CAACnC,CAAC,EAAEoC,GAAG,EAAEC,GAAG,EAAE;EAC5B,OAAOD,GAAG,IAAIpC,CAAC,IAAIA,CAAC,IAAIqC,GAAG;AAC7B;;AAEA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,CAAC,EAAE;EACvB,IAAIA,CAAC,KAAKC,SAAS,EAAE,OAAO,CAAC,CAAC;EAC9B,IAAID,CAAC,KAAKE,MAAM,CAACF,CAAC,CAAC,EAAE,OAAOA,CAAC;EAC7B,MAAMG,SAAS,CAAC,0CAA0C,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,MAAM,EAAE;EAClC;;EAEA;EACA,IAAI/C,CAAC,GAAGsB,MAAM,CAACyB,MAAM,CAAC;;EAEtB;EACA,IAAIC,CAAC,GAAGhD,CAAC,CAACvB,MAAM;;EAEhB;EACA,IAAI5C,CAAC,GAAG,CAAC;;EAET;EACA,IAAIoH,CAAC,GAAG,EAAE;;EAEV;EACA,OAAOpH,CAAC,GAAGmH,CAAC,EAAE;IAEZ;IACA,IAAIjB,CAAC,GAAG/B,CAAC,CAACd,UAAU,CAACrD,CAAC,CAAC;;IAEvB;;IAEA;IACA,IAAIkG,CAAC,GAAG,MAAM,IAAIA,CAAC,GAAG,MAAM,EAAE;MAC5B;MACAkB,CAAC,CAACpE,IAAI,CAACkD,CAAC,CAAC;IACX;;IAEA;IAAA,KACK,IAAI,MAAM,IAAIA,CAAC,IAAIA,CAAC,IAAI,MAAM,EAAE;MACnC;MACAkB,CAAC,CAACpE,IAAI,CAAC,MAAM,CAAC;IAChB;;IAEA;IAAA,KACK,IAAI,MAAM,IAAIkD,CAAC,IAAIA,CAAC,IAAI,MAAM,EAAE;MACnC;MACA;MACA,IAAIlG,CAAC,KAAKmH,CAAC,GAAG,CAAC,EAAE;QACfC,CAAC,CAACpE,IAAI,CAAC,MAAM,CAAC;MAChB;MACA;MAAA,KACK;QACH;QACA,IAAImD,CAAC,GAAGe,MAAM,CAAC7D,UAAU,CAACrD,CAAC,GAAG,CAAC,CAAC;;QAEhC;QACA,IAAI,MAAM,IAAImG,CAAC,IAAIA,CAAC,IAAI,MAAM,EAAE;UAC9B;UACA,IAAI7B,CAAC,GAAG4B,CAAC,GAAG,KAAK;;UAEjB;UACA,IAAI3B,CAAC,GAAG4B,CAAC,GAAG,KAAK;;UAEjB;UACA;UACAiB,CAAC,CAACpE,IAAI,CAAC,OAAO,IAAIsB,CAAC,IAAI,EAAE,CAAC,GAAGC,CAAC,CAAC;;UAE/B;UACAvE,CAAC,IAAI,CAAC;QACR;;QAEA;QACA;QAAA,KACM;UACJoH,CAAC,CAACpE,IAAI,CAAC,MAAM,CAAC;QAChB;MACF;IACF;;IAEA;IACAhD,CAAC,IAAI,CAAC;EACR;;EAEA;EACA,OAAOoH,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,WAAW,EAAE;EACvC,IAAInD,CAAC,GAAG,EAAE;EACV,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsH,WAAW,CAAC1E,MAAM,EAAE,EAAE5C,CAAC,EAAE;IAC3C,IAAIuH,EAAE,GAAGD,WAAW,CAACtH,CAAC,CAAC;IACvB,IAAIuH,EAAE,IAAI,MAAM,EAAE;MAChBpD,CAAC,IAAIsB,MAAM,CAACC,YAAY,CAAC6B,EAAE,CAAC;IAC9B,CAAC,MAAM;MACLA,EAAE,IAAI,OAAO;MACbpD,CAAC,IAAIsB,MAAM,CAACC,YAAY,CAAC,CAAC6B,EAAE,IAAI,EAAE,IAAI,MAAM,EACnB,CAACA,EAAE,GAAG,KAAK,IAAI,MAAM,CAAC;IACjD;EACF;EACA,OAAOpD,CAAC;AACV;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAI,IAAIqD,aAAa,GAAG,CAAC,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,MAAM,EAAE;EACtB;EACA,IAAI,CAACA,MAAM,GAAG,EAAE,CAACC,KAAK,CAACC,IAAI,CAACF,MAAM,CAAC;AACrC;AAEAD,MAAM,CAAC7J,SAAS,GAAG;EACjB;AACF;AACA;EACEiK,WAAW,EAAE,SAAAA,CAAA,EAAW;IACtB,OAAO,CAAC,IAAI,CAACH,MAAM,CAAC9E,MAAM;EAC5B,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACGkF,IAAI,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC9E,MAAM,EACrB,OAAO4E,aAAa;IACrB,OAAO,IAAI,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC;EAC5B,CAAC;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,SAAAA,CAASC,KAAK,EAAE;IACvB,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxB,IAAIP,MAAM,GAAG,4BAA6BO,KAAM;MAChD,OAAOP,MAAM,CAAC9E,MAAM,EAClB,IAAI,CAAC8E,MAAM,CAACU,OAAO,CAACV,MAAM,CAACW,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM;MACL,IAAI,CAACX,MAAM,CAACU,OAAO,CAACH,KAAK,CAAC;IAC5B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEjF,IAAI,EAAE,SAAAA,CAASiF,KAAK,EAAE;IACpB,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxB,IAAIP,MAAM,GAAG,4BAA6BO,KAAM;MAChD,OAAOP,MAAM,CAAC9E,MAAM,EAClB,IAAI,CAAC8E,MAAM,CAAC1E,IAAI,CAAC0E,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACL,IAAI,CAACL,MAAM,CAAC1E,IAAI,CAACiF,KAAK,CAAC;IACzB;EACF;AACF,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA,IAAIK,QAAQ,GAAG,CAAC,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAEC,cAAc,EAAE;EAC3C,IAAID,KAAK,EACP,MAAMxB,SAAS,CAAC,eAAe,CAAC;EAClC,OAAOyB,cAAc,IAAI,MAAM;AACjC;;AAEA;AACA,SAASC,OAAOA,CAAA,EAAG,CAAC;AACpBA,OAAO,CAAC9K,SAAS,GAAG;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;EACE+K,OAAO,EAAE,SAAAA,CAASC,MAAM,EAAEC,IAAI,EAAE,CAAC;AACnC,CAAC;;AAED;AACA,SAASC,OAAOA,CAAA,EAAG,CAAC;AACpBA,OAAO,CAAClL,SAAS,GAAG;EAClB;AACF;AACA;AACA;AACA;EACE+K,OAAO,EAAE,SAAAA,CAASC,MAAM,EAAEG,UAAU,EAAE,CAAC;AACzC,CAAC;;AAED;AACA;AACA;;AAEA;AAAc,IAAIC,gBAAgB,GAAG,OAAO;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,wBAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACtC,IAAI,EAAE,IAAI,YAAYF,wBAAW,CAAC,EAAE;IAClC,OAAO,IAAIA,wBAAW,CAACC,QAAQ,EAAEC,OAAO,CAAC;EAC3C;EACAD,QAAQ,GAAGA,QAAQ,KAAKpC,SAAS,GAAGrB,MAAM,CAACyD,QAAQ,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGJ,gBAAgB;EACrF,IAAIE,QAAQ,KAAKF,gBAAgB,EAAE;IACjC,MAAM,IAAIpH,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACAuH,OAAO,GAAGvC,YAAY,CAACuC,OAAO,CAAC;;EAE/B;EACA,IAAI,CAACE,UAAU,GAAG,KAAK;EACvB;EACA,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB;EACA,IAAI,CAACC,QAAQ,GAAG,IAAI;EACpB;EACA,IAAI,CAACC,MAAM,GAAGC,OAAO,CAACN,OAAO,CAAC,OAAO,CAAC,CAAC;EACvC;EACA,IAAI,CAACO,UAAU,GAAGD,OAAO,CAACN,OAAO,CAAC,WAAW,CAAC,CAAC;EAE/CpC,MAAM,CAAC4C,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE;IAACzJ,KAAK,EAAE;EAAO,CAAC,CAAC;EACzD6G,MAAM,CAAC4C,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;IAACzJ,KAAK,EAAE,IAAI,CAACsJ;EAAM,CAAC,CAAC;EAC1DzC,MAAM,CAAC4C,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;IAACzJ,KAAK,EAAE,IAAI,CAACwJ;EAAU,CAAC,CAAC;AACpE;AAEAT,wBAAW,CAACrL,SAAS,GAAG;EACtB;AACF;AACA;AACA;AACA;EACEgM,MAAM,EAAE,SAASA,MAAMA,CAACC,KAAK,EAAEV,OAAO,EAAE;IACtC,IAAI/J,KAAK;IACT,IAAI,OAAOyK,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYC,WAAW,EAAE;MAC7D1K,KAAK,GAAG,IAAI9B,UAAU,CAACuM,KAAK,CAAC;IAC/B,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,QAAQ,IAAIA,KAAK,IAC9CA,KAAK,CAAC5M,MAAM,YAAY6M,WAAW,EAAE;MAC9C1K,KAAK,GAAG,IAAI9B,UAAU,CAACuM,KAAK,CAAC5M,MAAM,EACZ4M,KAAK,CAACE,UAAU,EAChBF,KAAK,CAACG,UAAU,CAAC;IAC1C,CAAC,MAAM;MACL5K,KAAK,GAAG,IAAI9B,UAAU,CAAC,CAAC,CAAC;IAC3B;IAEA6L,OAAO,GAAGvC,YAAY,CAACuC,OAAO,CAAC;IAE/B,IAAI,CAAC,IAAI,CAACE,UAAU,EAAE;MACpB,IAAI,CAACE,QAAQ,GAAG,IAAIU,WAAW,CAAC;QAACzB,KAAK,EAAE,IAAI,CAACgB;MAAM,CAAC,CAAC;MACrD,IAAI,CAACF,QAAQ,GAAG,KAAK;IACvB;IACA,IAAI,CAACD,UAAU,GAAGI,OAAO,CAACN,OAAO,CAAC,QAAQ,CAAC,CAAC;IAE5C,IAAIe,YAAY,GAAG,IAAIzC,MAAM,CAACrI,KAAK,CAAC;IAEpC,IAAIkI,WAAW,GAAG,EAAE;;IAEpB;IACA,IAAI9B,MAAM;IAEV,OAAO,CAAC0E,YAAY,CAACrC,WAAW,CAAC,CAAC,EAAE;MAClCrC,MAAM,GAAG,IAAI,CAAC+D,QAAQ,CAACZ,OAAO,CAACuB,YAAY,EAAEA,YAAY,CAACpC,IAAI,CAAC,CAAC,CAAC;MACjE,IAAItC,MAAM,KAAK8C,QAAQ,EACrB;MACF,IAAI9C,MAAM,KAAK,IAAI,EACjB;MACF,IAAI0C,KAAK,CAACC,OAAO,CAAC3C,MAAM,CAAC,EACvB8B,WAAW,CAACtE,IAAI,CAACmH,KAAK,CAAC7C,WAAW,EAAE,4BAA6B9B,MAAO,CAAC,CAAC,KAE1E8B,WAAW,CAACtE,IAAI,CAACwC,MAAM,CAAC;IAC5B;IACA,IAAI,CAAC,IAAI,CAAC6D,UAAU,EAAE;MACpB,GAAG;QACD7D,MAAM,GAAG,IAAI,CAAC+D,QAAQ,CAACZ,OAAO,CAACuB,YAAY,EAAEA,YAAY,CAACpC,IAAI,CAAC,CAAC,CAAC;QACjE,IAAItC,MAAM,KAAK8C,QAAQ,EACrB;QACF,IAAI9C,MAAM,KAAK,IAAI,EACjB;QACF,IAAI0C,KAAK,CAACC,OAAO,CAAC3C,MAAM,CAAC,EACvB8B,WAAW,CAACtE,IAAI,CAACmH,KAAK,CAAC7C,WAAW,EAAE,4BAA6B9B,MAAO,CAAC,CAAC,KAE1E8B,WAAW,CAACtE,IAAI,CAACwC,MAAM,CAAC;MAC5B,CAAC,QAAQ,CAAC0E,YAAY,CAACrC,WAAW,CAAC,CAAC;MACpC,IAAI,CAAC0B,QAAQ,GAAG,IAAI;IACtB;IAEA,IAAIjC,WAAW,CAAC1E,MAAM,EAAE;MACtB;MACA;MACA;MACA,IAAI,CAAC,OAAO,CAAC,CAACwH,OAAO,CAAC,IAAI,CAAClB,QAAQ,CAAC,KAAK,CAAC,CAAC,IACvC,CAAC,IAAI,CAACQ,UAAU,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;QACtC;QACA,IAAIhC,WAAW,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;UAC7B,IAAI,CAACgC,QAAQ,GAAG,IAAI;UACpBhC,WAAW,CAACS,KAAK,CAAC,CAAC;QACrB,CAAC,MAAM;UACL;UACA;UACA,IAAI,CAACuB,QAAQ,GAAG,IAAI;QACtB;MACF;IACF;IAEA,OAAOjC,kBAAkB,CAACC,WAAW,CAAC;EACxC;AACF,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+C,wBAAWA,CAACnB,QAAQ,EAAEC,OAAO,EAAE;EACtC,IAAI,EAAE,IAAI,YAAYkB,wBAAW,CAAC,EAChC,OAAO,IAAIA,wBAAW,CAACnB,QAAQ,EAAEC,OAAO,CAAC;EAC3CD,QAAQ,GAAGA,QAAQ,KAAKpC,SAAS,GAAGrB,MAAM,CAACyD,QAAQ,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGJ,gBAAgB;EACrF,IAAIE,QAAQ,KAAKF,gBAAgB,EAAE;IACjC,MAAM,IAAIpH,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACAuH,OAAO,GAAGvC,YAAY,CAACuC,OAAO,CAAC;;EAE/B;EACA,IAAI,CAACE,UAAU,GAAG,KAAK;EACvB;EACA,IAAI,CAACiB,QAAQ,GAAG,IAAI;EACpB;EACA,IAAI,CAACC,QAAQ,GAAG;IAAC/B,KAAK,EAAEiB,OAAO,CAACN,OAAO,CAAC,OAAO,CAAC;EAAC,CAAC;EAElDpC,MAAM,CAAC4C,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE;IAACzJ,KAAK,EAAE;EAAO,CAAC,CAAC;AAC3D;AAEAmK,wBAAW,CAACzM,SAAS,GAAG;EACtB;AACF;AACA;AACA;AACA;EACE4M,MAAM,EAAE,SAASA,MAAMA,CAACC,UAAU,EAAEtB,OAAO,EAAE;IAC3CsB,UAAU,GAAGA,UAAU,GAAGhF,MAAM,CAACgF,UAAU,CAAC,GAAG,EAAE;IACjDtB,OAAO,GAAGvC,YAAY,CAACuC,OAAO,CAAC;;IAE/B;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAACE,UAAU,EAClB,IAAI,CAACiB,QAAQ,GAAG,IAAII,WAAW,CAAC,IAAI,CAACH,QAAQ,CAAC;IAChD,IAAI,CAAClB,UAAU,GAAGI,OAAO,CAACN,OAAO,CAAC,QAAQ,CAAC,CAAC;IAE5C,IAAI/J,KAAK,GAAG,EAAE;IACd,IAAI8K,YAAY,GAAG,IAAIzC,MAAM,CAACR,kBAAkB,CAACwD,UAAU,CAAC,CAAC;IAC7D;IACA,IAAIjF,MAAM;IACV,OAAO,CAAC0E,YAAY,CAACrC,WAAW,CAAC,CAAC,EAAE;MAClCrC,MAAM,GAAG,IAAI,CAAC8E,QAAQ,CAAC3B,OAAO,CAACuB,YAAY,EAAEA,YAAY,CAACpC,IAAI,CAAC,CAAC,CAAC;MACjE,IAAItC,MAAM,KAAK8C,QAAQ,EACrB;MACF,IAAIJ,KAAK,CAACC,OAAO,CAAC3C,MAAM,CAAC,EACvBpG,KAAK,CAAC4D,IAAI,CAACmH,KAAK,CAAC/K,KAAK,EAAE,4BAA6BoG,MAAO,CAAC,CAAC,KAE9DpG,KAAK,CAAC4D,IAAI,CAACwC,MAAM,CAAC;IACtB;IACA,IAAI,CAAC,IAAI,CAAC6D,UAAU,EAAE;MACpB,OAAO,IAAI,EAAE;QACX7D,MAAM,GAAG,IAAI,CAAC8E,QAAQ,CAAC3B,OAAO,CAACuB,YAAY,EAAEA,YAAY,CAACpC,IAAI,CAAC,CAAC,CAAC;QACjE,IAAItC,MAAM,KAAK8C,QAAQ,EACrB;QACF,IAAIJ,KAAK,CAACC,OAAO,CAAC3C,MAAM,CAAC,EACvBpG,KAAK,CAAC4D,IAAI,CAACmH,KAAK,CAAC/K,KAAK,EAAE,4BAA6BoG,MAAO,CAAC,CAAC,KAE9DpG,KAAK,CAAC4D,IAAI,CAACwC,MAAM,CAAC;MACtB;MACA,IAAI,CAAC8E,QAAQ,GAAG,IAAI;IACtB;IACA,OAAO,IAAIhN,UAAU,CAAC8B,KAAK,CAAC;EAC9B;AACF,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS6K,WAAWA,CAACd,OAAO,EAAE;EAC5B,IAAIX,KAAK,GAAGW,OAAO,CAACX,KAAK;;EAEzB;EACA;EACA;EACA;EACA,IAAI,qBAAsBmC,eAAe,GAAG,CAAC;IACzC,qBAAsBC,eAAe,GAAG,CAAC;IACzC,qBAAsBC,iBAAiB,GAAG,CAAC;IAC3C,qBAAsBC,mBAAmB,GAAG,IAAI;IAChD,qBAAsBC,mBAAmB,GAAG,IAAI;;EAEpD;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACpC,OAAO,GAAG,UAASC,MAAM,EAAEC,IAAI,EAAE;IACpC;IACA;IACA,IAAIA,IAAI,KAAKrB,aAAa,IAAIqD,iBAAiB,KAAK,CAAC,EAAE;MACrDA,iBAAiB,GAAG,CAAC;MACrB,OAAOtC,YAAY,CAACC,KAAK,CAAC;IAC5B;;IAEA;IACA,IAAIK,IAAI,KAAKrB,aAAa,EACxB,OAAOc,QAAQ;;IAEjB;IACA,IAAIuC,iBAAiB,KAAK,CAAC,EAAE;MAE3B;MACA,IAAIpE,OAAO,CAACoC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;QAC7B;QACA,OAAOA,IAAI;MACb;;MAEA;MACA,IAAIpC,OAAO,CAACoC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;QAC7B;QACA;QACAgC,iBAAiB,GAAG,CAAC;QACrBF,eAAe,GAAG9B,IAAI,GAAG,IAAI;MAC/B;;MAEA;MAAA,KACK,IAAIpC,OAAO,CAACoC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;QAClC;QACA,IAAIA,IAAI,KAAK,IAAI,EACfiC,mBAAmB,GAAG,IAAI;QAC5B;QACA,IAAIjC,IAAI,KAAK,IAAI,EACfkC,mBAAmB,GAAG,IAAI;QAC5B;QACA;QACAF,iBAAiB,GAAG,CAAC;QACrBF,eAAe,GAAG9B,IAAI,GAAG,IAAI;MAC/B;;MAEA;MAAA,KACK,IAAIpC,OAAO,CAACoC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;QAClC;QACA,IAAIA,IAAI,KAAK,IAAI,EACfiC,mBAAmB,GAAG,IAAI;QAC5B;QACA,IAAIjC,IAAI,KAAK,IAAI,EACfkC,mBAAmB,GAAG,IAAI;QAC5B;QACA;QACAF,iBAAiB,GAAG,CAAC;QACrBF,eAAe,GAAG9B,IAAI,GAAG,IAAI;MAC/B;;MAEA;MAAA,KACK;QACH;QACA,OAAON,YAAY,CAACC,KAAK,CAAC;MAC5B;;MAEA;MACA;MACA;MACAmC,eAAe,GAAGA,eAAe,IAAK,CAAC,GAAGE,iBAAkB;MAC5D,OAAO,IAAI;IACb;;IAEA;IACA;IACA,IAAI,CAACpE,OAAO,CAACoC,IAAI,EAAEiC,mBAAmB,EAAEC,mBAAmB,CAAC,EAAE;MAE5D;MACA;MACA;MACAJ,eAAe,GAAGE,iBAAiB,GAAGD,eAAe,GAAG,CAAC;MACzDE,mBAAmB,GAAG,IAAI;MAC1BC,mBAAmB,GAAG,IAAI;;MAE1B;MACAnC,MAAM,CAACZ,OAAO,CAACa,IAAI,CAAC;;MAEpB;MACA,OAAON,YAAY,CAACC,KAAK,CAAC;IAC5B;;IAEA;IACA;IACAsC,mBAAmB,GAAG,IAAI;IAC1BC,mBAAmB,GAAG,IAAI;;IAE1B;IACA;IACA;IACAH,eAAe,IAAI,CAAC;IACpBD,eAAe,IAAK9B,IAAI,GAAG,IAAI,IAAM,CAAC,IAAIgC,iBAAiB,GAAGD,eAAe,CAAE;;IAE/E;IACA;IACA,IAAIA,eAAe,KAAKC,iBAAiB,EACvC,OAAO,IAAI;;IAEb;IACA,IAAI9B,UAAU,GAAG4B,eAAe;;IAEhC;IACA;IACAA,eAAe,GAAGE,iBAAiB,GAAGD,eAAe,GAAG,CAAC;;IAEzD;IACA,OAAO7B,UAAU;EACnB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS2B,WAAWA,CAACvB,OAAO,EAAE;EAC5B,IAAIX,KAAK,GAAGW,OAAO,CAACX,KAAK;EACzB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACG,OAAO,GAAG,UAASC,MAAM,EAAEG,UAAU,EAAE;IAC1C;IACA,IAAIA,UAAU,KAAKvB,aAAa,EAC9B,OAAOc,QAAQ;;IAEjB;IACA;IACA,IAAI7B,OAAO,CAACsC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,EACrC,OAAOA,UAAU;;IAEnB;IACA,IAAIiC,KAAK,EAAEzL,MAAM;IACjB;IACA,IAAIkH,OAAO,CAACsC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;MACvCiC,KAAK,GAAG,CAAC;MACTzL,MAAM,GAAG,IAAI;IACf;IACA;IAAA,KACK,IAAIkH,OAAO,CAACsC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;MAC5CiC,KAAK,GAAG,CAAC;MACTzL,MAAM,GAAG,IAAI;IACf;IACA;IAAA,KACK,IAAIkH,OAAO,CAACsC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE;MAC/CiC,KAAK,GAAG,CAAC;MACTzL,MAAM,GAAG,IAAI;IACf;;IAEA;IACA;IACA,IAAIH,KAAK,GAAG,CAAC,CAAC2J,UAAU,IAAK,CAAC,GAAGiC,KAAM,IAAIzL,MAAM,CAAC;;IAElD;IACA,OAAOyL,KAAK,GAAG,CAAC,EAAE;MAEhB;MACA,IAAIC,IAAI,GAAGlC,UAAU,IAAK,CAAC,IAAIiC,KAAK,GAAG,CAAC,CAAE;;MAE1C;MACA5L,KAAK,CAAC4D,IAAI,CAAC,IAAI,GAAIiI,IAAI,GAAG,IAAK,CAAC;;MAEhC;MACAD,KAAK,IAAI,CAAC;IACZ;;IAEA;IACA,OAAO5L,KAAK;EACd,CAAC;AACH;;;ACtpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwC;AAIX;AAE7B;AACA,MAAM,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,IAAI;AAC5D;AACA,MAAM,iBAAiB,GAAG,OAAO,WAAW,KAAK,UAAU,IAAI,OAAO,WAAW,KAAK,UAAU;AAEhG;AACO,MAAM,UAAU,GAAG,CAAE,WAAW,IAAI;EACvC,IAAI,iBAAiB,IAAI,CAAC,OAAO,EAAE;IAC/B,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;IACxC,OAAQ,MAAsC,IAAK,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;EAC5E;EACD,OAAQ,KAAwC,IAAI;IAChD,MAAM;MAAE,MAAM;MAAE,UAAU;MAAE;IAAM,CAAE,GAAG,YAAY,CAAC,KAAK,CAAC;IAC1D,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE;EAC9D,CAAC;AACL,CAAC,EAAE,OAAO,WAAW,KAAK,WAAW,GAAG,WAAW,GAAG,wBAAmB,CAAC;AAE1E;AACO,MAAM,UAAU,GAAG,CAAE,WAAW,IAAI;EACvC,IAAI,iBAAiB,IAAI,CAAC,OAAO,EAAE;IAC/B,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE;IACjC,OAAQ,KAAc,IAAK,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;EACnD;EACD,OAAO;IAAA,IAAC,KAAK,uEAAG,EAAE;IAAA,OAAK,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EAAA;AACpE,CAAC,EAAE,OAAO,WAAW,KAAK,WAAW,GAAG,WAAW,GAAG,wBAAmB,CAAC,C;;AC/C1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwC;AAExC;AACO,MAAM,aAAa,GAAQ,MAAM,CAAC,MAAM,CAAC;EAAE,IAAI,EAAE,IAAI;EAAE,KAAK,EAAE,KAAM;AAAE,CAAE,CAAC;AAShF;AACM,MAAO,SAAS;EAClB;EACA,YAAoB,KAAoB;IAApB,UAAK,GAAL,KAAK;EAAkB;EAC3C,IAAW,MAAM;IAAU,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;EAAE;EACxD,IAAW,OAAO;IAAY,OAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE;EAAY;EAC7E,IAAW,YAAY;IAAY,OAAQ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,EAAE;EAAY;AAC1F;AA8BD;AACM,MAAgB,eAAe;EAK1B,GAAG;IACN,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE;EACrC;EACO,IAAI,CAAkC,QAAW,EAAE,OAA4B;IAClF,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;EACxD;EACO,MAAM,CAAC,QAA2B,EAAE,OAAqB;IAAI,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;EAAE;EACpH,WAAW,CAAgC,MAAoD,EAAE,OAAqB;IACzH,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;EAC5D;EAGQ,aAAa;IACjB,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;EACpE;EAGQ,cAAc;IAClB,OAAO,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;EACvE;AACH;AAKD;AACM,MAAO,qBAA0D,SAAQ,eAA0B;EASrG;IACI,KAAK,EAAE;IAPD,YAAO,GAAgB,EAAE;IAIzB,cAAS,GAA4C,EAAE;IAI7D,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAE,CAAC,IAAK,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;EAC5E;EAEA,IAAW,MAAM;IAAoB,OAAO,IAAI,CAAC,cAAc;EAAE;EAC1D,MAAM,MAAM,CAAC,MAAY;IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;EAAE;EACxD,KAAK,CAAC,KAAgB;IACzB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;MACpB,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,GACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAG,CAAC,OAAO,CAAC;QAAE,IAAI,EAAE,KAAK;QAAE;MAAK,CAAS,CAAE;IACzE;EACL;EACO,KAAK,CAAC,KAAW;IACpB,IAAI,IAAI,CAAC,qBAAqB,EAAE;MAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,GACnB,IAAI,CAAC,MAAM,GAAG;QAAE,KAAK,EAAE;MAAK,CAAE,GAC9B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAG,CAAC,MAAM,CAAC;QAAE,IAAI,EAAE,IAAI;QAAE;MAAK,CAAE,CAAE;IAChE;EACL;EACO,KAAK;IACR,IAAI,IAAI,CAAC,qBAAqB,EAAE;MAC5B,MAAM;QAAE;MAAS,CAAE,GAAG,IAAI;MAC1B,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,SAAS,CAAC,KAAK,EAAG,CAAC,OAAO,CAAC,aAAa,CAAC;MAC5C;MACD,IAAI,CAAC,qBAAqB,EAAE;MAC5B,IAAI,CAAC,qBAAqB,GAAG,SAAS;IACzC;EACL;EAEO,CAAC,MAAM,CAAC,aAAa,IAAC;IAAK,OAAO,IAAI;EAAE;EACxC,WAAW,CAAC,OAAkC;IACjD,OAAO,QAAc,CAAC,WAAW,CAC5B,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,MAAM,GACnC,IAAiC,GACjC,IAAI,CAAC,OAAsC,EAClD,OAAO,CAAC;EAChB;EACO,YAAY,CAAC,OAA0C;IAC1D,OAAO,QAAc,CAAC,YAAY,CAC7B,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,MAAM,GACnC,IAAiC,GACjC,IAAI,CAAC,OAAsC,EAClD,OAAO,CAAC;EAChB;EACO,MAAM,KAAK,CAAC,CAAO;IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAAE,OAAO,aAAa;EAAE;EAClE,MAAM,MAAM,CAAC,CAAO;IAAI,MAAM,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO,aAAa;EAAE;EAElE,MAAM,IAAI,CAAC,IAAoB;IAA+B,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK;EAAE;EAC5G,MAAM,IAAI,CAAC,IAAoB;IAA+B,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK;EAAE;EAC5G,IAAI,GAAgB;IACvB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;MACzB,OAAO,OAAO,CAAC,OAAO,CAAC;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;MAAG,CAAS,CAAC;KAC/E,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;MACpB,OAAO,OAAO,CAAC,MAAM,CAAC;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;MAAK,CAAE,CAAC;KAClE,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;MACpC,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC;KACxC,MAAM;MACH,OAAO,IAAI,OAAO,CAA4B,CAAC,OAAO,EAAE,MAAM,KAAI;QAC9D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;UAAE,OAAO;UAAE;QAAM,CAAE,CAAC;MAC5C,CAAC,CAAC;IACL;EACL;EAEU,WAAW;IACjB,IAAI,IAAI,CAAC,qBAAqB,EAAE;MAC5B,OAAO,IAAI;IACd;IACD,MAAM,IAAI,KAAK,WAAI,IAAI,eAAY,CAAC;EACxC;AACH,C;;ACnLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkE;AAyBlE;AACA,MAAM,CAAC,UAAU,EAAE,eAAe,CAAC,GAAG,CAAC,MAAK;EACxC,MAAM,sBAAsB,GAAG,MAAK;IAAG,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;EAAE,CAAC;EACxG,SAAS,iBAAiB;IAAK,MAAM,sBAAsB,EAAE;EAAE;EAC/D,iBAAiB,CAAC,MAAM,GAAG,MAAK;IAAG,MAAM,sBAAsB,EAAE;EAAE,CAAC;EACpE,iBAAiB,CAAC,OAAO,GAAG,MAAK;IAAG,MAAM,sBAAsB,EAAE;EAAE,CAAC;EACrE,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAO,iBAAiB,EAAE,KAAK,CAAC;AAC5F,CAAC,EAAC,CAAkC;AAEpC;AACA,MAAM,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,GAAG,CAAC,MAAK;EACtD,MAAM,6BAA6B,GAAG,MAAK;IAAG,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;EAAE,CAAC;EACtH,MAAM,wBAAwB;IAC1B,WAAW,iBAAiB;MAAK,OAAO,CAAC;IAAE;IAC3C,OAAO,EAAE;MAAK,MAAM,6BAA6B,EAAE;IAAE;IACrD,OAAO,IAAI;MAAK,MAAM,6BAA6B,EAAE;IAAE;IACvD;MAAgB,MAAM,6BAA6B,EAAE;IAAE;EAC1D;EACD,OAAO,OAAO,aAAa,KAAK,WAAW,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAO,wBAAwB,EAAE,KAAK,CAAC;AACjH,CAAC,EAAC,CAAyC;AAE3C;AACA,MAAM,CAAC,kBAAkB,EAAE,uBAAuB,CAAC,GAAG,CAAC,MAAK;EACxD,MAAM,8BAA8B,GAAG,MAAK;IAAG,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC;EAAE,CAAC;EACxH,MAAM,yBAAyB;IAC3B,WAAW,iBAAiB;MAAK,OAAO,CAAC;IAAE;IAC3C,OAAO,EAAE;MAAK,MAAM,8BAA8B,EAAE;IAAE;IACtD,OAAO,IAAI;MAAK,MAAM,8BAA8B,EAAE;IAAE;IACxD;MAAgB,MAAM,8BAA8B,EAAE;IAAE;EAC3D;EACD,OAAO,OAAO,cAAc,KAAK,WAAW,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAO,yBAAyB,EAAE,KAAK,CAAC;AACpH,CAAC,EAAC,CAA0C;AAEK;AACqB;AACG;AAEzE;AAAe,MAAM,QAAQ,GAAI,CAAM,IAAK,OAAO,CAAC,KAAK,QAAQ;AACjE;AAAe,MAAM,SAAS,GAAI,CAAM,IAAK,OAAO,CAAC,KAAK,SAAS;AACnE;AAAe,MAAM,UAAU,GAAI,CAAM,IAAK,OAAO,CAAC,KAAK,UAAU;AACrE;AACO,MAAM,eAAQ,GAAI,CAAM,IAAkB,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;AAE7E;AACO,MAAM,SAAS,GAAa,CAAM,IAAyB;EAC9D,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC5C,CAAC;AAED;AACO,MAAM,YAAY,GAAa,CAAM,IAAwB;EAChE,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;AACjD,CAAC;AAED;AACO,MAAM,UAAU,GAAa,CAAM,IAAsB;EAC5D,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACxD,CAAC;AAED;AACO,MAAM,eAAe,GAAa,CAAM,IAA2B;EACtE,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC7D,CAAC;AAED;AACO,MAAM,WAAW,GAAI,CAAM,IAAyB;EACvD,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC/C,CAAC;AAED;AACO,MAAM,WAAW,GAAa,CAAM,IAAuB;EAC9D,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC/C,CAAC;AAED;AACO,MAAM,gBAAgB,GAAa,CAAM,IAA4B;EACxE,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAK,MAAM,IAAI,CAAE,IAAK,OAAO,IAAI,CAAE;AACzD,CAAC;AAED;AACO,MAAM,gBAAgB,GAAa,CAAM,IAA4B;EACxE,OAAO,eAAQ,CAAC,CAAC,CAAC,IACd,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IACtB,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IACtB,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IACtB,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC;AAED;AACO,MAAM,YAAY,GAAI,CAAM,IAAqB;EACpD,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC;AAED;AACO,MAAM,cAAc,GAAI,CAAM,IAAuB;EACxD,OAAO,oBAAoB,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAQ,CAAE,CAAC,WAAW,CAAC,CAAC;AACtE,CAAC;AAED;AACO,MAAM,eAAe,GAAI,CAAM,IAAmB;EACrD,OAAO,eAAQ,CAAC,CAAC,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACxD,CAAC;AAED;AACO,MAAM,mBAAmB,GAAa,CAAM,IAA4B;EAC3E,OAAO,eAAQ,CAAC,CAAC,CAAC,IACd,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IACtB,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAC1B,EAAE,CAAC,YAAY,eAAe,CAAC;AACvC,CAAC;AAED;AACO,MAAM,mBAAmB,GAAa,CAAM,IAA4B;EAC3E,OAAO,eAAQ,CAAC,CAAC,CAAC,IACd,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IACvB,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAC1B,EAAE,CAAC,YAAY,eAAe,CAAC;AACvC,CAAC;AAED;AACO,MAAM,oBAAoB,GAAI,CAAM,IAAgC;EACvE,OAAO,eAAQ,CAAC,CAAC,CAAC,IACd,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IACpB,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IACtB,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IACxB,EAAE,CAAC,YAAY,eAAe,CAAC;AACvC,CAAC;AAED;AACO,MAAM,oBAAoB,GAAI,CAAM,IAAgC;EACvE,OAAO,eAAQ,CAAC,CAAC,CAAC,IACd,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IACrB,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IACrB,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IACxB,EAAE,CAAC,YAAY,eAAe,CAAC;AACvC,CAAC,C;;AChLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE0C;AACA;AAC1C,IAAO,UAAU,GAAG,WAAW,CAAC,UAAU;AAGyE;AAEnH;AACA,MAAM,cAAc,GAAI,OAAO,iBAAiB,KAAK,WAAW,GAAG,iBAAiB,GAAG,WAAY;AAEnG;AACA,SAAS,4BAA4B,CAAC,MAAoB;EACtD,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EACzC,IAAI,OAAe,EAAE,OAAe,EAAE,IAAY,EAAE,IAAY;EAChE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACtD,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACb,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACb;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,EAAE;MAClE,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;MACtB;IACH;IACD,CAAC;MAAE,UAAU,EAAE,OAAO;MAAE,UAAU,EAAE;IAAI,CAAE,GAAG,CAAC;IAC9C,CAAC;MAAE,UAAU,EAAE,OAAO;MAAE,UAAU,EAAE;IAAI,CAAE,GAAG,CAAC;IAC9C;IACA,IAAK,OAAO,GAAG,IAAI,GAAI,OAAO,IAAK,OAAO,GAAG,IAAI,GAAI,OAAO,EAAE;MAC1D,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;MACtB;IACH;IACD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC;EAC1E;EACD,OAAO,MAAM;AACjB;AAEA;AACM,SAAU,MAAM,CAAmE,MAAe,EAAE,MAAe,EAA4D;EAAA,IAA1D,gBAAgB,uEAAG,CAAC;EAAA,IAAE,gBAAgB,uEAAG,MAAM,CAAC,UAAU;EACjL,MAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU;EAC1C,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,gBAAgB,CAAC;EAC9E,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;EAC1G,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,gBAAgB,CAAC;EAC9B,OAAO,MAAM;AACjB;AAEA;AACM,SAAU,eAAe,CAAC,MAAoB,EAAE,IAAoB;EACtE;EACA;EACA;EACA,IAAI,MAAM,GAAG,4BAA4B,CAAC,MAAM,CAAC;EACjD,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;EAC7D,IAAI,MAAkB,EAAE,MAAkB,EAAE,MAAyB;EACrE,IAAI,MAAM,GAAG,CAAC;IAAE,KAAK,GAAG,CAAC,CAAC;IAAE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,EAAE,UAAU,CAAC;EAC3E,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG;IACtC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;IACtB,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;IACrE,IAAI,MAAM,IAAK,MAAM,GAAG,MAAM,CAAC,MAAO,EAAE;MACpC,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;QAC/B,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;OACjD,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;QAAE,KAAK,EAAE;MAAG;MACxD,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,GAAI,MAAM,GAAG,MAAO;MAC3D;IACH;IACD,MAAM,CAAC,MAAM,KAAK,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC;IACnE,MAAM,IAAI,MAAM,CAAC,MAAM;EAC1B;EACD,OAAO,CAAC,MAAM,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,UAAU,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAC5G;AAUM,SAAU,iBAAiB,CAAC,mBAAwB,EAAE,KAA2B;EAEnF,IAAI,KAAK,GAAQ,gBAAgB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK;EAE9D,IAAI,KAAK,YAAY,mBAAmB,EAAE;IACtC,IAAI,mBAAmB,KAAK,UAAU,EAAE;MACpC;MACA;MACA,OAAO,IAAI,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC;IACnF;IACD,OAAO,KAAK;EACf;EACD,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC;EAAG;EAClD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAAE,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;EAAG;EAC7D,IAAI,KAAK,YAAY,WAAW,EAAE;IAAE,OAAO,IAAI,mBAAmB,CAAC,KAAK,CAAC;EAAG;EAC5E,IAAI,KAAK,YAAY,cAAc,EAAE;IAAE,OAAO,IAAI,mBAAmB,CAAC,KAAK,CAAC;EAAG;EAC/E,IAAI,KAAK,YAAY,UAAU,EAAE;IAAE,OAAO,iBAAiB,CAAC,mBAAmB,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;EAAG;EAClG,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,UAAU,IAAI,CAAC,GAAG,IAAI,mBAAmB,CAAC,CAAC,CAAC,GAClH,IAAI,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;AAC3H;AAEA;AAAsB,MAAM,WAAW,GAAI,KAA2B,IAAK,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC;AAC9G;AAAsB,MAAM,YAAY,GAAI,KAA2B,IAAK,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC;AAChH;AAAsB,MAAM,YAAY,GAAI,KAA2B,IAAK,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC;AAChH;AAAsB,MAAM,eAAe,GAAI,KAA2B,IAAK,iBAAiB,CAAC,iBAAa,EAAE,KAAK,CAAC;AACtH;AAAsB,MAAM,YAAY,GAAI,KAA2B,IAAK,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC;AAChH;AAAsB,MAAM,aAAa,GAAI,KAA2B,IAAK,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC;AAClH;AAAsB,MAAM,aAAa,GAAI,KAA2B,IAAK,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC;AAClH;AAAsB,MAAM,gBAAgB,GAAI,KAA2B,IAAK,iBAAiB,CAAC,kBAAc,EAAE,KAAK,CAAC;AACxH;AAAsB,MAAM,cAAc,GAAI,KAA2B,IAAK,iBAAiB,CAAC,YAAY,EAAE,KAAK,CAAC;AACpH;AAAsB,MAAM,cAAc,GAAI,KAA2B,IAAK,iBAAiB,CAAC,YAAY,EAAE,KAAK,CAAC;AACpH;AAAsB,MAAM,mBAAmB,GAAI,KAA2B,IAAK,iBAAiB,CAAC,iBAAiB,EAAE,KAAK,CAAC;AAK9H;AACA,MAAM,IAAI,GAAkD,QAAW,IAAI;EAAG,QAAQ,CAAC,IAAI,EAAE;EAAE,OAAO,QAAQ;AAAE,CAAC;AAEjH;AACM,UAAW,yBAAyB,CAAuB,SAAmC,EAAE,MAAoC;EAEtI,MAAM,IAAI,GAAG,WAAa,CAAI;IAAI,MAAM,CAAC;EAAE,CAAC;EAC5C,MAAM,OAAO,GACG,OAAO,MAAM,KAAK,QAAQ,GAAI,IAAI,CAAC,MAAM,CAAC,GAC1C,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,GAC7C,MAAM,YAAY,WAAW,GAAI,IAAI,CAAC,MAAM,CAAC,GAChD,MAAM,YAAY,cAAc,GAAI,IAAI,CAAC,MAAM,CAAC,GACxD,CAAC,UAAU,CAAuB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM;EAEnE,OAAO,IAAI,CAAE,WAAW,EAAE;IACtB,IAAI,CAAC,GAA8B,IAAI;IACvC,GAAG;MACC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KACrD,QAAQ,CAAC,CAAC,CAAC,IAAI;EACpB,CAAC,CAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACnC;AAEA;AAAsB,MAAM,mBAAmB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,SAAS,EAAE,KAAK,CAAC;AACtI;AAAsB,MAAM,oBAAoB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,UAAU,EAAE,KAAK,CAAC;AACxI;AAAsB,MAAM,oBAAoB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,UAAU,EAAE,KAAK,CAAC;AACxI;AAAsB,MAAM,oBAAoB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,UAAU,EAAE,KAAK,CAAC;AACxI;AAAsB,MAAM,qBAAqB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,WAAW,EAAE,KAAK,CAAC;AAC1I;AAAsB,MAAM,qBAAqB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,WAAW,EAAE,KAAK,CAAC;AAC1I;AAAsB,MAAM,sBAAsB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,YAAY,EAAE,KAAK,CAAC;AAC5I;AAAsB,MAAM,sBAAsB,GAAI,KAAmC,IAAK,yBAAyB,CAAC,YAAY,EAAE,KAAK,CAAC;AAC5I;AAAsB,MAAM,2BAA2B,GAAI,KAAmC,IAAK,yBAAyB,CAAC,iBAAiB,EAAE,KAAK,CAAC;AAKtJ;AACO,gBAAgB,8BAA8B,CAAuB,SAAmC,EAAE,MAAyC;EAEtJ;EACA,IAAI,SAAS,CAAuB,MAAM,CAAC,EAAE;IACzC,OAAO,OAAO,8BAA8B,CAAC,SAAS,EAAE,MAAM,MAAM,CAAC;EACxE;EAED,MAAM,IAAI,GAAG,iBAAmB,CAAI;IAAI,MAAM,MAAM,CAAC;EAAE,CAAC;EACxD,MAAM,IAAI,GAAG,iBAA0C,MAAS;IAC5D,OAAO,IAAI,CAAE,WAAU,EAAiB;MACpC,IAAI,CAAC,GAA8B,IAAI;MACvC,GAAG;QACC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;OAClC,QAAQ,CAAC,CAAC,CAAC,IAAI;IACpB,CAAC,CAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;EAClC,CAAC;EAED,MAAM,OAAO,GACQ,OAAO,MAAM,KAAK,QAAQ,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EAC3C,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EAC9C,MAAM,YAAY,WAAW,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EACjD,MAAM,YAAY,cAAc,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EACxD,UAAU,CAAuB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EAC9D,CAAC,eAAe,CAAuB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;EAAA,EACb,MAAM,CAAC,CAAC;EAE3D,OAAO,IAAI,CAAE,iBAAiB,EAAE;IAC5B,IAAI,CAAC,GAA8B,IAAI;IACvC,GAAG;MACC,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KAC3D,QAAQ,CAAC,CAAC,CAAC,IAAI;EACpB,CAAC,CAAE,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACxC;AAEA;AAAsB,MAAM,wBAAwB,GAAI,KAAwC,IAAK,8BAA8B,CAAC,SAAS,EAAE,KAAK,CAAC;AACrJ;AAAsB,MAAM,yBAAyB,GAAI,KAAwC,IAAK,8BAA8B,CAAC,UAAU,EAAE,KAAK,CAAC;AACvJ;AAAsB,MAAM,yBAAyB,GAAI,KAAwC,IAAK,8BAA8B,CAAC,UAAU,EAAE,KAAK,CAAC;AACvJ;AAAsB,MAAM,yBAAyB,GAAI,KAAwC,IAAK,8BAA8B,CAAC,UAAU,EAAE,KAAK,CAAC;AACvJ;AAAsB,MAAM,0BAA0B,GAAI,KAAwC,IAAK,8BAA8B,CAAC,WAAW,EAAE,KAAK,CAAC;AACzJ;AAAsB,MAAM,0BAA0B,GAAI,KAAwC,IAAK,8BAA8B,CAAC,WAAW,EAAE,KAAK,CAAC;AACzJ;AAAsB,MAAM,2BAA2B,GAAI,KAAwC,IAAK,8BAA8B,CAAC,YAAY,EAAE,KAAK,CAAC;AAC3J;AAAsB,MAAM,2BAA2B,GAAI,KAAwC,IAAK,8BAA8B,CAAC,YAAY,EAAE,KAAK,CAAC;AAC3J;AAAsB,MAAM,gCAAgC,GAAI,KAAwC,IAAK,8BAA8B,CAAC,iBAAiB,EAAE,KAAK,CAAC;AAErK;AACM,SAAU,kBAAkB,CAAC,MAAc,EAAE,MAAc,EAAE,YAAwB;EACvF;EACA;EACA,IAAI,MAAM,KAAK,CAAC,EAAE;IACd,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,MAAM,GAAG;MAC7B,YAAY,CAAC,CAAC,CAAC,IAAI,MAAM;IAC5B;EACJ;EACD,OAAO,YAAY;AACvB;AAEA;AACM,SAAU,gBAAgB,CAA2B,CAAI,EAAE,CAAI;EACjE,IAAI,CAAC,GAAG,CAAC;IAAE,CAAC,GAAG,CAAC,CAAC,MAAM;EACvB,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;IAAE,OAAO,KAAK;EAAG;EACrC,IAAI,CAAC,GAAG,CAAC,EAAE;IACP,GAAG;MAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QAAE,OAAO,KAAK;MAAG;KAAE,QAAQ,EAAE,CAAC,GAAG,CAAC;EAC7D;EACD,OAAO,IAAI;AACf,C;;ACtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQwB;AAIxB;AACe;EACX,YAAY,CAAiC,MAAuB;IAChE,OAAO,aAAI,CAAC,YAAY,CAAI,MAAM,CAAC,CAAC;EACxC,CAAC;EACD,iBAAiB,CAAiC,MAAyC;IACvF,OAAO,aAAI,CAAC,iBAAiB,CAAI,MAAM,CAAC,CAAC;EAC7C,CAAC;EACD,aAAa,CAAiC,MAAyB;IACnE,OAAO,aAAI,CAAC,aAAa,CAAI,MAAM,CAAC,CAAC;EACzC,CAAC;EACD,cAAc,CAAC,MAA6B;IACxC,OAAO,aAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;EACvC,CAAC;EACD;EACA,WAAW,CAAI,MAAsC,EAAE,OAAkC;IACrF,MAAM,IAAI,KAAK,oDAAkD,CAAC;EACtE,CAAC;EACD;EACA,YAAY,CAAI,MAAsC,EAAE,OAA0C;IAC9F,MAAM,IAAI,KAAK,qDAAmD,CAAC;EACvE;CACH,EAAC;AAEF;AACA,MAAM,aAAI,GAAkD,QAAW,IAAI;EAAG,QAAQ,CAAC,IAAI,EAAE;EAAE,OAAO,QAAQ;AAAE,CAAC;AAEjH;AACA,UAAU,YAAY,CAAiC,MAAuB;EAE1E,IAAI,IAAa;IAAE,KAAK,GAAG,KAAK;EAChC,IAAI,OAAO,GAAiB,EAAE;IAAE,MAAkB;EAClD,IAAI,GAAoB;IAAE,IAAY;IAAE,YAAY,GAAG,CAAC;EAExD,SAAS,SAAS;IACd,IAAI,GAAG,KAAK,MAAM,EAAE;MAChB,OAAO,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C;IACD,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IAChE,OAAO,MAAM;EACjB;EAEA;EACA,CAAC;IAAE,GAAG;IAAE;EAAI,CAAE,GAAG,MAAY,IAAI;EAEjC;EACA,IAAI,EAAE,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAExD,IAAI;IACA,GAAG;MACC;MACA,CAAC;QAAE,IAAI;QAAE,KAAK,EAAE;MAAM,CAAE,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,GACjD,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;MACrD;MACA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;QAChC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACpB,YAAY,IAAI,MAAM,CAAC,UAAU;MACpC;MACD;MACA,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,EAAE;QAC9B,GAAG;UACC,CAAC;YAAE,GAAG;YAAE;UAAI,CAAE,GAAG,MAAM,SAAS,EAAE;SACrC,QAAQ,IAAI,GAAG,YAAY;MAC/B;KACJ,QAAQ,CAAC,IAAI;GACjB,CAAC,OAAO,CAAC,EAAE;IACR,CAAC,KAAK,GAAG,IAAI,KAAM,OAAO,EAAE,CAAC,KAAK,KAAK,UAAW,IAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAE;GACtE,SAAS;IACL,KAAK,KAAK,KAAK,IAAM,OAAO,EAAE,CAAC,MAAM,KAAK,UAAW,IAAK,EAAE,CAAC,MAAM,EAAG;EAC1E;AACL;AAEA;AACA,gBAAgB,iBAAiB,CAAiC,MAAyC;EAEvG,IAAI,IAAa;IAAE,KAAK,GAAG,KAAK;EAChC,IAAI,OAAO,GAAiB,EAAE;IAAE,MAAkB;EAClD,IAAI,GAAoB;IAAE,IAAY;IAAE,YAAY,GAAG,CAAC;EAExD,SAAS,SAAS;IACd,IAAI,GAAG,KAAK,MAAM,EAAE;MAChB,OAAO,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C;IACD,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IAChE,OAAO,MAAM;EACjB;EAEA;EACA,CAAC;IAAE,GAAG;IAAE;EAAI,CAAE,GAAG,MAAY,IAAI;EAEjC;EACA,IAAI,EAAE,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;EAElE,IAAI;IACA,GAAG;MACC;MACA,CAAC;QAAE,IAAI;QAAE,KAAK,EAAE;MAAM,CAAE,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,GAC/C,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GACxB,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;MACxC;MACA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;QAChC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACpB,YAAY,IAAI,MAAM,CAAC,UAAU;MACpC;MACD;MACA,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,EAAE;QAC9B,GAAG;UACC,CAAC;YAAE,GAAG;YAAE;UAAI,CAAE,GAAG,MAAM,SAAS,EAAE;SACrC,QAAQ,IAAI,GAAG,YAAY;MAC/B;KACJ,QAAQ,CAAC,IAAI;GACjB,CAAC,OAAO,CAAC,EAAE;IACR,CAAC,KAAK,GAAG,IAAI,KAAM,OAAO,EAAE,CAAC,KAAK,KAAK,UAAW,KAAK,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GAC5E,SAAS;IACL,KAAK,KAAK,KAAK,IAAM,OAAO,EAAE,CAAC,MAAM,KAAK,UAAW,KAAK,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;EAChF;AACL;AAEA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,CAAiC,MAAyB;EAEnF,IAAI,IAAI,GAAG,KAAK;IAAE,KAAK,GAAG,KAAK;EAC/B,IAAI,OAAO,GAAiB,EAAE;IAAE,MAAkB;EAClD,IAAI,GAAoB;IAAE,IAAY;IAAE,YAAY,GAAG,CAAC;EAExD,SAAS,SAAS;IACd,IAAI,GAAG,KAAK,MAAM,EAAE;MAChB,OAAO,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C;IACD,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IAChE,OAAO,MAAM;EACjB;EAEA;EACA,CAAC;IAAE,GAAG;IAAE;EAAI,CAAE,GAAG,MAAY,IAAI;EAEjC;EACA,IAAI,EAAE,GAAG,IAAI,2BAAkB,CAAC,MAAM,CAAC;EAEvC,IAAI;IACA,GAAG;MACC;MACA,CAAC;QAAE,IAAI;QAAE,KAAK,EAAE;MAAM,CAAE,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,GAC/C,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAC3B,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,YAAY,CAAC;MAC3C;MACA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;QAChC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAClC,YAAY,IAAI,MAAM,CAAC,UAAU;MACpC;MACD;MACA,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,EAAE;QAC9B,GAAG;UACC,CAAC;YAAE,GAAG;YAAE;UAAI,CAAE,GAAG,MAAM,SAAS,EAAE;SACrC,QAAQ,IAAI,GAAG,YAAY;MAC/B;KACJ,QAAQ,CAAC,IAAI;GACjB,CAAC,OAAO,CAAC,EAAE;IACR,CAAC,KAAK,GAAG,IAAI,MAAM,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;GAC5C,SAAS;IACL,KAAK,KAAK,KAAK,GAAK,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,GACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE;EAC7C;AACL;AAEA;AACA,MAAM,2BAAkB;EAOpB,YAAoB,MAAyB;IAAzB,WAAM,GAAN,MAAM;IAJlB,eAAU,GAAoC,IAAI;IAClD,kBAAa,GAA0C,IAAI;IAI/D,IAAI;MACA,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;KAC7D,CAAC,OAAO,CAAC,EAAE;MACR,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACjE;EACL;EAEA,IAAI,MAAM;IACN,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE;EAClF;EAEA,WAAW;IACP,IAAI,IAAI,CAAC,MAAM,EAAE;MACb,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;IAC5B;IACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI;EAC7D;EAEA,MAAM,MAAM,CAAC,MAAY;IACrB,MAAM;MAAE,MAAM;MAAE;IAAM,CAAE,GAAG,IAAI;IAC/B,MAAM,KAAK,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC,CAAC;IAC1D,MAAM,IAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,WAAW,EAAG;EACtD;EAEA,MAAM,IAAI,CAAC,IAAa;IACpB,IAAI,IAAI,KAAK,CAAC,EAAE;MACZ,OAAO;QAAE,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI;QAAE,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC;MAAC,CAAE;IACjE;IACD,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,KAAK,QAAQ,GACvD,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,GACpC,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;IACzC,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC,MAA8C,CAAC,CAAC;IAC7F,OAAO,MAA8C;EACzD;EAEQ,gBAAgB;IACpB,IAAI,IAAI,CAAC,UAAU,EAAE;MAAE,IAAI,CAAC,WAAW,EAAE;IAAG;IAC5C,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;MACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;MAC/C;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC;IAC/C;IACD,OAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa;EAC5C;EAEQ,aAAa;IACjB,IAAI,IAAI,CAAC,aAAa,EAAE;MAAE,IAAI,CAAC,WAAW,EAAE;IAAG;IAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;MAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAAE,IAAI,EAAE;MAAM,CAAE,CAAC;MAC5D;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC;IAC5C;IACD,OAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;EACzC;EAEA;EACA;EACQ,MAAM,kBAAkB,CAAC,IAAY;IACzC,OAAO,MAAM,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC/E;AACH;AAED;AACA,eAAe,QAAQ,CAAC,MAAgC,EAAE,MAAuB,EAAE,MAAc,EAAE,IAAY;EAC3G,IAAI,MAAM,IAAI,IAAI,EAAE;IAChB,OAAO;MAAE,IAAI,EAAE,KAAK;MAAE,KAAK,EAAE,IAAI,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI;IAAC,CAAE;EACjE;EACD,MAAM;IAAE,IAAI;IAAE;EAAK,CAAE,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC;EACxF,IAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,IAAK,CAAC,IAAI,EAAE;IAChD,OAAO,MAAM,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC;EAC5D;EACD,OAAO;IAAE,IAAI;IAAE,KAAK,EAAE,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM;EAAC,CAAE;AACnE;AAMA;AACA,MAAM,OAAO,GAAG,CAAmB,MAA6B,EAAE,KAAQ,KAAI;EAC1E,IAAI,OAAO,GAAI,CAAM,IAAK,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;EAC7C,IAAI,OAA2D;EAC/D,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,OAAO,CAC9B,CAAC,IAAK,CAAC,OAAO,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CACzD,CAAU;AACf,CAAC;AAED;AACA,gBAAgB,cAAc,CAAC,MAA6B;EAExD,IAAI,MAAM,GAAY,EAAE;EACxB,IAAI,KAAK,GAAc,OAAO;EAC9B,IAAI,IAAI,GAAG,KAAK;IAAE,GAAG,GAAiB,IAAI;EAC1C,IAAI,GAAoB;IAAE,IAAY;IAAE,YAAY,GAAG,CAAC;EACxD,IAAI,OAAO,GAAiB,EAAE;IAAE,MAAoC;EAEpE,SAAS,SAAS;IACd,IAAI,GAAG,KAAK,MAAM,EAAE;MAChB,OAAO,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C;IACD,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IAChE,OAAO,MAAM;EACjB;EAEA;EACA;EACA,CAAC;IAAE,GAAG;IAAE;EAAI,CAAE,GAAG,MAAY,IAAI;EAEjC;EACA,IAAK,MAAc,CAAC,OAAO,CAAC,EAAE;IAAE,OAAO,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;EAAG;EAEjE,IAAI;IACA;IACA,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;IAClC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;IAEpC,GAAG;MACC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;MAEvC;MACA,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAE1D;MACA,IAAI,KAAK,KAAK,OAAO,EAAE;QAAE;MAAQ;MACjC,IAAI,EAAE,IAAI,GAAG,KAAK,KAAK,KAAK,CAAC,EAAE;QAC3B;QACA,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC,EAAE;UAChC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;SACnD,MAAM;UACH,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC;UAC1D;UACA;UACA;UACA;UACA,IAAI,MAAM,CAAC,UAAU,GAAI,IAAI,GAAG,YAAa,EAAE;YAC3C,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;UACnD;QACJ;QACD;QACA,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;UACvB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;UACpB,YAAY,IAAI,MAAM,CAAC,UAAU;QACpC;MACJ;MACD;MACA,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,EAAE;QAC9B,GAAG;UACC,CAAC;YAAE,GAAG;YAAE;UAAI,CAAE,GAAG,MAAM,SAAS,EAAE;SACrC,QAAQ,IAAI,GAAG,YAAY;MAC/B;KACJ,QAAQ,CAAC,IAAI;GACjB,SAAS;IACN,MAAM,OAAO,CAAC,MAAM,EAAE,KAAK,KAAK,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC;EACxD;EAED,SAAS,OAAO,CAAgC,MAAe,EAAE,GAAO;IACpE,MAAM,GAAG,OAAO,GAAS,IAAI;IAC7B,OAAO,IAAI,OAAO,CAAI,OAAO,OAAO,EAAE,MAAM,KAAI;MAC5C,KAAK,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE;QAC5B,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;MACzB;MACD,IAAI;QACA;QACA;QACA;QACA,MAAM,OAAO,GAAI,MAAc,CAAC,SAAS,CAAC;QAC1C,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QACpC,GAAG,GAAG,SAAS;OAClB,CAAC,OAAO,CAAC,EAAE;QAAE,GAAG,GAAG,CAAC,IAAI,GAAG;OAAG,SAAS;QACpC,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,EAAE;MACxC;IACL,CAAC,CAAC;EACN;AACJ,C;;ACjYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgCM,MAAgB,cAAc;;;AC/CpC;AAKA;;AAEG;AACG,IAAW,UAAG;AAApB,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,eAoBX;QApBD,WAAY,eAAe;UACvB;;AAEG;UACH,iDAAM;UAEN;;AAEG;UACH,iDAAM;UAEN;;AAEG;UACH,iDAAM;UAEN;;AAEG;UACH,iDAAM;QACV,CAAC,EApBW,eAAe,GAAf,uBAAe,KAAf,uBAAe;MAqB/B,CAAC,EAtBiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAsBzC,CAAC,EAtB2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAsBjC,CAAC,EAtBoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAsB3B,CAAC,EAtBgB,UAAG,KAAH,UAAG;AAwBpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,SAGX;QAHD,WAAY,SAAS;UACjB,6CAAU;UACV,2CAAS;QACb,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS;MAIzB,CAAC,EALiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAKzC,CAAC,EAL2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAKjC,CAAC,EALoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAK3B,CAAC,EALgB,UAAG,KAAH,UAAG;AAOpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,SAIX;QAJD,WAAY,SAAS;UACjB,yCAAQ;UACR,6CAAU;UACV,6CAAU;QACd,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS;MAKzB,CAAC,EANiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAMzC,CAAC,EAN2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAMjC,CAAC,EANoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAM3B,CAAC,EANgB,UAAG,KAAH,UAAG;AAQpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,QAGX;QAHD,WAAY,QAAQ;UAChB,qCAAO;UACP,qDAAe;QACnB,CAAC,EAHW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ;MAIxB,CAAC,EALiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAKzC,CAAC,EAL2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAKjC,CAAC,EALoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAK3B,CAAC,EALgB,UAAG,KAAH,UAAG;AAOpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,QAKX;QALD,WAAY,QAAQ;UAChB,2CAAU;UACV,qDAAe;UACf,qDAAe;UACf,mDAAc;QAClB,CAAC,EALW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ;MAMxB,CAAC,EAPiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAOzC,CAAC,EAP2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAOjC,CAAC,EAPoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAO3B,CAAC,EAPgB,UAAG,KAAH,UAAG;AASpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,YAGX;QAHD,WAAY,YAAY;UACpB,2DAAc;UACd,uDAAY;QAChB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY;MAI5B,CAAC,EALiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAKzC,CAAC,EAL2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAKjC,CAAC,EALoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAK3B,CAAC,EALgB,UAAG,KAAH,UAAG;AAOpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,IAuBX;QAvBD,WAAY,IAAI;UACZ,+BAAQ;UACR,+BAAQ;UACR,6BAAO;UACP,iDAAiB;UACjB,mCAAU;UACV,+BAAQ;UACR,+BAAQ;UACR,qCAAW;UACX,+BAAQ;UACR,+BAAQ;UACR,0CAAc;UACd,wCAAa;UACb,gCAAS;UACT,sCAAY;UACZ,kCAAU;UACV,sDAAoB;UACpB,kDAAkB;UAClB,8BAAQ;UACR,wCAAa;UACb,8CAAgB;UAChB,0CAAc;UACd,0CAAc;QAClB,CAAC,EAvBW,IAAI,GAAJ,YAAI,KAAJ,YAAI;MAwBpB,CAAC,EAzBiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAyBzC,CAAC,EAzB2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAyBjC,CAAC,EAzBoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAyB3B,CAAC,EAzBgB,UAAG,KAAH,UAAG;AA2BpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,UAGX;QAHD,WAAY,UAAU;UAClB,+CAAU;UACV,yCAAO;QACX,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU;MAI1B,CAAC,EALiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAKzC,CAAC,EAL2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAKjC,CAAC,EALoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAK3B,CAAC,EALgB,UAAG,KAAH,UAAG;AAOpB;;;;AAIG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA5CY,YAAI,OA4ChB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,OAAO;UAApB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,gBAAgB,CAAC,EAA0B,EAAE,GAAa;YAC7D,OAAO,CAAC,GAAG,IAAI,IAAI,OAAO,CAAP,CAAO,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACvF;UAEA;;AAEG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,aAAa,CAAC,OAA4B;YAC7C,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;YAC7B,OAAO,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;UACtC;QACH;QA5CY,eAAO,UA4CnB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA5CY,YAAI,OA4ChB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,SAAS;UAAtB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,kBAAkB,CAAC,EAA0B,EAAE,GAAe;YACjE,OAAO,CAAC,GAAG,IAAI,IAAI,SAAS,CAAT,CAAS,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACzF;UAEA;;AAEG;UACH,OAAO,cAAc,CAAC,OAA4B;YAC9C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,eAAe,CAAC,OAA4B;YAC/C,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC;YACjC,OAAO,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC;UAC1C;QACH;QA5CY,iBAAS,YA4CrB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,aAAa;UAA1B;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA4DtB;UA3DI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,sBAAsB,CAAC,EAA0B,EAAE,GAAmB;YACzE,OAAO,CAAC,GAAG,IAAI,IAAI,aAAa,CAAb,CAAa,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC7F;UAEA;;;;AAIG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UAChE;UAEA;;AAEG;UACH,OAAO,kBAAkB,CAAC,OAA4B;YAClD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAgB;YAC7D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACzC;UAEA;;;AAGG;UACH,OAAO,gBAAgB,CAAC,OAA4B;YAChD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,mBAAmB,CAAC,OAA4B,EAAE,QAAgB;YACrE,aAAa,CAAC,kBAAkB,CAAC,OAAO,CAAC;YACzC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YAC5C,OAAO,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC;UAClD;QACH;QA/DY,qBAAa,gBA+DzB;MACL,CAAC,EAjEiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAiEzC,CAAC,EAjE2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAiEjC,CAAC,EAjEoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAiE3B,CAAC,EAjEgB,UAAG,KAAH,UAAG;AAkEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,GAAG;UAAhB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA4DtB;UA3DI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,YAAY,CAAC,EAA0B,EAAE,GAAS;YACrD,OAAO,CAAC,GAAG,IAAI,IAAI,GAAG,CAAH,CAAG,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACnF;UAEA;;;;AAIG;UACH,UAAU;YACN,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK;UACrE;UAEA;;AAEG;UACH,OAAO,QAAQ,CAAC,OAA4B;YACxC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,aAAa,CAAC,OAA4B,EAAE,UAAmB;YAClE,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC;UAChD;UAEA;;;AAGG;UACH,OAAO,MAAM,CAAC,OAA4B;YACtC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,SAAS,CAAC,OAA4B,EAAE,UAAmB;YAC9D,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;YACrB,GAAG,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC;YACtC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;UAC9B;QACH;QA/DY,WAAG,MA+Df;MACL,CAAC,EAjEiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAiEzC,CAAC,EAjE2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAiEjC,CAAC,EAjEoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAiE3B,CAAC,EAjEgB,UAAG,KAAH,UAAG;AAkEpB;;;;;;;AAOG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,KAAK;UAAlB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAiHtB;UAhHI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,cAAc,CAAC,EAA0B,EAAE,GAAW;YACzD,OAAO,CAAC,GAAG,IAAI,IAAI,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACrF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM;UAClH;UAEA;;;AAGG;UACH,OAAO,CAAC,KAAa;YACjB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;UAC/F;UAEA;;AAEG;UACH,aAAa;YACT,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,YAAY;YACR,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAG,CAAC,KAAK,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI;UACtL;UAEA;;AAEG;UACH,OAAO,UAAU,CAAC,OAA4B;YAC1C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAAwC;YACjF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;UAC7E;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B,EAAE,aAAiC;YAC7E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC;UAC/C;UAEA;;;;AAIG;UACH,OAAO,mBAAmB,CAAC,OAA4B,EAAE,IAA2B;YAChF,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B,EAAE,QAAgB;YACpE,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,QAAQ,CAAC,OAA4B;YACxC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,WAAW,CAAC,OAA4B,EAAE,IAAwC,EAAE,aAAiC;YACxH,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;YACzB,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAC5B,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,aAAa,CAAC;YACxC,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;UAClC;QACH;QApHY,aAAK,QAoHjB;MACL,CAAC,EAtHiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAsHzC,CAAC,EAtH2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAsHjC,CAAC,EAtHoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAsH3B,CAAC,EAtHgB,UAAG,KAAH,UAAG;AAuHpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,GAAG;UAAhB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA2EtB;UA1EI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,YAAY,CAAC,EAA0B,EAAE,GAAS;YACrD,OAAO,CAAC,GAAG,IAAI,IAAI,GAAG,CAAH,CAAG,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACnF;UAEA;;AAEG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UAChE;UAEA;;AAEG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK;UACrE;UAEA;;AAEG;UACH,OAAO,QAAQ,CAAC,OAA4B;YACxC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAgB;YAC7D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACzC;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAiB;YAC9D,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;UAC9C;UAEA;;;AAGG;UACH,OAAO,MAAM,CAAC,OAA4B;YACtC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,SAAS,CAAC,OAA4B,EAAE,QAAgB,EAAE,QAAiB;YAC9E,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;YACrB,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YAClC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YAClC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;UAC9B;QACH;QA9EY,WAAG,MA8Ef;MACL,CAAC,EAhFiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAgFzC,CAAC,EAhF2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAgFjC,CAAC,EAhFoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAgF3B,CAAC,EAhFgB,UAAG,KAAH,UAAG;AAiFpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,aAAa;UAA1B;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA0DtB;UAzDI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,sBAAsB,CAAC,EAA0B,EAAE,GAAmB;YACzE,OAAO,CAAC,GAAG,IAAI,IAAI,aAAa,CAAb,CAAa,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC7F;UAEA;;AAEG;UACH,SAAS;YACL,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI;UAChH;UAEA;;AAEG;UACH,OAAO,kBAAkB,CAAC,OAA4B;YAClD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,SAA6C;YAC3F,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;UAChF;UAEA;;;AAGG;UACH,OAAO,gBAAgB,CAAC,OAA4B;YAChD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,mBAAmB,CAAC,OAA4B,EAAE,SAA6C;YAClG,aAAa,CAAC,kBAAkB,CAAC,OAAO,CAAC;YACzC,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;YAC9C,OAAO,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC;UAClD;QACH;QA7DY,qBAAa,gBA6DzB;MACL,CAAC,EA/DiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA+DzC,CAAC,EA/D2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA+DjC,CAAC,EA/DoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA+D3B,CAAC,EA/DgB,UAAG,KAAH,UAAG;AAgEpB;;;;AAIG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA5CY,YAAI,OA4ChB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;;;AAIG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,MAAM;UAAnB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,eAAe,CAAC,EAA0B,EAAE,GAAY;YAC3D,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM,CAAN,CAAM,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACtF;UAEA;;AAEG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,YAAY,CAAC,OAA4B;YAC5C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3B,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;UACpC;QACH;QA5CY,cAAM,SA4ClB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,SAAS;UAAtB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,kBAAkB,CAAC,EAA0B,EAAE,GAAe;YACjE,OAAO,CAAC,GAAG,IAAI,IAAI,SAAS,CAAT,CAAS,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACzF;UAEA;;AAEG;UACH,OAAO,cAAc,CAAC,OAA4B;YAC9C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,eAAe,CAAC,OAA4B;YAC/C,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC;YACjC,OAAO,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC;UAC1C;QACH;QA5CY,iBAAS,YA4CrB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,WAAW;UAAxB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,oBAAoB,CAAC,EAA0B,EAAE,GAAiB;YACrE,OAAO,CAAC,GAAG,IAAI,IAAI,WAAW,CAAX,CAAW,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC3F;UAEA;;AAEG;UACH,OAAO,gBAAgB,CAAC,OAA4B;YAChD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,cAAc,CAAC,OAA4B;YAC9C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,iBAAiB,CAAC,OAA4B;YACjD,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC;YACrC,OAAO,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC;UAC9C;QACH;QA5CY,mBAAW,cA4CvB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,eAAe;UAA5B;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA4DtB;UA3DI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,wBAAwB,CAAC,EAA0B,EAAE,GAAqB;YAC7E,OAAO,CAAC,GAAG,IAAI,IAAI,eAAe,CAAf,CAAe,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC/F;UAEA;;;;AAIG;UACH,SAAS;YACL,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UAChE;UAEA;;AAEG;UACH,OAAO,oBAAoB,CAAC,OAA4B;YACpD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,SAAiB;YAC/D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;UAC1C;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B;YAClD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,qBAAqB,CAAC,OAA4B,EAAE,SAAiB;YACxE,eAAe,CAAC,oBAAoB,CAAC,OAAO,CAAC;YAC7C,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;YAChD,OAAO,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC;UACtD;QACH;QA/DY,uBAAe,kBA+D3B;MACL,CAAC,EAjEiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAiEzC,CAAC,EAjE2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAiEjC,CAAC,EAjEoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAiE3B,CAAC,EAjEgB,UAAG,KAAH,UAAG;AAkEpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyCtB;UAxCI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA5CY,YAAI,OA4ChB;MACL,CAAC,EA9CiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8CzC,CAAC,EA9C2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8CjC,CAAC,EA9CoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8C3B,CAAC,EA9CgB,UAAG,KAAH,UAAG;AA+CpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,OAAO;UAApB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA+EtB;UA9EI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,gBAAgB,CAAC,EAA0B,EAAE,GAAa;YAC7D,OAAO,CAAC,GAAG,IAAI,IAAI,OAAO,CAAP,CAAO,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACvF;UAEA;;;;AAIG;UACH,SAAS;YACL,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UAChE;UAEA;;;;AAIG;UACH,KAAK;YACD,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UAChE;UAEA;;AAEG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,SAAiB;YAC/D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;UAC1C;UAEA;;;AAGG;UACH,OAAO,QAAQ,CAAC,OAA4B,EAAE,KAAa;YACvD,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;UACtC;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,aAAa,CAAC,OAA4B,EAAE,SAAiB,EAAE,KAAa;YAC/E,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;YAC7B,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;YACxC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC;YAChC,OAAO,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;UACtC;QACH;QAlFY,eAAO,UAkFnB;MACL,CAAC,EApFiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAoFzC,CAAC,EApF2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAoFjC,CAAC,EApFoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAoF3B,CAAC,EApFgB,UAAG,KAAH,UAAG;AAqFpB;;;;;;;;;AASG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA0DtB;UAzDI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW;UACtH;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAAuC;YAChF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;UACjF;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B,EAAE,IAAuC;YACnF,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA7DY,YAAI,OA6DhB;MACL,CAAC,EA/DiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA+DzC,CAAC,EA/D2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA+DjC,CAAC,EA/DoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA+D3B,CAAC,EA/DgB,UAAG,KAAH,UAAG;AAgEpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,IAAI;UAAjB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA2EtB;UA1EI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,aAAa,CAAC,EAA0B,EAAE,GAAU;YACvD,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAJ,CAAI,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACpF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW;UACtH;UAEA;;AAEG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE;UACjE;UAEA;;AAEG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAAuC;YAChF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;UACjF;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAgB;YAC7D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC;UAC1C;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B;YACvC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,UAAU,CAAC,OAA4B,EAAE,IAAuC,EAAE,QAAgB;YACrG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YACnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;UAChC;QACH;QA9EY,YAAI,OA8EhB;MACL,CAAC,EAhFiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAgFzC,CAAC,EAhF2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAgFjC,CAAC,EAhFoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAgF3B,CAAC,EAhFgB,UAAG,KAAH,UAAG;AAiFpB;;;;;;;;;AASG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,SAAS;UAAtB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAmGtB;UAlGI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,kBAAkB,CAAC,EAA0B,EAAE,GAAe;YACjE,OAAO,CAAC,GAAG,IAAI,IAAI,SAAS,CAAT,CAAS,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACzF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM;UACjH;UA6BA,QAAQ,CAAC,gBAAsB;YAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,gBAAgB,CAAC,GAAG,IAAI;UACpF;UAEA;;AAEG;UACH,OAAO,cAAc,CAAC,OAA4B;YAC9C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAAuC;YAChF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;UAC5E;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,cAAkC;YAC/E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;UAChD;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,eAAe,CAAC,OAA4B,EAAE,IAAuC,EAAE,cAAkC;YAC5H,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC;YACjC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAChC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,cAAc,CAAC;YAC9C,OAAO,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC;UAC1C;QACH;QAtGY,iBAAS,YAsGrB;MACL,CAAC,EAxGiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAwGzC,CAAC,EAxG2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAwGjC,CAAC,EAxGoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAwG3B,CAAC,EAxGgB,UAAG,KAAH,UAAG;AAyGpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,QAAQ;UAArB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA0DtB;UAzDI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,iBAAiB,CAAC,EAA0B,EAAE,GAAc;YAC/D,OAAO,CAAC,GAAG,IAAI,IAAI,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACxF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU;UACzH;UAEA;;AAEG;UACH,OAAO,aAAa,CAAC,OAA4B;YAC7C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAA2C;YACpF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC;UACpF;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,cAAc,CAAC,OAA4B,EAAE,IAA2C;YAC3F,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YAC/B,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAC/B,OAAO,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;UACxC;QACH;QA7DY,gBAAQ,WA6DpB;MACL,CAAC,EA/DiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA+DzC,CAAC,EA/D2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA+DjC,CAAC,EA/DoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA+D3B,CAAC,EA/DgB,UAAG,KAAH,UAAG;AAgEpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,QAAQ;UAArB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA0DtB;UAzDI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,iBAAiB,CAAC,EAA0B,EAAE,GAAc;YAC/D,OAAO,CAAC,GAAG,IAAI,IAAI,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACxF;UAEA;;AAEG;UACH,IAAI;YACA,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW;UACtH;UAEA;;AAEG;UACH,OAAO,aAAa,CAAC,OAA4B;YAC7C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,IAAuC;YAChF,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;UACjF;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,cAAc,CAAC,OAA4B,EAAE,IAAuC;YACvF,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YAC/B,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;YAC/B,OAAO,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;UACxC;QACH;QA7DY,gBAAQ,WA6DpB;MACL,CAAC,EA/DiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA+DzC,CAAC,EA/D2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA+DjC,CAAC,EA/DoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA+D3B,CAAC,EA/DgB,UAAG,KAAH,UAAG;AAgEpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,QAAQ;UAArB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAiFtB;UAhFI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,iBAAiB,CAAC,EAA0B,EAAE,GAAc;YAC/D,OAAO,CAAC,GAAG,IAAI,IAAI,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACxF;UAQA,GAAG,CAAC,gBAAsB;YACtB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,gBAAgB,CAAC,GAAG,IAAI;UACpF;UAQA,KAAK,CAAC,gBAAsB;YACxB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,gBAAgB,CAAC,GAAG,IAAI;UACpF;UAEA;;AAEG;UACH,OAAO,aAAa,CAAC,OAA4B;YAC7C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,MAAM,CAAC,OAA4B,EAAE,SAA6B;YACrE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;UAC3C;UAEA;;;AAGG;UACH,OAAO,QAAQ,CAAC,OAA4B,EAAE,WAA+B;YACzE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;UAC7C;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,cAAc,CAAC,OAA4B,EAAE,SAA6B,EAAE,WAA+B;YAC9G,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YAC/B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC;YACnC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC;YACvC,OAAO,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;UACxC;QACH;QApFY,gBAAQ,WAoFpB;MACL,CAAC,EAtFiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAsFzC,CAAC,EAtF2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAsFjC,CAAC,EAtFoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAsF3B,CAAC,EAtFgB,UAAG,KAAH,UAAG;AAuFpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,kBAAkB;UAA/B;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAyGtB;UAxGI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,2BAA2B,CAAC,EAA0B,EAAE,GAAwB;YACnF,OAAO,CAAC,GAAG,IAAI,IAAI,kBAAkB,CAAlB,CAAkB,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAClG;UAEA;;;;;;AAMG;UACH,EAAE;YACE,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF;UAEA;;;;;;AAMG;UACH,SAAS,CAAC,GAAkC;YACxC,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAH,CAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UAChI;UAEA;;;;;;;AAOG;UACH,SAAS;YACL,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK;UACrE;UAEA;;AAEG;UACH,OAAO,uBAAuB,CAAC,OAA4B;YACvD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,KAAK,CAAC,OAA4B,EAAE,EAAoB;YAC3D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1D;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,eAAmC;YACjF,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC;UACjD;UAEA;;;AAGG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,SAAkB;YAChE,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;UAC/C;UAEA;;;AAGG;UACH,OAAO,qBAAqB,CAAC,OAA4B;YACrD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,wBAAwB,CAAC,OAA4B,EAAE,EAAoB,EAAE,eAAmC,EAAE,SAAkB;YACvI,kBAAkB,CAAC,uBAAuB,CAAC,OAAO,CAAC;YACnD,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;YACrC,kBAAkB,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC;YACzD,kBAAkB,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;YACnD,OAAO,kBAAkB,CAAC,qBAAqB,CAAC,OAAO,CAAC;UAC5D;QACH;QA5GY,0BAAkB,qBA4G9B;MACL,CAAC,EA9GiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA8GzC,CAAC,EA9G2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA8GjC,CAAC,EA9GoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA8G3B,CAAC,EA9GgB,UAAG,KAAH,UAAG;AA+GpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,KAAK;UAAlB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAgPtB;UA/OI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,cAAc,CAAC,EAA0B,EAAE,GAAW;YACzD,OAAO,CAAC,GAAG,IAAI,IAAI,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACrF;UAUA,IAAI,CAAC,gBAAsB;YACvB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,gBAAgB,CAAC,GAAG,IAAI;UACpF;UAEA;;;;AAIG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK;UACrE;UAEA;;AAEG;UACH,QAAQ;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;UAC3G;UAEA;;;;;AAKG;UACH,IAAI,CAA8B,GAAM;YACpC,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI;UACtE;UAEA;;;;;AAKG;UACH,UAAU,CAAC,GAAiD;YACxD,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAlB,CAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UAC/I;UAEA;;;;;;;AAOG;UACH,QAAQ,CAAC,KAAa,EAAE,GAAoC;YACxD,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACjK;UAEA;;AAEG;UACH,cAAc;YACV,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;;;;;AAMG;UACH,cAAc,CAAC,KAAa,EAAE,GAAuC;YACjE,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACpK;UAEA;;AAEG;UACH,oBAAoB;YAChB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,OAAO,UAAU,CAAC,OAA4B;YAC1C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,UAA8B;YACvE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;UAC5C;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAiB;YAC9D,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;UAC9C;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,QAAuC;YACpF,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;UACzE;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,UAA8B;YACvE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;UAC5C;UAEA;;;AAGG;UACH,OAAO,aAAa,CAAC,OAA4B,EAAE,gBAAoC;YACnF,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC;UAClD;UAEA;;;AAGG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,cAAkC;YAC/E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;UAChD;UAEA;;;;AAIG;UACH,OAAO,oBAAoB,CAAC,OAA4B,EAAE,IAA0B;YAChF,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,mBAAmB,CAAC,OAA4B,EAAE,QAAgB;YACrE,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,iBAAiB,CAAC,OAA4B,EAAE,oBAAwC;YAC3F,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;UACtD;UAEA;;;;AAIG;UACH,OAAO,0BAA0B,CAAC,OAA4B,EAAE,IAA0B;YACtF,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,yBAAyB,CAAC,OAA4B,EAAE,QAAgB;YAC3E,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,QAAQ,CAAC,OAA4B;YACxC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,WAAW,CAAC,OAA4B,EAAE,UAA8B,EAAE,QAAiB,EAAE,QAAuC,EAAE,UAA8B,EAAE,gBAAoC,EAAE,cAAkC,EAAE,oBAAwC;YAC3R,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;YACzB,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;YAClC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YACpC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;YACpC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;YAClC,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,gBAAgB,CAAC;YAC9C,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,cAAc,CAAC;YAC1C,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,oBAAoB,CAAC;YACtD,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;UAClC;QACH;QAnPY,aAAK,QAmPjB;MACL,CAAC,EArPiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAqPzC,CAAC,EArP2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAqPjC,CAAC,EArPoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAqP3B,CAAC,EArPgB,UAAG,KAAH,UAAG;AAsPpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,MAAM;UAAnB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA6CtB;UA5CI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;;AAKG;UACH,MAAM;YACF,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;UAC1C;UAEA;;;;;AAKG;UACH,MAAM;YACF,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;UAC9C;UAEA;;;;;AAKG;UACH,OAAO,YAAY,CAAC,OAA4B,EAAE,MAAwB,EAAE,MAAwB;YAChG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;YACnB,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1B,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1B,OAAO,OAAO,CAAC,MAAM,EAAE;UAC3B;QAEH;QAhDY,cAAM,SAgDlB;MACL,CAAC,EAlDiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAkDzC,CAAC,EAlD2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAkDjC,CAAC,EAlDoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAkD3B,CAAC,EAlDgB,UAAG,KAAH,UAAG;AAmDpB;;;;;AAKG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,MAAM;UAAnB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAsKtB;UArKI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,eAAe,CAAC,EAA0B,EAAE,GAAY;YAC3D,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM,CAAN,CAAM,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACtF;UAEA;;;;;;AAMG;UACH,UAAU;YACN,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM;UACnH;UAEA;;;;AAIG;UACH,MAAM,CAAC,KAAa,EAAE,GAAoC;YACtD,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACjK;UAEA;;AAEG;UACH,YAAY;YACR,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;;;AAIG;UACH,cAAc,CAAC,KAAa,EAAE,GAAuC;YACjE,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACpK;UAEA;;AAEG;UACH,oBAAoB;YAChB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,aAAa,CAAC,OAA4B,EAAE,UAA+C;YAC9F,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;UACpF;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B,EAAE,YAAgC;YAC3E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;UAC9C;UAEA;;;;AAIG;UACH,OAAO,kBAAkB,CAAC,OAA4B,EAAE,IAA0B;YAC9E,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,iBAAiB,CAAC,OAA4B,EAAE,QAAgB;YACnE,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,iBAAiB,CAAC,OAA4B,EAAE,oBAAwC;YAC3F,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;UACtD;UAEA;;;;AAIG;UACH,OAAO,0BAA0B,CAAC,OAA4B,EAAE,IAA0B;YACtF,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,yBAAyB,CAAC,OAA4B,EAAE,QAAgB;YAC3E,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B,EAAE,MAA0B;YAC9E,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;UAC1B;UAEA,OAAO,YAAY,CAAC,OAA4B,EAAE,UAA+C,EAAE,YAAgC,EAAE,oBAAwC;YACzK,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3B,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC;YACzC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,YAAY,CAAC;YACvC,MAAM,CAAC,iBAAiB,CAAC,OAAO,EAAE,oBAAoB,CAAC;YACvD,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;UACpC;QACH;QAzKY,cAAM,SAyKlB;MACL,CAAC,EA3KiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA2KzC,CAAC,EA3K2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA2KjC,CAAC,EA3KoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA2K3B,CAAC,EA3KgB,UAAG,KAAH,UAAG,Q;;ACzlEpB;AAGkD;AAC5C,IAAW,WAAG;AAApB,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACvB,cAAM,GAAG,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;MAChF,CAAC,EAFiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAEzC,CAAC,EAF2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAEjC,CAAC,EAFoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAE3B,CAAC,EAFgB,WAAG,KAAH,WAAG;AAGpB;;;;;;;;;;;AAWG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,IAAY,aAOX;QAPD,WAAY,aAAa;UACrB,iDAAQ;UACR,qDAAU;UACV,uEAAmB;UACnB,+DAAe;UACf,qDAAU;UACV,iEAAgB;QACpB,CAAC,EAPW,aAAa,GAAb,qBAAa,KAAb,qBAAa;MAQ7B,CAAC,EATiC,OAAO,GAAP,aAAO,KAAP,aAAO;IASzC,CAAC,EAT2B,KAAK,GAAL,YAAK,KAAL,YAAK;EASjC,CAAC,EAToB,MAAM,GAAN,UAAM,KAAN,UAAM;AAS3B,CAAC,EATgB,WAAG,KAAH,WAAG;AAWpB;;;;;;;;;;;;AAYG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,SAAS;UAAtB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA8CtB;UA7CI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;;AAKG;UACH,MAAM;YACF,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;UAC1C;UAEA;;;;;;AAMG;UACH,SAAS;YACL,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;UAC9C;UAEA;;;;;AAKG;UACH,OAAO,eAAe,CAAC,OAA4B,EAAE,MAAwB,EAAE,UAA4B;YACvG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;YACnB,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;YAC9B,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1B,OAAO,OAAO,CAAC,MAAM,EAAE;UAC3B;QAEH;QAjDY,iBAAS,YAiDrB;MACL,CAAC,EAnDiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAmDzC,CAAC,EAnD2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAmDjC,CAAC,EAnDoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAmD3B,CAAC,EAnDgB,WAAG,KAAH,WAAG;AAoDpB;;;;;;AAMG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,WAAW;UAAxB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA4ItB;UA3II;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,oBAAoB,CAAC,EAA0B,EAAE,GAAiB;YACrE,OAAO,CAAC,GAAG,IAAI,IAAI,WAAW,CAAX,CAAW,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC3F;UAEA;;;;;AAKG;UACH,MAAM;YACF,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF;UAEA;;;;;;AAMG;UACH,KAAK,CAAC,KAAa,EAAE,GAAwC;YACzD,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAT,CAAS,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACjJ;UAEA;;AAEG;UACH,WAAW;YACP,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;;;;;;;;;;AAWG;UACH,OAAO,CAAC,KAAa,EAAE,GAA2D;YAC9E,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAN,CAAM,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACpK;UAEA;;AAEG;UACH,aAAa;YACT,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,OAAO,gBAAgB,CAAC,OAA4B;YAChD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B,EAAE,MAAwB;YACnE,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC9D;UAEA;;;AAGG;UACH,OAAO,QAAQ,CAAC,OAA4B,EAAE,WAA+B;YACzE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;UAC7C;UAEA;;;AAGG;UACH,OAAO,gBAAgB,CAAC,OAA4B,EAAE,QAAgB;YAClE,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;UACxC;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B,EAAE,aAAiC;YAC7E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC;UAC/C;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B,EAAE,QAAgB;YACpE,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;UACxC;UAEA;;;AAGG;UACH,OAAO,cAAc,CAAC,OAA4B;YAC9C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,iBAAiB,CAAC,OAA4B,EAAE,MAAwB,EAAE,WAA+B,EAAE,aAAiC;YAC/I,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC;YACrC,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC;YACtC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC;YAC1C,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,aAAa,CAAC;YAC9C,OAAO,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC;UAC9C;QACH;QA/IY,mBAAW,cA+IvB;MACL,CAAC,EAjJiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAiJzC,CAAC,EAjJ2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAiJjC,CAAC,EAjJoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAiJ3B,CAAC,EAjJgB,WAAG,KAAH,WAAG;AAkJpB;;;;;;;;;AASG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,eAAe;UAA5B;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAgGtB;UA/FI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,wBAAwB,CAAC,EAA0B,EAAE,GAAqB;YAC7E,OAAO,CAAC,GAAG,IAAI,IAAI,eAAe,CAAf,CAAe,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UAC/F;UAEA;;AAEG;UACH,EAAE;YACE,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF;UAEA;;;AAGG;UACH,IAAI,CAAC,GAA0C;YAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAX,CAAW,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACxI;UAEA;;;;;AAKG;UACH,OAAO;YACH,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK;UACrE;UAEA;;AAEG;UACH,OAAO,oBAAoB,CAAC,OAA4B;YACpD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,KAAK,CAAC,OAA4B,EAAE,EAAoB;YAC3D,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1D;UAEA;;;AAGG;UACH,OAAO,OAAO,CAAC,OAA4B,EAAE,UAA8B;YACvE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;UAC5C;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B,EAAE,OAAgB;YAC5D,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;UAC7C;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B;YAClD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA,OAAO,qBAAqB,CAAC,OAA4B,EAAE,EAAoB,EAAE,UAA8B,EAAE,OAAgB;YAC7H,eAAe,CAAC,oBAAoB,CAAC,OAAO,CAAC;YAC7C,eAAe,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;YAClC,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;YAC5C,eAAe,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC;YAC5C,OAAO,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC;UACtD;QACH;QAnGY,uBAAe,kBAmG3B;MACL,CAAC,EArGiC,OAAO,GAAP,aAAO,KAAP,aAAO;IAqGzC,CAAC,EArG2B,KAAK,GAAL,YAAK,KAAL,YAAK;EAqGjC,CAAC,EArGoB,MAAM,GAAN,UAAM,KAAN,UAAM;AAqG3B,CAAC,EArGgB,WAAG,KAAH,WAAG;AAsGpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,OAAO;UAApB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAsKtB;UArKI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,gBAAgB,CAAC,EAA0B,EAAE,GAAa;YAC7D,OAAO,CAAC,GAAG,IAAI,IAAI,OAAO,CAAP,CAAO,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACvF;UAEA;;AAEG;UACH,OAAO;YACH,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;UAC1I;UAEA;;AAEG;UACH,UAAU;YACN,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI;UACpH;UAEA;;;AAGG;UACH,MAAM,CAA8B,GAAM;YACtC,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI;UACtE;UAEA;;AAEG;UACH,UAAU;YACN,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF;UAEA;;;;AAIG;UACH,cAAc,CAAC,KAAa,EAAE,GAA6D;YACvF,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAR,CAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UAC1L;UAEA;;AAEG;UACH,oBAAoB;YAChB,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,OAAO,YAAY,CAAC,OAA4B;YAC5C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B,EAAE,OAAuE;YACnH,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;UACxG;UAEA;;;AAGG;UACH,OAAO,aAAa,CAAC,OAA4B,EAAE,UAAkD;YACjG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC;UACpF;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B,EAAE,YAAgC;YAC3E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;UAC9C;UAEA;;;AAGG;UACH,OAAO,aAAa,CAAC,OAA4B,EAAE,UAA4B;YAC3E,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAClE;UAEA;;;AAGG;UACH,OAAO,iBAAiB,CAAC,OAA4B,EAAE,oBAAwC;YAC3F,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;UACtD;UAEA;;;;AAIG;UACH,OAAO,0BAA0B,CAAC,OAA4B,EAAE,IAA0B;YACtF,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;cACvC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;YACD,OAAO,OAAO,CAAC,SAAS,EAAE;UAC9B;UAEA;;;AAGG;UACH,OAAO,yBAAyB,CAAC,OAA4B,EAAE,QAAgB;YAC3E,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;UACvC;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B;YAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA;;;AAGG;UACH,OAAO,mBAAmB,CAAC,OAA4B,EAAE,MAA0B;YAC/E,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;UAC1B;UAEA,OAAO,aAAa,CAAC,OAA4B,EAAE,OAAuE,EAAE,UAAkD,EAAE,YAAgC,EAAE,UAA4B,EAAE,oBAAwC;YACpR,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;YAC7B,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC;YACpC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC;YAC1C,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,YAAY,CAAC;YACxC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC;YAC1C,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,oBAAoB,CAAC;YACxD,OAAO,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;UACtC;QACH;QAzKY,eAAO,UAyKnB;MACL,CAAC,EA3KiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA2KzC,CAAC,EA3K2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA2KjC,CAAC,EA3KoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA2K3B,CAAC,EA3KgB,WAAG,KAAH,WAAG,Q;;AC3WpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEuC;AACE;AAEnC,IAAQ,cAAS,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACzD,IAAQ,QAAQ,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;AAC5D,IAAQ,QAAQ,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;AAC5D,IAAQ,SAAS,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AAC9D,IAAQ,SAAS,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AAC9D,IAAQ,YAAY,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY;AACpE,IAAQ,aAAa,GAAG,WAAY,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa;AACvE,IAAQ,eAAe,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe;AAEhF;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;AACH,IAAY,IAiEX;AAjED,WAAY,IAAI;EACZ;EACA,+BAAoB;EACpB;EACA,+BAAoB;EACpB;EACA,6BAAoB;EACpB;EACA,iCAAoB;EACpB;EACA,mCAAoB;EACpB;EACA,+BAAoB;EACpB;EACA,+BAAoB;EACpB;EACA,qCAAoB;EACpB;EACA,+BAAoB;EACpB;EACA,+BAAoB;EACpB;EACA,0CAAoB;EACpB;EACA,wCAAoB;EACpB;EACA,gCAAoB;EACpB;EACA,oCAAoB;EACpB;EACA,kCAAoB;EACpB;EACA,sDAAoB;EACpB;EACA,kDAAoB;EACpB;EACA,8BAAoB;EAEpB;EACA,4CAA0B;EAC1B,gCAA0B;EAC1B,kCAA0B;EAC1B,kCAA0B;EAC1B,kCAA0B;EAC1B,kCAA0B;EAC1B,oCAA0B;EAC1B,oCAA0B;EAC1B,oCAA0B;EAC1B,uCAA2B;EAC3B,uCAA2B;EAC3B,uCAA2B;EAC3B,uCAA2B;EAC3B,uDAA2B;EAC3B,uDAA2B;EAC3B,iEAA2B;EAC3B,iEAA2B;EAC3B,+DAA2B;EAC3B,6CAA2B;EAC3B,uDAA2B;EAC3B,uDAA2B;EAC3B,qDAA2B;EAC3B,6CAA2B;EAC3B,+CAA2B;EAC3B,uDAA2B;EAC3B,2DAA2B;AAC/B,CAAC,EAjEW,IAAI,KAAJ,IAAI;AAmEhB,IAAY,UAoBT;AApBH,WAAY,UAAU;EAClB;;AAEG;EACH,+CAAU;EAEV;;AAEG;EACH,2CAAQ;EAER;;AAEG;EACH,mDAAY;EAEZ;;AAEG;EACH,2CAAQ;AACV,CAAC,EApBS,UAAU,KAAV,UAAU,Q;;AC1HtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACM,SAAU,OAAO,CAAC,KAAU,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;EACzE,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC;AAClC;AAEA;AACM,SAAU,MAAM,CAAC,KAAU,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;EACxE,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,KAAK,GAAc;AAC9C;AAEA;AACM,SAAU,OAAO,CAAC,KAAiB,EAAE,KAAa,EAAE,KAAU;EAChE,OAAO,KAAK,GACR,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,IAAM,CAAC,IAAK,KAAK,GAAG,CAAG,CAAC,IAAI,IAAI,GACpD,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAK,KAAK,GAAG,CAAE,CAAC,CAAC,IAAI,KAAK;AAC5D;AAEA;AACM,SAAU,cAAc,CAAC,MAAc,EAAE,MAAc,EAAE,MAAkB;EAC7E,MAAM,WAAW,GAAI,MAAM,CAAC,UAAU,GAAG,CAAC,GAAI,CAAC,CAAC;EAChD,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,UAAU,GAAG,WAAW,EAAE;IAC/C,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC;IACzC;IACA,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;IACrD;IACA,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IAC3F,OAAO,KAAK;EACf;EACD,OAAO,MAAM;AACjB;AAEA;AACM,SAAU,SAAS,CAAC,MAAqB;EAC3C,IAAI,EAAE,GAAa,EAAE;EACrB,IAAI,CAAC,GAAG,CAAC;IAAE,GAAG,GAAG,CAAC;IAAE,IAAI,GAAG,CAAC;EAC5B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;IACxB,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;IAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;MACb,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI;MACd,IAAI,GAAG,GAAG,GAAG,CAAC;IACjB;EACJ;EACD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI;EAAG;EAC3C,IAAI,CAAC,GAAG,IAAI,UAAU,CAAE,EAAE,CAAC,MAAM,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;EACT,OAAO,CAAC;AACZ;AAEA;AACM,UAAW,WAAW,CAAI,KAAiB,EAAE,KAAa,EAAE,MAAc,EAAE,OAAY,EAC9D,GAAkE;EAC9F,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC;EACnB,IAAI,SAAS,GAAG,KAAK,IAAI,CAAC;EAC1B,IAAI,KAAK,GAAG,CAAC;IAAE,SAAS,GAAG,MAAM;EACjC,OAAO,SAAS,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IAC3B,IAAI,IAAI,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IAC7B,GAAG;MACC,MAAM,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC;KACzC,QAAQ,EAAE,SAAS,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;EACxC;AACL;AAEA;;;;;AAKG;AACH;AACM,SAAU,gBAAgB,CAAC,IAAgB,EAAE,GAAW,EAAE,GAAW;EACvE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;IAAE,OAAO,CAAC;EAAG;EACjC;EACA,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;IACf,IAAI,GAAG,GAAG,CAAC;IACX,KAAK,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE;MAC/D,GAAG,IAAI,GAAG;IACb;IACD,OAAO,GAAG;EACb;EACD;EACA,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;EAC/B;EACA,MAAM,SAAS,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;EACzD;IACI;IACA,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,CAAC;IACtC;IACA,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,CAAC;IACtC;IACA,YAAY,CAAC,IAAI,EAAE,SAAS,IAAI,CAAC,EAAG,SAAS,GAAG,SAAS,IAAK,CAAC;EAAC;AAExE;AAEA;AACM,SAAU,YAAY,CAAC,GAAoB,EAAE,UAAmB,EAAE,UAAmB;EACvF,IAAI,GAAG,GAAG,CAAC;IAAE,GAAG,GAAG,UAAW,GAAG,CAAC;EAClC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC;EACrE,MAAM,GAAG,GAAI,UAAU,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,UAAU;EACtE,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;IACnB,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACzC,GAAG,IAAI,CAAC;EACX;EACD,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;IACnB,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACzC,GAAG,IAAI,CAAC;EACX;EACD,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;IACnB,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACxC,GAAG,IAAI,CAAC;EACX;EACD,OAAO,GAAG;AACd;AAEA;AACM,SAAU,aAAa,CAAC,MAAc;EACxC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC;EAClB,CAAC,GAAG,CAAC,IAAK,CAAC,KAAK,CAAC,GAAI,UAAU,CAAC;EAChC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,KAAM,CAAC,KAAK,CAAC,GAAI,UAAU,CAAC;EAC/C,OAAQ,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAI,UAAU,IAAI,UAAU,KAAM,EAAE;AAC/D,C;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE8B;AACI;AACoD;AACE;AAElF,MAAgB,OAAO;EAClB,SAAS,CAAC,KAAY,EAAkB;IAAA,kCAAb,IAAa;MAAb,IAAa;IAAA;IAC3C,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7E;EACO,KAAK,GAAe;IAAA,mCAAX,IAAW;MAAX,IAAW;IAAA;IACvB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;EAC5D;EACO,UAAU,CAAC,IAAS,EAAwB;IAAA,IAAtB,eAAe,uEAAG,IAAI;IAC/C,OAAO,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC;EAClD;EACO,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,QAAQ,CAAc,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,UAAU,CAAY,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,WAAW,CAAW,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,oBAAoB,CAAE,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,cAAc,CAAQ,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,YAAY,CAAU,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,SAAS,CAAa,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,WAAW,CAAW,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,UAAU,CAAY,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,eAAe,CAAO,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,aAAa,CAAS,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,kBAAkB,CAAI,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;EACvE,QAAQ,CAAc,KAAU,EAAiB;IAAS,OAAO,IAAI;EAAE;AACjF;AAED;AACA,SAAS,UAAU,CAAqB,OAAgB,EAAE,IAAS,EAAwB;EAAA,IAAtB,eAAe,uEAAG,IAAI;EACvF,IAAI,EAAE,GAAQ,IAAI;EAClB,IAAI,KAAK,GAAe,IAAI,CAAC,IAAI;EACjC;EACA,IAAS,IAAI,YAAY,SAAI,EAAM;IAAE,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAS,CAAC;GAAG,MACrE,IAAI,IAAI,YAAY,cAAM,EAAI;IAAE,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAS,CAAC;GAAG,MACrE,IAAI,IAAI,YAAY,aAAQ,EAAE;IAAE,KAAK,GAAG,UAAU,CAAC,IAAc,CAAC;GAAG,MACrE,IAAI,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,QAAQ,EAAE;IAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAsB;EAAG;EAEzF,QAAQ,KAAK;IACT,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,GAAG;MAAmB,EAAE,GAAG,OAAO,CAAC,QAAQ;MAAE;IACvD,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC5E,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC7E,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC7E,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC7E,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC7E,KAAK,IAAI,CAAC,MAAM;MAAgB,EAAE,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC9E,KAAK,IAAI,CAAC,MAAM;MAAgB,EAAE,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC9E,KAAK,IAAI,CAAC,MAAM;MAAgB,EAAE,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ;MAAE;IAC9E,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU;MAAE;IACzD,KAAK,IAAI,CAAC,OAAO;MAAe,EAAE,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,UAAU;MAAE;IACjF,KAAK,IAAI,CAAC,OAAO;MAAe,EAAE,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,UAAU;MAAE;IACjF,KAAK,IAAI,CAAC,OAAO;MAAe,EAAE,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,UAAU;MAAE;IACjF,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,MAAM;MAAgB,EAAE,GAAG,OAAO,CAAC,WAAW;MAAE;IAC1D,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB;MAAE;IACnE,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,OAAO;MAAe,EAAE,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,SAAS;MAAE;IAChF,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,SAAS;MAAE;IACxF,KAAK,IAAI,CAAC,SAAS;MAAa,EAAE,GAAG,OAAO,CAAC,cAAc;MAAE;IAC7D,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,cAAc;MAAE;IAC7F,KAAK,IAAI,CAAC,oBAAoB;MAAE,EAAE,GAAG,OAAO,CAAC,yBAAyB,IAAI,OAAO,CAAC,cAAc;MAAE;IAClG,KAAK,IAAI,CAAC,oBAAoB;MAAE,EAAE,GAAG,OAAO,CAAC,yBAAyB,IAAI,OAAO,CAAC,cAAc;MAAE;IAClG,KAAK,IAAI,CAAC,mBAAmB;MAAG,EAAE,GAAG,OAAO,CAAC,wBAAwB,IAAI,OAAO,CAAC,cAAc;MAAE;IACjG,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,UAAU;MAAY,EAAE,GAAG,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,SAAS;MAAE;IACnF,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,SAAS;MAAE;IACxF,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,SAAS;MAAE;IACxF,KAAK,IAAI,CAAC,cAAc;MAAQ,EAAE,GAAG,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,SAAS;MAAE;IACvF,KAAK,IAAI,CAAC,OAAO;MAAe,EAAE,GAAG,OAAO,CAAC,YAAY;MAAE;IAC3D,KAAK,IAAI,CAAC,IAAI;MAAkB,EAAE,GAAG,OAAO,CAAC,SAAS;MAAE;IACxD,KAAK,IAAI,CAAC,MAAM;MAAgB,EAAE,GAAG,OAAO,CAAC,WAAW;MAAE;IAC1D,KAAK,IAAI,CAAC,KAAK;MAAiB,EAAE,GAAG,OAAO,CAAC,UAAU;MAAE;IACzD,KAAK,IAAI,CAAC,UAAU;MAAY,EAAE,GAAG,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,UAAU;MAAE;IACpF,KAAK,IAAI,CAAC,WAAW;MAAW,EAAE,GAAG,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,UAAU;MAAE;IACrF,KAAK,IAAI,CAAC,UAAU;MAAY,EAAE,GAAG,OAAO,CAAC,eAAe;MAAE;IAC9D,KAAK,IAAI,CAAC,QAAQ;MAAc,EAAE,GAAG,OAAO,CAAC,aAAa;MAAE;IAC5D,KAAK,IAAI,CAAC,eAAe;MAAO,EAAE,GAAG,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,aAAa;MAAE;IAC5F,KAAK,IAAI,CAAC,iBAAiB;MAAK,EAAE,GAAG,OAAO,CAAC,sBAAsB,IAAI,OAAO,CAAC,aAAa;MAAE;IAC9F,KAAK,IAAI,CAAC,aAAa;MAAS,EAAE,GAAG,OAAO,CAAC,kBAAkB;MAAE;IACjE,KAAK,IAAI,CAAC,GAAG;MAAmB,EAAE,GAAG,OAAO,CAAC,QAAQ;MAAE;EAC1D;EACD,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE,OAAO,EAAE;EACvC,IAAI,CAAC,eAAe,EAAE,OAAO,MAAM,IAAI;EACvC,MAAM,IAAI,KAAK,8BAAuB,IAAI,CAAC,KAAK,CAAC,MAAG,CAAC;AACzD;AAEA;AACA,SAAS,UAAU,CAAqB,IAAO;EAC3C,QAAQ,IAAI,CAAC,MAAM;IACf,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,IAAI,CAAC,IAAI;IAChC,KAAK,IAAI,CAAC,GAAG;MACT,MAAM;QAAE,QAAQ;QAAE;MAAQ,CAAE,GAAI,IAAmB;MACnD,QAAQ,QAAQ;QACZ,KAAM,CAAC;UAAE,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAI,IAAI,CAAC,KAAK;QAClD,KAAK,EAAE;UAAE,OAAO,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;QACnD,KAAK,EAAE;UAAE,OAAO,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;QACnD,KAAK,EAAE;UAAE,OAAO,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;MACtD;MACD,OAAO,IAAI,CAAC,GAAG;IACnB,KAAK,IAAI,CAAC,KAAK;MACX,QAAQ,IAAqB,CAAC,SAAS;QACnC,KAAK,SAAS,CAAC,IAAI;UAAE,OAAO,IAAI,CAAC,OAAO;QACxC,KAAK,SAAS,CAAC,MAAM;UAAE,OAAO,IAAI,CAAC,OAAO;QAC1C,KAAK,SAAS,CAAC,MAAM;UAAE,OAAO,IAAI,CAAC,OAAO;MAC7C;MACD,OAAO,IAAI,CAAC,KAAK;IACrB,KAAK,IAAI,CAAC,MAAM;MAAE,OAAO,IAAI,CAAC,MAAM;IACpC,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,IAAI,CAAC,IAAI;IAChC,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,IAAI,CAAC,IAAI;IAChC,KAAK,IAAI,CAAC,OAAO;MAAE,OAAO,IAAI,CAAC,OAAO;IACtC,KAAK,IAAI,CAAC,IAAI;MACV,QAAS,IAAoB,CAAC,IAAI;QAC9B,KAAK,QAAQ,CAAC,MAAM;UAAE,OAAO,IAAI,CAAC,UAAU;QAC5C,KAAK,QAAQ,CAAC,WAAW;UAAE,OAAO,IAAI,CAAC,eAAe;QACtD,KAAK,QAAQ,CAAC,WAAW;UAAE,OAAO,IAAI,CAAC,eAAe;QACtD,KAAK,QAAQ,CAAC,UAAU;UAAE,OAAO,IAAI,CAAC,cAAc;MACvD;MACD,OAAO,IAAI,CAAC,IAAI;IACpB,KAAK,IAAI,CAAC,SAAS;MACf,QAAS,IAAyB,CAAC,IAAI;QACnC,KAAK,QAAQ,CAAC,MAAM;UAAE,OAAO,IAAI,CAAC,eAAe;QACjD,KAAK,QAAQ,CAAC,WAAW;UAAE,OAAO,IAAI,CAAC,oBAAoB;QAC3D,KAAK,QAAQ,CAAC,WAAW;UAAE,OAAO,IAAI,CAAC,oBAAoB;QAC3D,KAAK,QAAQ,CAAC,UAAU;UAAE,OAAO,IAAI,CAAC,mBAAmB;MAC5D;MACD,OAAO,IAAI,CAAC,SAAS;IACzB,KAAK,IAAI,CAAC,IAAI;MACV,QAAS,IAAqB,CAAC,IAAI;QAC/B,KAAK,QAAQ,CAAC,GAAG;UAAE,OAAO,IAAI,CAAC,OAAO;QACtC,KAAK,QAAQ,CAAC,WAAW;UAAE,OAAO,IAAI,CAAC,eAAe;MACzD;MACD,OAAO,IAAI,CAAC,IAAI;IACpB,KAAK,IAAI,CAAC,QAAQ;MACd,QAAS,IAAwB,CAAC,IAAI;QAClC,KAAK,YAAY,CAAC,QAAQ;UAAE,OAAO,IAAI,CAAC,eAAe;QACvD,KAAK,YAAY,CAAC,UAAU;UAAE,OAAO,IAAI,CAAC,iBAAiB;MAC9D;MACD,OAAO,IAAI,CAAC,QAAQ;IACxB,KAAK,IAAI,CAAC,GAAG;MAAE,OAAO,IAAI,CAAC,GAAG;IAC9B,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,IAAI,CAAC,IAAI;IAChC,KAAK,IAAI,CAAC,MAAM;MAAE,OAAO,IAAI,CAAC,MAAM;IACpC,KAAK,IAAI,CAAC,KAAK;MACX,QAAS,IAAqB,CAAC,IAAI;QAC/B,KAAK,SAAS,CAAC,KAAK;UAAE,OAAO,IAAI,CAAC,UAAU;QAC5C,KAAK,SAAS,CAAC,MAAM;UAAE,OAAO,IAAI,CAAC,WAAW;MACjD;MACD,OAAO,IAAI,CAAC,KAAK;IACrB,KAAK,IAAI,CAAC,eAAe;MAAE,OAAO,IAAI,CAAC,eAAe;IACtD,KAAK,IAAI,CAAC,aAAa;MAAE,OAAO,IAAI,CAAC,aAAa;IAClD,KAAK,IAAI,CAAC,UAAU;MAAE,OAAO,IAAI,CAAC,UAAU;EAC/C;EACD,MAAM,IAAI,KAAK,8BAAuB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAG,CAAC;AAC/D;AAgDA;AACA;AACC,OAAO,CAAC,SAAiB,CAAC,SAAS,GAAG,IAAI;AAC1C,OAAO,CAAC,SAAiB,CAAC,UAAU,GAAG,IAAI;AAC3C,OAAO,CAAC,SAAiB,CAAC,UAAU,GAAG,IAAI;AAC3C,OAAO,CAAC,SAAiB,CAAC,UAAU,GAAG,IAAI;AAC3C,OAAO,CAAC,SAAiB,CAAC,UAAU,GAAG,IAAI;AAC3C,OAAO,CAAC,SAAiB,CAAC,WAAW,GAAG,IAAI;AAC5C,OAAO,CAAC,SAAiB,CAAC,WAAW,GAAG,IAAI;AAC5C,OAAO,CAAC,SAAiB,CAAC,WAAW,GAAG,IAAI;AAC5C,OAAO,CAAC,SAAiB,CAAC,YAAY,GAAG,IAAI;AAC7C,OAAO,CAAC,SAAiB,CAAC,YAAY,GAAG,IAAI;AAC7C,OAAO,CAAC,SAAiB,CAAC,YAAY,GAAG,IAAI;AAC7C,OAAO,CAAC,SAAiB,CAAC,YAAY,GAAG,IAAI;AAC7C,OAAO,CAAC,SAAiB,CAAC,oBAAoB,GAAG,IAAI;AACrD,OAAO,CAAC,SAAiB,CAAC,oBAAoB,GAAG,IAAI;AACrD,OAAO,CAAC,SAAiB,CAAC,yBAAyB,GAAG,IAAI;AAC1D,OAAO,CAAC,SAAiB,CAAC,yBAAyB,GAAG,IAAI;AAC1D,OAAO,CAAC,SAAiB,CAAC,wBAAwB,GAAG,IAAI;AACzD,OAAO,CAAC,SAAiB,CAAC,eAAe,GAAG,IAAI;AAChD,OAAO,CAAC,SAAiB,CAAC,oBAAoB,GAAG,IAAI;AACrD,OAAO,CAAC,SAAiB,CAAC,oBAAoB,GAAG,IAAI;AACrD,OAAO,CAAC,SAAiB,CAAC,mBAAmB,GAAG,IAAI;AACpD,OAAO,CAAC,SAAiB,CAAC,eAAe,GAAG,IAAI;AAChD,OAAO,CAAC,SAAiB,CAAC,gBAAgB,GAAG,IAAI;AACjD,OAAO,CAAC,SAAiB,CAAC,oBAAoB,GAAG,IAAI;AACrD,OAAO,CAAC,SAAiB,CAAC,sBAAsB,GAAG,IAAI,C;;AC5PxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGqC;AAiErC;AACM,MAAO,6BAAe,SAAQ,OAAO;EACvC,cAAc,CAAwC,MAAiB,EAAE,KAAqB;IAC1F,OAAQ,MAAM,KAAK,KAAK,IACpB,KAAK,YAAY,MAAM,CAAC,WAAW,IACnC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CACrD;EACL;EACA,aAAa,CAAwC,MAA2B,EAAE,MAAuB;IACrG,OAAQ,MAAM,KAAK,MAAM,IACrB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IACrB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IACrB,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,IAC/B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAC7D;EACL;EACA,YAAY,CAA2B,KAAe,EAAE,KAAoB;IACxE,OAAQ,KAAK,KAAK,KAAK,IACnB,KAAK,YAAY,KAAK,CAAC,WAAW,IAClC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IACzB,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IACjC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CACxC;EACL;AACH;AAED,SAAS,kBAAkB,CAAqB,IAAO,EAAE,KAAuB;EAC5E,OAAO,KAAK,YAAY,IAAI,CAAC,WAAW;AAC5C;AAEA,SAAS,UAAU,CAAqB,IAAO,EAAE,KAAuB;EACpE,OAAQ,IAAI,KAAK,KAAK,IAAK,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC;AAC9D;AAEA,SAAS,UAAU,CAAgB,IAAO,EAAE,KAAuB;EAC/D,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAChC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAC3B;AACL;AAEA,SAAS,YAAY,CAAkB,IAAO,EAAE,KAAuB;EACnE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAC5B;AACL;AAEA,SAAS,sBAAsB,CAA4B,IAAO,EAAE,KAAuB;EACvF,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAC5B;AACL;AAEA,SAAS,WAAW,CAAkB,IAAO,EAAE,KAAuB;EAClE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IACvB;AACL;AAEA,SAAS,gBAAgB,CAAsB,IAAO,EAAE,KAAuB;EAC3E,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IACxB,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAC3B;AACL;AAEA,SAAS,WAAW,CAAiB,IAAO,EAAE,KAAuB;EACjE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IACxB,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAC3B;AACL;AAEA,SAAS,WAAW,CAAiB,IAAO,EAAE,KAAuB;EACjE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,IAC9C,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CACvD;AACL;AAEA,SAAS,aAAa,CAAmB,IAAO,EAAE,KAAuB;EACrE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,IAC9C,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CACvD;AACL;AAEA,SAAS,YAAY,CAAkB,IAAO,EAAE,KAAuB;EACnE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IACpD,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CACvD;AACL;AAEA,SAAS,iBAAiB,CAAuB,IAAO,EAAE,KAAuB;EAC7E,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,IACpB,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAClC,QAAQ,CAAC,KAAK,CAAO,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,IACjD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CACnD;AACL;AAEA,SAAS,eAAe,CAAqB,IAAO,EAAE,KAAuB;EACzE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IACvB;AACL;AAEA,SAAS,oBAAoB,CAA0B,IAAO,EAAE,KAAuB;EACnF,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,IAC9C,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CACvD;AACL;AAEA,SAAS,UAAU,CAAiB,IAAO,EAAE,KAAuB;EAChE,OAAQ,IAAI,KAAK,KAAK,IAClB,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAC/B,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,IAC9C,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CACvD;AACL;AAEA,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA+B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA+B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,QAAQ,GAAgC,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA+B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA8B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA8B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA8B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA8B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,WAAW,GAA6B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,WAAW,GAA6B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,WAAW,GAA6B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA4B,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,YAAY,GAA0B,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,YAAY,GAA0B,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,YAAY,GAA0B,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA+B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,WAAW,GAA6B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,sBAAsB;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA8B,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,YAAY,GAA2B,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAmB,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,cAAc,GAAoB,gBAAgB;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAc,gBAAgB;AAC3E,6BAAc,CAAC,SAAS,CAAC,yBAAyB,GAAS,gBAAgB;AAC3E,6BAAc,CAAC,SAAS,CAAC,yBAAyB,GAAS,gBAAgB;AAC3E,6BAAc,CAAC,SAAS,CAAC,wBAAwB,GAAU,gBAAgB;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA8B,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,eAAe,GAAwB,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAmB,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAmB,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,mBAAmB,GAAoB,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,YAAY,GAA4B,UAAU;AAC3E,6BAAc,CAAC,SAAS,CAAC,SAAS,GAA8B,WAAW;AAC3E,6BAAc,CAAC,SAAS,CAAC,WAAW,GAA0B,aAAa;AAC3E,6BAAc,CAAC,SAAS,CAAC,UAAU,GAA4B,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,eAAe,GAAuB,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,gBAAgB,GAAsB,YAAY;AAC3E,6BAAc,CAAC,SAAS,CAAC,eAAe,GAAkB,iBAAiB;AAC3E,6BAAc,CAAC,SAAS,CAAC,aAAa,GAAsB,eAAe;AAC3E,6BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAe,eAAe;AAC3E,6BAAc,CAAC,SAAS,CAAC,sBAAsB,GAAa,eAAe;AAC3E,6BAAc,CAAC,SAAS,CAAC,kBAAkB,GAAY,oBAAoB;AAC3E,6BAAc,CAAC,SAAS,CAAC,QAAQ,GAAgC,UAAU;AAE3E;AACO,MAAM,QAAQ,GAAG,IAAI,6BAAc,EAAE,C;;AC3Q5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQgE;AAOhD;AA8BhB;;;AAGG;AACG,MAAgB,aAAQ;EAK1B,kBAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAmB,KAAK,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG;EAAc;EAC5H;EAAmB,OAAiB,OAAO,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK;EAAY;EAC5H;EAAmB,OAAgB,QAAQ,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;EAAW;EAC5H;EAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAe,SAAS,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO;EAAU;EAC5H;EAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAa,WAAW,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS;EAAQ;EAC5H;EAAmB,OAAc,UAAU,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ;EAAS;EAC5H;EAAmB,OAAkB,MAAM,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI;EAAa;EAC5H;EAAmB,OAAgB,QAAQ,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;EAAW;EAC5H;EAAmB,OAAiB,OAAO,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK;EAAY;EAC5H;EAAmB,OAAO,iBAAiB,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,eAAe;EAAE;EAC5H;EAAmB,OAAS,eAAe,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa;EAAI;EAC5H;EAAmB,OAAmB,KAAK,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG;EAAc;EAC5H;EAAmB,OAAY,YAAY,CAAE,CAAM;IAA0B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU;EAAO;EAE5H,IAAW,MAAM;IAAY,OAAa,IAAI,CAAC,IAAI;EAAE;EAC9C,SAAS,CAAC,KAAe;IAC5B,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;EACtC;;AAEiB,cAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAe,IAAI;EAClD,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,SAAS,GAAG,KAAK;EAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,UAAU;AACjD,CAAC,EAAE,aAAQ,CAAC,SAAS,CAAC;AAK1B;AACM,MAAO,SAAK,SAAQ,aAAmB;EAClC,QAAQ;IAAK;EAAe;EACnC,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAiB;EAAE;;AACpC,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EACrD,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAoBtB;AACA,MAAM,SAA4B,SAAQ,aAAW;EACjD,YAA4B,QAA8B,EAC9B,QAA8B;IACtD,KAAK,EAAE;IAFiB,aAAQ,GAAR,QAAQ;IACR,aAAQ,GAAR,QAAQ;EAEpC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,GAAQ;EAAE;EAC5C,IAAW,SAAS;IAChB,QAAQ,IAAI,CAAC,QAAQ;MACjB,KAAM,CAAC;QAAE,OAAO,IAAI,CAAC,QAAQ,GAAI,SAAS,GAAI,UAAU;MACxD,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,WAAW;MACxD,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,WAAW;MACxD,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,WAAW;IAC3D;IACD,MAAM,IAAI,KAAK,wBAAiB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAO,CAAC;EACpE;EACO,QAAQ;IAAK,iBAAU,IAAI,CAAC,QAAQ,aAAa,eAAK,IAAI,CAAC,QAAQ;EAAI;;AAC7D,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EAC9C,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,QAAQ,GAAG,IAAI;EAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK;AAC5C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAGC;AAEvB;AACM,MAAO,IAAK,SAAQ,SAAe;EAAG;IAAgB,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EAAE;AAAG;AAC/E;AACM,MAAO,KAAM,SAAQ,SAAgB;EAAG;IAAgB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;EAAE;AAAG;AAClF;AACM,MAAO,KAAM,SAAQ,SAAgB;EAAG;IAAgB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;EAAE;AAAG;AAClF;AACM,MAAO,KAAM,SAAQ,SAAgB;EAAG;IAAgB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;EAAE;AAAG;AAClF;AACM,MAAO,KAAM,SAAQ,SAAgB;EAAG;IAAgB,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;EAAE;AAAG;AAClF;AACM,MAAO,MAAO,SAAQ,SAAiB;EAAG;IAAgB,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC;EAAE;AAAG;AACrF;AACM,MAAO,MAAO,SAAQ,SAAiB;EAAG;IAAgB,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC;EAAE;AAAG;AACrF;AACM,MAAO,MAAO,SAAQ,SAAiB;EAAG;IAAgB,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC;EAAE;AAAG;AAErF,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAS,CAAE,CAAC;AACxE,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAU,CAAE,CAAC;AAC1E,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAU,CAAE,CAAC;AAC1E,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAU,CAAE,CAAC;AAC1E,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAU,CAAE,CAAC;AAC1E,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAW,CAAE,CAAC;AAC5E,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAW,CAAE,CAAC;AAC5E,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAW,CAAE,CAAC;AAc5E;AACM,MAAO,UAAiC,SAAQ,aAAW;EAC7D,YAA4B,SAAoB;IAC5C,KAAK,EAAE;IADiB,cAAS,GAAT,SAAS;EAErC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAU;EAAE;EAC9C,IAAW,SAAS;IAChB,QAAQ,IAAI,CAAC,SAAS;MAClB,KAAK,SAAS,CAAC,IAAI;QAAE,OAAO,WAAW;MACvC,KAAK,SAAS,CAAC,MAAM;QAAE,OAAO,YAAY;MAC1C,KAAK,SAAS,CAAC,MAAM;QAAE,OAAO,YAAY;IAC7C;IACD,MAAM,IAAI,KAAK,wBAAiB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAO,CAAC;EACpE;EACO,QAAQ;IAAK,sBAAgB,IAAI,CAAC,SAAS,IAAI,CAAC,IAAK,EAAE;EAAI;;AACjD,WAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAY,IAAI;EAC/C,KAAM,CAAC,SAAS,GAAG,IAAI;EAC9B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,OAAO;AAC9C,CAAC,EAAE,UAAK,CAAC,SAAS,CAAC;AAGvB;AACM,MAAO,YAAQ,SAAQ,UAAmB;EAAG;IAAgB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;EAAE;AAAG;AAC7F;AACM,MAAO,YAAQ,SAAQ,UAAmB;EAAG;IAAgB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;EAAE;AAAG;AAC/F;AACM,MAAO,YAAQ,SAAQ,UAAmB;EAAG;IAAgB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;EAAE;AAAG;AAE/F,MAAM,CAAC,cAAc,CAAC,YAAO,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAW,CAAE,CAAC;AAC7E,MAAM,CAAC,cAAc,CAAC,YAAO,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAY,CAAE,CAAC;AAC9E,MAAM,CAAC,cAAc,CAAC,YAAO,CAAC,SAAS,EAAE,WAAW,EAAE;EAAE,KAAK,EAAE;AAAY,CAAE,CAAC;AAI9E;AACM,MAAO,WAAO,SAAQ,aAAqB;EAC7C;IACI,KAAK,EAAE;EACX;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,MAAqB;EAAE;EAClD,QAAQ;IAAK;EAAiB;;AACpB,YAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAa,IAAI;EAChD,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ;AAC/C,CAAC,EAAE,WAAM,CAAC,SAAS,CAAC;AAKxB;AACM,MAAO,SAAK,SAAQ,aAAmB;EACzC;IACI,KAAK,EAAE;EACX;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAiB;EAAE;EAC9C,QAAQ;IAAK;EAAe;;AAClB,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EAC9C,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAKtB;AACM,MAAO,SAAK,SAAQ,aAAmB;EACzC;IACI,KAAK,EAAE;EACX;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAiB;EAAE;EAC9C,QAAQ;IAAK;EAAe;;AAClB,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EAC9C,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAKtB;AACM,MAAO,YAAQ,SAAQ,aAAsB;EAC/C,YAA4B,KAAa,EACb,SAAiB;IACzC,KAAK,EAAE;IAFiB,UAAK,GAAL,KAAK;IACL,cAAS,GAAT,SAAS;EAErC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAuB;EAAE;EACpD,QAAQ;IAAK,yBAAkB,IAAI,CAAC,SAAS,cAAI,IAAI,CAAC,KAAK,GAAG,CAAC,WAAW,SAAG,IAAI,CAAC,KAAK;EAAK;;AAClF,aAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAc,IAAI;EACjD,KAAM,CAAC,KAAK,GAAG,IAAI;EACnB,KAAM,CAAC,SAAS,GAAG,IAAI;EACvB,KAAM,CAAC,SAAS,GAAG,WAAW;EACrC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS;AAChD,CAAC,EAAE,YAAO,CAAC,SAAS,CAAC;AAOzB;AACM,MAAO,UAA+B,SAAQ,aAAW;EAC3D,YAA4B,IAAc;IACtC,KAAK,EAAE;IADiB,SAAI,GAAJ,IAAI;EAEhC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAS;EAAE;EACtC,QAAQ;IAAK,qBAAc,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,cAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;EAAK;;AACjE,WAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAY,IAAI;EAC/C,KAAM,CAAC,IAAI,GAAG,IAAI;EAClB,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,UAAK,CAAC,SAAS,CAAC;AAGvB;AACM,MAAO,YAAQ,SAAQ,UAAmB;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;EAAE;AAAG;AAC3F;AACM,MAAO,oBAAgB,SAAQ,UAA2B;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;EAAE;AAAG;AAenH;AACA,MAAM,UAA+B,SAAQ,aAAW;EACpD,YAA4B,IAA0B,EAC1B,QAAsB;IAC9C,KAAK,EAAE;IAFiB,SAAI,GAAJ,IAAI;IACJ,aAAQ,GAAR,QAAQ;EAEpC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAS;EAAE;EACtC,QAAQ;IAAK,qBAAc,IAAI,CAAC,QAAQ,cAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;EAAK;;AAC1D,WAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAY,IAAI;EAC/C,KAAM,CAAC,IAAI,GAAG,IAAI;EAClB,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,UAAK,CAAC,SAAS,CAAC;AAGE;AAEzB;AACM,MAAO,eAAW,SAAQ,UAAsB;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;EAAE;AAAG;AACxG;AACM,MAAO,oBAAgB,SAAQ,UAA2B;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC;EAAE;AAAG;AACvH;AACM,MAAO,oBAAgB,SAAQ,UAA2B;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC;EAAE;AAAG;AACvH;AACM,MAAO,mBAAe,SAAQ,UAA0B;EAAG;IAAgB,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC;EAAE;AAAG;AAMpH;AACA,MAAM,eAA8C,SAAQ,aAAW;EACnE,YAA4B,IAAc,EACd,QAAwB;IAChD,KAAK,EAAE;IAFiB,SAAI,GAAJ,IAAI;IACJ,aAAQ,GAAR,QAAQ;EAEpC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,SAAc;EAAE;EAC3C,QAAQ;IAAK,2BAAoB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAG,IAAI,CAAC,QAAQ,eAAQ,IAAI,CAAC,QAAQ,MAAO;EAAK;;AAC3F,gBAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAiB,IAAI;EACpD,KAAM,CAAC,IAAI,GAAG,IAAI;EAClB,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,WAAW;AAClD,CAAC,EAAE,eAAU,CAAC,SAAS,CAAC;AAGO;AAEnC;AACM,MAAO,oBAAgB,SAAQ,eAAgC;EAAG,YAAY,QAAwB;IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC;EAAE;AAAG;AACrJ;AACM,MAAO,yBAAqB,SAAQ,eAAqC;EAAG,YAAY,QAAwB;IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC;EAAE;AAAG;AACpK;AACM,MAAO,yBAAqB,SAAQ,eAAqC;EAAG,YAAY,QAAwB;IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC;EAAE;AAAG;AACpK;AACM,MAAO,wBAAoB,SAAQ,eAAoC;EAAG,YAAY,QAAwB;IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC;EAAE;AAAG;AAMjK;AACA,MAAM,cAA2C,SAAQ,aAAW;EAChE,YAA4B,IAAkB;IAC1C,KAAK,EAAE;IADiB,SAAI,GAAJ,IAAI;EAEhC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,QAAa;EAAE;EAC1C,QAAQ;IAAK,0BAAmB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;EAAK;;AAClD,eAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAgB,IAAI;EACnD,KAAM,CAAC,IAAI,GAAG,IAAI;EAClB,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,UAAU;AACjD,CAAC,EAAE,cAAS,CAAC,SAAS,CAAC;AAGM;AAEjC;AACM,MAAO,oBAAgB,SAAQ,cAA+B;EAAG;IAAgB,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC;EAAE;AAAG;AACxH;AACM,MAAO,sBAAkB,SAAQ,cAAiC;EAAG;IAAgB,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC;EAAE;AAAG;AAI9H;AACM,MAAO,SAA+B,SAAQ,aAA+B;EAC/E,YAAY,KAAe;IACvB,KAAK,EAAE;IACP,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;EAC3B;EAEA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAiB;EAAE;EAC9C,QAAQ;IAAK,sBAAe,IAAI,CAAC,SAAS;EAAK;EACtD,IAAW,SAAS;IAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAS;EAAE;EAC/D,IAAW,UAAU;IAAe,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAa;EAAE;EACzE,IAAW,SAAS;IAAqB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS;EAAE;;AACzD,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EAC9C,KAAM,CAAC,QAAQ,GAAG,IAAI;EAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAKtB;AACM,MAAO,WAAoD,SAAQ,aAAwB;EAE7F,YAAY,QAA6B;IACrC,KAAK,EAAE;IACP,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,MAAqB;EAAE;EAClD,QAAQ;IAAK,yBAAkB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,cAAQ,CAAC,CAAC,IAAI,cAAI,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,IAAI,KAAK,CAAC;EAAM;;AACrF,YAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAa,IAAI;EAChD,KAAM,CAAC,QAAQ,GAAG,IAAI;EAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ;AAC/C,CAAC,EAAE,WAAM,CAAC,SAAS,CAAC;AAOxB;AACA,MAAM,WAAkC,SAAQ,aAAW;EAKvD,YAAY,IAAe,EACf,OAA8B,EAC9B,QAAsB;IAC9B,KAAK,EAAE;IACP,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ;IACxB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;IACjD,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,MAAM,EAAE,GAAG,KAAI;MACzE,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,kBAAkB,IAAI,kBAAkB;IACzF,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAA8B,CAAC;EACxD;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAU;EAAE;EACvC,QAAQ;IAAK,iBAAU,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,cAClD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,cAAQ,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,IAAI,MAAM,CACpD;EAAK;;AACY,YAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAa,IAAI;EAChD,KAAM,CAAC,IAAI,GAAG,IAAI;EAClB,KAAM,CAAC,OAAO,GAAG,IAAI;EACrB,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,kBAAkB,GAAG,IAAI;EAChC,KAAM,CAAC,SAAS,GAAG,SAAS;EACnC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,OAAO;AAC9C,CAAC,EAAE,WAAM,CAAC,SAAS,CAAC;AAGG;AAE3B;AACM,MAAO,eAAW,SAAQ,WAAuB;EACnD,YAAY,OAA8B,EAAE,QAAiB;IACzD,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC7C;AACH;AAED;AACM,MAAO,gBAAY,SAAQ,WAAwB;EACrD,YAAY,OAA8B,EAAE,QAAiB;IACzD,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC9C;AACH;AAID;AACM,MAAO,oBAAgB,SAAQ,aAA8B;EAC/D,YAA4B,SAAiB;IACzC,KAAK,EAAE;IADiB,cAAS,GAAT,SAAS;EAErC;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,eAAuC;EAAE;EACpE,QAAQ;IAAK,iCAA0B,IAAI,CAAC,SAAS;EAAK;;AAChD,qBAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAsB,IAAI;EACzD,KAAM,CAAC,SAAS,GAAG,IAAI;EACvB,KAAM,CAAC,SAAS,GAAG,UAAU;EACpC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,iBAAiB;AACxD,CAAC,EAAE,oBAAe,CAAC,SAAS,CAAC;AAKjC;AACM,MAAO,kBAAwC,SAAQ,aAAwC;EAEjG,YAA4B,QAAgB,EAAE,KAAe;IACzD,KAAK,EAAE;IADiB,aAAQ,GAAR,QAAQ;IAEhC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;EAC3B;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,aAAmC;EAAE;EACvE,IAAW,SAAS;IAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAS;EAAE;EAC/D,IAAW,UAAU;IAAe,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAa;EAAE;EACzE,IAAW,SAAS;IAAqB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS;EAAE;EACnE,QAAQ;IAAK,+BAAwB,IAAI,CAAC,QAAQ,eAAK,IAAI,CAAC,SAAS;EAAK;;AAChE,mBAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAoB,IAAI;EACvD,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,QAAQ,GAAG,IAAI;EAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,eAAe;AACtD,CAAC,EAAE,kBAAa,CAAC,SAAS,CAAC;AAU/B;AACM,MAAO,SAAiE,SAAQ,aAAkB;EACpG,YAAY,KAAkD,EAAoB;IAAA,IAAlB,UAAU,uEAAG,KAAK;IAC9E,KAAK,EAAE;IACP,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;IACvB,IAAI,CAAC,UAAU,GAAG,UAAU;EAChC;EAGA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,GAAe;EAAE;EACnD,IAAW,OAAO;IAAW,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAY;EAAE;EACpF,IAAW,SAAS;IAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAc;EAAE;EACnF,QAAQ;IAAK,sBAAe,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,cAAQ,CAAC,CAAC,IAAI,cAAI,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,IAAI,KAAK,CAAC;EAAM;;AACnG,UAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAW,IAAI;EAC9C,KAAM,CAAC,QAAQ,GAAG,IAAI;EACtB,KAAM,CAAC,UAAU,GAAG,IAAI;EAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM;AAC7C,CAAC,EAAE,SAAI,CAAC,SAAS,CAAC;AAGtB;AACA,MAAM,KAAK,GAAG,CAAE,kBAAkB,IAAK,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAOtE;AACM,MAAO,eAAiE,SAAQ,aAAyB;EAK3G,YAAY,UAAa,EAAE,OAAa,EAAE,EAAyB,EAAE,SAA0B;IAC3F,KAAK,EAAE;IACP,IAAI,CAAC,OAAO,GAAG,OAAO;IACtB,IAAI,CAAC,UAAU,GAAG,UAAU;IAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,KAAK;IACnC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,KAAK,EAAE,GAAG,OAAO,EAAE,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;EACzE;EACA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,UAA6B;EAAE;EACjE,IAAW,QAAQ;IAAK,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;EAAE;EACzD,IAAW,SAAS;IAAQ,OAAO,IAAI,CAAC,UAAe;EAAE;EACzD,IAAW,SAAS;IAAqB,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS;EAAE;EACpE,QAAQ;IAAK,4BAAqB,IAAI,CAAC,OAAO,eAAK,IAAI,CAAC,UAAU;EAAK;;AAC7D,gBAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAiB,IAAI;EACpD,KAAM,CAAC,EAAE,GAAG,IAAI;EAChB,KAAM,CAAC,OAAO,GAAG,IAAI;EACrB,KAAM,CAAC,SAAS,GAAG,IAAI;EACvB,KAAM,CAAC,UAAU,GAAG,IAAI;EAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,YAAY;AACnD,CAAC,EAAE,eAAU,CAAC,SAAS,CAAC;AAU5B;AACM,SAAU,aAAa,CAAC,IAAc;EACxC,IAAI,CAAC,GAAQ,IAAI;EACjB,QAAQ,IAAI,CAAC,MAAM;IACf,KAAK,IAAI,CAAC,OAAO;MAAE,OAAO,CAAC;IAC3B,KAAK,IAAI,CAAC,SAAS;MAAE,OAAO,CAAC;IAC7B,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,CAAC,GAAI,CAAW,CAAC,IAAI;IAC5C,KAAK,IAAI,CAAC,QAAQ;MAAE,OAAO,CAAC,GAAI,CAAe,CAAC,IAAI;IACpD,KAAK,IAAI,CAAC,GAAG;MAAE,OAAO,CAAC,GAAG,EAAG,CAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;IACtD,KAAK,IAAI,CAAC,IAAI;MAAE,OAAO,CAAC,GAAG,EAAG,CAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;IACxD,KAAK,IAAI,CAAC,aAAa;MAAE,OAAQ,CAAmB,CAAC,QAAQ;IAC7D,KAAK,IAAI,CAAC,eAAe;MAAE,OAAQ,CAAqB,CAAC,SAAS;IAClE;MAAS,OAAO,CAAC;EACpB;AACL,C;;ACtmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG4C;AACE;AACO;AACqB;AACI;AAc9E;AAAsB,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAsBlD;AACM,MAAO,SAAI;EA+Cb,YAAY,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAkB,EAAE,OAAuC,EAAE,SAA6B,EAAE,UAAmB;IAChK,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,UAAU,GAAG,UAAU;IAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAI,CAAC,SAAS,GAAG,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAE,CAAC,IAAK,CAAC,YAAY,SAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAW;IACvF,IAAI,MAAoC;IACxC,IAAI,OAAO,YAAY,SAAI,EAAE;MACzB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;MAC5B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;MAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO;MAC9B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU;MACpC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;KAC3C,MAAM;MACH,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC;MACjC,IAAI,OAAO,EAAE;QACT,CAAC,MAAM,GAAI,OAAsB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QACrE,CAAC,MAAM,GAAI,OAAsB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAC/D,CAAC,MAAM,GAAI,OAAsB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACnE,CAAC,MAAM,GAAI,OAAsB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;MACnE;IACJ;EACL;EAjDA,IAAW,MAAM;IAAiB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC3D,IAAW,SAAS;IAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;EAAE;EACrE,IAAW,OAAO;IACd,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAe;EACxF;EACA,IAAW,UAAU;IACjB,IAAI,UAAU,GAAG,CAAC;IAClB,IAAI;MAAE,YAAY;MAAE,MAAM;MAAE,UAAU;MAAE;IAAO,CAAE,GAAG,IAAI;IACxD,YAAY,KAAK,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC;IACvD,MAAM,KAAW,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC;IACjD,UAAU,KAAO,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC;IACrD,OAAO,KAAU,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC;IAClD,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,KAAK,KAAK,UAAU,GAAG,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC;EAClG;EAIA,IAAW,SAAS;IAChB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU;IAC/B,IAAI,UAAkC;IACtC,IAAI,SAAS,IAAI,iBAAiB,KAAK,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE;MAClE,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACnH;IACD,OAAO,SAAS;EACpB;EA2BO,KAAK,CAAqB,IAAO,EAA0J;IAAA,IAAxJ,MAAM,uEAAG,IAAI,CAAC,MAAM;IAAA,IAAE,MAAM,uEAAG,IAAI,CAAC,MAAM;IAAA,IAAE,SAAS,uEAAG,IAAI,CAAC,UAAU;IAAA,IAAE,8EAA4B,IAAI;IAAA,IAAE,gFAA+B,IAAI,CAAC,SAAS;IAC9L,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC;EACzF;EAEO,KAAK,CAAC,MAAc,EAAE,MAAc;IACvC,MAAM;MAAE,MAAM;MAAE,MAAM;MAAE;IAAS,CAAE,GAAG,IAAI;IAC1C;IACA;IACA;IACA,MAAM,SAAS,GAAG,EAAE,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG,CAAC;IAC9C,MAAM,WAAW,GAAG,MAAM,KAAK,EAAE,CAAC,sBAAsB,MAAM,GAAG,CAAC;IAClE,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;IAClE,OAAO,IAAI,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO;IAC5E;IACC,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,GAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,GAAG,MAAM,CAAC,CAAC;EAC1I;EAEO,kCAAkC,CAAC,SAAiB;IACvD,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;MAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;IAChD;IACD,MAAM;MAAE,MAAM;MAAE;IAAS,CAAE,GAAG,IAAI;IAClC;IACA,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,CAAE,SAAS,GAAG,EAAE,GAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,CAAC;IACtF;IACA,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAK,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,CAAE,IAAI,CAAC;IACzD;IACA,IAAI,SAAS,GAAG,CAAC,EAAE;MACf,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACtE;IACD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,MAAM;IACrC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,IAAI,SAAS,GAAG,MAAM,CAAC,EAAE,OAAO,CAAC;EACzF;EAEU,aAAa,CAAC,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,MAAkB;IACtF,IAAI,GAAQ;MAAE;QAAE;MAAO,CAAE,GAAG,IAAI;IAChC;IACA,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;IACtG;IACA,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9G;IACA,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IAC/I,OAAO,OAAO;EAClB;EAEU,cAAc,CAAC,SAAiB,EAAE,MAAc,EAAE,MAAc;IACtE,OAAO,SAAS,CAAC,GAAG,CAAE,KAAK,IAAK,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAChE;EAEA;EACA;EACA;EACA;EACO,OAAO,GAAG,CAAqB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAkB,EAAE,OAAuC,EAAE,SAA6B,EAAE,UAAmB;IAC1L,IAAI,OAAO,YAAY,SAAI,EAAE;MAAE,OAAO,GAAG,OAAO,CAAC,OAAO;KAAG,MAAM,IAAI,CAAC,OAAO,EAAE;MAAE,OAAO,GAAG,EAAyB;IAAG;IACvH,QAAQ,IAAI,CAAC,MAAM;MACf,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAY,EAAa,MAAM,EAAE,MAAM,CAAY;MAC/H,KAAK,IAAI,CAAC,GAAG;QAAc,OAAiB,SAAI,CAAC,GAAG,CAAwB,IAAW,EAAc,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,UAAU;QAAO,OAAiB,SAAI,CAAC,UAAU,CAAiB,IAAkB,EAAO,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,UAAW,CAAY;MAC1N,KAAK,IAAI,CAAC,KAAK;QAAY,OAAiB,SAAI,CAAC,KAAK,CAAsB,IAAa,EAAY,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAY,EAAa,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,OAAO;QAAU,OAAiB,SAAI,CAAC,OAAO,CAAoB,IAAe,EAAU,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAa,EAAY,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAY,EAAa,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,SAAS;QAAQ,OAAiB,SAAI,CAAC,SAAS,CAAkB,IAAiB,EAAQ,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,QAAQ;QAAS,OAAiB,SAAI,CAAC,QAAQ,CAAmB,IAAgB,EAAS,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,eAAe;QAAE,OAAiB,SAAI,CAAC,eAAe,CAAY,IAAuB,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC7M,KAAK,IAAI,CAAC,MAAM;QAAW,OAAiB,SAAI,CAAC,MAAM,CAAqB,IAAc,EAAW,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC/O,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAY,EAAa,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAY;MAC/O,KAAK,IAAI,CAAC,IAAI;QAAa,OAAiB,SAAI,CAAC,IAAI,CAAuB,IAAY,EAAa,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC,CAAC,CAAY;MACrO,KAAK,IAAI,CAAC,aAAa;QAAI,OAAiB,SAAI,CAAC,aAAa,CAAc,IAAqB,EAAI,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC,CAAC,CAAY;MACnM,KAAK,IAAI,CAAC,MAAM;QAAW,OAAiB,SAAI,CAAC,MAAM,CAAqB,IAAc,EAAW,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,SAAS,IAAI,EAAE,CAAY;MAC9L,KAAK,IAAI,CAAC,GAAG;QAAc,OAAiB,SAAI,CAAC,GAAG,CAAwB,IAAY,EAAa,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC,CAAC,CAAY;MACrO,KAAK,IAAI,CAAC,KAAK;QAAY,OAAiB,SAAI,CAAC,KAAK,CAAsB,IAAa,EAAY,MAAM,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,SAAS,EAAE,SAAS,CAAY;IACpQ;IACD,MAAM,IAAI,KAAK,+BAAwB,IAAI,CAAC,MAAM,CAAE,CAAC;EACzD;EAEA;EACO,OAAO,IAAI,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc;IACtE,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;EAC5C;EACA;EACO,OAAO,GAAG,CAAgB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IACpI,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,UAAU,CAAuB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB,EAAE,UAAmC;IACvL,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAc,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC;EACzK;EACA;EACO,OAAO,KAAK,CAAkB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IACxI,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,IAAI,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IACtI,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,OAAO,CAAoB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IAC5I,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,IAAI,CAAkB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IACvI,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,IAAI,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IACtI,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,SAAS,CAAsB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IAChJ,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,QAAQ,CAAqB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IAC9I,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,eAAe,CAA4B,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,IAAmB;IAC5J,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACpI;EACA;EACO,OAAO,MAAM,CAAmB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,YAAgC,EAAE,IAAgB;IACzK,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EAChI;EACA;EACO,OAAO,IAAI,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,YAAgC,EAAE,IAAgB;IACrK,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EAChI;EACA;EACO,OAAO,IAAI,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,YAAgC,EAAE,KAAoD;IACzM,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAChI;EACA;EACO,OAAO,aAAa,CAA0B,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,KAAoD;IACzL,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAC/G;EACA;EACO,OAAO,MAAM,CAAmB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,QAA2B;IAClJ,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC;EAChH;EACA;EACO,OAAO,GAAG,CAAiB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,YAAgC,EAAE,KAAsB;IAC1K,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAChI;EAIA;EACO,OAAO,KAAK,CAAkB,IAAO,EAAE,MAAc,EAAE,MAAc,EAAE,SAAiB,EAAE,UAAsB,EAAE,OAAsB,EAAE,sBAA8D,EAAE,QAA4B;IACzO,MAAM,OAAO,GAAa,CACtB,SAAS,EAAE,SAAS,EACpB,YAAY,CAAC,UAAU,CAAC,EACxB,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CACtB;IACxB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE;MAChC,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,sBAA2C,CAAC;IACzG;IACD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,YAAY,CAAsB,sBAAsB,CAAC;IACtF,OAAO,IAAI,SAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;EACvE;AACH;AAEA,SAAI,CAAC,SAAiB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,C;;ACxSrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAe,MAAM,IAAI,GAAG,KAAM,CAAE;AAEpC;AACM,SAAU,aAAa,CAAC,CAAM;EAChC,IAAI,CAAC,KAAK,IAAI,EAAE;IAAE,OAAO,MAAM;EAAG;EAClC,IAAI,CAAC,KAAK,IAAI,EAAE;IAAE,OAAO,WAAW;EAAG;EACvC,QAAQ,OAAO,CAAC;IACZ,KAAK,QAAQ;MAAE,iBAAU,CAAC;IAC1B,KAAK,QAAQ;MAAE,iBAAU,CAAC;IAC1B,KAAK,QAAQ;MAAE,mBAAW,CAAC;EAC9B;EACD;EACA;EACA;EACA;EACA,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,EAAE;IAC7C,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;EACzC;EACD,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,cAAO,CAAC,SAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/D,C;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+C;AACE;AAEjD;;;;;;;;;;;;;;;;;;;AAmBG;AACG,SAAU,qBAAqB,CAAwC,UAAiC;EAE1G,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;IACvC;IACA,OAAO,SAAS,OAAO,CAAC,KAAU;MAAI,OAAO,IAAI;IAAE,CAAC;EACvD;EAED,IAAI,MAAM,GAAG,EAAE;EACf,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAE,CAAC,IAAK,CAAC,KAAK,CAAC,CAAC;EAE9C,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;IACnB,MAAM,+BACI,MAAM,CAAC,GAAG,CAAE,CAAC,6BAChB,WAAW,CAAC,CAAC,CAAC,MAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,uCAEpC;EACD;EAED;EACA;EACA,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;IACrC,MAAM,yCAAkC,MAAM,CAAE;EACnD;EAED,OAAO,IAAI,QAAQ,gBAAS,MAAM,mBAAgB,CAA4C;AAClG;AAEA;AACA,SAAS,WAAW,CAAC,CAAM;EACvB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;IACvB,OAAO,aAAa,CAAC,CAAC,CAAC;GAC1B,MAAM,IAAI,eAAe,EAAE;IACxB,iBAAU,aAAa,CAAC,CAAC,CAAC;EAC7B;EACD,mBAAW,aAAa,CAAC,CAAC,CAAC;AAC/B,C;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwC;AACwC;AAahF;AACA,MAAM,6BAA6B,GAAG,CAAC,GAAW,EAAE,GAAW,KAAK,CAAI,GAAG,GAAG,GAAG,GAAI,EAAE,GAAI,CAAC,EAAE,IAAK,EAAE,IAAI,GAAG;AAC5G;AACA,MAAM,kBAAkB,GAAG,UAAqC,GAAM;EAAA,IAAE,GAAG,uEAAG,CAAC;EAAA,OAC3E,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC,IAAK,GAAG,CAAC,WAAmB,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAAA,CAC1F;AAON;AACM,MAAO,oBAAa;EAEtB,YAAY,MAAS,EAAY;IAAA,IAAV,MAAM,uEAAG,CAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB;IACjD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAA2B;IACnD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;EAC1D;EAQA,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC;EAAE;EACzF,IAAW,cAAc;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;EAAE;EACvE,IAAW,kBAAkB;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU;EAAE;EAEjE;EACO,GAAG,CAAC,KAAa,EAAE,KAAa;IAAI,OAAO,IAAI;EAAE;EACjD,MAAM,CAAC,KAAa;IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;EAAE;EAC7D,OAAO,CAAC,KAAa;IACxB,IAAI,KAAK,GAAG,CAAC,EAAE;MACX,IAAI,CAAC,MAAM,IAAI,KAAK;MACpB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;MAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM;MACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;MACnC,IAAI,MAAM,IAAI,QAAQ,EAAE;QACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,CAAC,GACrB,6BAA6B,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,GACjE,6BAA6B,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CACtE;MACJ;IACJ;IACD,OAAO,IAAI;EACf;EACO,KAAK,GAAqB;IAAA,IAApB,MAAM,uEAAG,IAAI,CAAC,MAAM;IAC7B,MAAM,GAAG,6BAA6B,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC;IACpF,MAAM,KAAK,GAAG,kBAAkB,CAAI,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;IACxD,IAAI,CAAC,KAAK,EAAE;IACZ,OAAO,KAAK;EAChB;EACO,KAAK;IACR,IAAI,CAAC,MAAM,GAAG,CAAC;IACf,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACf,OAAO,IAAI;EACf;EACU,OAAO,CAAC,SAAiB;IAC/B,OAAO,IAAI,CAAC,MAAM,GAAO,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;EAC/E;AACH;AAEA,oBAAa,CAAC,SAAiB,CAAC,MAAM,GAAG,CAAC;AAE3C;AACM,MAAO,iBAAwC,SAAQ,oBAAwB;EAC1E,IAAI;IAAK,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAAE;EAC3C,GAAG,CAAC,KAAa;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;EAAE;EAChD,GAAG,CAAC,KAAa,EAAE,KAAa;IACnC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK;IACxC,OAAO,IAAI;EACf;AACH;AAED;AACM,MAAO,mBAAoB,SAAQ,iBAA6B;EAElE,cAAoC;IAAA,IAAxB,IAAI,uEAAG,IAAI,UAAU,CAAC,CAAC,CAAC;IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;IAEnD,aAAQ,GAAG,CAAC;EAFyC;EAG5D,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;EAAE;EACvD,GAAG,CAAC,GAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;EAAE;EAChE,GAAG,CAAC,GAAW,EAAE,GAAW;IAC/B,MAAM;MAAE;IAAM,CAAE,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACtD,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC;MAAE,GAAG,GAAG,GAAG,GAAG,CAAC;MAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IACnE;IACA;IACA,GAAG,GAAG,GAAG,KAAK,CAAC,KAAM,MAAM,CAAC,IAAI,CAAC,IAAM,CAAC,IAAI,GAAI,EAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAC7D,GAAG,KAAK,CAAC,KAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,EAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;IACnE,OAAO,IAAI;EACf;EACO,KAAK;IACR,IAAI,CAAC,QAAQ,GAAG,CAAC;IACjB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;AACH;AAED;AACM,MAAO,oBAAqB,SAAQ,iBAA6B;EACnE,cAAoC;IAAA,IAAxB,IAAI,uEAAG,IAAI,UAAU,CAAC,CAAC,CAAC;IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EAAE;EACjD,MAAM,CAAC,KAAa;IACvB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC;EAC3C;EACO,GAAG,CAAC,KAAa,EAAE,KAAa;IACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;IAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM;IACtD,IAAI,MAAM,GAAG,KAAK,EAAE,EAAE;MAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC;IAC7C;IACD,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK;IACzC,OAAO,IAAI;EACf;EACO,KAAK,GAAyB;IAAA,IAAxB,MAAM,uEAAG,IAAI,CAAC,MAAM,GAAG,CAAC;IACjC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;MACtB,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1B;IACD,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;EAClC;AACH;AAED;AACM,MAAO,wBAA+D,SAAQ,oBAA8B;EAK9G,IAAW,WAAW;IAClB,OAAO,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,GAAgC,IAAI,CAAC,MAAM,YAAY,UAAU,GAAG,iBAAa,GAAG,kBAAe,CAAC;EACtJ;EACO,GAAG,CAAC,KAAa,EAAE,KAAmB;IACzC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,QAAQ,OAAO,KAAK;MAChB,KAAK,QAAQ;QAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK;QAAE;MAC7C,KAAK,QAAQ;QAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK;QAAE;MACzD;QAAS,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAmB,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IACrE;IACD,OAAO,IAAI;EACf;EACU,OAAO,CAAC,SAAiB;IAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;IACrC,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;IACvE,IAAI,eAAe,EAAE;MACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;IAC7E;IACD,OAAO,IAAI;EACf;AACH,C;;ACvLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkC;AACE;AACG;AACiB;AAEuD;AAM/F;AAyBhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDG;AACG,MAAgB,eAAO;EAkFzB;;;;AAIG;EACH,kBAA2E;IAAA,IAA/D;MAAE,MAAM,EAAE,IAAI;MAAE,YAAY,EAAE;IAAK,CAA4B;IAgB3E;;;AAGG;IACI,WAAM,GAAG,CAAC;IACjB;;;AAGG;IACI,aAAQ,GAAG,KAAK;IAxBnB,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAAC,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC;IACjC,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAmB,EAAE;IACvC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC;IAC/C;EACL;EA9FA;;;;;;;;AAQG;EACH;EACO,OAAO,GAAG,CAAwC,OAAiC,GAAgB;EAE1G;EACA;EACO,OAAO,WAAW,CAAwC,OAAmE;IAChI,MAAM,IAAI,KAAK,oDAAkD,CAAC;EACtE;EACA;EACA;EACO,OAAO,UAAU,CAAwC,OAAwE;IACpI,MAAM,IAAI,KAAK,mDAAiD,CAAC;EACrE;EAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBG;EACI,OAAO,eAAe,CAAwC,OAAyC;IAC1G,OAAO,eAAe,CAAC,OAAO,CAAC;EACnC;EAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBG;EACI,OAAO,oBAAoB,CAAwC,OAAyC;IAC/G,OAAO,oBAAoB,CAAC,OAAO,CAAC;EACxC;EAmDA;;;AAGG;EACI,QAAQ;IAAK,OAAO,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;EAAE;EAErD,IAAW,SAAS;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;EAAE;EACrD,IAAW,SAAS;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU;EAAE;EACxD,IAAW,WAAW;IAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM;EAAE;EAExD;;AAEG;EACH,IAAW,UAAU;IACjB,IAAI,IAAI,GAAG,CAAC;IACZ,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAC/C,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC;EAC/E;EAEA;;AAEG;EACH,IAAW,cAAc;IACrB,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc;EACrC;EAEA;;AAEG;EACH,IAAW,kBAAkB;IACzB,IAAI,IAAI,GAAG,CAAC;IACZ,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;IAC3D,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACzD,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACvD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;IAC3D,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC;EACvF;EAIA,IAAW,YAAY;IAAK,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI;EAAE;EAIhF,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI;EAAE;EAGxE,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI;EAAE;EAI1E,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI;EAAE;EAO3E;;;;AAIG;EACI,MAAM,CAAC,KAA0B;IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;EAAE;EAEjF;;;AAGG;EACH;EACO,OAAO,CAAC,KAA0B;IAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;EAAE;EAEnF;;;;;;;;;AASG;EACI,GAAG,CAAC,KAAa,EAAE,KAA0B;IAChD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;IAC9B;IACD,OAAO,IAAI;EACf;EAEA;;;;;AAKG;EACH;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EAAE;EAClF,QAAQ,CAAC,KAAa,EAAE,KAAc;IACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM;IACnD,OAAO,KAAK;EAChB;EAEA;EACO,QAAQ,CAAC,KAAc,EAA8B;IAAA,IAA5B,IAAI,iFAAM,IAAI,CAAC,WAAW;IACtD,MAAM,IAAI,KAAK,uDAA+C,IAAI,CAAC,IAAI,OAAG,CAAC;EAC/E;EAEA;;;;;AAKG;EACI,UAAU,CAA2B,KAAa;IACrD,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI;EACvC;EAEA;;;;;AAKG;EACI,KAAK;IAER,MAAM,OAAO,GAAQ,EAAE;IACvB,MAAM,MAAM,GAAI,IAAI,CAAC,OAAO;IAC5B,MAAM,OAAO,GAAI,IAAI,CAAC,QAAQ;IAC9B,MAAM,OAAO,GAAI,IAAI,CAAC,QAAQ;IAC9B,MAAM;MAAE,MAAM;MAAE;IAAS,CAAE,GAAG,IAAI;IAElC,IAAI,OAAO,EAAE;MAAE;MACX,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;MAChD;MACA,OAAO,KAAK,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAClE,MAAM,IAAI,OAAO,EAAE;MAAE;MAClB;MACA,MAAM,KAAK,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;MACnE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;KACrD,MAAM,IAAI,MAAM,EAAE;MAAE;MACjB,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;IAClD;IAED,SAAS,GAAG,CAAC,KAAK,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAE3E,MAAM,IAAI,GAAG,SAAI,CAAC,GAAG,CACjB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,OAAqB,EACtD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,KAAK,IAAK,KAAK,CAAC,KAAK,EAAE,CAAC,CAAY;IAE3D,IAAI,CAAC,KAAK,EAAE;IAEZ,OAAO,IAAI;EACf;EAEA;;;AAGG;EACI,MAAM;IACT,IAAI,CAAC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,KAAK,IAAK,KAAK,CAAC,MAAM,EAAE,CAAC;IAChD,OAAO,IAAI;EACf;EAEA;;;AAGG;EACI,KAAK;IACR,IAAI,CAAC,MAAM,GAAG,CAAC;IACf,IAAI,CAAC,QAAQ,IAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG;IACxC,IAAI,CAAC,OAAO,IAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAG;IACtC,IAAI,CAAC,MAAM,IAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAG;IACpC,IAAI,CAAC,QAAQ,IAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG;IACxC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,KAAK,IAAK,KAAK,CAAC,KAAK,EAAE,CAAC;IAC/C,OAAO,IAAI;EACf;AACH;AAEA,eAAO,CAAC,SAAiB,CAAC,MAAM,GAAG,CAAC;AACpC,eAAO,CAAC,SAAiB,CAAC,MAAM,GAAG,CAAC;AACpC,eAAO,CAAC,SAAiB,CAAC,QAAQ,GAAG,IAAI;AACzC,eAAO,CAAC,SAAiB,CAAC,QAAQ,GAAG,KAAK;AAC1C,eAAO,CAAC,SAAiB,CAAC,UAAU,GAAG,IAAI;AAC3C,eAAO,CAAC,SAAiB,CAAC,QAAQ,GAAG,MAAM,IAAI;AAEhD;AACM,MAAgB,yBAA8H,SAAQ,eAAiB;EACzK,YAAY,IAA8B;IACtC,KAAK,CAAC,IAAI,CAAC;IACX,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;EAC5E;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO;IAC3B,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACzC,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;EACvC;AACH;AAED;AACM,MAAgB,4BAAyE,SAAQ,eAAiB;EAIpH,YAAY,IAA8B;IACtC,KAAK,CAAC,IAAI,CAAC;IAJL,mBAAc,GAAW,CAAC;IAKhC,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,EAAE;EAC9C;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC5D,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IAClC,OAAO,KAAK,IAAI,CAAC,cAAc,IAAI,OAAO,CAAC,MAAM,CAAC;IAClD,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC,MAAM;IACnC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAC7B;EACO,QAAQ,CAAC,KAAa,EAAE,OAAgB;IAC3C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;MACjC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;MACpE,OAAO,KAAK;IACf;IACD,OAAO,IAAI;EACf;EACO,KAAK;IACR,IAAI,CAAC,cAAc,GAAG,CAAC;IACvB,IAAI,CAAC,QAAQ,GAAG,SAAS;IACzB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;EACO,KAAK;IACR,IAAI,CAAC,MAAM,EAAE;IACb,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;EACO,MAAM;IACT,IAAI,CAAC,MAAM,EAAE;IACb,OAAO,KAAK,CAAC,MAAM,EAAE;EACzB;EACU,MAAM;IACZ,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ;IAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc;IACzC,IAAI,CAAC,cAAc,GAAG,CAAC;IACvB,IAAI,CAAC,QAAQ,GAAG,SAAS;IACzB,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE;MAC7B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC;IAC7C;IACD,OAAO,IAAI;EACf;AAEH;AAKD;AACA,SAAS,eAAe,CAAwC,OAAyC;EACrG,MAAM;IAAE,CAAC,kBAAkB,GAAG,gBAAgB,GAAG;EAAO,CAAE,GAAG,OAAO;EACpE,MAAM;IAAE,CAAC,eAAe,GAAG,aAAa,GAAG,gBAAgB,KAAK,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI;EAAE,CAAE,GAAG,OAAO;EACpG,MAAM,YAAY,GAA4B,gBAAgB,KAAK,OAAO,GAAG,QAAQ,GAAG,YAAY;EACpG,OAAO,WAAU,MAAqC;IAClD,IAAI,SAAS,GAAG,CAAC;IACjB,IAAI,OAAO,GAAG,eAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IAClC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;MACxB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE;QACtD,EAAE,SAAS,KAAK,MAAM,OAAO,CAAC,QAAQ,EAAE,CAAC;MAC5C;IACJ;IACD,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;MAChD,MAAM,OAAO,CAAC,QAAQ,EAAE;IAC3B;EACL,CAAC;AACL;AAKA;AACA,SAAS,oBAAoB,CAAwC,OAAyC;EAC1G,MAAM;IAAE,CAAC,kBAAkB,GAAG,gBAAgB,GAAG;EAAO,CAAE,GAAG,OAAO;EACpE,MAAM;IAAE,CAAC,eAAe,GAAG,aAAa,GAAG,gBAAgB,KAAK,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI;EAAE,CAAE,GAAG,OAAO;EACpG,MAAM,YAAY,GAA4B,gBAAgB,KAAK,OAAO,GAAG,QAAQ,GAAG,YAAY;EACpG,OAAO,iBAAiB,MAA0E;IAC9F,IAAI,SAAS,GAAG,CAAC;IACjB,IAAI,OAAO,GAAG,eAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IAClC,WAAW,MAAM,KAAK,IAAI,MAAM,EAAE;MAC9B,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE;QACtD,EAAE,SAAS,KAAK,MAAM,OAAO,CAAC,QAAQ,EAAE,CAAC;MAC5C;IACJ;IACD,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;MAChD,MAAM,OAAO,CAAC,QAAQ,EAAE;IAC3B;EACL,CAAC;AACL,C;;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+C;AACM;AAErD;AACM,MAAO,gBAAyB,SAAQ,eAAoB;EAC9D,YAAY,OAAoC;IAC5C,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,EAAE;EAC5C;EACO,QAAQ,CAAC,KAAa,EAAE,KAAc;IACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC;EACnC;AACH,C;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGqC;AAErC;AACM,MAAO,gBAAyB,SAAQ,eAAoB;EAC9D;EACO,QAAQ,CAAC,KAAa,EAAE,KAAW,GAAG;EACtC,QAAQ,CAAC,KAAa,EAAE,KAAc;IACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAC9C,OAAO,KAAK;EAChB;AACH,C;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+C;AAG/C;AACM,MAAO,gBAAkD,SAAQ,yBAA2B;AAClG;AACM,MAAO,cAA4B,SAAQ,gBAA2B;AAC5E;AACM,MAAO,sBAAoC,SAAQ,gBAAmC,G;;ACzB5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+C;AAE/C;AACM,MAAO,sBAA4B,SAAQ,yBAAiC,G;;ACrBlF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAI+C;AACM;AAQrD;AACM,MAAO,4BAAqD,SAAQ,eAAiB;EAQvF,kBAAuH;IAAA,IAA3G;MAAE,MAAM,EAAE,IAAI;MAAE,YAAY,EAAE,KAAK;MAAE,wBAAwB,EAAE;IAAM,CAAsC;IACnH,KAAK,CAAC;MAAE,IAAI,EAAE,IAAI,eAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS;IAAM,CAAE,CAAC;IAC5F,IAAI,CAAC,MAAM,GAAS,IAAI;IACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACzC,IAAI,CAAC,OAAO,GAAG,eAAO,CAAC,GAAG,CAAC;MAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;MAAE,YAAY,EAAE;IAAK,CAAE,CAA6B;IAC1G,IAAI,CAAC,UAAU,GAAG,eAAO,CAAC,GAAG,CAAC;MAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;MAAE,YAAY,EAAE;IAAI,CAAE,CAA6B;IAC/G,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;MAC9B,IAAI,CAAC,UAAU,GAAG,MAAM;IAC3B;EACL;EAEA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;EAAE;EAClD,IAAW,SAAS;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS;EAAE;EACxD,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;EAAE;EAC1D,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;EAAE;EACvF,IAAW,cAAc;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc;EAAE;EACnG,IAAW,kBAAkB;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB;EAAE;EACxG,OAAO,CAAC,KAA0B;IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;EAAE;EAC1E,QAAQ,CAAC,KAAa,EAAE,KAAc;IACzC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;IACtC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;IAC5B,OAAO,KAAK;EAChB;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAC7C,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc;IACvC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAChC,IAAI,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;IAC5B,IAAI,GAAG,KAAK,SAAS,EAAE;MACnB,aAAa,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC;IAC/F;IACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;EAC5C;EACO,KAAK;IACR,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI;IACtB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW;IAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;IACvC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;IAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI;IACjD,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,CAAC;IACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAqC;IAC7D,IAAI,CAAC,KAAK,EAAE;IACZ,OAAO,IAAI;EACf;EACO,MAAM;IACT,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;IACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;IACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACzC,OAAO,KAAK,CAAC,MAAM,EAAE;EACzB;EACO,KAAK;IACR,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;IACpB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;IACvB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;EACO,UAAU,CAAC,GAAQ;IACtB,OAAO,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,aAAM,GAAG,CAAE;EACnD;AACH,C;;ACjGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+C;AAE/C;AACM,MAAO,sCAAoC,SAAQ,yBAAyC,G;;ACrBlG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;AAC/B,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;AAEvC;;;;;;AAMG;AACG,SAAU,eAAe,CAAC,CAAS;EACrC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE;EAC7B,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,IAAI;EAC9B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC;EACvC,QAAQ,IAAI;IACR,KAAK,IAAI;MAAE,OAAO,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK,IAAI;MAAE,OAAO,IAAI,IAAI,IAAI,GAAG,cAAc,GAAG,IAAI,GAAG,CAAC,CAAC;EAC9D;EACD,OAAO,IAAI,GAAI,CAAC,KAAK,IAAI,GAAG,EAAE,CAAE,IAAI,CAAC,GAAG,IAAI,CAAC;AACjD;AAEA;;;;;;AAMG;AACG,SAAU,eAAe,CAAC,CAAS;EAErC,IAAI,CAAC,KAAK,CAAC,EAAE;IAAE,OAAO,MAAM;GAAG,CAAC;EAEhC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAEV;EACA;EACA;EACA;EAEA,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,KAAK,EAAE,GAAG,MAAM;EAC/C,IAAI,IAAI,GAAI,GAAG,CAAC,CAAC,CAAC,GAAG,UAAW;IAAE,IAAI,GAAG,MAAM;EAE/C,IAAI,IAAI,IAAI,UAAU,EAAE;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACZ,IAAI,GAAG,MAAM;KAChB,MAAM;MACH,IAAI,GAAG,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE;MAChC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,KAAK,EAAE;IACrC;GACJ,MAAM,IAAI,IAAI,IAAI,UAAU,EAAE;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,GAAG,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IACvC,IAAI,GAAG,QAAQ,IAAI,IAAI,IAAK,CAAC,IAAI,IAAI,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE;IACtD,IAAI,GAAG,CAAC;GACX,MAAM;IACH;IACA;IACA;IACA;IACA;IAEA;IACA,IAAI,GAAI,IAAI,GAAG,UAAU,IAAK,EAAE;IAChC,IAAI,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,IAAI,KAAK,IAAK,EAAE;EAC/C;EAED,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM;AACtC,C;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+C;AACA;AAG/C;AACM,MAAO,kBAAmD,SAAQ,yBAA2B;AAEnG;AACM,MAAO,oBAA4B,SAAQ,kBAA4B;EAClE,QAAQ,CAAC,KAAa,EAAE,KAAa;IACxC;IACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;EACnD;AACH;AAED;AACM,MAAO,cAA4B,SAAQ,kBAA4B;EAClE,QAAQ,CAAC,KAAa,EAAE,KAAa;IACxC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAClC;AACH;AAED;AACM,MAAO,cAA4B,SAAQ,kBAA4B;EAClE,QAAQ,CAAC,KAAa,EAAE,KAAa;IACxC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAClC;AACH,C;;AC5CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmE;AAGO;AAE1E;AACO,MAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC;AAM9D;AACA,SAAS,MAAM,CAAY,CAAM,EAAY;EAAA,kCAAP,EAAO;IAAP,EAAO;EAAA;EACzC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;IACjB,OAAO,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;EACrG;EACD,OAAO,MAAM,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;AAC9F;AAEA,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,IAAI;AAC5C,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;EAA+C,mBAAW,cAAc,CAAC,IAAI,CAAC;AAAK,CAAC;AAC9G,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG;EAA+C,OAAO,cAAc,CAAC,IAAI,CAAC;AAAE,CAAC;AACxG,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG;EAA+C,OAAO,cAAc,CAAC,IAAI,CAAC;AAAE,CAAC;AACzG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,YAA8F;EAAA,IAAjD,2EAAwC,SAAS;EACjI,QAAQ,IAAI;IACR,KAAK,QAAQ;MAAE,OAAO,cAAc,CAAC,IAAI,CAAC;IAC1C,KAAK,QAAQ;MAAE,OAAO,cAAc,CAAC,IAAI,CAAC;IAC1C,KAAK,SAAS;MAAE,OAAO,cAAc,CAAC,IAAI,CAAC;EAC9C;EACD,OAAO,cAAc,CAAC,IAAI,CAAC;AAC/B,CAAC;AAQD;AACA,SAAS,YAAY,GAA8C;EAAA,mCAA/B,IAA+B;IAA/B,IAA+B;EAAA;EAAI,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE;AACxG;AACA,SAAS,cAAc,GAA8C;EAAA,mCAA/B,IAA+B;IAA/B,IAA+B;EAAA;EAAI,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE;AAC1G;AACA,SAAS,aAAa,GAA8C;EAAA,mCAA/B,IAA+B;IAA/B,IAA+B;EAAA;EAAI,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE;AAEzG,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACpF,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACrF,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACrF,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAI,MAAM,CAAC,SAAS,EAAE;EAAE,aAAa,EAAE,YAAY;EAAI,QAAQ,EAAE,IAAI;EAAG,YAAY,EAAE,UAAU;EAAG,aAAa,EAAE,iBAAa;AAAA,CAAG,CAAC;AACvK,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE;EAAE,aAAa,EAAE,cAAc;EAAE,QAAQ,EAAE,KAAK;EAAE,YAAY,EAAE,WAAW;EAAE,aAAa,EAAE,kBAAc;AAAA,CAAE,CAAC;AACvK,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAG,MAAM,CAAC,SAAS,EAAE;EAAE,aAAa,EAAE,aAAa;EAAG,QAAQ,EAAE,IAAI;EAAG,YAAY,EAAE,WAAW;EAAE,aAAa,EAAE,kBAAc;AAAA,CAAE,CAAC;AAEvK;AACA,SAAS,cAAc,CAA4B,EAAK;EACpD,IAAI;IAAE,MAAM;IAAE,UAAU;IAAE,MAAM;IAAE,QAAQ,EAAE;EAAM,CAAE,GAAG,EAAE;EACzD,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC;EACtD,IAAI,MAAM,GAAG,CAAC;IAAE,CAAC,GAAG,CAAC;IAAE,CAAC,GAAG,KAAK,CAAC,MAAM;IAAE,EAAE;IAAE,EAAE;EAC/C,OAAO,CAAC,GAAG,CAAC,EAAE;IACV,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;IACf,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;IACf,MAAM,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACzB,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,IAAK,EAAE,GAAI,CAAC,IAAI,EAAI;EAC1C;EACD,OAAO,MAAM;AACjB;AAEA;AACO,IAAI,cAA8D;AACzE;AACO,IAAI,cAA8D;AAEzE,IAAI,CAAC,eAAe,EAAE;EAClB,cAAc,GAAG,eAAe;EAChC,cAAc,GAAS,cAAc;CACxC,MAAM;EACH,cAAc,GAAgC,CAAI,IAAK,CAAC,CAAC,UAAU,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAQ,eAAe,CAAC,CAAC,CAAE;EACzJ,cAAc,GAAgC,CAAI,IAAK,CAAC,CAAC,UAAU,KAAK,CAAC,aAAM,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAK,eAAe,CAAC,CAAC,CAAE;AAC5J;AAED;AACA,SAAS,eAAe,CAA4B,CAAI;EACpD,IAAI,MAAM,GAAG,EAAE;EACf,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;EAC/B,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;EACtE,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC;EACjF,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;EACjC,GAAG;IACC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;MACpC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;MACxC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAK,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;IAC/D;IACD,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;IACtC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;IACtC,MAAM,aAAM,MAAM,CAAC,CAAC,CAAC,SAAG,MAAM,CAAE;GACnC,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;EACzD,OAAO,MAAM,GAAG,MAAM,MAAM;AAChC;AAEA;AACM,MAAO,KAAE;EA+BX,YAAY,GAAM,EAAE,QAAkB;IAClC,OAAO,KAAE,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAQ;EACvC;EAhCA;EACO,OAAO,GAAG,CAAwB,GAAM,EAAE,QAAkB;IAC/D,QAAQ,QAAQ;MACZ,KAAK,IAAI;QAAE,OAAO,IAAW,YAAa,CAAC,GAAG,CAAgB;MAC9D,KAAK,KAAK;QAAE,OAAO,IAAW,cAAe,CAAC,GAAG,CAAgB;IACpE;IACD,QAAQ,GAAG,CAAC,WAAW;MACnB,KAAK,SAAS;MACd,KAAK,UAAU;MACf,KAAK,UAAU;MACf,KAAK,iBAAa;QACd,OAAO,IAAW,YAAa,CAAC,GAAG,CAAgB;IAC1D;IACD,IAAI,GAAG,CAAC,UAAU,KAAK,EAAE,EAAE;MACvB,OAAO,IAAW,aAAc,CAAC,GAAG,CAAgB;IACvD;IACD,OAAO,IAAW,cAAe,CAAC,GAAG,CAAgB;EACzD;EACA;EACO,OAAO,MAAM,CAAqB,GAAM;IAC3C,OAAO,IAAW,YAAa,CAAC,GAAG,CAAgB;EACvD;EACA;EACO,OAAO,QAAQ,CAAsB,GAAM;IAC9C,OAAO,IAAW,cAAe,CAAC,GAAG,CAAgB;EACzD;EACA;EACO,OAAO,OAAO,CAAsB,GAAM;IAC7C,OAAO,IAAW,aAAc,CAAC,GAAG,CAAgB;EACxD;AAIH,C;;ACvJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE4C;AACC;AACE;AACgB;AAG/D;AACM,MAAO,cAA6C,SAAQ,yBAA2B;EAClF,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAClC;AACH;AAED;AACM,MAAO,WAAyB,SAAQ,cAAuB;AACrE;AACM,MAAO,YAA0B,SAAQ,cAAwB;AACvE;AACM,MAAO,YAA0B,SAAQ,cAAwB;AACvE;AACM,MAAO,gBAA0B,SAAQ,cAAwB;EAEnE,YAAY,OAAqC;IAC7C,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;MACvB,OAAO,CAAC,YAAY,CAAC,GAAI,OAAO,CAAC,YAAY,CAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;IAC3E;IACD,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAiB,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D;EACA,IAAW,QAAQ;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;EAAE;EAC/C,OAAO,CAAC,KAAkC;IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAAE;AAC/F;AAED;AACM,MAAO,YAA0B,SAAQ,cAAwB;AACvE;AACM,MAAO,aAA2B,SAAQ,cAAyB;AACzE;AACM,MAAO,aAA2B,SAAQ,cAAyB;AACzE;AACM,MAAO,iBAA2B,SAAQ,cAAyB;EAErE,YAAY,OAAsC;IAC9C,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;MACvB,OAAO,CAAC,YAAY,CAAC,GAAI,OAAO,CAAC,YAAY,CAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;IAC3E;IACD,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAiB,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D;EACA,IAAW,QAAQ;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;EAAE;EAC/C,OAAO,CAAC,KAAmC;IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAAE;AAChG;AAED,MAAM,QAAQ,GAAG,CAAE,IAAS,IAAM,KAAU,IAAI;EAC5C,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM;IAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU;IAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU;IAClC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,IAAI;EACrB;EACD,OAAO,KAAK;AAChB,CAAC,EAAE;EAAE,aAAa,EAAE,iBAAa;AAAA,CAAE,CAAC,C;;AC/EpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+C;AAG/C;AACM,MAAO,gBAAgD,SAAQ,yBAA2B;AAChG;AACM,MAAO,iBAA+B,SAAQ,gBAA8B;AAClF;AACM,MAAO,sBAAoC,SAAQ,gBAAmC;AAC5F;AACM,MAAO,sBAAoC,SAAQ,gBAAmC;AAC5F;AACM,MAAO,qBAAmC,SAAQ,gBAAkC,G;;AC7B1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+C;AAG/C;AACM,MAAO,0BAA+D,SAAQ,yBAA2B;AAC/G;AACM,MAAO,sBAAoC,SAAQ,0BAAwC;AACjG;AACM,MAAO,2BAAyC,SAAQ,0BAA6C;AAC3G;AACM,MAAO,2BAAyC,SAAQ,0BAA6C;AAC3G;AACM,MAAO,0BAAwC,SAAQ,0BAA4C,G;;AC7BzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+C;AAG/C;AACM,MAAO,wBAA4D,SAAQ,yBAA2B;AAC5G;AACM,MAAO,sBAAoC,SAAQ,wBAAuC;AAChG;AACM,MAAO,wBAAsC,SAAQ,wBAAyC,G;;ACzBpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG8C;AACL;AACyB;AAElE;AACM,MAAO,oBAA2B,SAAQ,4BAAmC;EAC/E,YAAY,IAAmC;IAC3C,KAAK,CAAC,IAAI,CAAC;IACX,IAAI,CAAC,OAAO,GAAG,IAAI,oBAAa,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;EACvD;EACA,IAAW,UAAU;IACjB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC,MAAM,GAAG,CAAE;IAClD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAC/C,OAAO,IAAI;EACf;EACO,QAAQ,CAAC,KAAa,EAAE,KAAiB;IAC5C,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;EACrD;EACU,aAAa,CAAC,OAA4C,EAAE,aAAqB;IACvF,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ;IAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,MAAM;IACvD,IAAI,KAAK,GAAG,CAAC;MAAE,MAAM,GAAG,CAAC;MAAE,MAAM,GAAG,CAAC;MAAE,KAA6B;IACpE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,OAAO,EAAE;MAC5B,IAAI,KAAK,KAAK,SAAS,EAAE;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;OACxB,MAAM;QACH,MAAM,GAAG,KAAK,CAAC,MAAM;QACrB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;QAC1B,MAAM,IAAI,MAAM;MACnB;IACJ;EACL;AACH,C;;ACrDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG0C;AACD;AACA;AACyB;AAElE;AACM,MAAO,gBAAyB,SAAQ,4BAAiC;EAC3E,YAAY,IAAiC;IACzC,KAAK,CAAC,IAAI,CAAC;IACX,IAAI,CAAC,OAAO,GAAG,IAAI,oBAAa,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;EACvD;EACA,IAAW,UAAU;IACjB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC,MAAM,GAAG,CAAE;IAClD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAC/C,OAAO,IAAI;EACf;EACO,QAAQ,CAAC,KAAa,EAAE,KAAa;IACxC,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAQ,CAAC;EAC1D;EACA;EACU,aAAa,CAAC,OAA4C,EAAE,aAAqB,GAAS;AACvG;AAEA,gBAAW,CAAC,SAAiB,CAAC,aAAa,GAAI,oBAAa,CAAC,SAAiB,CAAC,aAAa,C;;AC3C7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AAGnC;AACM,MAAO,OAAG;EAGZ,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;EAAE;EAC3C,GAAG,CAAC,KAAa;IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;EAAE;EACjD,KAAK;IAAK,IAAI,CAAC,OAAO,GAAS,IAAI;IAAE,OAAO,IAAI;EAAE;EAClD,IAAI,CAAC,MAAkD;IAC1D,IAAI,MAAM,YAAY,cAAM,EAAE;MAC1B,OAAO,MAAM;IAChB;IACD,IAAI,CAAC,OAAO,GAAG,MAAM;IACrB,OAAO,IAAW;EACtB;AACH,C;;AClCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAI+C;AAG/C;AAAe,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;AACnD;AAAe,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;AACvD;AAAe,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;AACvD;AAAe,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;AACvD;AAAe,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC;AAE9E,MAAe,OAAG;EAUd,YAAY,MAAsB,EAAE,OAAe;IAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM;IACtB,IAAI,CAAC,IAAI,GAAG,OAAO;EACvB;EASO,OAAO;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAAE;EAE5C,GAAG,CAAC,GAAM;IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS;EAAE;EAElD,GAAG,CAAC,GAAM;IACb,IAAI,GAAG,GAAG,SAAS;IACnB,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;MACnC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;MAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;MACvB,IAAI,GAAG,KAAK,SAAS,EAAE;QACnB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,SAAS,KAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;OAC9E,MAAM,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;QACxC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,SAAS,KAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;MAC9E;IACJ;IACD,OAAO,GAAG;EACd;EAEO,GAAG,CAAC,GAAM,EAAE,GAAM;IACrB,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;MACnC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;MAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;MACvB,IAAI,GAAG,KAAK,SAAS,EAAE;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;MAC1C;MACD,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;QACV,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,GAAS,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC;MAC5C;IACJ;IACD,OAAO,IAAI;EACf;EAEO,KAAK;IAAW,MAAM,IAAI,KAAK,oBAAa,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,oBAAiB,CAAC;EAAE;EAExF,MAAM,CAAC,CAAI;IAAa,MAAM,IAAI,KAAK,oBAAa,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,2BAAwB,CAAC;EAAE;EAEvG,EAAE,MAAM,CAAC,QAAQ,IAAC;IAErB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IACtB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;IACxB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAExE,KAAK,IAAI,CAAI,EAAE,CAAI,EAAE,CAAC,GAAG,CAAC,EAAE,EAAqB,EAAE,EAAqB,EACpE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EACjD,EAAE,CAAC,EACL;MACE,CAAC,GAAG,EAAE,CAAC,KAAK;MACZ,CAAC,GAAG,EAAE,CAAC,KAAK;MACZ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;MACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IACf;EACL;EAEO,OAAO,CAAC,UAAsD,EAAE,OAAa;IAEhF,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IACtB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;IACxB,MAAM,QAAQ,GAAG,OAAO,KAAK,SAAS,GAAG,UAAU,GAC/C,CAAC,CAAI,EAAE,CAAI,EAAE,CAAY,KAAK,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAExE,KAAK,IAAI,CAAI,EAAE,CAAI,EAAE,CAAC,GAAG,CAAC,EAAE,EAAqB,EAAE,EAAqB,EACpE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EACjD,EAAE,CAAC,EACL;MACE,CAAC,GAAG,EAAE,CAAC,KAAK;MACZ,CAAC,GAAG,EAAE,CAAC,KAAK;MACZ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;MACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACvB;EACL;EAEO,OAAO;IAAK,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;EAAE;EACvC,MAAM;IACT,MAAM,GAAG,GAAG,EAAS;IACrB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC1C,OAAO,GAAG;EACd;EAEO,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ,EAAE;EAAE;EACpC,CAAC,cAAc,IAAC;IAAK,OAAO,IAAI,CAAC,QAAQ,EAAE;EAAE;EAC7C,QAAQ;IACX,MAAM,GAAG,GAAa,EAAE;IACxB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI;MACtB,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;MACxB,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;MACxB,GAAG,CAAC,IAAI,WAAI,GAAG,eAAK,GAAG,CAAE,CAAC;IAC9B,CAAC,CAAC;IACF,mBAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;EAC9B;;AAEiB,QAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAE,KAAU,IAAI;EACpD,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE;IAC3B,MAAM,EAAE;MAAE,QAAQ,EAAE,IAAI;MAAE,UAAU,EAAE,KAAK;MAAE,YAAY,EAAE,KAAK;MAAE,KAAK,EAAE;IAAC,CAAE;IAC5E,CAAC,OAAO,GAAG;MAAE,QAAQ,EAAE,IAAI;MAAE,UAAU,EAAE,KAAK;MAAE,YAAY,EAAE,KAAK;MAAE,KAAK,EAAE;IAAI,CAAE;IAClF,CAAC,SAAS,GAAG;MAAE,QAAQ,EAAE,IAAI;MAAE,UAAU,EAAE,KAAK;MAAE,YAAY,EAAE,KAAK;MAAE,KAAK,EAAE,CAAC;IAAC;GACnF,CAAC;EACF,OAAQ,KAAa,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK;AACrD,CAAC,EAAE,OAAG,CAAC,SAAS,CAAC;AAGf,MAAO,MAA2D,SAAQ,OAAoC;EAChH,YAAY,KAA2C;IACnD,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;IAC1B,OAAO,cAAc,CAAC,IAAI,CAAC;EAC/B;EACO,IAAI;IACP,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAC1D;EACO,MAAM;IACT,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAC1D;EACO,MAAM,CAAC,GAAW;IACrB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC;EAChD;EACO,QAAQ,CAAC,GAAgB;IAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,GAAG,CAAC;EACpD;EACO,QAAQ,CAAC,KAAa;IACzB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,KAAK,CAAC;EAClD;EACO,QAAQ,CAAC,KAAa,EAAE,KAAyB;IACpD,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAClD;AACH;AAEK,MAAO,SAAuD,SAAQ,OAAyC;EACjH,YAAY,MAAuB;IAC/B,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC1C,OAAO,wBAAwB,CAAC,IAAI,CAAC;EACzC;EACO,CAAC,IAAI;IACR,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;MAC7C,MAAM,KAAK,CAAC,IAAe;IAC9B;EACL;EACO,CAAC,MAAM;IACV,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;MAC7C,MAAO,IAAmB,CAAC,KAAK,CAAC,IAAI,CAAC;IACzC;EACL;EACO,MAAM,CAAC,GAAW;IACrB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAe;EAC3D;EACO,QAAQ,CAAC,GAAY;IACxB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC;EACvE;EACO,QAAQ,CAAC,KAAa;IACzB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EAChE;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkC;IAC7D,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC;EACvE;AACH;AAED,MAAM,CAAC,cAAc,CAAC,OAAG,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC;AAEnD;AACA,MAAM,wBAAwB,GAAG,CAAC,MAAK;EACnC,MAAM,IAAI,GAAG;IAAE,UAAU,EAAE,IAAI;IAAE,YAAY,EAAE,KAAK;IAAE,GAAG,EAAE,IAAW;IAAE,GAAG,EAAE;EAAW,CAAE;EAC1F,OAAuB,GAAM,IAAI;IAC7B,IAAI,GAAG,GAAG,CAAC,CAAC;MAAE,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IACnE,MAAM,MAAM,GAAI,GAAQ,IAAK;MAAoB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAAE,CAAC;IACxE,MAAM,MAAM,GAAI,GAAQ,IAAK,UAAkB,GAAQ;MAAI,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;IAAE,CAAC;IACvF,KAAK,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE;MAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC;MACpB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;MACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;MACtB,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;MAC1F,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,GAAG,KAAK,EAAE,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9F;IACD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI;IAC1B,OAAO,GAAG;EACd,CAAC;AACL,CAAC,EAAC,CAAE;AAEJ;AACA,MAAM,cAAc,GAAG,CAAC,MAAK;EACzB,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;IAC9B,OAAO,wBAAwB;EAClC;EACD,MAAM,GAAG,GAAG,OAAG,CAAC,SAAS,CAAC,GAAG;EAC7B,MAAM,GAAG,GAAG,OAAG,CAAC,SAAS,CAAC,GAAG;EAC7B,MAAM,GAAG,GAAG,OAAG,CAAC,SAAS,CAAC,GAAG;EAC7B,MAAM,MAAM,GAAG,OAAG,CAAC,SAAS,CAAC,MAAM;EACnC,MAAM,eAAe,GAAsB;IACvC,YAAY;MAAK,OAAO,KAAK;IAAE,CAAC;IAChC,cAAc;MAAK,OAAO,KAAK;IAAE,CAAC;IAClC,iBAAiB;MAAK,OAAO,IAAI;IAAE,CAAC;IACpC,OAAO,CAAC,GAAQ;MAAI,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAE,CAAC,cAAQ,CAAC,CAAE,CAAC;IAAE,CAAC;IAChE,GAAG,CAAC,GAAQ,EAAE,GAAgB;MAC1B,QAAQ,GAAG;QACP,KAAK,QAAQ;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,SAAS;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAC/G,KAAK,aAAa;QAAE,KAAK,eAAe;QAAE,KAAK,sBAAsB;QAAE,KAAK,UAAU;QAAE,KAAK,gBAAgB;QAAE,KAAK,SAAS;QAC7H,KAAK,MAAM;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,OAAO;QAAE,KAAK,QAAQ;QAAE,KAAK,MAAM;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QACxI,KAAK,WAAW;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAAE,KAAK,gBAAgB;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAC3I,KAAK,MAAM,CAAC,QAAQ;QAAE,KAAK,MAAM,CAAC,WAAW;QAAE,KAAK,OAAO;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QAAE,KAAK,cAAc;UAC5H,OAAO,IAAI;MAClB;MACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QAC1C,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;MACxB;MACD,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IACD,GAAG,CAAC,GAAQ,EAAE,GAAgB,EAAE,QAAa;MACzC,QAAQ,GAAG;QACP,KAAK,QAAQ;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,SAAS;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAC/G,KAAK,aAAa;QAAE,KAAK,eAAe;QAAE,KAAK,sBAAsB;QAAE,KAAK,UAAU;QAAE,KAAK,gBAAgB;QAAE,KAAK,SAAS;QAC7H,KAAK,MAAM;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,OAAO;QAAE,KAAK,QAAQ;QAAE,KAAK,MAAM;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QACxI,KAAK,WAAW;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAAE,KAAK,gBAAgB;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAC3I,KAAK,MAAM,CAAC,QAAQ;QAAE,KAAK,MAAM,CAAC,WAAW;QAAE,KAAK,OAAO;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QAAE,KAAK,cAAc;UAC5H,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC;MAC7C;MACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;QACrD,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;MACnC;MACD,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;IAClC,CAAC;IACD,GAAG,CAAC,GAAQ,EAAE,GAAgB,EAAE,GAAQ,EAAE,QAAa;MACnD,QAAQ,GAAG;QACP,KAAK,OAAO;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;UACxD,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC;QAC/C,KAAK,QAAQ;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,UAAU;QAAE,KAAK,SAAS;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAC/G,KAAK,aAAa;QAAE,KAAK,eAAe;QAAE,KAAK,sBAAsB;QAAE,KAAK,UAAU;QAAE,KAAK,gBAAgB;QAAE,KAAK,SAAS;QAC7H,KAAK,MAAM;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,KAAK;QAAE,KAAK,OAAO;QAAE,KAAK,QAAQ;QAAE,KAAK,MAAM;QAAE,KAAK,QAAQ;QAAE,KAAK,SAAS;QAAE,KAAK,SAAS;QACxI,KAAK,WAAW;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAAE,KAAK,gBAAgB;QAAE,KAAK,kBAAkB;QAAE,KAAK,kBAAkB;QAC3I,KAAK,MAAM,CAAC,QAAQ;QAAE,KAAK,MAAM,CAAC,WAAW;UACzC,OAAO,KAAK;MACnB;MACD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;QACrD,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;MACnC;MACD,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;IAC3E;GACH;EACD,OAAuB,GAAM,IAAK,IAAI,KAAK,CAAC,GAAG,EAAE,eAAe,CAAM;AAC1E,CAAC,EAAC,CAAE,C;;ACtSJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AACe;AACA;AACC;AAWnD;AACM,SAAU,UAAU,CAA6D,MAAS,EAAE,KAAa,EAAE,IAAQ;EACrH,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,GAAI,MAAM,GAAI,KAAK,GAAG,MAAQ;EAC/D,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM;AAC/C;AAEA;AACA,IAAI,GAAW;AAGf;AACM,SAAU,UAAU,CAAuE,MAAS,EAAE,KAAyB,EAAE,GAAuB,EAAE,IAAQ;EAEpK;EACA;EACA;EACA,IAAI;IAAE,MAAM,EAAE,GAAG,GAAG;EAAC,CAAE,GAAG,MAAM;EAChC,IAAI,GAAG,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,CAAC,GAAG,KAAK;EAC/C,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG;EAC7C;EACC,GAAG,GAAG,CAAC,KAAM,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAI,GAAG,IAAI,GAAG,CAAC;EAC7C,GAAG,GAAG,CAAC,KAAM,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAI,GAAG,IAAI,GAAG,CAAC;EAC9C;EACC,GAAG,GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC;EAC/C;EACA,GAAG,GAAG,GAAG,KAAM,GAAG,GAAG,GAAG,CAAC;EAE1B,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AACrD;AAEA,MAAM,IAAI,GAAG,eAAe,GAAG,UAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AAC5C,MAAM,SAAS,GAAI,KAAU,IAAK,KAAK,KAAK,KAAK;AAEjD;AACM,SAAU,uBAAuB,CAAC,MAAW;EAC/C,IAAI,YAAY,GAAG,OAAO,MAAM;EAChC;EACA,IAAI,YAAY,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE;IAC9C;IACA,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;MACnB,OAAO,SAAS;IACnB;IACD,OAAO,YAAY,KAAK,QAAQ,GACzB,KAAU,IAAK,KAAK,KAAK,MAAM,GAC/B,KAAU,IAAM,IAAI,GAAG,KAAK,KAAM,MAAM;EAClD;EACD;EACA,IAAI,MAAM,YAAY,IAAI,EAAE;IACxB,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,EAAE;IACtC,OAAQ,KAAU,IAAK,KAAK,YAAY,IAAI,GAAI,KAAK,CAAC,OAAO,EAAE,KAAK,aAAa,GAAI,KAAK;EAC7F;EACD;EACA,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;IAC5B,OAAQ,KAAU,IAAK,KAAK,GAAG,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK;EACzE;EACD;EACA,IAAI,MAAM,YAAY,GAAG,EAAE;IAAE,OAAO,kBAAkB,CAAC,MAAM,CAAC;EAAG;EACjE;EACA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;IAAE,OAAO,yBAAyB,CAAC,MAAM,CAAC;EAAG;EACxE;EACA,IAAI,MAAM,YAAY,cAAM,EAAE;IAAE,OAAO,sBAAsB,CAAC,MAAM,CAAC;EAAG;EACxE;EACA,OAAO,sBAAsB,CAAC,MAAM,CAAC;AACzC;AAEA;AACA,SAAS,yBAAyB,CAAC,GAAmB;EAClD,MAAM,WAAW,GAAG,EAA6B;EACjD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACvC,WAAW,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnD;EACD,OAAO,2BAA2B,CAAC,WAAW,CAAC;AACnD;AAEA;AACA,SAAS,kBAAkB,CAAC,GAAkB;EAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;EACV,MAAM,WAAW,GAAG,EAA6B;EACjD,GAAG,CAAC,OAAO,CAAE,CAAC,IAAK,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACjE,OAAO,2BAA2B,CAAC,WAAW,CAAC;AACnD;AAEA;AACA,SAAS,sBAAsB,CAAC,GAAgB;EAC5C,MAAM,WAAW,GAAG,EAA6B;EACjD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACvC,WAAW,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACvD;EACD,OAAO,2BAA2B,CAAC,WAAW,CAAC;AACnD;AAEA;AACA,SAAS,sBAAsB,CAAC,GAAQ;EACpC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;EAC7B;EACA,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IAAE,OAAO,MAAM,KAAK;EAAG;EAC9C,MAAM,WAAW,GAAG,EAA6B;EACjD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACxC,WAAW,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD;EACD,OAAO,2BAA2B,CAAC,WAAW,EAAE,IAAI,CAAC;AACzD;AAEA,SAAS,2BAA2B,CAAC,WAAoC,EAAE,IAAuB;EAC9F,OAAQ,GAAQ,IAAI;IAChB,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;MACjC,OAAO,KAAK;IACf;IACD,QAAQ,GAAG,CAAC,WAAW;MACnB,KAAK,KAAK;QAAE,OAAO,YAAY,CAAC,WAAW,EAAE,GAAG,CAAC;MACjD,KAAK,GAAG;MACR,KAAK,MAAM;MACX,KAAK,SAAS;QACV,OAAO,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;MACtD,KAAK,MAAM;MACX,KAAK,SAAS;QAAE;QACZ,OAAO,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvE;IACD,OAAO,GAAG,YAAY,cAAM,GAAG,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,KAAK;EAC1E,CAAC;AACL;AAEA,SAAS,YAAY,CAAC,WAAoC,EAAE,GAAU;EAClE,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM;EAC5B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;IAAE,OAAO,KAAK;EAAG;EACvC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACvB,IAAI,CAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,EAAE;MAAE,OAAO,KAAK;IAAG;EACnD;EACD,OAAO,IAAI;AACf;AAEA,SAAS,aAAa,CAAC,WAAoC,EAAE,GAAW;EACpE,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM;EAC5B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;IAAE,OAAO,KAAK;EAAG;EACvC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACvB,IAAI,CAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,EAAE;MAAE,OAAO,KAAK;IAAG;EACvD;EACD,OAAO,IAAI;AACf;AAEA,SAAS,aAAa,CAAC,WAAoC,EAAE,GAAkB,EAAE,IAAsB;EAEnG,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EACvC,MAAM,OAAO,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EACrF,MAAM,OAAO,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAEzF,IAAI,CAAC,GAAG,CAAC;EACT,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM;EAC1B,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE;EACzB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE;EACzB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE;EAEzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EACjD,EAAE,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE;IAC3E,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MAC1D;IACH;EACJ;EACD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;IAChD,OAAO,IAAI;EACd;EACD,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;EAClC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;EAClC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;EAClC,OAAO,KAAK;AAChB,C;;ACrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAI4C;AACG;AACA;AAEI;AAWnD;AACM,MAAO,eACT,SAAQ,cAAiB;EAwBzB,YAAY,IAAO,EAA8D;IAAA,IAA5D,6EAAsB,EAAE;IAAA,IAAE,OAAO,uEAAG,gBAAgB,CAAC,MAAM,CAAC;IAC7E,KAAK,EAAE;IAJD,eAAU,GAAW,CAAC,CAAC;IAK7B,IAAI,CAAC,KAAK,GAAG,IAAI;IACjB,IAAI,CAAC,OAAO,GAAG,MAAM;IACrB,IAAI,CAAC,aAAa,GAAG,OAAO;IAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,MAAM;EAC1D;EA1BA;EACO,OAAO,OAAO,GAA4D;IAAA,kCAApC,OAAoC;MAApC,OAAoC;IAAA;IAC7E,OAAO,eAAe,CAAY,cAAM,EAAE,OAAO,CAAC;EACtD;EAEA;EACO,OAAO,MAAM,GAA4D;IAC5E,MAAM,MAAM,GAAG,eAAO,CAAC,OAAO,CAAI,YAAU,CAAC;IAC7C,OAAO,IAAI,eAAO,CAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC;EACjD;EAmBA,IAAW,IAAI;IAAK,OAAO,IAAI,CAAC,KAAK;EAAE;EACvC,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,MAAM;IAAiB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;EAAE;EAC5D,IAAW,UAAU;IAAK,yBAAkB,IAAI,CAAC,KAAK;EAAK;EAC3D,IAAW,IAAI;IACX,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAS,IAAI;EAC9D;EAEA,IAAW,SAAS;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;EAAE;EACtD,IAAW,WAAW;IAAK,OAAO,IAAI,CAAC,YAAY;EAAE;EACrD,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;EAAE;EAC3E,IAAW,UAAU;IACjB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,KAAK,KAAK,UAAU,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;EACvF;EACA,IAAW,SAAS;IAChB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU;IAC/B,IAAI,SAAS,GAAG,CAAC,EAAE;MACf,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAAA,IAAE;UAAE;QAAS,CAAE;QAAA,OAAK,CAAC,GAAG,SAAS;MAAA,GAAE,CAAC,CAAC;IAC5F;IACD,OAAO,SAAS;EACpB;EAGA,IAAW,OAAO;IACd,IAAI,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QAChB,MAAM,MAAM,GAAU,IAAI,CAAC,OAAsC;QACjE,IAAI,CAAC,QAAQ,GAAI,MAAM,CAAC,MAAM,KAAK,CAAC,GAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GACjB,eAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,OAAO,CAAC,CAAoB;MAC3E;MACD,OAAO,IAAI,CAAC,QAAQ;IACvB;IACD,OAAO,IAAI;EACf;EACA,IAAW,UAAU;IACjB,IAAI,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,UAA4B;IACjF;IACD,OAAO,IAAI;EACf;EAEO,EAAE,MAAM,CAAC,QAAQ,IAAC;IACrB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;MAC9B,OAAO,KAAK;IACf;EACL;EAEO,KAAK,GAAsB;IAAA,IAArB,MAAM,uEAAG,IAAI,CAAC,OAAO;IAC9B,OAAO,IAAI,eAAO,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC;EAC1C;EAEO,MAAM,GAAuB;IAAA,mCAAnB,MAAmB;MAAnB,MAAmB;IAAA;IAChC,OAAO,IAAI,CAAC,KAAK,CAAC,eAAO,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;EACvD;EAEO,KAAK,CAAC,KAAc,EAAE,GAAY;IACrC,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC;EAC5D;EAEO,UAAU,CAA2B,KAAa;IAErD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE;MAAE,OAAO,IAAI;IAAG;IAE7D,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrD,IAAI,KAAiB,EAAE,KAAe,EAAE,MAAmB;IAE3D,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE;MAAE,OAAO,KAAK;IAAG;IAC7C,IAAI,KAAK,GAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,KAAK,CAAc,EAAE;MAC1D,MAAM,GAAG,IAAI,CAAC,OAAO,CAChB,GAAG,CAAE,MAAM,IAAK,MAAM,CAAC,UAAU,CAAI,KAAK,CAAC,CAAC,CAC5C,MAAM,CAAE,GAAG,IAAuB,GAAG,IAAI,IAAI,CAAC;MACnD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,OAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,eAAO,CAAI,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;MAC9D;IACJ;IAED,OAAO,IAAI;EACf;EAIO,MAAM,CAA2C,KAAa,EAAE,IAAQ;IAC3E,IAAI,GAAG,GAAG,KAAK;IACf;IACA,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa;MAAE,GAAG,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC;IAC1D;IACA,IAAI,GAAG,GAAG,CAAC,EAAc;MAAE,OAAO,IAAI;IAAG;IACzC,IAAI,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;MAAE,OAAO,IAAI;IAAG;IACzC,IAAI,GAAG,IAAI,CAAC,EAAa;MAAE,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IAAG;IACzE,IAAI,GAAG,GAAG,CAAC;MAAE,GAAG,GAAG,CAAC;MAAE,GAAG,GAAG,CAAC;IAC7B,GAAG;MACC,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE;QACjB,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC;MAC9D;MACD,GAAG,GAAG,GAAG,GAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAE,GAAG,CAAC;MACjC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAI,GAAG,GAAG,GAAG,GAAK,GAAG,GAAG,GAAI;KAClD,QAAQ,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1D,OAAO,IAAI;EACf;EAEO,OAAO,CAAC,KAAa;IACxB,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC;EACrD;EAEO,GAAG,CAAC,KAAa;IACpB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;EAC/C;EAEO,GAAG,CAAC,KAAa,EAAE,KAAyB;IAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAa,CAAC,EAAE,CAAC;MAAA,IAAhB;QAAE;MAAM,CAAE;MAAA,OAAW,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;IAAA,EAAC;EACrE;EAEO,OAAO,CAAC,OAAoB,EAAE,MAAe;IAChD,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;MACtC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAE;IACzF;IACD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;EAC3E;EAEO,OAAO;IACV,MAAM;MAAE;IAAM,CAAE,GAAG,IAAI;IACvB,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM;IACvB,IAAI,SAAS,GAAQ,IAAI,CAAC,KAAK,CAAC,SAAS;IACzC,IAAI,CAAC,IAAI,CAAC,EAAE;MAAE,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;IAAG;IACxC,IAAI,CAAC,IAAI,CAAC,EAAE;MAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;IAAG;IAC3C,IAAI,GAAG,GAAG,CAAC;MAAE,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MACvB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,MAAM;IAC/C;IACD,IAAI,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;MAClC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW;IACjC;IACD,IAAI,GAAG,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC;IAC5B,IAAI,GAAG,GAAQ,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,QAAQ;IACxD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAChC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC9B;IACD,OAAO,GAAG;EACd;EAEU,WAAW,QAA0B,CAAS,EAAE,CAAS;IAAA,IAA7C;MAAE;IAAO,CAAc;IAA0B,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE;EACvF,eAAe,QAA0B,CAAS,EAAE,CAAS;IAAA,IAA7C;MAAE;IAAO,CAAc;IAA0B,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE;EAC/F,eAAe,QAA0B,UAAkB,EAAE,SAAiB,EAAE,OAAoB;IAAA,IAApF;MAAE;IAAO,CAAc;IAC7C,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC;MAAE,CAAC,GAAG,OAAO,CAAC,MAAM;IAC1C,IAAI,KAAK,GAAG,SAAS;MAAE,MAAM,GAAG,CAAC;MAAE,KAAK,GAAG,CAAC,CAAC;IAC7C,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;MACZ,IAAI,EAAE,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAC/C,OAAO,MAAM,GAAG,KAAK;MACxB;MACD,KAAK,GAAG,CAAC;MACT,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;IAC9B;IACD,OAAO,CAAC,CAAC;EACb;EAEU,cAAc,CAAC,IAAgB,EAAE,KAAa,EAAE,GAAW;IACjE,MAAM,MAAM,GAAgB,EAAE;IAC9B,MAAM;MAAE,MAAM;MAAE,aAAa,EAAE;IAAY,CAAE,GAAG,IAAI;IACpD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC1C,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;MACvB,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;MAChC,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC;MACnC;MACA,IAAI,WAAW,IAAI,GAAG,EAAE;QAAE;MAAQ;MAClC;MACA,IAAI,KAAK,IAAI,WAAW,GAAG,WAAW,EAAE;QAAE;MAAW;MACrD;MACA,IAAI,WAAW,IAAI,KAAK,IAAK,WAAW,GAAG,WAAW,IAAK,GAAG,EAAE;QAC5D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QAClB;MACH;MACD;MACA,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC;MAC7C,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,EAAE,WAAW,CAAC;MACnD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAc,CAAC;IAClD;IACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;EAC7B;AACH;AAED;AACA,SAAS,gBAAgB,CAAqB,OAAoB;EAC9D,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,OAAO,IAAI,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;EACzD,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAAE,MAAM,GAAG,OAAO,CAAC,MAAM;EACpD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,GAAG,MAAM,GAAG;IACnC,OAAO,CAAC,KAAK,CAAC,GAAI,MAAM,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAO;EACzD;EACD,OAAO,OAAO;AAClB;AAEA;AACA,MAAM,QAAQ,GAAG,CAAC,GAAe,EAAE,GAAe,EAAE,MAAc,KAAI;EAClE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC;EACpB,OAAQ,MAAM,GAAG,GAAG,CAAC,MAAM;AAC/B,CAAC;AAED;AACA,MAAM,QAAQ,GAAG,CAAC,GAAU,EAAE,GAAU,EAAE,MAAc,KAAI;EACxD,IAAI,GAAG,GAAG,MAAM;EAChB,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACvC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACtB;EACD,OAAO,GAAG;AACd,CAAC,C;;AClRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGiC;AAEC;AAG6B;AASzD,MAAO,aACT,SAAQ,eAAU;EAyBlB,YAAY,KAAe,EAAkD;IAAA,IAAhD,8EAAuB,EAAE;IAAA,IAAE,OAAqB;IACzE,OAAO,GAAG,eAAO,CAAC,OAAO,CAAI,GAAG,OAAO,CAAC;IACxC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;IACnC,IAAI,CAAC,MAAM,GAAG,KAAK;IACnB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,IAAI,YAAY,iBAAiB,CAAC,EAAE;MAC9D,OAAO,IAAI,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC;IACtE;EACL;EAzBA;EACO,OAAO,GAAG,CAA2B,KAAwB,EAAE,IAAmD,EAAgB;IAAA,kCAAX,IAAW;MAAX,IAAW;IAAA;IAErI,MAAM,MAAM,GAAG,eAAO,CAAC,OAAO,CAC1B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GACxC,IAAI,YAAY,cAAM,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GACxC,CAAC,cAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAC9B;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;MAChC,KAAK,GAAG,IAAI,YAAK,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;KACvC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC;MAAA,IAAC;QAAE;MAAS,CAAE;MAAA,OAAK,SAAS,GAAG,CAAC;IAAA,EAAC,EAAE;MACzE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAAE,QAAQ,EAAE;MAAI,CAAE,CAAC;IAC1C;IACD,OAAO,IAAI,aAAM,CAAC,KAAK,EAAE,MAAM,CAAC;EACpC;EAcA,IAAW,KAAK;IAAK,OAAO,IAAI,CAAC,MAAM;EAAE;EACzC,IAAW,IAAI;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;EAAE;EAC7C,IAAW,QAAQ;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ;EAAE;EACrD,IAAW,QAAQ;IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ;EAAE;EAE9C,KAAK,GAAsB;IAAA,IAArB,MAAM,uEAAG,IAAI,CAAC,OAAO;IAC9B,OAAO,IAAI,aAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1C;EAEO,UAAU,CAA2B,KAAa;IAErD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;MAAE,OAAO,IAAI;IAAG;IAE5D,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrD,IAAI,MAAiB,EAAE,KAAe,EAAE,MAAmB;IAE3D,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE;MAAE,OAAO,MAAM;IAAG;IAC/C,IAAI,KAAK,GAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,KAAK,CAAc,EAAE;MACzD,MAAM,GAAG,IAAI,CAAC,OAAO,CAChB,GAAG,CAAE,MAAM,IAAK,MAAM,CAAC,UAAU,CAAI,KAAK,CAAC,CAAC,CAC5C,MAAM,CAAE,GAAG,IAAuB,GAAG,IAAI,IAAI,CAAC;MACnD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,OAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,aAAM,CAAI,KAAK,EAAE,MAAM,CAAC;MACxD;IACJ;IAED,OAAO,IAAI;EACf;AACH;AAED;AACA,MAAM,iBAA4C,SAAQ,aAAS;EAE/D,YAAY,KAAe,EAAE,MAAiB,EAAE,OAAqB;IACjE,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;IAC/B,IAAI,CAAC,MAAM,GAAG,MAAM;EACxB;EAGO,MAAM,CAA2C,KAAa,EAAE,IAAQ;IAC3E,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;EACnD;EACO,OAAO,CAAC,KAAa;IACxB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;EACrC;EACO,GAAG,CAAC,KAAa;IACpB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;EACjC;EACO,GAAG,CAAC,KAAa,EAAE,KAAyB;IAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EACjC;EACO,OAAO,CAAC,OAAoB,EAAE,MAAe;IAChD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;EAC/C;AACH,C;;AC5HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AACG;AACC;AACA;AACA;AACS;AAI5C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO;AAE7B;AACO,MAAM,UAAU,GAAG,CAAI,IAAS,EAAE,IAAW,KAAK,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAQ;AAC9F;AACO,MAAM,gBAAgB,GAA2C,IAAW,IAAI;EACnF,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,gBAAgB,CAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5D,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KACnB,CAAC,YAAY,aAAM,GAAG,aAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAC7D,CAAC,YAAY,cAAM,GAAG,aAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAuB,GAC9C,aAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAA0B,CAAC,CAAC;AAChF,CAAC;AAED;AACO,MAAM,eAAe,GAA2C,IAAW,IAAK,gBAAgB,CAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1H;AACO,MAAM,eAAe,GAAG,CAAI,IAAS,EAAE,IAAW,KAAK,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAQ;AACxG;AACO,MAAM,wBAAwB,GAAG,CAAmB,IAAqB,EAAE,IAAW,KAAK,yBAAyB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAQ;AACrJ;AACO,MAAM,wBAAwB,GAAG,CAAmB,IAAqB,EAAE,IAAW,KAAK,yBAAyB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAQ;AAErJ;AACA,SAAS,WAAW,CAAI,IAAS,EAAE,IAAW,EAAE,GAAQ,EAAE,GAAW;EACjE,IAAI,KAAU;IAAE,CAAC,GAAG,GAAG;EACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,IAAI,CAAC,MAAM;EAC3B,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KAC9C,MAAM,IAAI,KAAK,YAAY,IAAI,EAAE;MAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK;IAAG;EAC1D;EACD,OAAO,GAAG;AACd;AAEA;AACA,SAAS,gBAAgB,CAAI,IAAS,EAAE,IAAW,EAAE,GAAQ,EAAE,GAAW;EACtE,IAAI,KAAU;IAAE,CAAC,GAAG,GAAG;EACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,IAAI,CAAC,MAAM;EAC3B,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KACnD,MAAM,IAAI,KAAK,YAAY,eAAO,EAAE;MACjC,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KAC1D,MAAM,IAAI,KAAK,YAAY,IAAI,EAAE;MAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK;IAAG;EAC1D;EACD,OAAO,GAAG;AACd;AAEA;AACA,SAAS,yBAAyB,CAAmB,IAAqB,EAAE,IAAW,EAAE,GAAQ,EAAE,GAAW;EAC1G,IAAI,KAAU;IAAE,CAAC,GAAG,GAAG;EACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,IAAI,CAAC,MAAM;EAC3B,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,CAAC,GAAG,yBAAyB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KAC5D,MAAM,IAAI,KAAK,YAAY,IAAI,EAAE;MAC9B,CAAC,GAAG,WAAW,CAAC,cAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KAClG,MAAM,IAAI,KAAK,YAAY,cAAM,EAAE;MAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAU;IAAG;EACjE;EACD,OAAO,GAAG;AACd;AAEA;AACA,SAAS,yBAAyB,CAAmB,IAAqB,EAAE,IAAW,EAAE,GAAQ,EAAE,GAAW;EAC1G,IAAI,KAAU;IAAE,CAAC,GAAG,GAAG;EACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,IAAI,CAAC,MAAM;EAC3B,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,CAAC,GAAG,yBAAyB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KAC5D,MAAM,IAAI,KAAK,YAAY,IAAI,EAAE;MAC9B,CAAC,GAAG,WAAW,CAAC,aAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,aAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM;KACjH,MAAM,IAAI,KAAK,YAAY,aAAM,EAAE;MAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAU;IAAG;EACjE;EACD,OAAO,GAAG;AACd;AAEA;AACA,MAAM,eAAe,GAAG,CAAC,EAAkB,QAAsB,CAAS;EAAA,IAA7B,CAAC,CAAC,EAAE,CAAC,CAAa;EAAA,OAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE;AAAA,CAAC;AAE/G;AACA,SAAS,gBAAgB,CAAwC,IAAW,EAAE,GAAgD;EAC1H,IAAI,IAAW,EAAE,CAAS;EAC1B,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;IACnB,KAAK,CAAC;MAAE,OAAO,GAAG;IAClB,KAAK,CAAC;MACF,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;MACb,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,EAAE;QAAE,OAAO,GAAG;MAAG;MAC/B,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;QAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAAG;MAChE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,YAAY,SAAI,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,cAAM,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,aAAQ,CAAC,EAAE;QACxF,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC;MACtE;MACD;IACJ;MACI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IACrB,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE,IACnD,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE;EACvE;EAED,IAAI,UAAU,GAAG,CAAC,CAAC;EACnB,IAAI,UAAU,GAAG,CAAC,CAAC;EACnB,IAAI,GAAG,GAAG,CAAC,CAAC;IAAE,GAAG,GAAG,IAAI,CAAC,MAAM;EAC/B,IAAI,KAA0C;EAC9C,IAAI,GAA0C;EAC9C,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,GAAmC;EAE1D,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE;IAChB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACf,IAAI,GAAG,YAAY,aAAM,KAAK,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,EAAE;MACvD,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;KACpE,MAAM;MACH,CAAC;QAAE,CAAC,GAAG,GAAG,KAAK,GAAG;MAAG,CAAE,GAAG,IAAI;MAC9B,IAAI,GAAG,YAAY,aAAQ,KAAK,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,EAAE;QACzD,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,YAAK,CAAC,GAAG,CAAC,KAAK,EAAE,GAAe,EAAE,IAAI,CAAsB;OACtF,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,EAAE;QACxD,GAAG,YAAY,SAAI,KAAK,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,cAAM,CAAC,GAAG,CAAC,GAAG,CAAW,CAAC;QAC7E,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,YAAK,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAsB;MAC/E;IACJ;EACJ;EACD,OAAO,GAAG;AACd,C;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIkC;AACO;AACK;AACkB;AAM1D,MAAO,aAAM;EAsBf,cAEuD;IAAA,IAF3C,6EAAkB,EAAE;IAAA,IACpB,QAAqC;IAAA,IACrC,YAA2C;IACnD,IAAI,CAAC,MAAM,GAAI,MAAM,IAAI,EAA0B;IACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,IAAI,GAAG,EAAE;IACrC,IAAI,CAAC,YAAY,EAAE;MACf,YAAY,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAC/C;IACD,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC;EA1BA;EACO,OAAO,IAAI,GAAe;IAC7B,OAAO,aAAM,CAAC,GAAG,mGAAiB,CAAC;EACvC;EAKA;EACO,OAAO,GAAG,GAAe;IAAA,kCAAX,IAAW;MAAX,IAAW;IAAA;IAC5B,OAAO,IAAI,aAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C;EAgBA,KAAY,MAAM,CAAC,WAAW,IAAC;IAAK,OAAO,QAAQ;EAAE;EAC9C,QAAQ;IACX,0BAAmB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,eAAQ,CAAC,eAAK,CAAC,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;EACzE;EAEO,SAAS,CAAC,KAAqB;IAClC,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC;EAC/C;EAEO,MAAM,GAA6C;IAAA,mCAAhB,WAAgB;MAAhB,WAAgB;IAAA;IACtD,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACtF,OAAO,IAAI,aAAM,CAAqB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,IAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;EAClG;EACO,QAAQ,GAAuD;IAAA,mCAAvB,aAAuB;MAAvB,aAAuB;IAAA;IAClE,OAAO,IAAI,aAAM,CAAuB,aAAa,CAAC,GAAG,CAAE,CAAC,IAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;EACpH;EAIO,MAAM,GAA8G;IAAA,mCAA7D,IAA6D;MAA7D,IAA6D;IAAA;IAEvH,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,aAAM,GAAG,IAAI,CAAC,CAAC,CAAc,GACxD,IAAI,aAAM,CAAI,UAAU,CAAoB,YAAK,EAAE,IAAI,CAAC,CAAC;IAE/D,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAY;IAC7C,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC;IAC/E,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAE,EAAE,IAAI;MACzC,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC;MACxD,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;QACjC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,QAAQ;OAC/E,CAAC,KAAK,KAAK,GAAG,IAAI;IACvB,CAAC,CAAY;IAEb,MAAM,eAAe,GAAG,qBAAqB,CAAC,SAAS,EAAE,IAAI,GAAG,EAAE,CAAC;IAEnE,OAAO,IAAI,aAAM,CACb,CAAC,GAAG,SAAS,EAAE,GAAG,SAAS,CAAC,EAAE,QAAQ,EACtC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,eAAe,CAAC,CAAC,CACtD;EACL;AACH;AAEK,MAAO,YAAK;EAqBd,YAAY,IAAY,EAAE,IAAO,EAAyD;IAAA,IAAvD,QAAQ,uEAAG,KAAK;IAAA,IAAE,QAAqC;IACtF,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ;IACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,IAAI,GAAG,EAAE;EACzC;EAtBA;EACO,OAAO,GAAG,GAAyC;IAAA,mCAAX,IAAW;MAAX,IAAW;IAAA;IACtD,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,IAAI;IAC3C,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACxC,CAAC;QAAE;MAAI,CAAE,GAAG,IAAI,CAAC,CAAC,CAAC;MAClB,IAAI,KAAK,SAAS,KAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;MAC5C,QAAQ,KAAK,SAAS,KAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;MACxD,QAAQ,KAAK,SAAS,KAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC5D;IACD,OAAO,IAAI,YAAK,WAAO,IAAI,GAAI,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAC5D;EAcA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,KAAY,MAAM,CAAC,WAAW,IAAC;IAAK,OAAO,OAAO;EAAE;EAC7C,QAAQ;IAAK,iBAAU,IAAI,CAAC,IAAI,eAAK,IAAI,CAAC,IAAI;EAAI;EAClD,SAAS,CAAC,KAAoB;IACjC,OAAO,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;EAC7C;EAGO,KAAK,GAAuC;IAAA,mCAAX,IAAW;MAAX,IAAW;IAAA;IAC/C,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,IAAI;IAC1C,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,GACjC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAC/F;MAAC,IAAI,GAAG,IAAI,CAAC,IAAI;MAAE,IAAI,GAAG,IAAI,CAAC,IAAI;MAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ;MAAE,QAAQ,GAAG,IAAI,CAAC;IAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1G,OAAO,YAAK,CAAC,GAAG,CAAI,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC;EACvD;AACH;AAED;AACA,SAAS,SAAS,CAAa,EAA2B,EAAE,EAA2B;EACnF,OAAO,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;AAChE;AAEA;AACA,SAAS,qBAAqB,CAAC,MAAe,EAA4C;EAAA,IAA1C,mFAAe,IAAI,GAAG,EAAoB;EAEtF,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC1C,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI;IACvB,IAAI,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;MAC7B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;QAC5B,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;OAC7C,MAAM,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;QACtD,MAAM,IAAI,KAAK,8EAA8E,CAAC;MACjG;IACJ;IACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;MAC3C,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC;IACrD;EACJ;EAED,OAAO,YAAY;AACvB;AAEA;AACA;AACC,aAAM,CAAC,SAAiB,CAAC,MAAM,GAAG,IAAI;AACtC,aAAM,CAAC,SAAiB,CAAC,QAAQ,GAAG,IAAI;AACxC,aAAM,CAAC,SAAiB,CAAC,YAAY,GAAG,IAAI;AAE5C,YAAK,CAAC,SAAiB,CAAC,IAAI,GAAG,IAAI;AACnC,YAAK,CAAC,SAAiB,CAAC,IAAI,GAAG,IAAI;AACnC,YAAK,CAAC,SAAiB,CAAC,QAAQ,GAAG,IAAI;AACvC,YAAK,CAAC,SAAiB,CAAC,QAAQ,GAAG,IAAI,C;;ACtLxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE4B;AACM;AACO;AACO;AAC2B;AAE3E;AACM,MAAO,gBAAmD,SAAQ,4BAAoC;EAGxG,YAAY,IAAoC;IAC5C,KAAK,CAAC,IAAI,CAAC;IAHL,SAAI,GAAG,IAAI,OAAG,EAAY;IAIhC,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,EAAE;EAC9C;EACO,QAAQ,CAAC,KAAiB,EAAY;IAAA,IAAV,IAAI,uEAAG,GAAG;IACzC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;MACtB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;IAC1D;IACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK;IACvC,IAAI,CAAC,IAAI,GAAG,IAAI,SAAI,CAAC,IAAI,YAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvD,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC;EAC/B;EACO,KAAK;IACR,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IACjB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;EACU,aAAa,CAAC,OAA6C;IACjE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI;IACrB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ;IAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS;IAC/B,IAAI,KAAK,GAAG,CAAC;MAAE,KAA6B;IAC5C,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,OAAO,EAAE;MAC5B,IAAI,KAAK,KAAK,SAAS,EAAE;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;OACxB,MAAM;QACH,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAChC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MACzC;IACJ;EACL;AACH,C;;ACzDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE4B;AACM;AACG;AACa;AAElD;AACM,MAAO,kCAA4D,SAAQ,eAAgC;EAAjH;;IACc,SAAI,GAAG,IAAI,OAAG,EAAY;EAgBxC;EAfW,QAAQ,CAAC,KAAa,EAAE,KAAkB;IAC7C,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAChD;EACO,QAAQ,CAAC,KAAiB,EAAY;IAAA,IAAV,IAAI,uEAAG,GAAG;IACzC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;MACtB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;IACnE;IACD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,kBAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,YAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpF,OAAO,UAAU;EACrB;EACO,KAAK;IACR,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IACjB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;AACH,C;;ACxCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkC;AACe;AACU;AAM3D;AACM,MAAO,cAA4E,SAAQ,4BAAuC;EAG7H,GAAG,CAAC,KAAa,EAAE,KAAgC;IACtD,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAA+B,CAAC;EAC5D;EAEO,QAAQ,CAAC,KAAa,EAAE,KAAwB;IACnD,KAAK,GAAG,KAAK,YAAY,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrE,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAqB,CAAC;IAC/E,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IAClC,OAAO,KAAK,IAAI,CAAC,cAAc,IAAI,OAAO,CAAC,IAAI,CAAC;IAChD,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC,IAAI;IACjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAC7B;EAEO,QAAQ,CAAC,KAA4C,EAA8B;IAAA,IAA5B,IAAI,iFAAM,IAAI,CAAC,WAAW;IACpF,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;MACtB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;IAC1D;IACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK;IACvC,IAAI,CAAC,IAAI,GAAG,IAAI,SAAI,CAAO,IAAI,YAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACnF,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC;EAC/B;EAEU,aAAa,CAAC,OAAwB;IAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ;IAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS;IAC/B,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,KAAI;MAC7B,IAAI,KAAK,KAAK,SAAS,EAAE;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;OACxB,MAAM;QACH,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;QAC9B,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;MAC/B;IACL,CAAC,CAAC;EACN;AACH,C;;AC/DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkC;AACG;AACM;AAE3C;AACM,MAAO,oBAAwE,SAAQ,eAAyB;EAC3G,QAAQ,CAAC,KAAc,EAA8B;IAAA,IAA5B,IAAI,iFAAM,IAAI,CAAC,WAAW;IACtD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,WAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,YAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAClF,OAAO,UAAU;EACrB;AACH,C;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkC;AACW;AACQ;AACI;AAMzD;AACM,MAAgB,kBAA2C,SAAQ,eAAiB;EAItF,YAAY,OAAsC;IAC9C,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,IAAI,OAAO,OAAO,CAAC,oBAAoB,CAAC,KAAK,UAAU,EAAE;MACrD,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAC3D;EACL;EAEA,IAAW,kBAAkB;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB;EAAE;EAEhE,MAAM,CAAC,KAA0B,EAAE,WAAoB;IAC1D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC;EACpD;EAEO,GAAG,CAAC,KAAa,EAAE,KAA0B,EAAE,WAAoB;IACtE,IAAI,WAAW,KAAK,SAAS,EAAE;MAC3B,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;IAC7D;IACD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC;IAC3C;IACD,OAAO,IAAI;EACf;EAEA;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB,EAAE,WAAoB;IACnE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,WAAY,CAAC;IACtC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;EAChC;EAEA;EACO,QAAQ,CAAC,KAAc,EAAkC;IAAA,IAAhC,IAAI,iFAAM,IAAI,CAAC,QAAQ,CAAC,MAAM;IAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC7C,MAAM;MAAE,IAAI,EAAE;QAAE,QAAQ;QAAE,IAAI;QAAE;MAAO;IAAE,CAAE,GAAG,IAAI;IAClD,MAAM,MAAM,GAAG,CAAC,GAAG,QAAQ,EAAE,IAAI,YAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,CAAC,IAAI,GAAO,IAAI,WAAK,CAAC,IAAI,EAAE,CAAC,GAAG,OAAO,EAAE,WAAW,CAAC,EAAE,MAAM,CAAC;IAClE,OAAO,WAAW;EACtB;EAEA;EACA;EACU,mBAAmB,CAAC,OAA+B,EAAE,KAAU,EAAE,MAAc;IACrF,MAAM,IAAI,KAAK,oNAEsE,CAAC;EAC1F;AACH;AAED;AACM,MAAO,kBAAuD,SAAQ,kBAAsB;AAClG;AACM,MAAO,uBAAqD,SAAQ,kBAAsB;EAI5F,YAAY,OAAsC;IAC9C,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;EAC5D;EAEA;EACO,QAAQ,CAAC,KAAa,EAAE,KAAkB,EAAE,WAAoB;IACnE,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAY,CAAC;IAC7D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAE,CAAC,MAAM,CAAC;IAC7D,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC;EACpD;AACH,C;;ACjGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAImC;AACE;AACK;AAEK;AACI;AACoC;AAgEvF;AACM,MAAO,cAAW,SAAQ,OAAO;AAEvC;AACA,MAAM,gBAAgB,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,OAAe,KAAI;EAAG,IAAI,CAAC,KAAK,CAAC,GAAI,OAAO,GAAG,QAAQ,GAAI,CAAC;AAAE,CAAC;AAC1H;AACA,MAAM,4BAA4B,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,OAAe,KAAI;EACtF,IAAI,CAAC,KAAK,CAAC,GAAI,OAAO,GAAG,UAAU,GAAI,CAAC;EACxC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAI,OAAO,GAAG,UAAU,GAAI,CAAC;AAChD,CAAC;AACD;AACA,MAAM,4BAA4B,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,OAAe,KAAI;EACtF,IAAI,CAAC,KAAK,CAAC,GAAK,OAAO,GAAG,IAAI,GAAI,UAAU,GAAI,CAAC;EACjD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAK,OAAO,GAAG,IAAI,GAAI,UAAU,GAAI,CAAC;AACzD,CAAC;AACD;AACA,MAAM,2BAA2B,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,OAAe,KAAI;EACrF,IAAI,CAAC,KAAK,CAAC,GAAK,OAAO,GAAG,OAAO,GAAI,UAAU,GAAI,CAAC;EACpD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAK,OAAO,GAAG,OAAO,GAAI,UAAU,GAAI,CAAC;AAC5D,CAAC;AAED;AACA,MAAM,qBAAqB,GAAG,CAAC,MAAkB,EAAE,YAAwB,EAAE,KAAa,EAAE,KAAiB,KAAI;EAC7G,MAAM;IAAE,CAAC,KAAK,GAAG,CAAC;IAAE,CAAC,KAAK,GAAG,CAAC,GAAG;EAAC,CAAE,GAAG,YAAY;EACnD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;IACxB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C;AACL,CAAC;AAED;AACA,MAAM,WAAO,GAAG,OAAoD,KAAa,EAAE,GAAY,KAAI;EAAA,IAAlE;IAAE,MAAM;IAAE;EAAM,CAAiB;EAC9D,MAAM,GAAG,GAAG,MAAM,GAAG,KAAK;EAC1B,GAAG,GAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,IAAM,CAAC,IAAK,GAAG,GAAG,CAAG,CAAG;EAAA,EACxC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAK,GAAG,GAAG,CAAE,CAAE,CAAC,CAAC;AAEnD,CAAC;AAKD;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE;EAAM,CAAyB;EAAgD,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AAAE,CAAC;AAC3L;AACA,MAAM,kBAAkB,GAAG,QAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE;EAAM,CAAyB;EAAgD,4BAA4B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AAAE,CAAC;AAC3M;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK;AAAE,CAAC;AACzK;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC;AAAE,CAAC;AAC1L;AACA,MAAM,YAAY,GAAS,CAA4B,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EACrH,QAAQ,OAAO,KAAK;IAChB,KAAK,QAAQ;MAAE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK;MAAE;IAC/C,KAAK,QAAQ;MAAE,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK;MAAE;IAC7D;MACI,MAAM,GAAG,GAAG,KAAoB;MAChC,MAAM;QAAE,MAAM;QAAE;MAAS,CAAE,GAAG,MAAM;MACpC,MAAM,IAAI,GAAG,iBAAiB,CAAc,SAAS,EAAE,GAAG,CAAC;MAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC;EAClE;AACL,CAAC;AACD;AACA,MAAM,kBAAkB,GAAG,QAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC;AAAE,CAAC;AAEhM;AACA,MAAM,SAAS,GAAG,QAA4D,KAAa,EAAE,KAAkB;EAAA,IAA1E;IAAE,MAAM;IAAE;EAAY,CAAiB;EAAA,OAAwC,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC;AAAA;AAC7K;AACA,MAAM,OAAO,GAAG,QAA0D,KAAa,EAAE,KAAkB,KAAI;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAY,CAAiB;EACpE,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AAED;AACA;AACA,MAAM,MAAM,GAAG,CAAgB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC7F,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GACnB,UAAU,CAAC,MAA+B,EAAE,KAAK,EAAE,KAA4B,CAAC,GAChF,YAAY,CAAC,MAA+B,EAAE,KAAK,EAAE,KAA4B,CAAC;AAC5F,CAAC;AAED;AACA;AACA,MAAM,QAAQ,GAAG,CAAkB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EACjG,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,GAClC,UAAU,CAAC,MAA+B,EAAE,KAAK,EAAE,KAAK,CAAC,GACzD,UAAU,CAAC,MAA6B,EAAE,KAAK,EAAE,KAAK,CAAC;AACjE,CAAC;AAED;AACA,MAAM,OAAO,GAAG,CAAmB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EACjG,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,GAC3B,UAAU,CAAC,MAA6B,EAAE,KAAK,EAAE,KAAK,CAAC,GACvD,kBAAkB,CAAC,MAAqC,EAAE,KAAK,EAAE,KAAK,CAAC;AACjF,CAAC;AAED;AACA,MAAM,kBAAkB,GAAQ,QAA4D,KAAa,EAAE,KAAkB;EAAA,IAA5D;IAAE;EAAM,CAAiB;EAAA,OAA8C,4BAA4B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC;AAAA;AACrM;AACA,MAAM,uBAAuB,GAAG,SAA4D,KAAa,EAAE,KAAkB;EAAA,IAA5D;IAAE;EAAM,CAAiB;EAAA,OAA8C,4BAA4B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC;AAAA;AAC9L;AACA,MAAM,uBAAuB,GAAG,SAA4D,KAAa,EAAE,KAAkB;EAAA,IAA5D;IAAE;EAAM,CAAiB;EAAA,OAA8C,4BAA4B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC;AAAA;AAC9L;AACA,MAAM,sBAAsB,GAAI,SAA4D,KAAa,EAAE,KAAkB;EAAA,IAA5D;IAAE;EAAM,CAAiB;EAAA,OAA8C,2BAA2B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC;AAAA;AAC7L;AACA;AACA,MAAM,YAAY,GAAc,CAAsB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EACpH,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI;IACpB,KAAK,QAAQ,CAAC,MAAM;MAAO,OAAY,kBAAkB,CAAC,MAAqC,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9G,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,uBAAuB,CAAC,MAA0C,EAAE,KAAK,EAAE,KAAK,CAAC;IACnH,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,uBAAuB,CAAC,MAA0C,EAAE,KAAK,EAAE,KAAK,CAAC;IACnH,KAAK,QAAQ,CAAC,UAAU;MAAG,OAAQ,sBAAsB,CAAC,MAAyC,EAAE,KAAK,EAAE,KAAK,CAAC;EACrH;AACL,CAAC;AAED;AACA,MAAM,aAAa,GAAQ,SAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK;AAAE,CAAC;AACzK;AACA,MAAM,kBAAkB,GAAG,SAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK;AAAE,CAAC;AACzK;AACA,MAAM,kBAAkB,GAAG,SAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE;EAAM,CAAyB;EAAgD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAAE,CAAC;AACtL;AACA,MAAM,iBAAiB,GAAI,SAA+D,KAAa,EAAE,KAAkB,KAAU;EAAA,IAA9E;IAAE;EAAM,CAAyB;EAAgD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAAE,CAAC;AACtL;AACA;AACA,MAAM,OAAO,GAAc,CAAiB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC1G,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI;IACpB,KAAK,QAAQ,CAAC,MAAM;MAAO,OAAY,aAAa,CAAC,MAAgC,EAAE,KAAK,EAAE,KAA6B,CAAC;IAC5H,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,kBAAkB,CAAC,MAAqC,EAAE,KAAK,EAAE,KAAkC,CAAC;IACtI,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,kBAAkB,CAAC,MAAqC,EAAE,KAAK,EAAE,KAAkC,CAAC;IACtI,KAAK,QAAQ,CAAC,UAAU;MAAG,OAAQ,iBAAiB,CAAC,MAAoC,EAAE,KAAK,EAAE,KAAiC,CAAC;EACvI;AACL,CAAC;AAED;AACA,MAAM,UAAU,GAAG,SAA+C,KAAa,EAAE,KAAkB,KAAU;EAAA,IAAtE;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAAE,CAAC;AAE9J;AACA,MAAM,OAAO,GAAG,CAAiB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC/F,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE;IAAE,YAAY,GAAG,MAAM,CAAC,YAAY;EACxE,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;IACrF,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;EACtC;AACL,CAAC;AAED;AACA,MAAM,MAAM,GAAG,CAAiB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAI;EACxF,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE;IAAE,YAAY,GAAG,MAAM,CAAC,YAAY;EACxE,MAAM,OAAO,GAAG,KAAK,YAAY,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;EACzE,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;IACrF,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;EACpC;AACL,CAAC;AAED;AAAe,MAAM,oBAAoB,GAAG,CAAC,CAAS,EAAE,CAAQ,KAAK,CAAC,CAAgB,EAAE,CAAQ,EAAE,CAAS,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnI;AAAe,MAAM,qBAAqB,GAAG,CAAC,CAAS,EAAE,CAAS,KAAK,CAAC,CAAgB,EAAE,CAAQ,EAAE,CAAS,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzI;AAAe,MAAM,kBAAkB,GAAG,CAAC,CAAS,EAAE,CAAmB,KAAK,CAAC,CAAgB,EAAE,CAAQ,EAAE,CAAS,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACrJ;AAAe,MAAM,qBAAqB,GAAG,CAAC,CAAS,EAAE,CAAyB,KAAK,CAAC,CAAgB,EAAE,CAAQ,EAAE,CAAS,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1J;AACA,MAAM,SAAS,GAAG,CAAmB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAI;EAE7F,MAAM,QAAQ,GAAG,KAAK,YAAY,GAAG,GAAM,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,GAC1D,KAAK,YAAY,cAAM,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,GAC7D,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAM,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,GAClC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC;EAE9E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAQ,EAAE,CAAS,KAAK,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/F,CAAC;AAED;AACA;AACA,MAAM,QAAQ,GAAG,CAEf,MAAS,EAAE,KAAa,EAAE,KAAkB,KAAI;EAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,GAChC,aAAa,CAAC,MAAgC,EAAE,KAAK,EAAE,KAAK,CAAC,GAC7D,cAAc,CAAC,MAAiC,EAAE,KAAK,EAAE,KAAK,CAAC;AACvE,CAAC;AAED;AACA,MAAM,aAAa,GAAG,CAAuB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC3G,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;EACnE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;EAC3C,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;AACzD,CAAC;AAED;AACA,MAAM,cAAc,GAAG,CAAwB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC7G,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;EACnE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;EAC3C,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;AACpC,CAAC;AAED;AACA,MAAM,aAAa,GAAG,CAAuB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC3G,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAChC,IAAI,GAAG,KAAK,IAAI,EAAE;IACd,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC;EAC9B;AACL,CAAC;AAED;AACA;AACA,MAAM,gBAAgB,GAAG,CAAqB,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EAC3G,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,QAAQ,GACrC,kBAAkB,CAAC,MAAqC,EAAE,KAAK,EAAE,KAAK,CAAC,GACvE,oBAAoB,CAAC,MAAuC,EAAE,KAAK,EAAE,KAAK,CAAC;AACrF,CAAC;AAED;AACA,MAAM,kBAAkB,GAAG,SAAuD,KAAa,EAAE,KAAkB,KAAU;EAAA,IAAtE;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAAE,CAAC;AAC9K;AACA,MAAM,oBAAoB,GAAG,SAAyD,KAAa,EAAE,KAAkB,KAAU;EAAA,IAAtE;IAAE;EAAM,CAAiB;EAAgD,MAAM,CAAC,KAAK,CAAC,GAAI,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,KAAK,CAAC,CAAC,CAAC,GAAG,EAAG;AAAE,CAAC;AAExL;AACA,MAAM,gBAAgB,GAAG,CAA0B,MAAqB,EAAE,KAAa,EAAE,KAAkB,KAAU;EACjH,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE;IAAE;MAAE;IAAM,CAAE,GAAG,MAAM;EACxD,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,KAAK,GAAG,MAAM,EAAE,EAAE,GAAG,GAAG,MAAM,GAAG;IACzD,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1C;AACL,CAAC;AAED,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,WAAO;AACxE,cAAU,CAAC,SAAS,CAAC,QAAQ,GAAqC,MAAM;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAgC,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA6B,YAAY;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA8B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA8B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA4B,YAAY;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAAiC,QAAQ;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA+B,SAAS;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,cAAc,GAAyB,YAAY;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,yBAAyB,GAAG,uBAAuB;AACxE,cAAU,CAAC,SAAS,CAAC,yBAAyB,GAAG,uBAAuB;AACxE,cAAU,CAAC,SAAS,CAAC,wBAAwB,GAAK,sBAAsB;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,mBAAmB,GAAe,iBAAiB;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA+B,SAAS;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAAiC,QAAQ;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,gBAAgB,GAAqB,cAAc;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,aAAa,GAAsB,gBAAgB;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,sBAAsB,GAAS,oBAAoB;AACxE,cAAU,CAAC,SAAS,CAAC,kBAAkB,GAAiB,gBAAgB;AACxE,cAAU,CAAC,SAAS,CAAC,QAAQ,GAAqC,MAAM;AAExE;AACO,MAAM,YAAQ,GAAG,IAAI,cAAU,EAAE,C;;AChWxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKqC;AAEa;AACJ;AACwC;AAClC;AACM;AACU;AACJ;AACgC;AACQ;AACsD;AAChH;AACF;AACE;AACI;AACoH;AAC9B;AACjD;AACzC;AAU9C;AACM,MAAO,0BAAe,SAAQ,OAAO;EAChC,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,QAAQ;IAAuB,OAAO,cAAU;EAAmB;EACnE,SAAS;IAAsB,OAAO,WAAW;EAAkB;EACnE,UAAU;IAAqB,OAAO,YAAY;EAAiB;EACnE,UAAU;IAAqB,OAAO,YAAY;EAAiB;EACnE,UAAU;IAAqB,OAAO,gBAAY;EAAiB;EACnE,UAAU;IAAqB,OAAO,YAAY;EAAiB;EACnE,WAAW;IAAoB,OAAO,aAAa;EAAgB;EACnE,WAAW;IAAoB,OAAO,aAAa;EAAgB;EACnE,WAAW;IAAoB,OAAO,iBAAa;EAAgB;EACnE,UAAU;IAAqB,OAAO,kBAAY;EAAiB;EACnE,YAAY;IAAmB,OAAO,oBAAc;EAAe;EACnE,YAAY;IAAmB,OAAO,cAAc;EAAe;EACnE,YAAY;IAAmB,OAAO,cAAc;EAAe;EACnE,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,WAAW;IAAoB,OAAO,oBAAa;EAAgB;EACnE,oBAAoB;IAAW,OAAO,sCAAsB;EAAO;EACnE,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,YAAY;IAAmB,OAAO,cAAc;EAAe;EACnE,oBAAoB;IAAW,OAAO,sBAAsB;EAAO;EACnE,cAAc;IAAiB,OAAO,0BAAgB;EAAa;EACnE,oBAAoB;IAAW,OAAO,sBAAsB;EAAO;EACnE,yBAAyB;IAAM,OAAO,2BAA2B;EAAE;EACnE,yBAAyB;IAAM,OAAO,2BAA2B;EAAE;EACnE,wBAAwB;IAAO,OAAO,0BAA0B;EAAG;EACnE,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,eAAe;IAAgB,OAAO,iBAAiB;EAAY;EACnE,oBAAoB;IAAW,OAAO,sBAAsB;EAAO;EACnE,oBAAoB;IAAW,OAAO,sBAAsB;EAAO;EACnE,mBAAmB;IAAY,OAAO,qBAAqB;EAAQ;EACnE,YAAY;IAAmB,OAAO,sBAAc;EAAe;EACnE,SAAS;IAAsB,OAAO,gBAAW;EAAkB;EACnE,WAAW;IAAoB,OAAO,oBAAa;EAAgB;EACnE,UAAU;IAAqB,OAAO,kBAAY;EAAiB;EACnE,eAAe;IAAgB,OAAO,uBAAiB;EAAY;EACnE,gBAAgB;IAAe,OAAO,kBAAkB;EAAW;EACnE,eAAe;IAAgB,OAAO,4BAAiB;EAAY;EACnE,aAAa;IAAkB,OAAO,wBAAe;EAAc;EACnE,oBAAoB;IAAW,OAAO,sBAAsB;EAAO;EACnE,sBAAsB;IAAS,OAAO,wBAAwB;EAAK;EACnE,kBAAkB;IAAa,OAAO,kCAAoB;EAAS;EACnE,QAAQ;IAAuB,OAAO,cAAU;EAAmB;AAC7E;AAED;AACO,MAAM,oBAAQ,GAAG,IAAI,0BAAc,EAAE,C;;ACjG5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACqD;AAChB;AACA;AACwC;AAClC;AACM;AACU;AAC4B;AAC8D;AACtB;AAC8B;AAC9D;AAC1D;AACI;AACJ;AACkB;AACpB;AACM;AACqC;AAE/C;AAGM;AAEgB;AACG;AACmB;AAE3E;AACA,eAAO,CAAC,GAAG,GAAG,UAAU;AAExB,SAAS,UAAU,CAAwC,OAAiC;EAExF,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI;EACzB,MAAM,OAAO,GAAG,KAAK,oBAAqB,CAAC,UAAU,CAAI,IAAI,CAAC,EAAE,EAAE,OAAO,CAAsB;EAE/F,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IAE3C,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,EAAsB;IAC9D,MAAM,cAAc,GAAG;MAAE,YAAY,EAAE,OAAO,CAAC,YAAY;IAAC,CAAE;IAC9D,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GACxC,CAAC,CAAQ,EAAE,CAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,cAAc,GACtD;MAAA,IAAC;QAAE;MAAI,CAAS;MAAA,OAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,cAAc;IAAA,CAAC;IAE7D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,KAAI;MACnC,MAAM;QAAE;MAAI,CAAE,GAAG,KAAK;MACtB,MAAM,IAAI,GAAG,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC;MAC1C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QAAE,GAAG,IAAI;QAAE;MAAI,CAAE,CAAC,CAAC;IACxD,CAAC,CAAC;EACL;EAED,OAAO,OAAsB;AACjC;AAEC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAW,CACvB,GAAG,CAAE,CAAM,IAAK,IAAI,CAAC,CAAC,CAAQ,CAAC,CAC/B,MAAM,CAAE,CAAM,IAAgB,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CACvE,OAAO,CAAE,MAAM,IAAI;EAChB,MAAM,WAAW,GAAG,oBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC;EACvD,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,YAAU,CAAC,UAAU,CAAC,MAAM,CAAC;AACnE,CAAC,CAAC;AAEL,gBAAW,CAAC,SAAiB,CAAC,SAAS,GAAG,YAAU,CAAC,WAAW,C;;ACjFjE;AAGkD;AAClD;;;;;;AAMG;AACG,IAAW,QAAG;AAApB,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,MAAM;UAAnB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UA0JtB;UAzJI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,OAAO,eAAe,CAAC,EAA0B,EAAE,GAAY;YAC3D,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM,CAAN,CAAM,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;UACtF;UAEA;;AAEG;UACH,OAAO;YACH,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,KAAG,OAAS,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;UAC1I;UAEA;;;AAGG;UACH,MAAM,CAAC,GAA2D;YAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAN,CAAM,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UACzJ;UAEA;;;;AAIG;UACH,YAAY,CAAC,KAAa,EAAE,GAAoC;YAC5D,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UAC7I;UAEA;;AAEG;UACH,kBAAkB;YACd,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;;;AAIG;UACH,aAAa,CAAC,KAAa,EAAE,GAAoC;YAC7D,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAL,CAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,EAAG,CAAC,GAAG,IAAI;UAC7I;UAEA;;AAEG;UACH,mBAAmB;YACf,IAAI,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC/C,OAAO,MAAM,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;UACnE;UAEA;;AAEG;UACH,OAAO,WAAW,CAAC,OAA4B;YAC3C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;UAC1B;UAEA;;;AAGG;UACH,OAAO,UAAU,CAAC,OAA4B,EAAE,OAAuE;YACnH,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,UAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;UACxG;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B,EAAE,YAAgC;YAC3E,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;UAC9C;UAEA;;;AAGG;UACH,OAAO,eAAe,CAAC,OAA4B,EAAE,kBAAsC;YACvF,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,kBAAkB,EAAE,CAAC,CAAC;UACpD;UAEA;;;AAGG;UACH,OAAO,uBAAuB,CAAC,OAA4B,EAAE,QAAgB;YACzE,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;UACxC;UAEA;;;AAGG;UACH,OAAO,gBAAgB,CAAC,OAA4B,EAAE,mBAAuC;YACzF,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,mBAAmB,EAAE,CAAC,CAAC;UACrD;UAEA;;;AAGG;UACH,OAAO,wBAAwB,CAAC,OAA4B,EAAE,QAAgB;YAC1E,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;UACxC;UAEA;;;AAGG;UACH,OAAO,SAAS,CAAC,OAA4B;YACzC,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;YAChC,OAAO,MAAM;UACjB;UAEA;;;AAGG;UACH,OAAO,kBAAkB,CAAC,OAA4B,EAAE,MAA0B;YAC9E,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;UAC1B;UAEA,OAAO,YAAY,CAAC,OAA4B,EAAE,OAAuE,EAAE,YAAgC,EAAE,kBAAsC,EAAE,mBAAuC;YACxO,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC;YACnC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,YAAY,CAAC;YACvC,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,kBAAkB,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,mBAAmB,CAAC;YACrD,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;UACpC;QACH;QA7JY,cAAM,SA6JlB;MACL,CAAC,EA/JiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA+JzC,CAAC,EA/J2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA+JjC,CAAC,EA/JoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA+J3B,CAAC,EA/JgB,QAAG,KAAH,QAAG;AAgKpB;;AAEG;AACH,WAAiB,GAAG;EAAC,UAAM;EAAN,iBAAM;IAAC,SAAK;IAAL,gBAAK;MAAC,WAAO;MAAP,kBAAO;QACrC,MAAa,KAAK;UAAlB;YACI,OAAE,GAAkC,IAAI;YAExC,WAAM,GAAW,CAAC;UAwDtB;UAvDI;;;;AAIG;UACH,MAAM,CAAC,CAAS,EAAE,EAA0B;YACxC,IAAI,CAAC,MAAM,GAAG,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI;UACf;UAEA;;;;AAIG;UACH,MAAM;YACF,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;UAC1C;UAEA;;;;AAIG;UACH,cAAc;YACV,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;UAC9C;UAEA;;;;;AAKG;UACH,UAAU;YACN,OAAO,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;UAC/C;UAEA;;;;;;AAMG;UACH,OAAO,WAAW,CAAC,OAA4B,EAAE,MAAwB,EAAE,cAAsB,EAAE,UAA4B;YAC3H,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;YACnB,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC;YAClC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1B,OAAO,OAAO,CAAC,MAAM,EAAE;UAC3B;QAEH;QA3DY,aAAK,QA2DjB;MACL,CAAC,EA7DiC,OAAO,GAAP,aAAO,KAAP,aAAO;IA6DzC,CAAC,EA7D2B,KAAK,GAAL,YAAK,KAAL,YAAK;EA6DjC,CAAC,EA7DoB,MAAM,GAAN,UAAM,KAAN,UAAM;AA6D3B,CAAC,EA7DgB,QAAG,KAAH,QAAG,Q;;AC9KpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEuC;AACG;AAE1C,IAAO,IAAI,GAAG,WAAW,CAAC,IAAI;AAC9B,IAAO,YAAO,GAAG,WAAW,CAAC,OAAO;AACpC,IAAO,eAAU,GAAG,WAAW,CAAC,UAAU;AAC1C,IAAO,MAAM,GAAG,QAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;AACpD,IAAO,OAAO,GAAG,QAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;AAEhB;AACO;AACI;AAGjD;AACA,MAAM,YAAO;EA0CT,YAAmB,MAAc,EAEuC;IAAA,IADrD,8EAA2B,eAAe,CAAC,EAAE;IAAA,IACpD,aAA2B;IAAA,IAAE,iBAA+B;IAFrD,WAAM,GAAN,MAAM;IACN,YAAO,GAAP,OAAO;IAEtB,aAAa,KAAK,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACtD,iBAAiB,KAAK,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;EACtE;EA7CA;EACO,OAAO,MAAM,CAAC,GAAyB;IAC1C,GAAG,GAAG,IAAI,eAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACvC,MAAM,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC;IAC3C,MAAM,MAAM,GAAG,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAG,CAAC;IAC9C,OAAO,IAAI,aAAa,CAAC,MAAM,EAAE,MAAM,CAAY;EACvD;EAEA;EACO,OAAO,MAAM,CAAC,MAAe;IAEhC,MAAM,CAAC,GAAY,IAAI,YAAO,EAAE;IAChC,MAAM,YAAY,GAAG,aAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;IAEpD,OAAO,CAAC,wBAAwB,CAAC,CAAC,EAAE,MAAM,CAAC,gBAAgB,CAAC;IAC5D,CAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,EAAE,IAAK,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACtF,MAAM,mBAAmB,GAAG,CAAC,CAAC,SAAS,EAAE;IAEzC,OAAO,CAAC,uBAAuB,CAAC,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC;IAC1D,CAAC,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,EAAE,IAAK,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE1F,MAAM,uBAAuB,GAAG,CAAC,CAAC,SAAS,EAAE;IAE7C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACtB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC;IAClC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC;IACzC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,mBAAmB,CAAC;IAChD,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,uBAAuB,CAAC;IACnD,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAEnD,OAAO,CAAC,CAAC,YAAY,EAAE;EAC3B;EAMA,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM;EAAE;EACnE,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM;EAAE;EAS/D,CAAC,aAAa;IACjB,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MACzD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;QAAE,MAAM,KAAK;MAAG;IACvD;EACL;EAEO,CAAC,iBAAiB;IACrB,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MACxD,IAAI,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;QAAE,MAAM,KAAK;MAAG;IAC3D;EACL;EAEO,cAAc,CAAC,KAAa;IAC/B,OAAO,KAAK,IAAI,CAAC,IACV,KAAK,GAAG,IAAI,CAAC,gBAAgB,IAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI;EAC7C;EAEO,kBAAkB,CAAC,KAAa;IACnC,OAAO,KAAK,IAAI,CAAC,IACV,KAAK,GAAG,IAAI,CAAC,eAAe,IAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,IAAI;EACjD;AACH;AAE4B;AAE7B;AACA,MAAM,aAAc,SAAQ,YAAO;EAK/B,YAAY,MAAc,EAAY,OAAgB;IAClD,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;IADE,YAAO,GAAP,OAAO;EAE7C;EALA,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;EAAE;EAC3E,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;EAAE;EAMlE,cAAc,CAAC,KAAa;IAC/B,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE;MAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;MACnD,IAAI,SAAS,EAAE;QAAE,OAAO,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;MAAG;IACzD;IACD,OAAO,IAAI;EACf;EAEO,kBAAkB,CAAC,KAAa;IACnC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE;MAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC;MAClD,IAAI,SAAS,EAAE;QAAE,OAAO,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;MAAG;IACzD;IACD,OAAO,IAAI;EACf;AACH;AAED;AACM,MAAO,SAAS;EAElB;EACO,OAAO,MAAM,CAAC,KAAa;IAC9B,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC;EACpF;EAEA;EACO,OAAO,MAAM,CAAC,CAAU,EAAE,SAAoB;IACjD,MAAM;MAAE;IAAc,CAAE,GAAG,SAAS;IACpC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5C,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;IACpD,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,CAAC;EACpE;EAMA,YAAY,cAAsB,EAAE,UAAyB,EAAE,MAAqB;IAChF,IAAI,CAAC,cAAc,GAAG,cAAc;IACpC,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG;IAC9D,IAAI,CAAC,UAAU,GAAG,OAAO,UAAU,KAAK,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,GAAG;EAClF;AACH,C;;AClKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwC;AACE;AACmC;AACQ;AAM7D;AAOxB;AACM,MAAO,qBAA4D,SAAQ,qBAAyB;EAC/F,KAAK,CAAC,KAAwC;IACjD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE;MAC9C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAU,CAAC;IACjC;EACL;EAGO,QAAQ,GAAa;IAAA,IAAZ,IAAI,uEAAG,KAAK;IACxB,OAAO,IAAI,GACL,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;EACnD;EAGO,YAAY,GAAa;IAAA,IAAZ,IAAI,uEAAG,KAAK;IAC5B,OAAO,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,OAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAW;MAClE,IAAI,OAAO,GAAG,EAAE;QAAE,UAAU,GAAG,CAAC;MAChC,WAAW,MAAM,KAAK,IAAI,IAAI,EAAE;QAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB,UAAU,IAAI,KAAK,CAAC,UAAU;MACjC;MACD,OAAO,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,EAAC,CAAE;EACR;AACH;AAED;AACM,MAAO,iBAAU;EAGnB,YAAY,MAA8D;IACtE,IAAI,MAAM,EAAE;MACR,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAgB,CAAC,QAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC1E;EACL;EACA,CAAC,MAAM,CAAC,QAAQ,IAAC;IAAK,OAAO,IAAI;EAAE;EAC5B,IAAI,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;EAAE;EACpD,KAAK,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EAAE;EACtD,MAAM,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAAE;EACxD,IAAI,CAAC,IAAoB;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;EAAE;EAC5D,IAAI,CAAC,IAAoB;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;EAAE;AACtE;AAED;AACM,MAAO,sBAAe;EAGxB,YAAY,MAA2L;IACnM,IAAI,MAAM,YAAY,sBAAe,EAAE;MACnC,IAAI,CAAC,MAAM,GAAI,MAA0B,CAAC,MAAM;KACnD,MAAM,IAAI,MAAM,YAAY,qBAAc,EAAE;MACzC,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;KACpF,MAAM,IAAI,oBAAoB,CAAC,MAAM,CAAC,EAAE;MACrC,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KACjF,MAAM,IAAI,mBAAmB,CAAuB,MAAM,CAAC,EAAE;MAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KAChF,MAAM,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE;MAChC,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,aAAa,CAAC,MAAM,CAAC,IAAK,CAAC,CAAC;KACtF,MAAM,IAAI,UAAU,CAAuB,MAAM,CAAC,EAAE;MACjD,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC/E,MAAM,IAAI,SAAS,CAAuB,MAAM,CAAC,EAAE;MAChD,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;KACpF,MAAM,IAAI,eAAe,CAAuB,MAAM,CAAC,EAAE;MACtD,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAqB,CAAC,QAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IACpF;EACL;EACA,CAAC,MAAM,CAAC,aAAa,IAAC;IAAK,OAAO,IAAI;EAAE;EACjC,IAAI,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;EAAE;EACpD,KAAK,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EAAE;EACtD,MAAM,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAAE;EAC/D,IAAW,MAAM;IAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM;EAAE;EACzD,MAAM,CAAC,MAAY;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAAE;EAC1D,IAAI,CAAC,IAAoB;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;EAAE;EAC5D,IAAI,CAAC,IAAoB;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;EAAE;AACtE;AAYD;AACA,MAAM,uBAAgB;EAClB,YAAsB,MAAmC;IAAnC,WAAM,GAAN,MAAM;EAAgC;EACrD,MAAM,CAAC,MAAY;IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;EAAE;EAC5C,IAAI,CAAC,IAAoB;IAAc,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,KAAK;EAAE;EAC7E,IAAI,CAAC,IAAoB;IAAc,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,KAAK;EAAE;EAC7E,IAAI,CAAC,IAAoB,EAA+B;IAAA,IAA7B,0EAAuB,MAAM;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;MAAE,GAAG;MAAE;IAAI,CAAE,CAAC;EAAE;EACpG,KAAK,CAAC,KAAW;IAAI,OAAO,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAK,aAAa,CAAC;EAAE;EAC7G,MAAM,CAAC,KAAW;IAAI,OAAO,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAK,aAAa,CAAC;EAAE;AAC1H;AAED;AACA,MAAM,4BAAqB;EAIvB,YAAuB,MAAsE;IAAtE,WAAM,GAAN,MAAM;IACzB,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAE,CAAC,IAAK,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;EAC5E;EACO,MAAM,MAAM,CAAC,MAAY;IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;EAAE;EAC/D,IAAW,MAAM;IAAoB,OAAO,IAAI,CAAC,cAAc;EAAE;EAC1D,MAAM,IAAI,CAAC,IAAoB;IAAuB,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK;EAAE;EACpG,MAAM,IAAI,CAAC,IAAoB;IAAuB,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK;EAAE;EACpG,MAAM,IAAI,CAAC,IAAoB,EAA+B;IAAA,IAA7B,0EAAuB,MAAM;IAAI,OAAQ,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;MAAE,GAAG;MAAE;IAAI,CAAE,CAAC;EAAG;EAClH,MAAM,KAAK,CAAC,KAAW;IAC1B,MAAM,MAAM,GAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,aAAa;IACrF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,EAAE;IAC1D,IAAI,CAAC,qBAAqB,GAAG,SAAS;IACtC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAChC;EACO,MAAM,MAAM,CAAC,KAAW;IAC3B,MAAM,MAAM,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAI,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,aAAa;IACvF,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,EAAE;IAC1D,IAAI,CAAC,qBAAqB,GAAG,SAAS;IACtC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAChC;AACH,C;;AC7JD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGuD;AACa;AAEpE;AACM,MAAO,qBAAiB,SAAQ,iBAAU;EAI5C,YAAY,MAA4B,EAAE,UAAmB;IACzD,KAAK,EAAE;IAHJ,aAAQ,GAAW,CAAC;IAIvB,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;IAClC,IAAI,CAAC,IAAI,GAAG,OAAO,UAAU,KAAK,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU;EACvF;EACO,SAAS,CAAC,QAAgB;IAC7B,MAAM;MAAE,MAAM;MAAE;IAAU,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7D;EACO,IAAI,CAAC,QAAgB;IACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC;IAC7C,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI;EAC/B;EACO,IAAI,CAAC,MAAsB;IAC9B,MAAM;MAAE,MAAM;MAAE,IAAI;MAAE;IAAQ,CAAE,GAAG,IAAI;IACvC,IAAI,MAAM,IAAI,QAAQ,GAAG,IAAI,EAAE;MAC3B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAAE,MAAM,GAAG,QAAQ;MAAG;MACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EACxB,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC;MAClD,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;IAClD;IACD,OAAO,IAAI;EACf;EACO,MAAM,CAAC,QAAgB,EAAE,MAAc;IAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM,CAAC;IAClD,OAAO,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;EACrE;EACO,KAAK;IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAAE;EAC/C,KAAK,CAAC,KAAW;IAAI,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO;MAAE,IAAI,EAAE,IAAI;MAAE;IAAK,CAAE;EAAE;EACjE,MAAM,CAAC,KAAW;IAAI,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO;MAAE,IAAI,EAAE,IAAI;MAAE;IAAK,CAAE;EAAE;AAC5E;AAED;AACM,MAAO,0BAAsB,SAAQ,sBAAe;EAMtD,YAAY,IAAgB,EAAE,UAAmB;IAC7C,KAAK,EAAE;IAJJ,aAAQ,GAAW,CAAC;IAKvB,IAAI,CAAC,OAAO,GAAG,IAAI;IACnB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;MAChC,IAAI,CAAC,IAAI,GAAG,UAAU;KACzB,MAAM;MACH,IAAI,CAAC,QAAQ,GAAG,CAAC,YAAW;QACxB,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,OAAO,IAAI,CAAC,QAAQ;MACxB,CAAC,EAAC,CAAE;IACP;EACL;EACO,MAAM,SAAS,CAAC,QAAgB;IACnC,MAAM;MAAE,MAAM;MAAE;IAAU,CAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7D,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7D;EACO,MAAM,IAAI,CAAC,QAAgB;IAC9B,IAAI,CAAC,QAAQ,KAAI,MAAM,IAAI,CAAC,QAAQ;IACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC;IAC7C,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI;EAC/B;EACO,MAAM,IAAI,CAAC,MAAsB;IACpC,IAAI,CAAC,QAAQ,KAAI,MAAM,IAAI,CAAC,QAAQ;IACpC,MAAM;MAAE,OAAO,EAAE,IAAI;MAAE,IAAI;MAAE;IAAQ,CAAE,GAAG,IAAI;IAC9C,IAAI,IAAI,IAAI,QAAQ,GAAG,IAAI,EAAE;MACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAAE,MAAM,GAAG,QAAQ;MAAG;MACtD,IAAI,GAAG,GAAG,QAAQ;QAAE,MAAM,GAAG,CAAC;QAAE,SAAS,GAAG,CAAC;MAC7C,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC;MAC5D,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;MACrE,OAAO,CAAC,GAAG,IAAI,SAAS,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE;QAC1E,CAAC;UAAE;QAAS,CAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,EAAE,GAAG,CAAC;MACpF;MACD,OAAO,MAAM;IAChB;IACD,OAAO,IAAI;EACf;EACO,MAAM,MAAM,CAAC,QAAgB,EAAE,MAAc;IAChD,IAAI,CAAC,QAAQ,KAAI,MAAM,IAAI,CAAC,QAAQ;IACpC,MAAM;MAAE,OAAO,EAAE,IAAI;MAAE;IAAI,CAAE,GAAG,IAAI;IACpC,IAAI,IAAI,IAAK,QAAQ,GAAG,MAAM,GAAI,IAAI,EAAE;MACpC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM,CAAC;MAC7C,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,GAAG,GAAG,QAAQ,CAAC;MAC7C,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,MAAM;IAC/D;IACD,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC;EACjC;EACO,MAAM,KAAK;IAAK,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO;IAAE,IAAI,CAAC,OAAO,GAAG,IAAI;IAAE,CAAC,KAAI,MAAM,CAAC,CAAC,KAAK,EAAE;EAAE;EACnF,MAAM,KAAK,CAAC,KAAW;IAAI,MAAM,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO;MAAE,IAAI,EAAE,IAAI;MAAE;IAAK,CAAE;EAAE;EAC7E,MAAM,MAAM,CAAC,KAAW;IAAI,MAAM,IAAI,CAAC,KAAK,EAAE;IAAE,OAAO;MAAE,IAAI,EAAE,IAAI;MAAE;IAAK,CAAE;EAAE;AACxF,C;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE;AAE1B;AACA,SAAS,QAAQ,CAAC,KAAa;EAC3B,IAAI,KAAK,GAAG,CAAC,EAAE;IACX,KAAK,GAAG,UAAU,GAAG,KAAK,GAAG,CAAC;EACjC;EACD,mBAAY,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;AAClC;AAEA;AACA,MAAM,mBAAmB,GAAG,CAAC;AAC7B;AACA,MAAM,YAAY,GAAG,CAAC,CAAC,EACD,EAAE,EACF,GAAG,EACH,IAAI,EACJ,KAAK,EACL,MAAM,EACN,OAAO,EACP,QAAQ,EACR,SAAS,CAAC;AAEhC;AACM,MAAO,SAAS;EAClB,YAAuB,MAAmB;IAAnB,WAAM,GAAN,MAAM;EAAgB;EAEtC,IAAI;IAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAAE;EACxC,GAAG;IAAc,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAAE;EAErC,MAAM,CAAC,KAAgB;IAC7B;IACA;IACA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CACtB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EACrB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,EACvB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EACrB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAC1B,CAAC;IAEF,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CACtB,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EACtB,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,EACxB,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EACtB,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAC3B,CAAC;IAEF,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM;IAEjC,IAAI,GAAG,GAAG,OAAO,KAAK,EAAE;IAExB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG,IAAI,OAAO;IAEd,OAAO,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAM,CAAC;IAC7B,GAAG,IAAI,OAAO;IAEd,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE;IAE3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAI,GAAG,KAAK,CAAC,GAAG,OAAO,GAAG,UAAU,GAAG,CAAE;IAEvD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,EAAE;IAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAK,EAAE;IAE/E,OAAO,IAAI;EACb;EAEQ,KAAK,CAAC,KAAgB;IAC5B,MAAM,GAAG,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAM,CAAC;IACpD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC,IAAI,GAAG,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,EAAE;MAChC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACjB;IACD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG;EACxB;EAEO,QAAQ,CAAC,KAAgB;IAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAClC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE;EAChF;EAEO,MAAM,CAAC,KAAgB;IAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EAClF;EAEO,WAAW,CAAC,KAAgB;IAC/B,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC/B;EAEO,GAAG;IACN,iBAAU,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAClE;AACH;AAED;AACM,MAAO,UAAO,SAAQ,SAAS;EAC1B,KAAK,CAAC,KAAa;IACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAClB,OAAO,IAAI;EACf;EAEO,IAAI,CAAC,KAAa;IACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IACjB,OAAO,IAAI;EACf;EAEA;EACO,OAAO,IAAI,CAAC,GAAQ,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACxD,OAAO,UAAM,CAAC,UAAU,CACpB,OAAO,GAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC/C,UAAU,CACb;EACL;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,UAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC;EACxD;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM;IAEzB,IAAI,GAAG,GAAG,IAAI,UAAM,CAAC,UAAU,CAAC;IAChC,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,GAAG;MAC/B,MAAM,KAAK,GAAG,mBAAmB,GAAG,MAAM,GAAG,IAAI,GACnC,mBAAmB,GAAG,MAAM,GAAG,IAAI;MACjD,MAAM,KAAK,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACrF,MAAM,QAAQ,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAEtE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;MACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;MAEf,IAAI,IAAI,KAAK;IAChB;IAED,OAAO,GAAG;EACd;EAEA;EACO,OAAO,YAAY,CAAC,MAAyB;IAChD,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC1C,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF;IACD,OAAO,IAAI;EACf;EAEA;EACO,OAAO,QAAQ,CAAC,IAAY,EAAE,KAAa;IAC9C,IAAI,IAAI,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;EAC5B;EAEA;EACO,OAAO,GAAG,CAAC,IAAY,EAAE,KAAa;IACzC,IAAI,IAAI,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EAC3B;AACH;AAED;AACM,MAAO,SAAM,SAAQ,SAAS;EACzB,MAAM;IACT,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAEhC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;MAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAAG;IAC9C,OAAO,IAAI;EACf;EAEO,KAAK,CAAC,KAAY;IACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAClB,OAAO,IAAI;EACf;EAEO,IAAI,CAAC,KAAY;IACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IACjB,OAAO,IAAI;EACf;EAEO,QAAQ,CAAC,KAAY;IACxB;IACA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;IACvC,OAAO,SAAS,GAAG,UAAU,IACxB,SAAS,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE;EACtE;EAEA;EACO,OAAO,IAAI,CAAC,GAAQ,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACxD,OAAO,SAAK,CAAC,UAAU,CACnB,OAAO,GAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC/C,UAAU,CACb;EACL;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,SAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC;EACvD;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE;IACA,MAAM,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;IAClC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM;IAEzB,IAAI,GAAG,GAAG,IAAI,SAAK,CAAC,UAAU,CAAC;IAC/B,KAAK,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,GAAG;MAC5C,MAAM,KAAK,GAAG,mBAAmB,GAAG,MAAM,GAAG,IAAI,GACnC,mBAAmB,GAAG,MAAM,GAAG,IAAI;MACjD,MAAM,KAAK,GAAG,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACpF,MAAM,QAAQ,GAAG,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAErE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;MACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;MAEf,IAAI,IAAI,KAAK;IAChB;IACD,OAAO,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG;EACtC;EAEA;EACO,OAAO,YAAY,CAAC,MAAyB;IAChD,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC1C,SAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtF;IACD,OAAO,IAAI;EACf;EAEA;EACO,OAAO,QAAQ,CAAC,IAAW,EAAE,KAAY;IAC5C,IAAI,IAAI,GAAG,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;EAC5B;EAEA;EACO,OAAO,GAAG,CAAC,IAAW,EAAE,KAAY;IACvC,IAAI,IAAI,GAAG,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EAC3B;AACH;AAED;AACM,MAAO,MAAM;EACf,YAAqB,MAAmB;IAAnB,WAAM,GAAN,MAAM;IACvB;IACA;IACA;IACA;EACJ;EAEO,IAAI;IACP,OAAO,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACxF;EAEO,GAAG;IACN,OAAO,IAAI,SAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;EACpF;EAEO,MAAM;IACT,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAChC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAChC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAEhC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;MAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAAG;IAC9C,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;MAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAAG;IAC9C,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;MAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAAG;IAC9C,OAAO,IAAI;EACf;EAEO,KAAK,CAAC,KAAa;IACtB;IACA;IACA,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC;IAE5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,EAAE,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE5D,IAAI,OAAO,GAAG,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;IACrC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE;IAE9B,IAAI,GAAG,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAE1D,OAAO,GAAG,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAEjB,OAAO,GAAG,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE;IAE1B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE;IAEhD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE;IAC3B,IAAI,IAAI,GAAG,IAAI,UAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAEzF,IAAI,CAAC,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC7B,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC7B,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CACxB,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC7B,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAC7B,IAAI,CAAC,UAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;IAEpD,OAAO,IAAI;EACf;EAEO,IAAI,CAAC,KAAa;IACrB,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAM,CAAC;IAClD,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAM,CAAC;IAClD,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAM,CAAC;IAClD,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAM,CAAC;IAElD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,EAAE;MAClC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IACD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,EAAE;MAClC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IACD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,EAAE;MAClC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IAED,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAExB,OAAO,IAAI;EACf;EAEO,GAAG;IACN,iBAAU,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1H;EAEA;EACO,OAAO,QAAQ,CAAC,IAAY,EAAE,KAAa;IAC9C,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;EAC5B;EAEA;EACO,OAAO,GAAG,CAAC,IAAY,EAAE,KAAa;IACzC,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EAC3B;EAEA;EACO,OAAO,IAAI,CAAC,GAAQ,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACxD,OAAO,MAAM,CAAC,UAAU,CACpB,OAAO,GAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC/C,UAAU,CACb;EACL;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC;EACxD;EAEA;EACO,OAAO,UAAU,CAAC,GAAW,EAAiC;IAAA,IAA/B,UAAU,uEAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IACjE;IACA,MAAM,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;IAClC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM;IAEzB,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC;IAChC,KAAK,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,GAAG;MAC5C,MAAM,KAAK,GAAG,mBAAmB,GAAG,MAAM,GAAG,IAAI,GACnC,mBAAmB,GAAG,MAAM,GAAG,IAAI;MACjD,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3F,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAE5E,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;MACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;MAEf,IAAI,IAAI,KAAK;IAChB;IAED,OAAO,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG;EACtC;EAEA;EACO,OAAO,YAAY,CAAC,MAAyB;IAChD;IACA,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF;IACD,OAAO,IAAI;EACf;AACH,C;;ACvbD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AAEG;AAEC;AACE;AACG;AACE;AACE;AACE;AACK;AASnD;AACM,MAAO,yBAAa,SAAQ,OAAO;EAOrC,YAAY,KAAiB,EAAE,KAAkB,EAAE,OAAuB,EAAE,YAAsC;IAC9G,KAAK,EAAE;IALH,eAAU,GAAW,CAAC,CAAC;IAEvB,iBAAY,GAAW,CAAC,CAAC;IAI7B,IAAI,CAAC,KAAK,GAAG,KAAK;IAClB,IAAI,CAAC,KAAK,GAAG,KAAK;IAClB,IAAI,CAAC,OAAO,GAAG,OAAO;IACtB,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC;EAEO,KAAK,CAAqB,IAAkB;IAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,YAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAChE;EAEO,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE;IAAM,CAAa,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;EAAkI;EAC9R,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,QAAQ,CAA+C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAmB,SAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,UAAU,CAA6C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAiB,SAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAAoC;EAC9R,WAAW,CAA4C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAgB,SAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAAoC;EAC9R,oBAAoB,CAAmC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAO,SAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,cAAc,CAAyC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAa,SAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,YAAY,CAA2C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAe,SAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,SAAS,CAA8C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAkB,SAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAA2B;EAC9R,WAAW,CAA4C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAgB,SAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAAkD;EAC9R,UAAU,CAA6C,IAAO;IAAkD,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAwB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAuB,CAAC;EAAuC;EAC9R,eAAe,CAAwC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAiB,SAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAAE;EAC9R,gBAAgB,CAAuC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAiB,SAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAA0B;EAC9R,eAAe,CAAwC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAY,SAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAAyB;EAC9R,aAAa,CAA0C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAc,SAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAA4D;EAC9R,kBAAkB,CAAqC,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAS,SAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAAmD;EAC9R,QAAQ,CAA+C,IAAO,EAA8C;IAAA,IAA5C;MAAE,MAAM;MAAE;IAAS,CAAE,uEAAG,IAAI,CAAC,aAAa,EAAE;IAAI,OAAmB,SAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAA2B;EAE3R,aAAa;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC;EAAE;EACxD,eAAe;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC;EAAE;EAC9D,cAAc,CAAqB,IAAO,EAAE,SAAiB,EAAiC;IAAA,IAA/B,MAAM,uEAAG,IAAI,CAAC,eAAe,EAAE;IACpG,OAAO,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC;EAC5E;EACU,WAAW,CAAqB,IAAO,EAAE,MAAqB;IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;EAAE;EACtG,WAAW,CAAqB,IAAO,EAAE,MAAqB;IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;EAAE;EACtG,QAAQ,CAAqB,KAAQ,EAA6C;IAAA,IAA3C;MAAE,MAAM;MAAE;IAAM,CAAE,uEAAG,IAAI,CAAC,eAAe,EAAE;IACxF,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC;EACvD;EACU,cAAc,CAA4B,IAAO;IACvD,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAE;EAC1C;AACH;AAED;AACM,MAAO,6BAAiB,SAAQ,yBAAY;EAE9C,YAAY,OAAgB,EAAE,KAAkB,EAAE,OAAuB,EAAE,YAAsC;IAC7G,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAC;IACtD,IAAI,CAAC,OAAO,GAAG,OAAO;EAC1B;EACU,cAAc,CAAqB,KAAQ,EAAE,SAAiB,EAAqC;IAAA,IAAnC;MAAE;IAAM,CAAE,uEAAG,IAAI,CAAC,eAAe,EAAE;IACzG,OAAO,SAAS,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC/E;EACU,WAAW,CAAqB,KAAQ,EAAqC;IAAA,IAAnC;MAAE;IAAM,CAAE,uEAAG,IAAI,CAAC,eAAe,EAAE;IACnF,OAAO,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7F;EACU,WAAW,CAAqB,IAAO,EAAqC;IAAA,IAAnC;MAAE;IAAM,CAAE,uEAAG,IAAI,CAAC,eAAe,EAAE;IAClF,OAAO,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EACjG;EACU,QAAQ,CAAqB,IAAO,EAAqC;IAAA,IAAnC;MAAE;IAAM,CAAE,uEAAG,IAAI,CAAC,eAAe,EAAE;IAC/E,MAAM;MAAE;IAAO,CAAE,GAAG,IAAI;IACxB,IAAI,aAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;MAC5B,OAAO,iBAAiB,CAAC,UAAU,EAAE,SAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC,CAAC;KACxF,MAAM,IAAI,CAAC,aAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;MAChF,OAAO,iBAAiB,CAAC,UAAU,EAAE,SAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC,CAAC;KACxF,MAAM,IAAI,aAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,WAAW,EAAE;MACpE,OAAO,iBAAiB,CAAC,UAAU,EAAE,SAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC,CAAC;KACxF,MAAM,IAAI,aAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;MACjC,OAAO,iBAAiB,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC,CAAC;KACzF,MAAM,IAAI,aAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;MACpE,OAAO,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC;KACzD,MAAM,IAAI,aAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MAC9B,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAa,CAAC;KAChD,MAAM,IAAI,aAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MAC9B,OAAO,UAAU,CAAE,OAAO,CAAC,MAAM,CAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5D;IACD,OAAO,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3G;AACH;AAED;AACA,SAAS,kBAAkB,CAAC,MAAgB;EACxC;EACA;EACA;EACA,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;EAC9B,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;EAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACnD;EACD,OAAO,IAAI;AACf,C;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE0C;AAC1C,IAAO,kBAAI,GAAG,WAAW,CAAC,IAAI;AAEU;AAGH;AAErC,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,GAAG,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG;AACjD,IAAO,aAAa,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa;AACrE,IAAO,oBAAM,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;AACvD,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,qBAAO,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;AACzD,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,IAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,SAAS,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AAC7D,IAAO,QAAQ,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;AAC3D,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,oBAAM,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;AACxD,IAAO,KAAK,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;AACrD,IAAO,kBAAkB,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB;AAC/E,IAAO,6BAAe,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe;AACzE,IAAO,2BAAa,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa;AACrE,IAAO,kBAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG;AAOlD;AACM,MAAO,2BAAc,SAAQ,OAAO;EAC/B,KAAK,CAA0B,IAAO,EAAE,OAAgB;IAC3D,OAAQ,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,GAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC;EACrF;EACO,SAAS,CAAsB,KAAQ,EAAE,CAAU;IACtD,kBAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,OAAO,kBAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,QAAQ,CAAqB,IAAO,EAAE,CAAU;IACnD,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACf,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;IACjC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;IACjC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EACxB;EACO,UAAU,CAAuB,IAAO,EAAE,CAAU;IACvD,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACnC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;IAC7C,OAAO,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC5C;EACO,WAAW,CAAwB,KAAQ,EAAE,CAAU;IAC1D,oBAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACrB,OAAO,oBAAM,CAAC,SAAS,CAAC,CAAC,CAAC;EAC9B;EACO,SAAS,CAAsB,KAAQ,EAAE,CAAU;IACtD,kBAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,OAAO,kBAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,SAAS,CAAsB,KAAQ,EAAE,CAAU;IACtD,kBAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,OAAO,kBAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,YAAY,CAAyB,IAAO,EAAE,CAAU;IAC3D,qBAAO,CAAC,YAAY,CAAC,CAAC,CAAC;IACvB,qBAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;IAC/B,qBAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;IACvC,OAAO,qBAAO,CAAC,UAAU,CAAC,CAAC,CAAC;EAChC;EACO,SAAS,CAAuB,IAAO,EAAE,CAAU;IACtD,kBAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,kBAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;IAC1B,OAAO,kBAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,SAAS,CAAsB,IAAO,EAAE,CAAU;IACrD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;IAClC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,cAAc,CAA2B,IAAO,EAAE,CAAU;IAC/D,MAAM,QAAQ,GAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAK,SAAS;IAC9E,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IAC3B,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;IAC/B,IAAI,QAAQ,KAAK,SAAS,EAAE;MACxB,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC;IACrC;IACD,OAAO,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;EACpC;EACO,aAAa,CAA0B,IAAO,EAAE,CAAU;IAC7D,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IACzB,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;IAC9B,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EAClC;EACO,SAAS,CAAsB,KAAQ,EAAE,CAAU;IACtD,kBAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACjB,OAAO,kBAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1B;EACO,WAAW,CAAwB,KAAQ,EAAE,CAAU;IAC1D,oBAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IACtB,OAAO,oBAAM,CAAC,UAAU,CAAC,CAAC,CAAC;EAC/B;EACO,UAAU,CAAuB,IAAO,EAAE,CAAU;IACvD,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAChD,MAAM,OAAO,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;IAC1D,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;IACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;IAC3B,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC;IAC5B,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC5B;EACO,eAAe,CAA4B,IAAO,EAAE,CAAU;IACjE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7C,kBAAkB,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC7C,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,kBAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACjD,kBAAkB,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;IAClD,IAAI,SAAS,KAAK,SAAS,EAAE;MACzB,kBAAkB,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;IAChD;IACD,OAAO,kBAAkB,CAAC,qBAAqB,CAAC,CAAC,CAAC;EACtD;EACO,oBAAoB,CAAiC,IAAO,EAAE,CAAU;IAC3E,6BAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACvC,6BAAe,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;IAC/C,OAAO,6BAAe,CAAC,kBAAkB,CAAC,CAAC,CAAC;EAChD;EACO,kBAAkB,CAA+B,IAAO,EAAE,CAAU;IACvE,2BAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACnC,2BAAa,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;IAC3C,OAAO,2BAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC5C;EACO,QAAQ,CAAsB,IAAO,EAAE,CAAU;IACpD,kBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChB,kBAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC;IACtC,OAAO,kBAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EACzB;AACH;AAED;AACO,MAAM,sBAAQ,GAAG,IAAI,2BAAa,EAAE,C;;AC5J3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE6C;AAMzB;AAE8D;AACE;AAEpF;AACM,SAAU,cAAc,CAAC,OAAY,EAAiD;EAAA,IAA/C,mFAAsC,IAAI,GAAG,EAAE;EACxF,OAAO,IAAI,aAAM,CACb,oBAAoB,CAAC,OAAO,EAAE,YAAY,CAAC,EAC3C,sBAAsB,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EACjD,YAAY,CACf;AACL;AAEA;AACM,SAAU,mBAAmB,CAAC,CAAM;EACtC,OAAO,IAAI,mBAAW,CAClB,CAAC,CAAC,OAAO,CAAC,EACV,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAChC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAChC;AACL;AAEA;AACM,SAAU,uBAAuB,CAAC,CAAM;EAC1C,OAAO,IAAI,eAAe,CACtB,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAC9B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CACxB;AACL;AAEA;AACA,SAAS,oBAAoB,CAAC,OAAY,EAAE,YAAoC;EAC5E,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAE,CAAM,IAAK,YAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AACrG;AAEA;AACA,SAAS,qBAAqB,CAAC,MAAW,EAAE,YAAoC;EAC5E,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAE,CAAM,IAAK,YAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AACtG;AAEA;AACA,SAAS,kBAAkB,CAAC,EAAS;EACjC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAc,CAAC,UAAU,EAAE,MAAW,KAAK,CAC/D,GAAG,UAAU,EACb,IAAI,SAAS,CACT,MAAM,CAAC,OAAO,CAAC,EACf,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CACxC,EACD,GAAG,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAC5C,EAAE,EAAiB,CAAC;AACzB;AAEA;AACA,SAAS,eAAe,CAAC,EAAS,EAA8B;EAAA,IAA5B,8EAA0B,EAAE;EAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC9C,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;IACpB,MAAM,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;IAC/F,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACvF,MAAM,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAC3F,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACvF,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC;EACzD;EACD,OAAO,OAAO;AAClB;AAEA;AACA,SAAS,iBAAiB,CAAC,QAAkB;EACzC,OAAO,CAAC,QAAQ,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvE;AAEA;AACM,SAAU,aAAa,CAAC,MAAW,EAAE,YAAoC;EAE3E,IAAI,EAAU;EACd,IAAI,IAAkB;EACtB,IAAI,KAAmB;EACvB,IAAI,QAAa;EACjB,IAAI,IAAmB;EACvB,IAAI,QAAoB;EAExB;EACA,IAAI,CAAC,YAAY,IAAI,EAAE,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;IACrD,IAAI,GAAG,YAAY,CAAC,MAAM,EAAE,qBAAqB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACxE,KAAK,GAAG,IAAI,YAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,UAAU,CAAC,EAAE,sBAAsB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAChH;EACD;EACA;EACA;EACA;EAAA,KACK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;IAC7C;IACA,IAAI,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAU,GAAG,IAAI,KAAK,EAAE;IACtF,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,YAAY,CAAC,MAAM,EAAE,qBAAqB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC9F,QAAQ,GAAG,IAAI,eAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IAChE,KAAK,GAAG,IAAI,YAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,EAAE,sBAAsB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;EACpH;EACD;EACA;EAAA,KACK;IACD;IACA,IAAI,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAU,GAAG,IAAI,KAAK,EAAE;IACtF,QAAQ,GAAG,IAAI,eAAU,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IACjF,KAAK,GAAG,IAAI,YAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,EAAE,sBAAsB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;EACpH;EACD,OAAO,KAAK,IAAI,IAAI;AACxB;AAEA;AACA,SAAS,sBAAsB,CAAC,SAAkB;EAC9C,OAAO,IAAI,GAAG,CAAiB,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;AACnE;AAEA;AACA,SAAS,iBAAiB,CAAC,KAAU;EACjC,OAAO,IAAI,SAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;AACxD;AAEA;AACA,SAAS,YAAY,CAAC,CAAM,EAAE,QAAkB;EAE5C,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;EAEhC,QAAQ,MAAM;IACV,KAAK,MAAM;MAAI,OAAO,IAAI,SAAI,EAAE;IAChC,KAAK,MAAM;MAAI,OAAO,IAAI,SAAI,EAAE;IAChC,KAAK,QAAQ;MAAE,OAAO,IAAI,WAAM,EAAE;IAClC,KAAK,MAAM;MAAI,OAAO,IAAI,SAAI,EAAE;IAChC,KAAK,MAAM;MAAI,OAAO,IAAI,SAAI,EAAE;IAChC,KAAK,MAAM;MAAI,OAAO,IAAI,SAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IACnD,KAAK,QAAQ;MAAE,OAAO,IAAI,WAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;IAChD,KAAK,SAAS;MAAE,OAAO,IAAI,WAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;EACpD;EAED,QAAQ,MAAM;IACV,KAAK,KAAK;MAAE;QACR,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,SAAG,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,UAAU,CAAgB,CAAC;MAC9D;IACD,KAAK,eAAe;MAAE;QAClB,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,UAAK,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAQ,CAAC;MACrD;IACD,KAAK,SAAS;MAAE;QACZ,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,YAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;MACjD;IACD,KAAK,MAAM;MAAE;QACT,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,UAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,CAAC;MAC/C;IACD,KAAK,MAAM;MAAE;QACT,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,UAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,EAAE,CAAC,CAAC,UAAU,CAAiB,CAAC;MAC7E;IACD,KAAK,WAAW;MAAE;QACd,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,eAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;MAClE;IACD,KAAK,UAAU;MAAE;QACb,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,cAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,CAAC;MACtD;IACD,KAAK,OAAO;MAAE;QACV,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,WAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,EAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAG,QAAQ,IAAI,EAAE,CAAC;MACtF;IACD,KAAK,iBAAiB;MAAE;QACpB,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,oBAAe,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;MAC7C;IACD,KAAK,eAAe;MAAE;QAClB,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,kBAAa,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC/D;IACD,KAAK,KAAK;MAAE;QACR,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,SAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;MACxD;EACJ;EACD,MAAM,IAAI,KAAK,gCAAwB,MAAM,OAAG,CAAC;AACrD,C;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE0C;AACC;AACE;AAEA;AACI;AAEW;AACY;AAC6B;AAErG,IAAO,YAAI,GAAG,WAAW,CAAC,IAAI;AAC9B,IAAO,eAAO,GAAG,WAAW,CAAC,OAAO;AACpC,IAAO,kBAAU,GAAG,WAAW,CAAC,UAAU;AAE1C,IAAO,YAAI,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AACnD,IAAO,MAAM,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;AACtD,IAAO,OAAO,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;AACxD,IAAO,cAAO,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;AACxD,IAAO,QAAQ,GAAG,WAAY,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;AAC3D,IAAO,SAAS,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;AAC5D,IAAO,UAAU,GAAG,WAAY,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AAC/D,IAAO,WAAW,GAAG,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU;AAChE,IAAO,YAAY,GAAG,WAAY,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW;AACnE,IAAO,gBAAgB,GAAG,WAAY,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe;AAQvD;AAEpB;;;AAGI;AACE,MAAO,eAAO;EAsEhB,YAAY,UAAyB,EAAE,OAAwB,EAAE,UAAa,EAAE,MAAY;IACxF,IAAI,CAAC,QAAQ,GAAG,OAAO;IACvB,IAAI,CAAC,WAAW,GAAG,UAAU;IAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;IAC7B,MAAM,KAAK,IAAI,CAAC,aAAa,GAAG,MAAM,MAAM,CAAC;IAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,UAAU,KAAK,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,GAAG;EACnF;EA1EA;EACO,OAAO,QAAQ,CAA0B,GAAQ,EAAE,UAAa;IACnE,MAAM,OAAO,GAAG,IAAI,eAAO,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,EAAE,UAAU,CAAC;IAC9D,OAAO,CAAC,aAAa,GAAG,qBAAqB,CAAC,GAAG,EAAE,UAAU,CAAC;IAC9D,OAAO,OAAO;EAClB;EAEA;EACO,OAAO,MAAM,CAAC,GAAyB;IAC1C,GAAG,GAAG,IAAI,kBAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACvC,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC;IAC/C,MAAM,UAAU,GAAS,QAAQ,CAAC,UAAU,EAAG;IAC/C,MAAM,OAAO,GAAoB,QAAQ,CAAC,OAAO,EAAE;IACnD,MAAM,UAAU,GAAkB,QAAQ,CAAC,UAAU,EAAE;IACvD,MAAM,OAAO,GAAG,IAAI,eAAO,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;IAC5D,OAAO,CAAC,aAAa,GAAG,mBAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC;IACjE,OAAO,OAAO;EAClB;EAEA;EACO,OAAO,MAAM,CAA0B,OAAmB;IAC7D,IAAI,CAAC,GAAG,IAAI,eAAO,EAAE;MAAE,YAAY,GAAG,CAAC,CAAC;IACxC,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;MACpB,YAAY,GAAG,aAAM,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAY,CAAC;KAC9D,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;MAChC,YAAY,GAAG,mBAAW,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAiB,CAAC;KACxE,MAAM,IAAI,OAAO,CAAC,iBAAiB,EAAE,EAAE;MACpC,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAqB,CAAC;IAChF;IACD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IACxB,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC;IAC1C,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC;IACnC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC;IAC7C,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC1D,QAAQ,CAAC,mBAAmB,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACvD,OAAO,CAAC,CAAC,YAAY,EAAE;EAC3B;EAEA;EACO,OAAO,IAAI,CAAC,MAA8C,EAAgB;IAAA,IAAd,UAAU,uEAAG,CAAC;IAC7E,IAAI,MAAM,YAAY,aAAM,EAAE;MAC1B,OAAO,IAAI,eAAO,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,EAAE,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;IAC1E;IACD,IAAI,MAAM,YAAY,mBAAW,EAAE;MAC/B,OAAO,IAAI,eAAO,CAAC,UAAU,EAAE,eAAe,CAAC,EAAE,EAAE,aAAa,CAAC,WAAW,EAAE,MAAM,CAAC;IACxF;IACD,IAAI,MAAM,YAAY,eAAe,EAAE;MACnC,OAAO,IAAI,eAAO,CAAC,UAAU,EAAE,eAAe,CAAC,EAAE,EAAE,aAAa,CAAC,eAAe,EAAE,MAAM,CAAC;IAC5F;IACD,MAAM,IAAI,KAAK,wCAAiC,MAAM,CAAE,CAAC;EAC7D;EAOA,IAAW,IAAI;IAAK,OAAO,IAAI,CAAC,UAAU;EAAE;EAC5C,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ;EAAE;EAC7C,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,WAAW;EAAE;EACnD,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,WAAW;EAAE;EAG5C,MAAM;IAAK,OAAO,IAAI,CAAC,aAAa,EAAK;EAAE;EAC3C,QAAQ;IAA4C,OAAO,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM;EAAE;EACrG,aAAa;IAAiD,OAAO,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,WAAW;EAAE;EACpH,iBAAiB;IAAqD,OAAO,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,eAAe;EAAE;AAS1I;AAED;;;AAGI;AACE,MAAO,mBAAW;EAIpB,IAAW,KAAK;IAAK,OAAO,IAAI,CAAC,MAAM;EAAE;EACzC,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ;EAAE;EAC7C,YAAY,MAAqB,EAAE,KAAkB,EAAE,OAAuB;IAC1E,IAAI,CAAC,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC,QAAQ,GAAG,OAAO;IACvB,IAAI,CAAC,OAAO,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG;EACnE;AACH;AAED;;;AAGI;AACE,MAAO,eAAe;EAKxB,IAAW,EAAE;IAAK,OAAO,IAAI,CAAC,GAAG;EAAE;EACnC,IAAW,IAAI;IAAK,OAAO,IAAI,CAAC,KAAK;EAAE;EACvC,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ;EAAE;EAC7C,IAAW,MAAM;IAAa,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EACvD,IAAW,KAAK;IAAkB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK;EAAE;EAC1D,IAAW,OAAO;IAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO;EAAE;EAEjE,YAAY,IAAiB,EAAE,EAAiB,EAA0B;IAAA,IAAxB,8EAAmB,KAAK;IACtE,IAAI,CAAC,KAAK,GAAG,IAAI;IACjB,IAAI,CAAC,QAAQ,GAAG,OAAO;IACvB,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;EACnD;AACH;AAED;;;AAGI;AACE,MAAO,YAAY;EAGrB,YAAY,MAAqB,EAAE,MAAqB;IACpD,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG;IAC9D,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG;EAClE;AACH;AAED;;;AAGI;AACE,MAAO,SAAS;EAGlB,YAAY,MAAqB,EAAE,SAAwB;IACvD,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG;IAC9D,IAAI,CAAC,SAAS,GAAG,OAAO,SAAS,KAAK,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,GAAG;EAC9E;AACH;AAED;AACA,SAAS,qBAAqB,CAAC,OAAY,EAAE,IAAmB;EAC5D,OAAQ,MAAK;IACT,QAAQ,IAAI;MACR,KAAK,aAAa,CAAC,MAAM;QAAE,OAAO,aAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;MAC1D,KAAK,aAAa,CAAC,WAAW;QAAE,OAAO,mBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;MACpE,KAAK,aAAa,CAAC,eAAe;QAAE,OAAO,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC/E;IACD,MAAM,IAAI,KAAK,8CAAuC,aAAa,CAAC,IAAI,CAAC,qBAAW,IAAI,OAAI,CAAC;EACjG,CAAC;AACL;AAEA;AACA,SAAS,mBAAmB,CAAC,OAAiB,EAAE,IAAmB;EAC/D,OAAQ,MAAK;IACT,QAAQ,IAAI;MACR,KAAK,aAAa,CAAC,MAAM;QAAE,OAAO,aAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAE,CAAC;MAC/E,KAAK,aAAa,CAAC,WAAW;QAAE,OAAO,mBAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,EAAE,CAAE,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;MACjH,KAAK,aAAa,CAAC,eAAe;QAAE,OAAO,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,gBAAgB,EAAE,CAAE,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;IAChI;IACD,MAAM,IAAI,KAAK,8CAAuC,aAAa,CAAC,IAAI,CAAC,qBAAW,IAAI,OAAI,CAAC;EACjG,CAAC;AACL;AAEA,YAAK,CAAC,QAAQ,CAAC,GAAG,WAAW;AAC7B,YAAK,CAAC,QAAQ,CAAC,GAAG,WAAW;AAC7B,YAAK,CAAC,UAAU,CAAC,GAAG,aAAa;AAEjC,aAAM,CAAC,QAAQ,CAAC,GAAG,YAAY;AAC/B,aAAM,CAAC,QAAQ,CAAC,GAAG,YAAY;AAC/B,aAAM,CAAC,UAAU,CAAC,GAAG,cAAc;AAEnC,mBAAW,CAAC,QAAQ,CAAC,GAAG,iBAAiB;AACzC,mBAAW,CAAC,QAAQ,CAAC,GAAG,iBAAiB;AACzC,mBAAW,CAAC,UAAU,CAAC,GAAG,mBAAmB;AAE7C,eAAe,CAAC,QAAQ,CAAC,GAAG,qBAAqB;AACjD,eAAe,CAAC,QAAQ,CAAC,GAAG,qBAAqB;AACjD,eAAe,CAAC,UAAU,CAAC,GAAG,uBAAuB;AAErD,SAAS,CAAC,QAAQ,CAAC,GAAG,eAAe;AACrC,SAAS,CAAC,QAAQ,CAAC,GAAG,eAAe;AAErC,YAAY,CAAC,QAAQ,CAAC,GAAG,kBAAkB;AAC3C,YAAY,CAAC,QAAQ,CAAC,GAAG,kBAAkB;AAoC3C;AACA,SAAS,YAAY,CAAC,OAAgB,EAAiD;EAAA,IAA/C,mFAAsC,IAAI,GAAG,EAAE;EACnF,MAAM,MAAM,GAAG,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC;EACxD,OAAO,IAAI,aAAM,CAAC,MAAM,EAAE,oBAAoB,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC;AAC1E;AAEA;AACA,SAAS,iBAAiB,CAAC,KAAmB,EAA8B;EAAA,IAA5B,OAAO,uEAAG,eAAe,CAAC,EAAE;EACxE,OAAO,IAAI,mBAAW,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAClG;AAEA;AACA,SAAS,qBAAqB,CAAC,KAAuB,EAA8B;EAAA,IAA5B,OAAO,uEAAG,eAAe,CAAC,EAAE;EAChF,OAAO,IAAI,eAAe,CAAC,mBAAW,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAG,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AACvG;AAEA;AACA,SAAS,kBAAkB,CAAC,CAAU;EAClC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AACnD;AAEA;AACA,SAAS,eAAe,CAAC,CAAa;EAClC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AACnD;AAEA;AACA,SAAS,gBAAgB,CAAC,KAAmB;EACzC,MAAM,KAAK,GAAG,EAAiB;EAC/B,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC3D,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;MACpB,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACnC;EACJ;EACD,OAAO,KAAK;AAChB;AAEA;AACA,SAAS,aAAa,CAAC,KAAmB,EAAE,OAAwB;EAChE,MAAM,aAAa,GAAG,EAAoB;EAC1C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC7D,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;MAC1B;MACA;MACA;MACA,IAAI,OAAO,GAAG,eAAe,CAAC,EAAE,EAAE;QAC1B,CAAC,CAAC,MAAM,IAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE;MAC5B;MACD,aAAa,CAAC,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C;EACJ;EACD,OAAO,aAAa;AACxB;AAEA;AACA,SAAS,kBAAkB,CAAC,MAAe,EAAE,YAAoC;EAC7E,MAAM,MAAM,GAAG,EAAa;EAC5B,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC7D,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;MACtB,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,YAAK,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC;IAC9C;EACJ;EACD,OAAO,MAAM;AACjB;AAEA;AACA,SAAS,mBAAmB,CAAC,KAAa,EAAE,YAAoC;EAC5E,MAAM,QAAQ,GAAG,EAAa;EAC9B,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC9D,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;MACvB,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,YAAK,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC;IAChD;EACJ;EACD,OAAO,QAAQ;AACnB;AAEA;AACA,SAAS,WAAW,CAAC,CAAS,EAAE,YAAoC;EAEhE,IAAI,EAAU;EACd,IAAI,KAAmB;EACvB,IAAI,IAAmB;EACvB,IAAI,IAAyB;EAC7B,IAAI,QAAoB;EACxB,IAAI,QAAoC;EAExC;EACA,IAAI,CAAC,YAAY,IAAI,EAAE,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE;IAC/C,IAAI,GAAG,eAAe,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;IAC/D,KAAK,GAAG,IAAI,YAAK,CAAC,CAAC,CAAC,IAAI,EAAG,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAC5E;EACD;EACA;EACA;EACA;EAAA,KACK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;IAChD;IACA,IAAI,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,eAAe,CAAC,IAAI,CAAU,GAAG,IAAI,KAAK,EAAE;IACnF,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,eAAe,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;IACrF,QAAQ,GAAG,IAAI,eAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC/D,KAAK,GAAG,IAAI,YAAK,CAAC,CAAC,CAAC,IAAI,EAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAChF;EACD;EACA;EAAA,KACK;IACD;IACA,IAAI,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,eAAe,CAAC,IAAI,CAAU,GAAG,IAAI,KAAK,EAAE;IACnF,QAAQ,GAAG,IAAI,eAAU,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC;IAChF,KAAK,GAAG,IAAI,YAAK,CAAC,CAAC,CAAC,IAAI,EAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAChF;EACD,OAAO,KAAK,IAAI,IAAI;AACxB;AAEA;AACA,SAAS,oBAAoB,CAAC,MAAgC;EAC1D,MAAM,IAAI,GAAG,IAAI,GAAG,EAAkB;EACtC,IAAI,MAAM,EAAE;IACR,KAAK,IAAI,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,oBAAoB,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC1E,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,KAAK,IAAI,EAAE;QACnE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAG,CAAC;MAChC;IACJ;EACJ;EACD,OAAO,IAAI;AACf;AAEA;AACA,SAAS,eAAe,CAAC,KAAW;EAChC,OAAO,IAAI,SAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAiB,CAAC;AACrE;AAEA;AACA,SAAS,eAAe,CAAC,CAAS,EAAE,QAAkB;EAElD,MAAM,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE;EAE3B,QAAQ,MAAM;IACV,KAAK,YAAI,CAAC,IAAI;MAAK,OAAO,IAAI,SAAI,EAAE;IACpC,KAAK,YAAI,CAAC,IAAI;MAAK,OAAO,IAAI,SAAI,EAAE;IACpC,KAAK,YAAI,CAAC,MAAM;MAAG,OAAO,IAAI,WAAM,EAAE;IACtC,KAAK,YAAI,CAAC,IAAI;MAAK,OAAO,IAAI,SAAI,EAAE;IACpC,KAAK,YAAI,CAAC,IAAI;MAAK,OAAO,IAAI,SAAI,EAAE;IACpC,KAAK,YAAI,CAAC,IAAI;MAAK,OAAO,IAAI,SAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IACvD,KAAK,YAAI,CAAC,OAAO;MAAE,OAAO,IAAI,WAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;EACvD;EAED,QAAQ,MAAM;IACV,KAAK,YAAI,CAAC,GAAG;MAAE;QACX,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAE;QAC7D,OAAO,IAAI,SAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC7C;IACD,KAAK,YAAI,CAAC,aAAa;MAAE;QACrB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,CAAE;QACvE,OAAO,IAAI,UAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;MAClC;IACD,KAAK,YAAI,CAAC,OAAO;MAAE;QACf,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAE;QACjE,OAAO,IAAI,YAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;MAC/C;IACD,KAAK,YAAI,CAAC,IAAI;MAAE;QACZ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAE;QAC9D,OAAO,IAAI,UAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;MAC7B;IACD,KAAK,YAAI,CAAC,IAAI;MAAE;QACZ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAE;QAC9D,OAAO,IAAI,UAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAkB,CAAC;MAC1D;IACD,KAAK,YAAI,CAAC,SAAS;MAAE;QACjB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAE;QACnE,OAAO,IAAI,eAAS,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;MAC/C;IACD,KAAK,YAAI,CAAC,QAAQ;MAAE;QAChB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAE;QAClE,OAAO,IAAI,cAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;MAChC;IACD,KAAK,YAAI,CAAC,KAAK;MAAE;QACb,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAE;QAC/D,OAAO,IAAI,WAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,QAAQ,IAAI,EAAE,CAAC;MACrE;IACD,KAAK,YAAI,CAAC,eAAe;MAAE;QACvB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,CAAE;QACzE,OAAO,IAAI,oBAAe,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;MAC5C;IACD,KAAK,YAAI,CAAC,aAAa;MAAE;QACrB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,CAAE;QACvE,OAAO,IAAI,kBAAa,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC9D;IACD,KAAK,YAAI,CAAC,GAAG;MAAE;QACX,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAE;QAC7D,OAAO,IAAI,SAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;MACvD;EACJ;EACD,MAAM,IAAI,KAAK,gCAAwB,YAAI,CAAC,MAAM,CAAC,iBAAM,MAAM,MAAG,CAAC;AACvE;AAEA;AACA,SAAS,YAAY,CAAC,CAAU,EAAE,MAAc;EAE5C,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,IAAK,YAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEjE,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC;EAEjD,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,YAAY,CAAC;EAEtE,MAAM,cAAc,GAAG,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GACtE,OAAO,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAW;IAAA,IAAV,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,CAAE,CAAC;IAClC,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,CAAE,CAAC;IAClC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;IAC1B,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;IACxB,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1B,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC;EAEP,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACtB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,kBAAkB,CAAC;EACxC,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,sBAAsB,GAAG,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC;EAEvF,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;IAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,cAAc,CAAC;EAAG;EAE5E,OAAO,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/B;AAEA;AACA,SAAS,WAAW,CAAC,CAAU,EAAE,KAAY;EAEzC,IAAI,UAAU,GAAG,CAAC,CAAC;EACnB,IAAI,UAAU,GAAG,CAAC,CAAC;EACnB,IAAI,gBAAgB,GAAG,CAAC,CAAC;EAEzB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;EACrB,IAAI,MAAM,GAAe,KAAK,CAAC,MAAM;EAErC,IAAI,CAAC,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;IAC9B,UAAU,GAAG,sBAAa,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAE;GAC7C,MAAM;IACH,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;IAC/B,gBAAgB,GAAG,sBAAa,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAE;IAChD,UAAU,GAAG,sBAAa,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAE;EACxD;EAED,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,GAAG,CAAE,CAAQ,IAAK,YAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChF,MAAM,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,EAAE,YAAY,CAAC;EAEzE,MAAM,cAAc,GAAG,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GACpE,MAAM,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,SAAW;IAAA,IAAV,CAAC,CAAC,EAAE,CAAC,CAAC;IAChE,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,CAAE,CAAC;IAClC,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,WAAI,CAAC,CAAE,CAAC;IAClC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;IAC1B,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;IACxB,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1B,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC;EAEP,IAAI,KAAK,CAAC,IAAI,EAAE;IACZ,UAAU,GAAG,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;EAC1C;EAED,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;EACpB,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC;EAC7B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC;EAC7B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,oBAAoB,CAAC;EAC3C,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;EAEvC,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;IAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC;EAAG;EACzD,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;IAAE,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,gBAAgB,CAAC;EAAG;EAC3E,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;IAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,cAAc,CAAC;EAAG;EAE3E,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7B;AAEA;AACA,SAAS,iBAAiB,CAAC,CAAU,EAAE,WAAwB;EAE3D,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;EACrC,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,IAAI,EAAE;EAEzC,YAAY,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC;EAC9C,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,CAAC,IAAK,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAE9D,MAAM,iBAAiB,GAAG,CAAC,CAAC,SAAS,EAAE;EAEvC,YAAY,CAAC,kBAAkB,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC;EAClD,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,EAAE,IAAK,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAErE,MAAM,mBAAmB,GAAG,CAAC,CAAC,SAAS,EAAE;EAEzC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAChC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAC1D,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,iBAAiB,CAAC;EAC3C,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,mBAAmB,CAAC;EAC/C,OAAO,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;AACzC;AAEA;AACA,SAAS,qBAAqB,CAAC,CAAU,EAAE,eAAgC;EACvE,MAAM,UAAU,GAAG,mBAAW,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC;EAC9D,gBAAgB,CAAC,oBAAoB,CAAC,CAAC,CAAC;EACxC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC1D,gBAAgB,CAAC,UAAU,CAAC,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC;EACvD,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC;EACvC,OAAO,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACjD;AAEA;AACA,SAAS,eAAe,CAAC,CAAU,EAAE,IAAe;EAChD,OAAO,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAC/F;AAEA;AACA,SAAS,kBAAkB,CAAC,CAAU,EAAE,IAAkB;EACtD,OAAO,cAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,IAAI,YAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACtF;AAEA;AACA,MAAM,sBAAsB,GAAI;EAC5B,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;EACjC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC;EAC9D;EACA,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;AAC5C,CAAC,CAAC,CAAE,C;;ACzlBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEwC;AACE;AAC1C,IAAO,sBAAU,GAAG,WAAW,CAAC,UAAU;AACG;AACC;AACK;AACiB;AACO;AACY;AAEvF;AAAe,MAAM,kBAAkB,GAAU,IAAmB,uBAAiB,aAAa,CAAC,IAAI,CAAC,kDAA+C;AACvJ;AAAe,MAAM,WAAW,GAAiB,IAAmB,mDAA6C,aAAa,CAAC,IAAI,CAAC,kCAA+B;AACnK;AAAe,MAAM,sBAAsB,GAAK,CAAC,QAAgB,EAAE,MAAc,gCAAyB,QAAQ,4CAAkC,MAAM,MAAG;AAC7J;AAAe,MAAM,wBAAwB,GAAG,CAAC,QAAgB,EAAE,MAAc,gCAAyB,QAAQ,oDAA0C,MAAM,MAAG;AAErK;AACM,MAAO,qBAAa;EAEtB,YAAY,MAA0E;IAClF,IAAI,CAAC,MAAM,GAAG,MAAM,YAAY,iBAAU,GAAG,MAAM,GAAG,IAAI,iBAAU,CAAC,MAAM,CAAC;EAChF;EACO,CAAC,MAAM,CAAC,QAAQ,IAAC;IAAgC,OAAO,IAAiC;EAAE;EAC3F,IAAI;IACP,IAAI,CAAC;IACL,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IACnE;IACA;IACA;IACA,IAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IACf,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IACnE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IACpE,OAAc,CAA6B;EAC/C;EACO,KAAK,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EAAE;EACtD,MAAM,CAAC,KAAW;IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAAE;EACxD,WAAW,CAA0B,IAAe;IACvD,IAAI,CAA6B;IACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,IAAI;IAAG;IAC5C,IAAK,IAAI,IAAI,IAAI,IAAK,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,EAAE;MAC/C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC5C;IACD,OAAO,CAAC,CAAC,KAAK;EAClB;EACO,eAAe,CAAC,UAAkB;IACrC,IAAI,UAAU,IAAI,CAAC,EAAE;MAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC;IAAG;IAClD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,IAAI,GAAG,CAAC,UAAU,GAAG,UAAU,EAAE;MAC7B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IACxE;IACD;IACA;IACA,OAAO,QAAU,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,IAClC,QAAU,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,IAAK,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;EAClG;EACO,UAAU,GAAoB;IAAA,IAAnB,WAAW,uEAAG,KAAK;IACjC,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM;IACjC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACtC,MAAM,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;IAC1C,IAAI,WAAW,IAAI,CAAC,MAAM,EAAE;MACxB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC;IACD,OAAO,MAAM;EACjB;EACU,kBAAkB;IACxB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACrC,MAAM,EAAE,GAAG,GAAG,IAAI,IAAI,sBAAU,CAAC,GAAG,CAAC;IACrC,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;IACtC,OAAO;MAAE,IAAI,EAAE,GAAG,KAAK,CAAC;MAAE,KAAK,EAAE;IAAG,CAAE;EAC1C;EACU,YAAY,CAAC,cAAsB;IACzC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC5C,IAAI,CAAC,GAAG,EAAE;MAAE,OAAO,aAAa;IAAG;IACnC,IAAI,GAAG,CAAC,UAAU,GAAG,cAAc,EAAE;MACjC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,cAAc,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1E;IACD,OAAO;MAAE,IAAI,EAAE,KAAK;MAAE,KAAK,EAAE,eAAO,CAAC,MAAM,CAAC,GAAG;IAAC,CAAE;EACtD;AACH;AAED;AACM,MAAO,0BAAkB;EAI3B,YAAY,MAAW,EAAE,UAAmB;IACxC,IAAI,CAAC,MAAM,GAAG,MAAM,YAAY,sBAAe,GAAG,MAAM,GAClD,YAAY,CAAC,MAAM,CAAC,GACpB,IAAI,0BAAqB,CAAC,MAAM,EAAE,UAAW,CAAC,GAC9C,IAAI,sBAAe,CAAC,MAAM,CAAC;EACrC;EACO,CAAC,MAAM,CAAC,aAAa,IAAC;IAAqC,OAAO,IAAsC;EAAE;EAC1G,MAAM,IAAI;IACb,IAAI,CAAC;IACL,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IACzE;IACA;IACA;IACA,IAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IACf,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IACzE,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;MAAE,OAAO,aAAa;IAAG;IAC1E,OAAc,CAA6B;EAC/C;EACO,MAAM,KAAK,CAAC,KAAW;IAAI,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EAAE;EAClE,MAAM,MAAM,CAAC,KAAW;IAAI,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAAE;EACpE,MAAM,WAAW,CAA0B,IAAe;IAC7D,IAAI,CAA6B;IACjC,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,IAAI;IAAG;IAClD,IAAK,IAAI,IAAI,IAAI,IAAK,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,EAAE;MAC/C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC5C;IACD,OAAO,CAAC,CAAC,KAAK;EAClB;EACO,MAAM,eAAe,CAAC,UAAkB;IAC3C,IAAI,UAAU,IAAI,CAAC,EAAE;MAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC;IAAG;IAClD,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5D,IAAI,GAAG,CAAC,UAAU,GAAG,UAAU,EAAE;MAC7B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IACxE;IACD;IACA;IACA,OAAO,QAAU,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,IAClC,QAAU,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,IAAK,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;EAClG;EACO,MAAM,UAAU,GAAoB;IAAA,IAAnB,WAAW,uEAAG,KAAK;IACvC,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM;IACjC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IAC5C,MAAM,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;IAC1C,IAAI,WAAW,IAAI,CAAC,MAAM,EAAE;MACxB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC;IACD,OAAO,MAAM;EACjB;EACU,MAAM,kBAAkB;IAC9B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3C,MAAM,EAAE,GAAG,GAAG,IAAI,IAAI,sBAAU,CAAC,GAAG,CAAC;IACrC,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;IACtC,OAAO;MAAE,IAAI,EAAE,GAAG,KAAK,CAAC;MAAE,KAAK,EAAE;IAAG,CAAE;EAC1C;EACU,MAAM,YAAY,CAAC,cAAsB;IAC/C,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAClD,IAAI,CAAC,GAAG,EAAE;MAAE,OAAO,aAAa;IAAG;IACnC,IAAI,GAAG,CAAC,UAAU,GAAG,cAAc,EAAE;MACjC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,cAAc,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1E;IACD,OAAO;MAAE,IAAI,EAAE,KAAK;MAAE,KAAK,EAAE,eAAO,CAAC,MAAM,CAAC,GAAG;IAAC,CAAE;EACtD;AACH;AAED;AACM,MAAO,yBAAkB,SAAQ,qBAAa;EAMhD,YAAY,MAAiC;IACzC,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IANpB,YAAO,GAAG,KAAK;IAEf,UAAK,GAAU,EAAE;IACjB,gBAAW,GAAG,CAAC;IACf,qBAAgB,GAAG,CAAC;IAGxB,IAAI,CAAC,KAAK,GAAG,MAAM,YAAY,SAAS,GAAG,MAAM,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC;EAC7E;EACO,IAAI;IACP,MAAM;MAAE;IAAK,CAAE,GAAG,IAAI;IACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACf,IAAI,CAAC,OAAO,GAAG,IAAI;MACnB,MAAM,OAAO,GAAG,eAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC;MACpE,OAAO;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE;MAAO,CAAE;IACzC;IACD,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE;MACnD,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;MACzD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;MACrC,MAAM,OAAO,GAAG,eAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,eAAe,CAAC;MACtE,OAAO;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE;MAAO,CAAE;IACzC;IACD,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE;MACzC,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;MAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;MAC7B,MAAM,OAAO,GAAG,eAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,WAAW,CAAC;MAClE,OAAO;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE;MAAO,CAAE;IACzC;IACD,IAAI,CAAC,KAAK,GAAG,EAAE;IACf,OAAO,aAAa;EACxB;EACO,eAAe,CAAC,WAAoB;IACvC,OAAO,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAQ;IAC5C,SAAS,kBAAkB,CAAC,EAAS;MACjC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAU,CAAC,OAAO,EAAE,MAAW,KAAK,CACxD,GAAG,OAAO,EACV,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,EACrD,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,EAC7C,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,EACjD,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,EAC7C,GAAG,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAC5C,EAAE,EAAa,CAAC;IACrB;EACJ;EACO,WAAW,CAA0B,IAAe;IACvD,IAAI,CAA6B;IACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE;MAAE,OAAO,IAAI;IAAG;IAC5C,IAAK,IAAI,IAAI,IAAI,IAAK,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,EAAE;MAC/C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC5C;IACD,OAAO,CAAC,CAAC,KAAK;EAClB;EACO,UAAU;IACb,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM;IACjC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACtC,MAAM,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;IAC1C,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;MACrB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC;IACD,OAAO,MAAM;EACjB;AACH;AAED;AACO,MAAM,OAAO,GAAG,CAAC;AACxB;AACO,MAAM,SAAS,GAAG,QAAQ;AACjC;AACO,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;AAErD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;EAC9C,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;AACrC;AAED;AACM,SAAU,wBAAwB,CAAC,MAAkB,EAAW;EAAA,IAAT,KAAK,uEAAG,CAAC;EAClE,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACzC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;MAChC,OAAO,KAAK;IACf;EACJ;EACD,OAAO,IAAI;AACf;AAEA;AACO,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM;AACvC;AACO,MAAM,eAAe,GAAG,WAAW,GAAG,OAAO;AACpD;AACO,MAAM,iBAAiB,GAAG,WAAW,GAAG,CAAC,GAAG,OAAO,C;;AChQ1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIqC;AACK;AACG;AAEO;AACI;AACA;AACU;AAKjD;AA2BjB;AACM,MAAO,+BAAgB,SAAQ,OAAO;EAUxC;IAAwB,KAAK,EAAE;IAiCrB,gBAAW,GAAG,CAAC;IACf,WAAM,GAAgB,EAAE;IACxB,aAAQ,GAAsB,EAAE;IAChC,mBAAc,GAAmB,EAAE;EApCZ;EARjC;EACO,OAAO,QAAQ,GAAqD;IACvE,MAAM,SAAS,GAAG,IAAI,+BAAe,EAAE;IAAC,kCADc,IAAiB;MAAjB,IAAiB;IAAA;IAEvE,MAAM,cAAc,GAAG,wBAAwB,CAAC,uBAAW,EAAE,IAAI,CAAC;IAClE,MAAM,CAAC,cAAc,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC;IACxE,OAAO,cAAc;EACzB;EAIO,KAAK,CAAmB,MAAS;IACpC,IAAI,CAAC,aAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MACrC,MAAM;QAAE,IAAI;QAAE,MAAM;QAAE;MAAS,CAAE,GAAG,MAAM;MAC1C,IAAI,MAAM,GAAG,UAAU,EAAE;QACrB;QACA,MAAM,IAAI,UAAU,CAAC,oDAAoD,CAAC;MAC7E;MACD,IAAI,CAAC,aAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC/B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,IAAI,CAAC,GAC7B,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAAA,EAClB,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CACzD;MACJ;MACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpD;IACD,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;EAC9B;EAEO,SAAS,CAAiB,MAAY;IACzC,OAAO,IAAI;EACf;EACO,eAAe,CAAuB,MAAY;IACrD;IACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;EACrC;EAEA,IAAW,KAAK;IAAK,OAAO,IAAI,CAAC,MAAM;EAAE;EACzC,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,QAAQ;EAAE;EAC7C,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,WAAW;EAAE;EACnD,IAAW,aAAa;IAAK,OAAO,IAAI,CAAC,cAAc;EAAE;AAM5D;AAED;AACA,SAAS,SAAS,CAAwB,MAAuB;EAC7D,MAAM,UAAU,GAAI,MAAM,CAAC,UAAU,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC;EACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;EACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;EACvE,IAAI,CAAC,WAAW,IAAI,UAAU;EAC9B,OAAO,IAAI;AACf;AAEA;AACA,SAAS,aAAa,CAAyC,MAAY;EACvE,MAAM;IAAE,IAAI;IAAE,MAAM;IAAE,OAAO;IAAE;EAAY,CAAE,GAAG,MAAM;EACtD;EACA,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;EAC7B;EACA,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE;IAChC,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;GACjD,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,EAAE;IACtC;IACA,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;MACpB;MACA,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;MAClC;MACA,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;KACjD,MAAM;MACH;MACA;MACA;MACA,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3E,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC;MACvD;MACA,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAChE,MAAM,cAAc,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;MAC7C;MACA;MACA;MACA,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC;MACnF,KAAK,IAAI,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,MAAM,GAAG;QACnD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;UACxD,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC;QAC1D;QACD,cAAc,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,KAAK;QACvD,EAAE,YAAY,CAAC,MAAM,CAAC;MACzB;MACD,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;MACpC;MACA,KAAK,IAAI,KAAoB,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,UAAU,GAAG,WAAW,GAAG;QAC7G,IAAI,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;UACvC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;UACvC,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;UAC1D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;QAC7D;MACJ;IACJ;EACJ;EACD,OAAO,IAAI;AACf;AAEA;AACA,SAAS,kBAAkB,CAAwC,MAAY;EAC3E;EACA,IAAI,MAAkB;EACtB,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,EAAE;IACnC;IACA,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;GACjD,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,aAAa,UAAU,EAAE;IACvD;IACA,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EACpF;EACD;EACA;EACA;EACA;EACA;EACA,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;AAClD;AAEA;AACA,SAAS,kBAAkB,CAAiH,MAAY;EACpJ,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACzF;AAEA;AACA,SAAS,sBAAsB,CAAiD,MAAY;EACxF,MAAM;IAAE,MAAM;IAAE,MAAM;IAAE;EAAY,CAAE,GAAG,MAAM;EAC/C,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC;EACnC,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;EACvC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,WAAW,EAAE,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC;EACtF;EACA,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;EAClF,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EAC9E,OAAO,IAAI;AACf;AAEA;AACA,SAAS,kBAAkB,CAA+D,MAAY;EAClG,MAAM;IAAE,MAAM;IAAE;EAAY,CAAE,GAAG,MAAM;EACvC;EACA,IAAI,YAAY,EAAE;IACd,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;EAClF;EACD;EACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC;AAC5C;AAEA;AACA,SAAS,oBAAoB,CAAkD,MAAY;EACvF,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG;AAEA,+BAAe,CAAC,SAAS,CAAC,SAAS,GAAkB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,QAAQ,GAAmB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,UAAU,GAAiB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,SAAS,GAAc,sBAAsB;AACvE,+BAAe,CAAC,SAAS,CAAC,WAAW,GAAY,sBAAsB;AACvE,+BAAe,CAAC,SAAS,CAAC,oBAAoB,GAAO,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,SAAS,GAAkB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,cAAc,GAAa,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,SAAS,GAAkB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,YAAY,GAAe,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,SAAS,GAAkB,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,WAAW,GAAc,oBAAoB;AACvE,+BAAe,CAAC,SAAS,CAAC,UAAU,GAAsB,aAAa;AACvE,+BAAe,CAAC,SAAS,CAAC,aAAa,GAAc,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,kBAAkB,GAAS,kBAAkB;AACvE,+BAAe,CAAC,SAAS,CAAC,QAAQ,GAAmB,kBAAkB,C;;ACzOvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGqC;AACuD;AAO5F;AACM,MAAO,mCAAkB,SAAQ,OAAO;EACnC,KAAK,CAA0B,IAAO;IACzC,OAAO,IAAI,IAAI,IAAI,GAAG,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;EACvD;EACO,SAAS,OAAmC;IAAA,IAAb;MAAE;IAAM,CAAK;IAC/C,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,QAAQ,QAAsD;IAAA,IAAjC;MAAE,MAAM;MAAE,QAAQ;MAAE;IAAQ,CAAK;IACjE,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,UAAU,EAAE,QAAQ;MAAE,UAAU,EAAE;IAAQ,CAAE;EAClG;EACO,UAAU,QAA+C;IAAA,IAAxB;MAAE,MAAM;MAAE;IAAS,CAAK;IAC5D,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,WAAW,EAAE,SAAS,CAAC,SAAS;IAAC,CAAE;EACzF;EACO,WAAW,QAAqC;IAAA,IAAb;MAAE;IAAM,CAAK;IACnD,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,SAAS,QAAmC;IAAA,IAAb;MAAE;IAAM,CAAK;IAC/C,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,SAAS,QAAmC;IAAA,IAAb;MAAE;IAAM,CAAK;IAC/C,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,YAAY,QAAwD;IAAA,IAA/B;MAAE,MAAM;MAAE,KAAK;MAAE;IAAS,CAAK;IACvE,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,OAAO,EAAE,KAAK;MAAE,WAAW,EAAE;IAAS,CAAE;EAC9F;EACO,SAAS,QAA0C;IAAA,IAAnB;MAAE,MAAM;MAAE;IAAI,CAAK;IACtD,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,MAAM,EAAE,QAAQ,CAAC,IAAI;IAAC,CAAE;EAC9E;EACO,SAAS,QAAmD;IAAA,IAA7B;MAAE,MAAM;MAAE,IAAI;MAAE;IAAQ,CAAK;IAC/D,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC;MAAE;IAAQ,CAAE;EACxF;EACO,cAAc,SAAwD;IAAA,IAA7B;MAAE,MAAM;MAAE,QAAQ;MAAE;IAAI,CAAK;IACzE,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC;MAAE;IAAQ,CAAE;EACxF;EACO,aAAa,SAA6C;IAAA,IAAnB;MAAE,MAAM;MAAE;IAAI,CAAK;IAC7D,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,MAAM,EAAE,YAAY,CAAC,IAAI;IAAC,CAAE;EAClF;EACO,SAAS,SAAmC;IAAA,IAAb;MAAE;IAAM,CAAK;IAC/C,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,WAAW,SAAqC;IAAA,IAAb;MAAE;IAAM,CAAK;IACnD,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW;IAAE,CAAE;EACtD;EACO,UAAU,SAAmD;IAAA,IAA5B;MAAE,MAAM;MAAE,IAAI;MAAE;IAAO,CAAK;IAChE,OAAO;MACH,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MACvC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC;MACvB,SAAS,EAAE,CAAC,GAAG,OAAO;KACzB;EACL;EACO,eAAe,CAA4B,IAAO;IACrD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;EACtC;EACO,oBAAoB,SAAyD;IAAA,IAAxB;MAAE,MAAM;MAAE;IAAS,CAAK;IAChF,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,WAAW,EAAE;IAAS,CAAE;EAC9E;EACO,kBAAkB,SAAsD;IAAA,IAAvB;MAAE,MAAM;MAAE;IAAQ,CAAK;IAC3E,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,UAAU,EAAE;IAAQ,CAAE;EAC5E;EACO,QAAQ,SAA+C;IAAA,IAAzB;MAAE,MAAM;MAAE;IAAU,CAAK;IAC1D,OAAO;MAAE,MAAM,EAAE,cAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;MAAE,YAAY,EAAE;IAAU,CAAE;EAChF;AACH,C;;ACzFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEgC;AACG;AACA;AACE;AACA;AACQ;AAEW;AACG;AACH;AAKvC;AA4BjB;AACM,MAAO,uCAAoB,SAAQ,OAAO;EAE5C;EACO,OAAO,QAAQ,GAAqD;IAAA,kCAAjB,IAAiB;MAAjB,IAAiB;IAAA;IACvE,OAAO,IAAI,uCAAmB,EAAE,CAAC,SAAS,CAAC,wBAAwB,CAAC,uBAAW,EAAE,IAAI,CAAC,CAAC;EAC3F;EAEO,KAAK,CAAmB,MAAS;IACpC,MAAM;MAAE,IAAI;MAAE,IAAI;MAAE;IAAM,CAAE,GAAG,MAAM;IACrC,MAAM;MAAE,MAAM;MAAE,SAAS;MAAE;IAAU,CAAE,GAAG,IAAI;IAC9C,MAAM,IAAI,GAAG,aAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI;IACnF,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;MAAE,CAAC,UAAU,CAAC,QAAQ,GAAG;IAAS,CAAE,CAAC;IACrF,OAAO;MACH,MAAM,EAAE,IAAI;MACZ,OAAO,EAAE,MAAM;MACf,UAAU,EAAE,aAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,GACvC,SAAS,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE;MAAM,CAAE,EAAE,MAAM,CAAC,CAAC,GAChD,CAAC,GAAG,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;MAChE,GAAG,KAAK,CAAC,KAAK,CAAC,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;KAC1E;EACL;EACO,SAAS;IAAK,OAAO,EAAE;EAAE;EACzB,SAAS,OAAiD;IAAA,IAAhC;MAAE,MAAM;MAAE,MAAM;MAAE;IAAM,CAAQ;IAC7D,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC;IAAC,CAAE;EAC9E;EACO,QAAQ,CAAgB,MAAY;IACvC,OAAO;MACH,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAC3B,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAClB,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAoC,EAAE,CAAC,CAAC;KAC7E;EACL;EACO,UAAU,CAAkB,MAAY;IAC3C,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM;IAAC,CAAE;EACzC;EACO,SAAS,CAAiB,MAAY;IACzC,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC;MAAE,QAAQ,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY;IAAC,CAAE;EACtE;EACO,WAAW,CAAmB,MAAY;IAC7C,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;MAAE,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY;IAAC,CAAE;EACpF;EACO,oBAAoB,CAA4B,MAAY;IAC/D,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC;IAAC,CAAE;EAClD;EACO,SAAS,CAAkB,MAAY;IAC1C,OAAO;MACH,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,GACnC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAClB,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;KAC/C;EACL;EACO,cAAc,CAAsB,MAAY;IACnD,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IAAC,CAAE;EAC9D;EACO,SAAS,CAAiB,MAAY;IACzC,OAAO;MACH,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,GACzC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAClB,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;KAC/C;EACL;EACO,YAAY,CAAoB,MAAY;IAC/C,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IAAC,CAAE;EAC9D;EACO,SAAS,CAAiB,MAAY;IACzC,OAAO;MACH,QAAQ,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;MAClC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KACtC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;KACzD;EACL;EACO,WAAW,CAAmB,MAAY;IAC7C,OAAO;MACH,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KACtC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;KACzD;EACL;EACO,UAAU,CAAkB,MAAY;IAC3C,OAAO;MACH,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;MAC3B,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS;MACrF,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,aAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;KACpG;EACL;EACO,aAAa,CAAqB,MAAY;IACjD,OAAO;MAAE,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM;IAAC,CAAE;EACzC;EACO,kBAAkB,CAA0B,MAAY;IAC3D,OAAO;MACH,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KACtC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;KACzD;EACL;EACO,QAAQ,CAAiB,MAAY;IACxC,OAAO;MACH,QAAQ,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;MAClC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KACtC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;KACzD;EACL;AACH;AAED;AACA,UAAU,cAAc,CAAC,MAAgD;EACrE,KAAK,MAAM,MAAM,IAAI,MAA8B,EAAE;IACjD,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAI;MAC9B,iBAAU,GAAG,SAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE;EACvB;AACL;AAEA;AACA,UAAU,gBAAgB,CAAC,MAAgC,EAAE,MAAc;EACvE,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IACnD,gBAAS,KAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAE;EAChF;AACL,C;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEiC;AACC;AAEC;AACA;AACO;AACG;AACE;AACK;AACK;AACG;AACC;AACI;AACI;AACD;AACe;AACI;AACsC;AAgBvH,MAAO,wBAA+D,SAAQ,eAA2B;EAiB3G,YAAY,OAAwC;IAChD,KAAK,EAAE;IAMD,cAAS,GAAG,CAAC;IACb,aAAQ,GAAG,KAAK;IAG1B;IACU,UAAK,GAAG,IAAI,qBAAc,EAAE;IAC5B,YAAO,GAAkB,IAAI;IAC7B,sBAAiB,GAAgB,EAAE;IACnC,uBAAkB,GAAgB,EAAE;IACpC,4BAAuB,GAAG,IAAI,GAAG,EAAkB;IAdzD,eAAQ,CAAC,OAAO,CAAC,KAAK,OAAO,GAAG;MAAE,WAAW,EAAE,IAAI;MAAE,oBAAoB,EAAE;IAAK,CAAE,CAAC;IACnF,IAAI,CAAC,YAAY,GAAI,OAAO,OAAO,CAAC,WAAW,KAAK,SAAS,GAAI,OAAO,CAAC,WAAW,GAAG,IAAI;IAC3F,IAAI,CAAC,qBAAqB,GAAI,OAAO,OAAO,CAAC,oBAAoB,KAAK,SAAS,GAAI,OAAO,CAAC,oBAAoB,GAAG,KAAK;EAC3H;EApBA;EACA;EACO,OAAO,WAAW,CAAC,OAAmE;IACzF,MAAM,IAAI,KAAK,oDAAkD,CAAC;EACtE;EACA;EACO,OAAO,UAAU;EACpB;EACA,gBAA6E;EAC7E;EACA,gBAAyD;IAEzD,MAAM,IAAI,KAAK,mDAAiD,CAAC;EACrE;EAsBO,QAAQ,GAAkB;IAAA,IAAjB,2EAAY,KAAK;IAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAA6B;EAChE;EAGO,YAAY,GAAkB;IAAA,IAAjB,2EAAY,KAAK;IACjC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAqC;EAC5E;EAMO,QAAQ,CAAC,KAA6F;IACzG,IAAI,SAAS,CAAM,KAAK,CAAC,EAAE;MACvB,OAAO,KAAK,CAAC,IAAI,CAAE,CAAC,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC7C,MAAM,IAAI,eAAe,CAAiB,KAAK,CAAC,EAAE;MAC/C,OAAO,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC;IACpC;IACD,OAAO,QAAQ,CAAC,IAAI,EAAQ,KAAK,CAAC;EACtC;EAEA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;EAAE;EACzC,CAAC,MAAM,CAAC,aAAa,IAAC;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;EAAE;EACtE,WAAW,CAAC,OAAkC;IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC;EAAE;EAC1F,YAAY,CAAC,OAA0C;IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC;EAAE;EAEpG,KAAK;IACR,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE;EACrC;EACO,KAAK,CAAC,MAAY;IACrB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;EAC3C;EACO,MAAM;IACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;IACvE,OAAO,IAAI;EACf;EACO,KAAK,GAAuF;IAAA,IAAtF,2EAA2C,IAAI,CAAC,KAAK;IAAA,IAAE,6EAA2B,IAAI;IAE/F,IAAK,IAAI,KAAK,IAAI,CAAC,KAAK,IAAM,IAAI,YAAY,qBAAe,EAAE;MAC3D,IAAI,CAAC,KAAK,GAAG,IAAsB;KACtC,MAAM;MACH,IAAI,CAAC,KAAK,GAAG,IAAI,qBAAc,EAAE;MACjC,IAAI,IAAI,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;QACnC,IAAI,CAAC,WAAW,CAAC;UAAE,IAAI,EAAE;QAAO,CAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;OACnD,MAAM,IAAI,IAAI,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAE;QAC3C,IAAI,CAAC,YAAY,CAAC;UAAE,UAAU,EAAE;QAAK,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;MACtD;IACJ;IAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;MAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC;IAED,IAAI,CAAC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAAC,uBAAuB,GAAG,IAAI,GAAG,EAAE;IAExC,IAAI,CAAC,MAAM,IAAI,CAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAE,EAAE;MAC9C,IAAI,MAAM,KAAK,IAAI,EAAE;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI;OACtB,MAAM;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM;QACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;MAC5B;IACJ;IAED,OAAO,IAAI;EACf;EAEO,KAAK,CAAC,OAAqE;IAE9E,IAAI,MAAM,GAAqB,IAAI;IAEnC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;MACb,MAAM,IAAI,KAAK,8BAA8B,CAAC;KACjD,MAAM,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;MAClD,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,SAAS;KACpC,MAAM,IAAI,OAAO,YAAY,WAAK,IAAI,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE;MAC/D,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,SAAS;KACpC,MAAM,IAAI,OAAO,YAAY,uBAAW,IAAI,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE;MACrE,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,SAAS;IACpC;IAED,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;MAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;QACpC,OAAO,IAAI,CAAC,KAAK,EAAE;MACtB;MACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC;IACjC;IAED,IAAI,OAAO,YAAY,uBAAW,EAAE;MAChC,IAAI,EAAE,OAAO,YAAY,+CAAoC,CAAC,EAAE;QAC5D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;MAClC;KACJ,MAAM,IAAI,OAAO,YAAY,WAAK,EAAE;MACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;KAChC,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;MAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IACzB;EACL;EAEU,aAAa,CAA0B,OAAmB,EAAe;IAAA,IAAb,SAAS,uEAAG,CAAC;IAE/E,MAAM,CAAC,GAAG,SAAS,GAAG,CAAC;IACvB,MAAM,MAAM,GAAG,eAAO,CAAC,MAAM,CAAC,OAAO,CAAC;IACtC,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU;IACxC,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,qBAAqB,GAAG,CAAC,GAAG,CAAC;IACtD,MAAM,WAAW,GAAI,cAAc,GAAG,UAAU,GAAG,CAAC,GAAI,CAAC,CAAC;IAC1D,MAAM,aAAa,GAAG,WAAW,GAAG,cAAc,GAAG,UAAU;IAE/D,IAAI,OAAO,CAAC,UAAU,KAAK,aAAa,CAAC,WAAW,EAAE;MAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/F,MAAM,IAAI,OAAO,CAAC,UAAU,KAAK,aAAa,CAAC,eAAe,EAAE;MAC7D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9F;IAED;IACA,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;MAC7B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC;IACD;IACA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC;IACpD;IACA,IAAI,cAAc,GAAG,CAAC,EAAE;MAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAAG;IAChD;IACA,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;EAC5C;EAEU,MAAM,CAAC,KAA2B;IACxC,IAAI,IAAI,CAAC,QAAQ,EAAE;MACf,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;MAClC,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;QACjC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU;MACtC;IACJ;IACD,OAAO,IAAI;EACf;EAEU,YAAY,CAAC,MAAiB;IACpC,OAAO,IAAI,CAAC,aAAa,CAAC,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACnD;EAEA;EACU,YAAY,CAAC,MAAiB;IACpC;IACA,OAAO,IAAI,CAAC,qBAAqB,GAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAC7B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3C;EAEU,WAAW;IACjB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;EAC7B;EAEU,aAAa,CAAC,MAAc;IAClC,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI;EAClE;EAEU,iBAAiB,CAAC,KAAqB;IAC7C,MAAM;MAAE,UAAU;MAAE,KAAK;MAAE,aAAa;MAAE;IAAO,CAAE,GAAG,+BAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;IACrF,MAAM,WAAW,GAAG,IAAI,mBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC;IAChF,MAAM,OAAO,GAAG,eAAO,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC;IACrD,OAAO,IAAI,CACN,kBAAkB,CAAC,KAAK,CAAC,CACzB,aAAa,CAAC,OAAO,CAAC,CACtB,iBAAiB,CAAC,OAAO,CAAC;EACnC;EAEU,qBAAqB,CAAC,UAAkB,EAAE,EAAU,EAAiB;IAAA,IAAf,OAAO,uEAAG,KAAK;IAC3E,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACrG,MAAM;MAAE,UAAU;MAAE,KAAK;MAAE,aAAa;MAAE;IAAO,CAAE,GAAG,+BAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;IAC1F,MAAM,WAAW,GAAG,IAAI,mBAAoB,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC;IACrF,MAAM,eAAe,GAAG,IAAI,eAAwB,CAAC,WAAW,EAAE,EAAE,EAAE,OAAO,CAAC;IAC9E,MAAM,OAAO,GAAG,eAAO,CAAC,IAAI,CAAC,eAAe,EAAE,UAAU,CAAC;IACzD,OAAO,IAAI,CACN,aAAa,CAAC,OAAO,CAAC,CACtB,iBAAiB,CAAC,OAAO,CAAC;EACnC;EAEU,iBAAiB,CAAC,OAA0B;IAClD,IAAI,MAAuB;IAC3B,IAAI,IAAY,EAAE,OAAe;IACjC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;MAC3C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,IAAI,CAAC,EAAE;QACzD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAE,IAAI,GAAG,CAAC,GAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;UAC1C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9B;MACJ;IACJ;IACD,OAAO,IAAI;EACf;EAEU,kBAAkB,CAAC,KAAqB;IAC9C,KAAK,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,KAAK,CAAC,YAAY,EAAE;MAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;MACtD,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE;QACpE,MAAM,MAAM,GAAG,QAAQ,IAAI,UAAU,GAAI,UAAkB,CAAC,MAAM,GAAG,CAAC,UAAU,CAAC;QACjF,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;UACxB,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;UACjD,MAAM,IAAI,KAAK,CAAC,MAAM;QACzB;MACJ;IACJ;IACD,OAAO,IAAI;EACf;AACH;AAED;AACM,MAAO,8BAAqE,SAAQ,wBAAoB;EAK1G;EACO,OAAO,QAAQ,CAA8C,KAAU,EAAE,OAAwC;IACpH,MAAM,MAAM,GAAG,IAAI,8BAAuB,CAAI,OAAO,CAAC;IACtD,IAAI,SAAS,CAAM,KAAK,CAAC,EAAE;MACvB,OAAO,KAAK,CAAC,IAAI,CAAE,CAAC,IAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC/C,MAAM,IAAI,eAAe,CAAiB,KAAK,CAAC,EAAE;MAC/C,OAAO,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC;IACtC;IACD,OAAO,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;EAClC;AACH;AAED;AACM,MAAO,4BAAmE,SAAQ,wBAAoB;EAgBxG;IACI,KAAK,EAAE;IACP,IAAI,CAAC,YAAY,GAAG,IAAI;EAC5B;EAdA;EACO,OAAO,QAAQ,CAA8C,KAAU;IAC1E,MAAM,MAAM,GAAG,IAAI,4BAAqB,EAAK;IAC7C,IAAI,SAAS,CAAM,KAAK,CAAC,EAAE;MACvB,OAAO,KAAK,CAAC,IAAI,CAAE,CAAC,IAAK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC/C,MAAM,IAAI,eAAe,CAAiB,KAAK,CAAC,EAAE;MAC/C,OAAO,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC;IACtC;IACD,OAAO,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;EAClC;EAOA;EACU,YAAY,CAAC,MAAiB;IACpC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;EAC9C;EAEU,YAAY,CAAC,MAAiB;IACpC,MAAM,MAAM,GAAG,YAAM,CAAC,MAAM,CAAC,IAAI,YAAM,CACnC,MAAM,EAAE,eAAe,CAAC,EAAE,EAC1B,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAClD,CAAC;IACF,OAAO,KAAK,CACP,YAAY,CAAC,MAAM,CAAC,CAAC;IAAA,CACrB,MAAM,CAAC,MAAM,CAAC,CAAC;IAAA,CACf,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAAA,CACzC,WAAW,EAAE,CAAC,CAAC;EACxB;AACH;AAED;AACM,MAAO,4BAAmE,SAAQ,wBAAoB;EAexG;IACI,KAAK,EAAE;IACP,IAAI,CAAC,YAAY,GAAG,IAAI;IACxB,IAAI,CAAC,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC,aAAa,GAAG,EAAE;EAC3B;EAbA;EACO,OAAO,QAAQ,CAA8E,KAAU;IAC1G,OAAO,IAAI,4BAAqB,EAAK,CAAC,QAAQ,CAAC,KAAY,CAAC;EAChE;EAYU,aAAa;IAAK,OAAO,IAAI;EAAE;EACzC;EACU,YAAY,CAAC,MAAiB;IAAI,OAAO,IAAI;EAAE;EAC/C,YAAY,CAAC,MAAiB;IACpC,OAAO,IAAI,CAAC,MAAM,4BACd,IAAI,CAAC,SAAS,CAAC;MAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW;IAAC,CAAE,EAAE,IAAI,EAAE,CAAC,CACtE,CAAE,CAAC;EACP;EACU,kBAAkB,CAAC,KAAqB;IAC9C,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;MAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;IACjC;IACD,OAAO,IAAI;EACf;EACU,qBAAqB,CAAC,UAAkB,EAAE,EAAU,EAAiB;IAAA,IAAf,OAAO,uEAAG,KAAK;IAC3E,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACrG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,qBAAqB,CAAC;IACrE,IAAI,CAAC,MAAM,WAAI,qBAAqB,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,CAAE,CAAC;IAChE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;EACU,iBAAiB,CAAC,KAAqB;IAC7C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;IAC/B,OAAO,IAAI;EACf;EACO,KAAK;IAER,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;MAC/B,IAAI,CAAC,MAAM,6BAA2B,CAAC;MACvC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;QACpC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC;MAClC;MACD,IAAI,CAAC,MAAM,QAAQ,CAAC;IACvB;IAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;MAChC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;QACvD,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,0CAAwC,CAAC;QAC5D,IAAI,CAAC,MAAM,WAAI,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACvD;MACD,IAAI,CAAC,MAAM,QAAQ,CAAC;IACvB;IAED,IAAI,IAAI,CAAC,OAAO,EAAE;MACd,IAAI,CAAC,MAAM,MAAM,CAAC;IACrB;IAED,IAAI,CAAC,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC,cAAc,GAAG,EAAE;IAExB,OAAO,KAAK,CAAC,KAAK,EAAE;EACxB;AACH;AAED;AACA,SAAS,QAAQ,CAA8C,MAA4B,EAAE,KAA0C;EACnI,IAAI,MAAM,GAAG,KAAiC;EAC9C,IAAI,KAAK,YAAY,WAAK,EAAE;IACxB,MAAM,GAAG,KAAK,CAAC,MAAM;IACrB,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;EACxC;EACD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;IACxB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EACtB;EACD,OAAO,MAAM,CAAC,MAAM,EAAE;AAC1B;AAEA;AACA,eAAe,aAAa,CAA8C,MAA4B,EAAE,OAAsC;EAC1I,WAAW,MAAM,KAAK,IAAI,OAAO,EAAE;IAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EACtB;EACD,OAAO,MAAM,CAAC,MAAM,EAAE;AAC1B;AAEA;AACA,SAAS,WAAW,OAAgC;EAAA,IAA/B;IAAE,IAAI;IAAE,IAAI;IAAE;EAAQ,CAAS;EAChD,MAAM,SAAS,GAAG,IAAI,mCAAiB,EAAE;EACzC,OAAO;IACH,MAAM,EAAE,IAAI;IAAE,UAAU,EAAE,QAAQ;IAClC,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;IAC7B,UAAU,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,GAAG,CAAC,WAAW,CAAC;IAClD,YAAY,EAAE,CAAC,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,GAAG;MACrD,IAAI,EAAE,IAAI,CAAC,EAAE;MACb,WAAW,EAAE,IAAI,CAAC,SAAS;MAC3B,WAAW,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;IAC5C;GACJ;AACL;AAEA;AACA,SAAS,qBAAqB,CAAC,UAAkB,EAAE,EAAU,EAAiB;EAAA,IAAf,OAAO,uEAAG,KAAK;EAC1E,MAAM,KAAK,GAAG,IAAI,YAAK,WAAI,EAAE,GAAI,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;EAC3E,MAAM,OAAO,GAAG,uCAAmB,CAAC,QAAQ,CAAC,IAAI,aAAM,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;EAC7E,OAAO,IAAI,CAAC,SAAS,CAAC;IAClB,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,OAAO;IAClB,MAAM,EAAE;MACJ,OAAO,EAAE,UAAU,CAAC,MAAM;MAC1B,SAAS,EAAE;IACd;GACJ,EAAE,IAAI,EAAE,CAAC,CAAC;AACf;AAEA;AACA,SAAS,iBAAiB,CAAC,OAAoB;EAC3C,OAAO,IAAI,CAAC,SAAS,CAAC;IAClB,OAAO,EAAE,OAAO,CAAC,MAAM;IACvB,SAAS,EAAE,uCAAmB,CAAC,QAAQ,CAAC,OAAO;GAClD,EAAE,IAAI,EAAE,CAAC,CAAC;AACf,C;;AC7eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKwC;AACE;AACE;AACC;AAE7C,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;AACjC,MAAM,QAAQ,GAAI,YAAoB,IAAe,CACjD,OAAO,EAAE,OAAO,EAAE,IAAI,UAAU,CAAC,YAAY,CAAC,EAAE,OAAO,CAC1C;AAEjB;AACM,SAAU,oBAAoB,CAChC,MAAiB,EACjB,MAA0B,EACqC;EAAA,IAA/D,WAAW,uEAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAE/D,IAAI,IAAsB;EAC1B,IAAI,KAAwB;EAC5B,IAAI,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,MAAM,CAAC,MAAM;EAC7B,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;EACjC,MAAM,SAAS,GAAG,EAAwB;EAC1C,MAAM,YAAY,GAAG,CAAE,WAAW,GAAG,EAAE,GAAI,CAAC,EAAE,KAAK,CAAC;EACpD,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;MACnD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;KACtB,MAAM;MACH,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,QAAQ,EAAE;MAAI,CAAE,CAAsB,CAAC;MACtG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAAC,WAAW,CAAC,GACpE,SAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAqB;IACtG;EACJ;EACD,OAAO,CAAC,IAAI,aAAM,CAAI,MAAM,CAAC,EAAE,WAAW,EAAE,SAAS,CAA4C;AACrG;AAEA;AACM,SAAU,kCAAkC,CAA8C,OAA6B;EACzH,OAAO,kCAAkC,CAAI,IAAI,aAAM,CAAI,OAAO,CAAC,GAAG,CAAC;IAAA,IAAC;MAAE;IAAK,CAAE;IAAA,OAAK,KAAK;EAAA,EAAC,CAAC,EAAE,OAAO,CAAC;AAC3G;AAEA;AACM,SAAU,kCAAkC,CAA8C,MAAiB,EAAE,IAAkD;EACjK,OAAO,4CAA4C,CAAI,MAAM,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,YAAY,eAAO,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClJ;AAEA;AACA,SAAS,4CAA4C,CAA8C,MAAiB,EAAE,OAA6B;EAE/I,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;EACjC,MAAM,SAAS,GAAG,EAAoC;EACtD,MAAM,IAAI,GAAG;IAAE,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;EAAC,CAAE;EAE/E,IAAI,UAAU,GAAG,CAAC;IAAE,WAAW,GAAG,CAAC;EACnC,IAAI,CAAC,GAAW,CAAC,CAAC;IAAE,UAAU,GAAG,OAAO,CAAC,MAAM;EAC/C,IAAI,KAAuB;IAAE,SAAS,GAAuB,EAAE;EAE/D,OAAO,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;IAE1B,KAAK,WAAW,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,UAAU,GAAG;MACpE,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAG;MAC1C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;IAC1E;IAED,IAAI,QAAQ,CAAC,WAAW,CAAC,EAAE;MACvB,SAAS,GAAG,mBAAmB,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC;MAC9E,IAAI,WAAW,GAAG,CAAC,EAAE;QACjB,SAAS,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC;MAC7D;IACJ;EACJ;EACD,OAAO,CACH,MAAM,GAAG,IAAI,aAAM,CAAI,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,EAC/C,SAAS,CAAC,GAAG,CAAE,EAAE,IAAK,IAAI,uBAAW,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CACxD;AACL;AAEA;AACA,SAAS,mBAAmB,CAA8C,MAA2B,EAAE,WAAmB,EAAE,SAA6B,EAAE,OAA6B,EAAE,IAA4B;EAClN,IAAI,IAAsB;EAC1B,IAAI,KAAwB;EAC5B,IAAI,MAAM,GAAG,CAAC;IAAE,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,GAAG,OAAO,CAAC,MAAM;EAC1C,MAAM,YAAY,GAAG,CAAE,WAAW,GAAG,EAAE,GAAI,CAAC,EAAE,KAAK,CAAC;EACpD,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACZ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,KAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,WAAY,EAAE;MAClE,IAAI,MAAM,KAAK,WAAW,EAAE;QACxB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;OACtB,MAAM;QACH,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC;QACzC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,GAAG,WAAW,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;MACxE;KACJ,MAAM;MACH,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;QAAE,QAAQ,EAAE;MAAI,CAAE,CAAsB,CAAC;MAClG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAAC,WAAW,CAAC,GACpE,SAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAqB;IACtG;EACJ;EACD,OAAO,SAAS;AACpB,C;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+B;AAEK;AACQ;AAEyC;AASrF;AACM,MAAgB,eAAqC,SAAQ,cAAiB;EAKhF,YAAY,IAAa,EAAE,QAAmB;IAC1C,KAAK,EAAE;IACP,IAAI,CAAC,SAAS,GAAG,QAAQ;IACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;IACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAC7C;EAKA,IAAW,IAAI;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;EAAE;EAC3C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,IAAW,SAAS;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;EAAE;EACrD,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU;EAAE;EACvD,IAAW,UAAU;IAAK,iBAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EAAU;EAE/D,IAAW,SAAS;IAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;EAAE;EAErE,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE;EAC/C,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO;EAAE;EACjD,IAAW,UAAU;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU;EAAE;EACvD,IAAW,YAAY;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY;EAAE;EAE3D,KAAY,MAAM,CAAC,WAAW,IAAC;IAAK,iBAAU,IAAI,CAAC,UAAU,cAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;EAAK;EAE5F,KAAK,CAAyB,IAAa,EAA2B;IAAA,IAAzB,QAAQ,uEAAG,IAAI,CAAC,SAAS;IACzE,OAAO,cAAM,CAAC,GAAG,CAAI,IAAI,EAAE,QAAQ,CAAQ;EAC/C;EAEO,MAAM,GAAuB;IAAA,kCAAnB,MAAmB;MAAnB,MAAmB;IAAA;IAChC,OAAO,eAAO,CAAC,MAAM,CAAI,IAAI,EAAE,GAAG,MAAM,CAAC;EAC7C;EAEO,KAAK,CAAC,KAAc,EAAE,GAAY;IACrC;IACA;IACA;IACA,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC;EAC5D;EAEO,OAAO,CAAC,KAAa;IACxB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;MACpB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK;MAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;MACrC,MAAM,IAAI,GAAI,GAAG,GAAI,CAAC,IAAK,GAAG,GAAG,CAAI;MACrC,OAAO,IAAI,KAAK,CAAC;IACpB;IACD,OAAO,IAAI;EACf;EAEO,UAAU,CAA2B,KAAa;IACrD,OAAO,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,GAChD,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,KAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,cAAM,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAY,CAAC,CACnE;EAClB;EAEO,MAAM;IAAU,OAAO,CAAC,GAAG,IAAI,CAAC;EAAE;EAE/B,cAAc,CAAC,IAAU,EAAE,KAAa,EAAE,GAAW;IAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,IAAK,CAAC;EACjE;EAEA;EACU,kBAAkB,CAAC,IAAa;IACtC;EAAA;AAEP;AAEA,eAAU,CAAC,SAAiB,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,IAAI,C;;AC9G/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AACC;AACG;AAEvC;AACM,MAAO,mBAAa,SAAQ,eAAkB;EACzC,MAAM;IACT,OAAO,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAI,EAAE,CAAC,CAAC;EAClD;AACH,C;;AC1BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AAEK;AAEe;AAGnD;AACM,MAAO,eAAW,SAAQ,eAAgB;EAK5C;EACO,OAAO,IAAI,CAAc,KAA8I;IAC1K,OAAO,wBAAwB,CAAC,MAAM,IAAI,SAAI,EAAE,EAAE,KAAK,CAAC;EAC5D;AACH,C;;AClCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AAEC;AAGe;AAEQ;AAK3D;AACM,MAAO,eAAoC,SAAQ,eAAa;EAOlE;EACO,OAAO,IAAI,GAAmL;IAAA,kCAAjJ,IAAiJ;MAAjJ,IAAiJ;IAAA;IACjM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;MACnB,OAAO,wBAAwB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAG,GAAG,IAAI,YAAO,EAAE,GAAG,IAAI,oBAAe,EAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxH;IACD,OAAO,wBAAwB,CAAC,MAAM,IAAI,oBAAe,EAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9E;AACH;AAED;AACM,MAAO,aAAc,SAAQ,eAAmB;AAEtD;AACM,MAAO,qBAAsB,SAAQ,eAA2B,G;;AClDtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGoC;AAEpC;AACM,MAAO,qBAAc,SAAQ,eAAmB,G;;ACrBtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AACI;AACC;AAGe;AAEG;AAKtD;AACM,MAAO,2BAAuE,SAAQ,eAA+B;EAcvH,YAAY,IAA+B;IACvC,KAAK,CAAC,IAAI,CAAC;IACX,IAAI,CAAC,OAAO,GAAG,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC5D;EAbA;EACO,OAAO,IAAI,GAAqE;IAAA,kCAAX,IAAW;MAAX,IAAW;IAAA;IACnF,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;MACnB,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,IAAyB;MACzD,MAAM,IAAI,GAAG,IAAI,eAAU,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;MAC7D,OAAO,cAAM,CAAC,GAAG,CAAC,SAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAClF;IACD,OAAO,wBAAwB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAChE;EASA,IAAW,UAAU;IAAK,OAAmB,IAAI,CAAC,IAAI,CAAC,UAAU;EAAE;EAC5D,aAAa,CAAC,KAAQ;IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;EAAE;EACjE,MAAM,CAAC,GAAW;IAA2B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;EAAE;EAC3E,QAAQ,CAAC,GAAW;IAAwB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;EAAE;EAC7E,MAAM,CAAC,GAAW,EAAE,GAA0B;IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAAE;EACrF,QAAQ,CAAC,GAAW,EAAE,KAAyB;IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;EAAE;AACrG;AAEA,2BAAgB,CAAC,SAAiB,CAAC,OAAO,GAAG,IAAI,C;;AC3DlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,qCAAsB,SAAQ,eAA2B,G;;ACrBtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,iCAA8C,SAAQ,eAA4B,G;;ACrB/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AACI;AAEC;AAEe;AAEoB;AAqBvE;AACM,MAAO,iBAAqC,SAAQ,eAAa;EAkBnE;EACO,OAAO,IAAI,CAA8D,KAA0B;IAEtG,IAAI,SAAS,GAAG,oBAAoB,CAAC,IAAI,CAAC;IAE1C,IAAK,KAAK,YAAY,WAAW,IAAK,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;MAC7D,IAAI,SAAS,GAAG,mBAAmB,CAAC,KAAK,CAAC,WAA6B,CAAC,IAAI,SAAS;MACrF;MACA;MACA,IAAI,SAAS,KAAK,IAAI,EAAE;QACpB,SAAS,GAAG,SAAS;MACxB;MACD;MACA;MACA,IAAI,SAAS,IAAI,SAAS,KAAK,SAAS,EAAE;QACtC,IAAI,IAAI,GAAG,IAAI,SAAS,EAAE;QAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB;QAChE;QACA;QACA,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE;UAC/C,OAAO,cAAM,CAAC,GAAG,CAAC,SAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAmB,CAAC,CAAC;QAC/E;MACJ;IACJ;IAED,IAAI,SAAS,EAAE;MACX;MACA;MACA;MACA,OAAO,wBAAwB,CAAC,MAAM,IAAI,SAAU,EAAO,EAAE,KAAK,CAAC;IACtE;IAED,IAAK,KAAK,YAAY,QAAQ,IAAM,KAAK,YAAY,WAAY,EAAE;MAC/D,MAAM,IAAI,SAAS,oDAA6C,KAAK,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC;IAC5F;IAED,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC;EACzD;AACH;AAED;AACM,MAAO,aAAc,SAAQ,iBAAoB;EACnD;EACA;EACA;EACA;EACA;EACA;EACO,cAAc;IAAK,OAAO,IAAI,YAAY,CAAC,IAAwB,CAAC;EAAE;EACtE,cAAc;IAAK,OAAO,IAAI,YAAY,CAAC,IAAwB,CAAC;EAAE;AAChF;AAED;AACM,MAAO,aAAc,SAAQ,iBAAoB;AACvD;AACM,MAAO,aAAc,SAAQ,iBAAoB;AAEvD,MAAM,cAAc,GAAG,CAAC,QAAa,EAAE,QAAa,KAAI;EACpD,OAAQ,QAAQ,KAAK,YAAO,IAAM,QAAQ,KAAK,WAAY;AAC/D,CAAC;AAED;AACA,MAAM,mBAAmB,GAAI,IAAoB,IAAI;EACjD,QAAQ,IAAI;IACR,KAAK,WAAW;MAAK,OAAO,YAAO;IACnC,KAAK,YAAY;MAAI,OAAO,YAAO;IACnC,KAAK,YAAY;MAAI,OAAO,YAAO;IACnC;MAAS,OAAO,IAAI;EACvB;AACL,CAAC;AAED;AACA,MAAM,oBAAoB,GAAI,IAA6B,IAAI;EAC3D,QAAQ,IAAI;IACR,KAAK,aAAa;MAAE,OAAO,YAAO;IAClC,KAAK,aAAa;MAAE,OAAO,YAAO;IAClC,KAAK,aAAa;MAAE,OAAO,YAAO;IAClC;MAAS,OAAO,IAAI;EACvB;AACL,CAAC,C;;AC/ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,uBAA8C,SAAQ,eAAa;AAChF;AACM,MAAO,qBAAsB,SAAQ,uBAA+B;AAC1E;AACM,MAAO,uBAAwB,SAAQ,uBAAiC,G;;ACzB9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AACI;AAEC;AAEe;AAEY;AACI;AAC+B;AA6BlG;AACM,MAAO,aAA+B,SAAQ,eAAa;EA8B7D;EACO,OAAO,IAAI,GAAqF;IAAA,kCAAxB,IAAwB;MAAxB,IAAwB;IAAA;IAEnG,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG,KAAK,CAAC,GAAG,IAAI;IACnC,IAAI,SAAS,GAAG,wBAAoB,CAAC,IAAI,EAAE,OAAO,CAAC;IAEnD,IAAK,KAAK,YAAY,WAAW,IAAK,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;MAC7D,IAAI,SAAS,GAAG,uBAAmB,CAAC,KAAK,CAAC,WAA2B,EAAE,OAAO,CAAC,IAAI,SAAS;MAC5F;MACA;MACA,IAAI,SAAS,KAAK,IAAI,EAAE;QACpB,SAAS,GAAG,SAAS;MACxB;MACD;MACA;MACA,IAAI,SAAS,IAAI,SAAS,KAAK,SAAS,EAAE;QACtC,IAAI,IAAI,GAAG,IAAI,SAAS,EAAE;QAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB;QAChE;QACA,IAAI,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE;UAChD,MAAM,IAAI,GAAG;QAChB;QACD,OAAO,cAAM,CAAC,GAAG,CAAC,SAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAiB,CAAC,CAAC;MAC3E;IACJ;IAED,IAAI,SAAS,EAAE;MACX;MACA;MACA;MACA,OAAO,wBAAwB,CAAC,MAAM,IAAI,SAAU,EAAO,EAAE,KAAK,CAAC;IACtE;IAED,IAAK,KAAK,YAAY,QAAQ,IAAM,KAAK,YAAY,WAAY,EAAE;MAC/D,MAAM,IAAI,SAAS,sDAA+C,KAAK,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC;IAC9F;IAED,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC;EACvD;AACH;AAED;AACM,MAAO,UAAW,SAAQ,aAAe;AAC/C;AACM,MAAO,WAAY,SAAQ,aAAgB;AACjD;AACM,MAAO,WAAY,SAAQ,aAAgB;AACjD;AACM,MAAO,eAAY,SAAQ,aAAgB;EACtC,eAAe;IAClB,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;EACvC;EAGA,IAAW,QAAQ;IACf,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;EACtE;AACH;AAED;AACM,MAAO,WAAY,SAAQ,aAAgB;AACjD;AACM,MAAO,YAAa,SAAQ,aAAiB;AACnD;AACM,MAAO,YAAa,SAAQ,aAAiB;AACnD;AACM,MAAO,gBAAa,SAAQ,aAAiB;EACxC,gBAAgB;IACnB,OAAO,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC;EACxC;EAGA,IAAW,QAAQ;IACf,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;EACvE;AACH;AAED,MAAM,gBAAgB,GAAG,CAAC,QAAa,EAAE,QAAa,KAAI;EACtD,OAAO,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,MAAM,MACzC,QAAQ,KAAK,UAAU,IAAI,QAAQ,KAAK,WAAW,CAAC;AAChE,CAAC;AAED;AACA,MAAM,uBAAmB,GAAG,CAAC,IAAkB,EAAE,OAAgB,KAAI;EACjE,QAAQ,IAAI;IACR,KAAK,SAAS;MAAO,OAAO,IAAI;IAChC,KAAK,UAAU;MAAM,OAAO,KAAK;IACjC,KAAK,UAAU;MAAM,OAAO,OAAO,GAAG,KAAK,GAAG,KAAK;IACnD,KAAK,iBAAa;MAAG,OAAO,KAAK;IACjC,KAAK,UAAU;MAAM,OAAO,KAAK;IACjC,KAAK,WAAW;MAAK,OAAO,MAAM;IAClC,KAAK,WAAW;MAAK,OAAO,OAAO,GAAG,MAAM,GAAG,MAAM;IACrD,KAAK,kBAAc;MAAE,OAAO,MAAM;IAClC;MAAS,OAAO,IAAI;EACvB;AACL,CAAC;AAED;AACA,MAAM,wBAAoB,GAAG,CAAC,IAA2B,EAAE,OAAgB,KAAI;EAC3E,QAAQ,IAAI;IACR,KAAK,UAAU;MAAI,OAAO,IAAI;IAC9B,KAAK,WAAW;MAAG,OAAO,KAAK;IAC/B,KAAK,WAAW;MAAG,OAAO,OAAO,GAAG,KAAK,GAAG,KAAK;IACjD,KAAK,eAAW;MAAG,OAAO,KAAK;IAC/B,KAAK,WAAW;MAAG,OAAO,KAAK;IAC/B,KAAK,YAAY;MAAE,OAAO,MAAM;IAChC,KAAK,YAAY;MAAE,OAAO,OAAO,GAAG,MAAM,GAAG,MAAM;IACnD,KAAK,gBAAY;MAAE,OAAO,MAAM;IAChC;MAAS,OAAO,IAAI;EACvB;AACL,CAAC,C;;ACpMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,eAAqC,SAAQ,eAAmB,G;;ACrB7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE+B;AAEI;AACC;AACmB;AAEvD;AACM,MAAO,aAA8D,SAAQ,eAAsB;EAC9F,MAAM;IACT,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAwC;IAC1E,OAAO,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAI,CAA+B,KAAK,CAAC,CAAC,CAAC;EACrF;EACO,IAAI,CAAC,KAAa;IACrB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAA+B,CAAC,CAAC;IAC9D,MAAM;MAAE,CAAC,KAAK,GAAG,KAAK;MAAE,CAAC,KAAK,GAAG,CAAC,GAAG;IAAG,CAAE,GAAG,IAAI,CAAC,YAAY;IAC9D,OAAO,IAAI,MAAM,CAAC,KAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAC/C;AACH,C;;AClCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGoC;AAEpC;AACM,MAAO,eAAW,SAAQ,eAAgB,G;;ACrBhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkC;AACE;AAGpC;AAAe,MAAM,gBAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;AACvD;AACM,MAAO,mBAA0D,SAAQ,eAAqB;EAGzF,IAAI,CAAC,KAAa;IACrB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAI,IAAI,CAAC,CAAC;IAC/D,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAClC,KAAK,CAAC,gBAAS,CAAC,GAAG,KAAK;IACxB,OAAO,KAAK;EAChB;AACH,C;;AChCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,yBAAiD,SAAQ,eAAa;AACnF;AACM,MAAO,qBAAsB,SAAQ,yBAAgC;AAC3E;AACM,MAAO,0BAA2B,SAAQ,yBAAqC;AACrF;AACM,MAAO,0BAA2B,SAAQ,yBAAqC;AACrF;AACM,MAAO,yBAA0B,SAAQ,yBAAoC,G;;AC7BnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,eAAkC,SAAQ,eAAa;AACpE;AACM,MAAO,gBAAiB,SAAQ,eAAsB;AAC5D;AACM,MAAO,qBAAsB,SAAQ,eAA2B;AACtE;AACM,MAAO,qBAAsB,SAAQ,eAA2B;AACtE;AACM,MAAO,oBAAqB,SAAQ,eAA0B,G;;AC7BpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoC;AAGpC;AACM,MAAO,iBAAqC,SAAQ,eAAa;EACnE,IAAW,kBAAkB;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB;EAAE;AAC/E;AAED;AACM,MAAO,gBAAiB,SAAQ,iBAAuB;EACzD,IAAW,YAAY;IAAK,OAAO,IAAI,CAAC,IAAI,CAAC,YAAa;EAAE;AAC/D;AAED;AACM,MAAO,iBAAkB,SAAQ,iBAAwB,G;;AC/B/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AAEC;AACG;AAEY;AAGnD;AACM,MAAO,eAAW,SAAQ,eAAgB;EAK5C;EACO,OAAO,IAAI,CAAc,KAA4I;IACxK,OAAO,wBAAwB,CAAC,MAAM,IAAI,SAAI,EAAE,EAAE,KAAK,CAAC;EAC5D;EACO,QAAQ;IACX,OAAO,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,WAAM,EAAE,CAAC,CAAC;EACpD;AACH,C;;ACtCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACM,SAAU,QAAQ,CAAI,KAAuB;EAC/C,OAAO;IAAoB,OAAO,KAAK,CAAC,IAAI,CAAC;EAAE,CAAC;AACpD;AAEA;AACM,SAAU,QAAQ,CAAI,KAA+B;EACvD,OAAO,UAAkB,CAAM;IAAI,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EAAE,CAAC;AAC/D;AAEA;AACM,SAAU,QAAQ,CAAI,KAAuC;EAC/D,OAAO,UAAkB,CAAM,EAAE,CAAM;IAAI,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAAE,CAAC;AAC1E,C;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGgC;AACK;AACK;AAEK;AACwC;AAgEvF;AACM,MAAO,cAAW,SAAQ,OAAO;AAEvC;AAAc,MAAM,aAAa,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/F;AAAc,MAAM,yBAAyB,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,UAAU,GAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzI;AAAc,MAAM,yBAAyB,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAK;AACzJ;AAAc,MAAM,wBAAwB,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,OAAQ;AAE9J;AAAc,MAAM,uBAAuB,GAAI,OAAe,IAAK,IAAI,IAAI,CAAC,OAAO,CAAC;AACpF;AAAc,MAAM,eAAe,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,uBAAuB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9H;AAAc,MAAM,2BAA2B,GAAG,CAAC,IAAgB,EAAE,KAAa,KAAK,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAEtJ;AACA,MAAM,OAAO,GAAG,CAAiB,OAAsB,EAAE,MAAc,KAAkB,IAAI;AAC7F;AACA,MAAM,qBAAqB,GAAG,CAAC,MAAkB,EAAE,YAAwB,EAAE,KAAa,KAAI;EAC1F,MAAM;IAAE,CAAC,KAAK,GAAG,CAAC;IAAE,CAAC,KAAK,GAAG,CAAC,GAAG;EAAC,CAAE,GAAG,YAAY;EACnD,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAW;AACvE,CAAC;AAED;AACA,MAAM,WAAO,GAAG,OAAoD,KAAa,KAAiB;EAAA,IAAjE;IAAE,MAAM;IAAE;EAAM,CAAiB;EAC9D,MAAM,GAAG,GAAG,MAAM,GAAG,KAAK;EAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;EAC7B,OAAO,CAAC,IAAI,GAAG,CAAC,IAAK,GAAG,GAAG,CAAE,MAAM,CAAC;AACxC,CAAC;AAOD;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa;EAAA,IAAhD;IAAE;EAAM,CAAyB;EAAA,OAAiC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC;AAAA;AACvJ;AACA,MAAM,kBAAkB,GAAG,QAA+D,KAAa;EAAA,IAAhD;IAAE;EAAM,CAAyB;EAAA,OAAiC,2BAA2B,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA;AACvK;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa;EAAA,IAAhD;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAA,OAAiC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAAA;AAC/I;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa;EAAA,IAAhD;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAA,OAAiC,eAAe,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AAAA;AAChK;AACA,MAAM,UAAU,GAAW,QAA+D,KAAa;EAAA,IAAtD;IAAE,MAAM;IAAE,MAAM;IAAE;EAAI,CAAiB;EAAA,OAAuC,KAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,EAAE,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC;AAAA;AAC3M;AACA,MAAM,kBAAkB,GAAG,QAA+D,KAAa;EAAA,IAAhD;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAA,OAAiC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,EAAE,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA;AAE9K;AACA,MAAM,SAAS,GAAG,QAA4D,KAAa;EAAA,IAAtD;IAAE,MAAM;IAAE;EAAY,CAAiB;EAAA,OAAiC,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC;AAAA;AAC/J;AACA,MAAM,OAAO,GAAG,QAA0D,KAAa,KAAiB;EAAA,IAAvE;IAAE,MAAM;IAAE;EAAY,CAAiB;EACpE,MAAM,KAAK,GAAG,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC;EAChE,OAAO,KAAK,KAAK,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,IAAW;AAC3D,CAAC;AAED;AACA;AACA,MAAM,MAAM,GAAG,CAAgB,MAAqB,EAAE,KAAa,KAC/D,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GACnB,UAAU,CAAC,MAA+B,EAAE,KAAK,CAAC,GAClD,UAAU,CAAC,MAA+B,EAAE,KAAK,CAC1D;AAED;AACA;AACA,MAAM,QAAQ,GAAG,CAAmB,MAAqB,EAAE,KAAa,KACpE,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,GAClC,UAAU,CAAC,MAA+B,EAAE,KAAK,CAAC,GAClD,UAAU,CAAC,MAA6B,EAAE,KAAK,CACxD;AAED;AACA;AACA,MAAM,OAAO,GAAG,CAAmB,MAAqB,EAAE,KAAa,KACnE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,GAC3B,UAAU,CAAC,MAA6B,EAAE,KAAK,CAAC,GAChD,kBAAkB,CAAC,MAAqC,EAAE,KAAK,CACxE;AAED;AACA,MAAM,kBAAkB,GAAQ,SAA4D,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,IAAI,GAAG,yBAAyB,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA;AAC9K;AACA,MAAM,uBAAuB,GAAG,SAA4D,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,yBAAyB,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA;AACvK;AACA,MAAM,uBAAuB,GAAG,SAA4D,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,yBAAyB,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA;AACvK;AACA,MAAM,sBAAsB,GAAI,SAA4D,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,wBAAwB,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA;AACtK;AACA;AACA,MAAM,YAAY,GAAc,CAAsB,MAAqB,EAAE,KAAa,KAAiB;EACvG,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI;IACpB,KAAK,QAAQ,CAAC,MAAM;MAAO,OAAY,kBAAkB,CAAC,MAAqC,EAAE,KAAK,CAAC;IACvG,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,uBAAuB,CAAC,MAA0C,EAAE,KAAK,CAAC;IAC5G,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,uBAAuB,CAAC,MAA0C,EAAE,KAAK,CAAC;IAC5G,KAAK,QAAQ,CAAC,UAAU;MAAG,OAAQ,sBAAsB,CAAC,MAAyC,EAAE,KAAK,CAAC;EAC9G;AACL,CAAC;AAED;AACA,MAAM,aAAa,GAAQ,SAA+D,KAAa;EAAA,IAAhD;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAA,OAAiC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAAA;AAC/I;AACA,MAAM,kBAAkB,GAAG,SAA+D,KAAa;EAAA,IAAhD;IAAE,MAAM;IAAE;EAAM,CAAiB;EAAA,OAAiC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAAA;AAC/I;AACA,MAAM,kBAAkB,GAAG,SAA+D,KAAa;EAAA,IAAhD;IAAE;EAAM,CAAyB;EAAA,OAAiC,KAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA;AAC/K;AACA,MAAM,iBAAiB,GAAI,SAA+D,KAAa;EAAA,IAAhD;IAAE;EAAM,CAAyB;EAAA,OAAiC,KAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA;AAC/K;AACA;AACA,MAAM,OAAO,GAAc,CAAiB,MAAqB,EAAE,KAAa,KAAiB;EAC7F,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI;IACpB,KAAK,QAAQ,CAAC,MAAM;MAAO,OAAY,aAAa,CAAC,MAAgC,EAAE,KAAK,CAAC;IAC7F,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,kBAAkB,CAAC,MAAqC,EAAE,KAAK,CAAC;IAClG,KAAK,QAAQ,CAAC,WAAW;MAAE,OAAO,kBAAkB,CAAC,MAAqC,EAAE,KAAK,CAAC;IAClG,KAAK,QAAQ,CAAC,UAAU;MAAG,OAAQ,iBAAiB,CAAC,MAAoC,EAAE,KAAK,CAAC;EACpG;AACL,CAAC;AAED;AACA,MAAM,UAAU,GAAG,SAA+C,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,KAAE,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA;AAExJ;AACA,MAAM,OAAO,GAAG,CAAiB,MAAqB,EAAE,KAAa,KAAiB;EAClF,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE;IAAE;MAAE,YAAY;MAAE;IAAM,CAAE,GAAG,MAAM;EACtE,OAAO,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,YAAY,CAAE,KAAK,GAAG,MAAM,GAAI,CAAC,CAAC,CAAgB;AACvG,CAAC;AAED;AACA,MAAM,MAAM,GAAG,CAAiB,MAAqB,EAAE,KAAa,KAAiB;EACjF,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAgB;AAC5C,CAAC;AAED;AACA,MAAM,SAAS,GAAG,CAAmB,MAAqB,EAAE,KAAa,KAAiB;EACtF,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAgB;AAC5C,CAAC;AAED;AACA;AACA,MAAM,QAAQ,GAAG,CAEf,MAAS,EAAE,KAAa,KAAiB;EACvC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,GACvC,aAAa,CAAC,MAAgC,EAAE,KAAK,CAAC,GACtD,cAAc,CAAC,MAAiC,EAAE,KAAK,CAAC;AAChE,CAAC;AAED;AACA,MAAM,aAAa,GAAG,CAAuB,MAAqB,EAAE,KAAa,KAAiB;EAC9F,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;EACnE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;EAC3C,OAAO,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI;AAC/D,CAAC;AAED;AACA,MAAM,cAAc,GAAG,CAAwB,MAAqB,EAAE,KAAa,KAAiB;EAChG,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;EACnE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;EAC3C,OAAO,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI;AAC1C,CAAC;AAED;AACA,MAAM,aAAa,GAAG,CAAuB,MAAqB,EAAE,KAAa,KAAiB;EAC9F,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAE,CAAC;AACjD,CAAC;AAED;AACA;AACA,MAAM,WAAW,GAAG,CAAqB,MAAqB,EAAE,KAAa,KACxE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,QAAQ,GACrC,kBAAkB,CAAC,MAAqC,EAAE,KAAK,CAAC,GAChE,oBAAoB,CAAC,MAAuC,EAAE,KAAK,CAAC;AAE9E;AACA,MAAM,kBAAkB,GAAG,SAAuD,KAAa;EAAA,IAAxC;IAAE;EAAM,CAAiB;EAAA,OAAiC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA;AAE5J;AACA,MAAM,oBAAoB,GAAG,SAAyD,KAAa,KAAiB;EAAA,IAAzD;IAAE;EAAM,CAAiB;EAChF,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;EAC9B,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;EAChC,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC/B,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC/B,OAAO,MAAM;AACjB,CAAC;AAED;AACA,MAAM,gBAAgB,GAAG,CAA0B,MAAqB,EAAE,KAAa,KAAiB;EACpG,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAE;IAAE;MAAE;IAAM,CAAE,GAAG,MAAM;EACxD,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,MAAM,CAAgB;AAC3E,CAAC;AAED,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,WAAO;AACxE,cAAU,CAAC,SAAS,CAAC,QAAQ,GAAqC,MAAM;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAgC,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAA+B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA8B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA8B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA8B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAAiC,QAAQ;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA+B,SAAS;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,cAAc,GAAyB,YAAY;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,yBAAyB,GAAG,uBAAuB;AACxE,cAAU,CAAC,SAAS,CAAC,yBAAyB,GAAG,uBAAuB;AACxE,cAAU,CAAC,SAAS,CAAC,wBAAwB,GAAK,sBAAsB;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,mBAAmB,GAAe,iBAAiB;AACxE,cAAU,CAAC,SAAS,CAAC,YAAY,GAA6B,UAAU;AACxE,cAAU,CAAC,SAAS,CAAC,SAAS,GAAmC,OAAO;AACxE,cAAU,CAAC,SAAS,CAAC,WAAW,GAA+B,SAAS;AACxE,cAAU,CAAC,SAAS,CAAC,UAAU,GAAiC,QAAQ;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,gBAAgB,GAAqB,cAAc;AACxE,cAAU,CAAC,SAAS,CAAC,eAAe,GAAuB,aAAa;AACxE,cAAU,CAAC,SAAS,CAAC,aAAa,GAA2B,WAAW;AACxE,cAAU,CAAC,SAAS,CAAC,oBAAoB,GAAa,kBAAkB;AACxE,cAAU,CAAC,SAAS,CAAC,sBAAsB,GAAS,oBAAoB;AACxE,cAAU,CAAC,SAAS,CAAC,kBAAkB,GAAiB,gBAAgB;AACxE,cAAU,CAAC,SAAS,CAAC,QAAQ,GAAqC,MAAM;AAExE;AACO,MAAM,YAAQ,GAAG,IAAI,cAAU,EAAE,C;;AChUxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIqC;AAEc;AACM;AAgEzD;AACM,MAAO,sBAAe,SAAQ,OAAO;AAE3C;AACA,SAAS,WAAW,CAAC,MAAwB,EAAE,aAAoB;EAC/D;EACA,OAAO,aAAa,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/D;AAEA;AACA,SAAS,WAAW,CAAqB,MAAqB,EAAE,SAAkB;EAC9E,MAAM;IAAE;EAAU,CAAE,GAAG,MAAM;EAC7B,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,EAAE;IACtC,OAAO,CAAC,CAAC;EACZ;EACD,IAAI,CAAC,GAAG,CAAC;EACT,KAAK,MAAM,OAAO,IAAI,WAAW,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE;IACtH,IAAI,CAAC,OAAO,EAAE;MAAE,OAAO,CAAC;IAAG;IAC3B,EAAE,CAAC;EACN;EACD,OAAO,CAAC,CAAC;AACb;AAEA;AACA,SAAS,YAAY,CAAqB,MAAqB,EAAE,aAAkC,EAAE,SAAkB;EACnH,IAAI,aAAa,KAAK,SAAS,EAAE;IAAE,OAAO,CAAC,CAAC;EAAG;EAC/C,IAAI,aAAa,KAAK,IAAI,EAAE;IAAE,OAAO,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC;EAAG;EACtE,MAAM,OAAO,GAAG,uBAAuB,CAAC,aAAa,CAAC;EACtD,KAAK,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC5D,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MACxB,OAAO,CAAC;IACX;EACJ;EACD,OAAO,CAAC,CAAC;AACb;AAEA;AACA,SAAS,YAAY,CAAqB,MAAqB,EAAE,aAAkC,EAAE,SAAkB;EACnH;EACA;EACA;EACA;EACA,MAAM,OAAO,GAAG,uBAAuB,CAAC,aAAa,CAAC;EACtD,KAAK,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG;IAC5D,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MACxB,OAAO,CAAC;IACX;EACJ;EACD,OAAO,CAAC,CAAC;AACb;AAEA,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAoB,WAAW;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,QAAQ,GAAoB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,cAAc,GAAc,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,yBAAyB,GAAG,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,yBAAyB,GAAG,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,wBAAwB,GAAI,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,mBAAmB,GAAS,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,gBAAgB,GAAY,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,aAAa,GAAe,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,sBAAsB,GAAM,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,kBAAkB,GAAU,YAAY;AACjE,sBAAc,CAAC,SAAS,CAAC,QAAQ,GAAoB,YAAY;AAEjE;AACO,MAAM,gBAAQ,GAAG,IAAI,sBAAc,EAAE,C;;ACtL5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+B;AACM;AAEK;AACK;AAgE/C;AACM,MAAO,wBAAgB,SAAQ,OAAO;AAE5C;AACA,SAAS,gBAAgB,CAAqB,MAAqB;EAC/D,MAAM,KAAK,GAAG,YAAU,CAAC,UAAU,CAAC,MAAM,CAAC;EAC3C,OAAO,WAAW,CACd,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,EACvD,CAAC,GAAkB,EAAE,GAAW,EAAE,QAAgB,EAAE,OAAe,KAC9D,CAAC,QAAQ,GAAG,CAAC,IAAI,OAAO,MAAM,CAAC,GAAI,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CACjE;AACL;AAEA;AACA,SAAS,cAAc,CAAqB,MAAqB;EAE7D;EACA,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;IACtB,OAAO,gBAAgB,CAAI,MAAM,CAAC;EACrC;EAED,MAAM;IAAE,IAAI;IAAE,MAAM;IAAE;EAAM,CAAE,GAAG,MAAM;EAEvC;EACA,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,KAClB,MAAM,KAAK,IAAI,CAAC,SAAS,IACzB,MAAM,KAAK,IAAI,CAAC,GAAG,IAAK,IAAY,CAAC,QAAQ,KAAK,EAAG,IACrD,MAAM,KAAK,IAAI,CAAC,IAAI,IAAK,IAAa,CAAC,QAAQ,KAAK,EAAG,IACvD,MAAM,KAAK,IAAI,CAAC,KAAK,IAAK,IAAc,CAAC,SAAS,GAAG,CAAC,CAAC,oBAAqB,CAChF,EAAE;IACC,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAC9D;EAED;EACA,OAAQ,WAAW,KAAK;IACpB,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,MAAM,GAAG;MACpC,MAAM,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;IAC7B;EACL,CAAC,CAAE,YAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACrC;AAEA,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,QAAQ,GAAoB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,WAAW,GAAiB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,WAAW,GAAiB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,WAAW,GAAiB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,YAAY,GAAgB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,YAAY,GAAgB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,YAAY,GAAgB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,WAAW,GAAiB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,YAAY,GAAgB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,cAAc,GAAc,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,yBAAyB,GAAG,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,yBAAyB,GAAG,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,wBAAwB,GAAI,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,eAAe,GAAa,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,mBAAmB,GAAS,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,YAAY,GAAgB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,SAAS,GAAmB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,WAAW,GAAiB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,UAAU,GAAkB,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,eAAe,GAAa,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,gBAAgB,GAAY,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,eAAe,GAAa,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,aAAa,GAAe,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,oBAAoB,GAAQ,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,sBAAsB,GAAM,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,kBAAkB,GAAU,cAAc;AACpE,wBAAe,CAAC,SAAS,CAAC,QAAQ,GAAoB,cAAc;AAEpE;AACO,MAAM,iBAAQ,GAAG,IAAI,wBAAe,EAAE,C;;AC5K7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAG+B;AACM;AAEoB;AAgEzD;AACM,MAAO,sBAAe,SAAQ,OAAO;AAE3C;AACA,SAAS,aAAa,CAAqB,MAAqB;EAE5D,MAAM;IAAE,IAAI;IAAE,MAAM;IAAE;EAAM,CAAE,GAAG,MAAM;EAEvC;EACA,QAAQ,IAAI,CAAC,MAAM;IACf,KAAK,IAAI,CAAC,GAAG;IACb,KAAK,IAAI,CAAC,KAAK;IAAE,KAAK,IAAI,CAAC,OAAO;IAClC,KAAK,IAAI,CAAC,IAAI;IAAE,KAAK,IAAI,CAAC,SAAS;MAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;EACxD;EAED;EACA,OAAO,CAAC,GAAG,iBAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAgB;AAC5D;AAEA,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,QAAQ,GAAoB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,cAAc,GAAc,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,yBAAyB,GAAG,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,yBAAyB,GAAG,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,wBAAwB,GAAI,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,mBAAmB,GAAS,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,YAAY,GAAgB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,SAAS,GAAmB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,WAAW,GAAiB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,UAAU,GAAkB,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,gBAAgB,GAAY,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,eAAe,GAAa,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,aAAa,GAAe,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,oBAAoB,GAAQ,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,sBAAsB,GAAM,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,kBAAkB,GAAU,aAAa;AAClE,sBAAc,CAAC,SAAS,CAAC,QAAQ,GAAoB,aAAa;AAElE;AACO,MAAM,gBAAQ,GAAG,IAAI,sBAAc,EAAE,C;;ACtJ5C;AAoBqC;AAEI;AASzC;AAAe,MAAM,GAAG,GAAG,CAAC,CAAS,EAAE,CAAS,KAAK,CAAC,GAAG,CAAC;AAC1D;AAAe,MAAM,+BAA+B,GAAI,IAAc,qEAA+D,IAAI,CAAE;AAU3I;AACM,MAAO,0BAAiB,SAAQ,OAAO;EAClC,SAAS,CAAa,IAAU;IAAgB,OAAO,CAAC;EAAE;EAC1D,QAAQ,CAAc,IAAS;IAAiB,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC;EAAE;EAC1E,UAAU,CAAY,IAAW;IAAe,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB;EAAE;EACzF,WAAW,CAAW,IAAY;IAAc,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC;EAAE;EACxG,SAAS,CAAa,IAAU;IAAgB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC;EAAE;EACxG,SAAS,CAAa,IAAU;IAAgB,OAAO,CAAC,GAAG,CAAC;EAAE;EAC9D,YAAY,CAAU,IAAa;IAAa,OAAO,EAAE;EAAE;EAC3D,SAAS,CAAa,IAAW;IAAe,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC;EAAE;EAC5E,SAAS,CAAa,IAAU;IAAgB,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC;EAAE;EAC1E,cAAc,CAAQ,IAAe;IAAW,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;EAAE;EAC9F,aAAa,CAAS,IAAc;IAAY,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC;EAAE;EAC5E,SAAS,CAAa,IAAU;IAAgB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC;EAAE;EACxG,WAAW,CAAW,IAAY;IAAc,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EAAE;EACvG,UAAU,CAAY,IAAW;IAAe,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EAAE;EACvG,oBAAoB,CAAE,IAAqB;IAAK,OAAO,IAAI,CAAC,SAAS;EAAE;EACvE,kBAAkB,CAAI,IAAmB;IAAO,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EAAE;EACvH,QAAQ,CAAc,IAAU;IAAgB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EAAE;EACvG,eAAe,CAAO,IAAgB;IAAU,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EAAE;EACjF,WAAW,CAAW,MAAe;IAAW,OAAO,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAE,KAAK,IAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAAE;EAC9G,WAAW,CAAW,MAAc;IAAY,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EAAE;AACjH;AAED;AACO,MAAM,kBAAQ,GAAG,IAAI,0BAAgB,EAAE,C;;ACnE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKqC;AAGW;AACJ;AACsC;AAChC;AACM;AACU;AACJ;AAC6B;AACS;AACgD;AACxG;AACF;AACE;AACI;AACgH;AAC9B;AAC/C;AACvC;AAU5C;AACM,MAAO,+BAAqB,SAAQ,OAAO;EACtC,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,QAAQ;IAAuB,OAAO,aAAS;EAAE;EACjD,SAAS;IAAsB,OAAO,UAAU;EAAE;EAClD,UAAU;IAAqB,OAAO,WAAW;EAAE;EACnD,UAAU;IAAqB,OAAO,WAAW;EAAE;EACnD,UAAU;IAAqB,OAAO,eAAW;EAAE;EACnD,UAAU;IAAqB,OAAO,WAAW;EAAE;EACnD,WAAW;IAAoB,OAAO,YAAY;EAAE;EACpD,WAAW;IAAoB,OAAO,YAAY;EAAE;EACpD,WAAW;IAAoB,OAAO,gBAAY;EAAE;EACpD,UAAU;IAAqB,OAAO,iBAAW;EAAE;EACnD,YAAY;IAAmB,OAAO,aAAa;EAAE;EACrD,YAAY;IAAmB,OAAO,aAAa;EAAE;EACrD,YAAY;IAAmB,OAAO,aAAa;EAAE;EACrD,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,WAAW;IAAoB,OAAO,mBAAY;EAAE;EACpD,oBAAoB;IAAW,OAAO,qCAAqB;EAAE;EAC7D,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,YAAY;IAAmB,OAAO,aAAa;EAAE;EACrD,oBAAoB;IAAW,OAAO,qBAAqB;EAAE;EAC7D,cAAc;IAAiB,OAAO,yBAAe;EAAE;EACvD,oBAAoB;IAAW,OAAO,qBAAqB;EAAE;EAC7D,yBAAyB;IAAM,OAAO,0BAA0B;EAAE;EAClE,yBAAyB;IAAM,OAAO,0BAA0B;EAAE;EAClE,wBAAwB;IAAO,OAAO,yBAAyB;EAAE;EACjE,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,eAAe;IAAgB,OAAO,gBAAgB;EAAE;EACxD,oBAAoB;IAAW,OAAO,qBAAqB;EAAE;EAC7D,oBAAoB;IAAW,OAAO,qBAAqB;EAAE;EAC7D,mBAAmB;IAAY,OAAO,oBAAoB;EAAE;EAC5D,YAAY;IAAmB,OAAO,qBAAa;EAAE;EACrD,SAAS;IAAsB,OAAO,eAAU;EAAE;EAClD,WAAW;IAAoB,OAAO,mBAAY;EAAE;EACpD,UAAU;IAAqB,OAAO,iBAAW;EAAE;EACnD,eAAe;IAAgB,OAAO,gBAAgB;EAAE;EACxD,gBAAgB;IAAe,OAAO,iBAAiB;EAAE;EACzD,eAAe;IAAgB,OAAO,2BAAgB;EAAE;EACxD,aAAa;IAAkB,OAAO,uBAAc;EAAE;EACtD,oBAAoB;IAAW,OAAO,qBAAqB;EAAE;EAC7D,sBAAsB;IAAS,OAAO,uBAAuB;EAAE;EAC/D,kBAAkB;IAAa,OAAO,iCAAmB;EAAE;EAC3D,QAAQ;IAAuB,OAAO,aAAS;EAAE;AAC3D;AAED;AACO,MAAM,mBAAQ,GAAG,IAAI,+BAAoB,EAAE,C;;AClGlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AACC;AACI;AACJ;AACA;AACsC;AAChC;AACM;AACU;AACJ;AAC6B;AACS;AACgD;AACxG;AACF;AACE;AACI;AACgH;AAC9B;AAC/C;AACvC;AACM;AAET;AAEF;AACI;AAEC;AACA;AACE;AACuB;AACA;AAEL;AACA;AACQ;AACA;AACE;AACE;AACK;AAuBzE;AACA,cAAM,CAAC,GAAG,GAAG,SAAS;AAEtB;AACA,cAAM,CAAC,IAAI,GAAG,UAAU;AAExB;AACA,SAAS,SAAS,CAAqB,IAAa,EAA+B;EAAA,kCAA1B,IAA0B;IAA1B,IAA0B;EAAA;EAC/E,OAAO,KAAK,mBAAoB,CAAC,UAAU,CAAI,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAS;AAClF;AAOA;AACM,SAAU,wBAAwB,CAAkC,WAAoB,EAAE,KAAgJ;EAC5O,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;IACnB,OAAO,cAAM,CAAC,IAAI,CAAC;MAAE,YAAY,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC;MAAE,IAAI,EAAE,WAAW,EAAE;MAAE,QAAQ,EAAE;IAAK,CAAE,CAAS;GACxG,MAAM,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;IAC/B,OAAO,cAAM,CAAC,IAAI,CAAC;MAAE,YAAY,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC;MAAE,IAAI,EAAE,WAAW,EAAE;MAAE,QAAQ,EAAE;IAAK,CAAE,CAAkB;EACjH;EACD,MAAM;IACF,QAAQ,EAAE,MAAM,GAAG,EAAE;IACrB,MAAM,EAAE,IAAI,GAAG,WAAW,EAAE;IAC5B,YAAY,EAAE,UAAU,GAAG,CAAC,IAAI,EAAE,SAAS;EAAC,CAC/C,GAAG;IAAE,GAAG;EAAK,CAAE;EAChB,OAAO,UAAU,CAAC,MAAM,CAAC,GACnB,cAAM,CAAC,IAAI,CAAC;IAAE,UAAU;IAAE,GAAG,KAAK;IAAE;EAAI,CAAoC,CAAC,GAC7E,cAAM,CAAC,IAAI,CAAC;IAAE,UAAU;IAAE,GAAG,KAAK;IAAE;EAAI,CAAyC,CAAC;AAC5F;AAKA,SAAS,UAAU,CAAwC,KAA2E;EAClI,MAAM;IAAE,QAAQ,EAAE,MAAM,GAAG,EAAE;IAAE,GAAG;EAAO,CAAE,GAAG;IAAE,YAAY,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC;IAAE,GAAG;EAAK,CAA0E;EACnK,IAAI,UAAU,CAAsB,MAAM,CAAC,EAAE;IACzC,MAAM,MAAM,GAAG,CAAC,GAAG,eAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;IAC5D,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,eAAO,CAAC,MAAM,CAAI,MAAM,CAAC;EACrE;EACD,OAAO,CAAC,MAAO,MAAc,IAAI;IAC7B,MAAM,SAAS,GAAG,eAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC;IACvD,WAAW,MAAM,KAAK,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;MACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACrB;IACD,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,eAAO,CAAC,MAAM,CAAI,MAAM,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;AACV;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAU,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,aAAa,CAA0C,KAAa;EACpG,OAAO,YAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,CAAC;AAED,eAAU,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,aAAa,CAA0C,KAAa,EAAE,KAAyB;EAC/H,OAAO,YAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AAC/C,CAAC;AAED,eAAU,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,iBAAiB,CAA0C,KAAyB,EAAE,SAAkB;EAC5I,OAAO,gBAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC;AACvD,CAAC;AAED,eAAU,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,iBAAiB;EACrD,OAAO,gBAAc,CAAC,KAAK,CAAC,IAAI,CAAC;AACrC,CAAC;AAED,eAAU,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,sBAAsB;EAC/D,OAAO,kBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C,CAAC;AAED,eAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAS,wBAAwB;EACrE,OAAO,iBAAe,CAAC,KAAK,CAAC,IAAI,CAAC;AACtC,CAAC;AAEA,eAAU,CAAC,SAAiB,CAAC,kBAAkB,GAAG,2BAA2B;AAE9E;AACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAW,CACvB,GAAG,CAAE,CAAM,IAAK,IAAI,CAAC,CAAC,CAAQ,CAAC,CAC/B,MAAM,CAAE,CAAM,IAAgB,OAAO,CAAC,KAAK,QAAQ,CAAC,CACpD,MAAM,CAAE,MAAM,IAAK,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,CACxC,OAAO,CAAE,MAAM,IAAI;EAChB,MAAM,UAAU,GAAG,mBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC;EACrD,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,QAAW,CAAC,YAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EACxE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,QAAW,CAAC,YAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EACxE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,QAAW,CAAC,gBAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EAChF,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,QAAW,CAAC,gBAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EAChF,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC,kBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EACxF,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,QAAW,CAAC,iBAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC3F,CAAC,CAAC;AAEN;AACA,SAAS,YAAY,CAAmB,KAA+B;EACnE,OAAO;IAAoB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;EAAE,CAAC;AACzD;AAEA;AACA,SAAS,eAAe,CAAwE,EAAK;EACjG,OAAO,UAAkB,CAAS;IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI;EAAE,CAAC;AAC7F;AAEA;AACA,SAAS,eAAe,CAAqF,EAAK;EAC9G,OAAO,UAAkB,CAAS,EAAE,CAAM;IACtC,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;MAC7E,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACtB;EACL,CAAC;AACL;AAEA;AACA,SAAS,2BAA2B;EAChC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU;EAClC,IAAI,UAAU,IAAI,UAAU,CAAC,UAAU,GAAG,CAAC,EAAE;IACzC,IAAI,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;IACpC,IAAI,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;EACvC;AACL,C;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGkC;AACO;AACyC;AAEjC;AACE;AACQ;AAEY;AACO;AAC8B;AACI;AAsB1G,MAAO,WACT,SAAQ,eAAkB;EA8H1B,cAA0B;IAEtB,IAAI,MAAM,GAAc,IAAK;IAAC,kCAFnB,IAAW;MAAX,IAAW;IAAA;IAItB,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,aAAM,EAAE;MAAE,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;IAAG;IAEzD,IAAI,MAAM,GAAG,UAAU,CAAiB,uBAAW,EAAE,IAAI,CAAC;IAE1D,IAAI,CAAC,MAAM,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;MACtD,MAAM,IAAI,SAAS,CAAC,qEAAqE,CAAC;IAC7F;IAED,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,+CAAoC,CAAC,MAAM,CAAC,CAAC;IAE3E,KAAK,CAAC,IAAI,WAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;IAExC,IAAI,CAAC,OAAO,GAAG,MAAM;IACrB,IAAI,CAAC,OAAO,GAAG,MAAM;EACzB;EA1IA;EACO,OAAO,KAAK,GAAuE;IAAA,IAA1B,6EAAS,IAAI,aAAM,CAAI,EAAE,CAAC;IAAI,OAAO,IAAI,WAAK,CAAI,MAAM,EAAE,EAAE,CAAC;EAAE;EAa/H;EACO,OAAO,IAAI,CAA2D,KAAW;IAEpF,IAAI,CAAC,KAAK,EAAE;MAAE,OAAO,WAAK,CAAC,KAAK,EAAE;IAAG;IAErC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;MAC3B,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,iBAAiB,CAAW,KAAK,CAAC,GACrE,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,sBAAsB,CAAW,KAAK,CAAC,GACvC,IAAI;MAC9C,IAAI,KAAK,KAAK,IAAI,EAAE;QAAE,OAAO,KAAK;MAAG;IACxC;IAED,IAAI,MAAM,GAAG,wBAAiB,CAAC,IAAI,CAAI,KAAK,CAAyD;IAErG,IAAI,SAAS,CAAuB,MAAM,CAAC,EAAE;MACzC,OAAO,CAAC,YAAY,MAAM,WAAK,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,EAAC,CAAE;IACxD;IACD,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE;MAC7C,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,WAAK,CAAC,KAAK,EAAE,GAAG,IAAI,WAAK,CAAI,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;IACnF;IACD,OAAO,CAAC,MAAO,OAAO,IAAI;MACtB,MAAM,MAAM,GAAG,MAAM,OAAO;MAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;MAC5B,MAAM,OAAO,GAAkB,EAAE;MACjC,IAAI,MAAM,EAAE;QACR,WAAW,IAAI,KAAK,IAAI,MAAM,EAAE;UAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB;QACD,OAAO,IAAI,WAAK,CAAI,MAAM,EAAE,OAAO,CAAC;MACvC;MACD,OAAO,WAAK,CAAC,KAAK,EAAE;IACxB,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;EACrB;EAEA;EACO,aAAa,SAAS,CAA8C,MAAuC;IAC9G,OAAO,MAAM,WAAK,CAAC,IAAI,CAAI,MAAa,CAAC;EAC7C;EAEA;EACO,OAAO,UAAU,CAA8C,MAAyB;IAC3F,OAAO,WAAK,CAAC,GAAG,CAAI,MAAM,CAAC,IAAI,CAAC,SAA+B,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;EAC1F;EAuDA;EACO,OAAO,GAAG,GAAe;IAAA,mCAAX,IAAW;MAAX,IAAW;IAAA;IAC5B,OAAO,IAAI,WAAK,CAAC,GAAG,kCAAkC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EACnF;EA+BA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,YAAY;EAAE;EAE1C,KAAK,GAAsB;IAAA,IAArB,MAAM,uEAAG,IAAI,CAAC,OAAO;IAC9B,OAAO,IAAI,WAAK,CAAI,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;EAC7C;EAEO,SAAS,CAAoB,IAAO;IACvC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAiB;EACtE;EACO,WAAW,CAA2B,KAAa;IACtD,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACjC;EACO,cAAc,CAAoB,IAAO;IAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;EAChE;EACO,UAAU,CAA2B,KAAa;IACrD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;MAAE,OAAO,IAAI;IAAG;IAC5D,IAAI,KAAe,EAAE,KAAgB;IACrC,MAAM,MAAM,GAAI,IAAI,CAAC,OAAuB,CAAC,MAAM;IACnD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,EAAE,CAAa;IACnE,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE;MAAE,OAAO,KAAkB;IAAG;IAC1D,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;MACvB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CACtB,GAAG,CAAE,KAAK,IAAK,KAAK,CAAC,UAAU,CAAI,KAAK,CAAC,CAAC,CAC1C,MAAM,CAAE,GAAG,IAAuB,GAAG,IAAI,IAAI,CAAC;MACnD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,OAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,aAAM,CAAI,KAAK,EAAE,MAAM,CAAC;MACxD;IACJ;IACD,OAAO,IAAI;EACf;EAEA;EACO,SAAS,GAAmC;IAAA,IAAlC,QAAQ,uEAAG,QAAQ;IAAA,IAAE,MAAM,uEAAG,IAAI;IAC/C,MAAM,MAAM,GAAG,CAAC,MAAM,GAChB,4BAAqB,GACrB,8BAAuB;IAC7B,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC;EACnD;EACO,KAAK;IACR,OAAO,IAAI,CAAC,OAAO;EACvB;EACO,MAAM,GAA6C;IACtD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAS,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,EAAa,CAAC;IAAC,mCADnE,WAAgB;MAAhB,WAAgB;IAAA;IAEtD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,GAAG,CAAE,UAAU,IAAK,WAAW,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,CAAC,MAAM,CAAE,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChH;EACO,QAAQ,GAAuD;IAAA,mCAAvB,aAAuB;MAAvB,aAAuB;IAAA;IAClE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAI,GAAG,aAAa,CAAC;IACzD,OAAO,IAAI,WAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAoC;MAAA,IAAnC;QAAE,MAAM;QAAE,IAAI,EAAE;UAAE;QAAS;MAAE,CAAE;MACtE,OAAO,IAAI,uBAAW,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,GAAG,CAAE,CAAC,IAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClG,CAAC,CAAC,CAAC;EACP;EACO,MAAM,CAA8C,KAAe;IAAA;IAEtE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;IAClC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,KAAI;MACxE,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,IAAI;MAChC,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC;MACrD,CAAC,CAAC,GAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,GAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;MAClD,OAAO,IAAI;IACf,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAe,CAAC;IAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;IAChD,MAAM,OAAO,GAAG,CACZ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAC,EAAE,EAAE,CAAC,EAAE,GAAG;MAAA,IAAE,CAAC,uEAAG,QAAQ,CAAC,CAAC,CAAC;MAAA,OACrC,CAAC,KAAK,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC,EACpE,GAAG,OAAO,CAAC,GAAG,CAAE,CAAC,IAAK,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAC/C,CAAC,MAAM,CAAC,OAAO,CAAyC;IAEzD,OAAO,IAAI,WAAK,CAAQ,GAAG,kCAAkC,CAAM,MAAM,EAAE,OAAO,CAAC,CAAC;EACxF;AACH;AAED,SAAS,iBAAiB,CAA2D,KAA6C;EAC9H,MAAM;IAAE;EAAI,CAAE,GAAG,KAAK;EACtB,IAAI,IAAI,YAAY,WAAM,EAAE;IACxB,OAAO,WAAK,CAAC,UAAU,CAAC,mBAAY,CAAC,IAAI,CAAC,KAA+C,CAAC,CAAC;EAC9F;EACD,OAAO,IAAI;AACf;AAEA,SAAS,sBAAsB,CAA2D,KAAkD;EACxI,MAAM;IAAE;EAAI,CAAE,GAAG,KAAK;EACtB,IAAI,IAAI,YAAY,WAAM,EAAE;IACxB,OAAO,mBAAY,CAAC,IAAI,CAAC,KAAoD,CAAC,CAAC,IAAI,CAAE,MAAM,IAAK,WAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EAC5H;EACD,OAAO,IAAI;AACf,C;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE8B;AACE;AACE;AACE;AACK;AACE;AACA;AACG;AACQ;AACI;AAEqC;AAYzF,MAAO,uBACT,SAAQ,mBAAe;EA6BvB,cAA0B;IACtB,IAAI,IAAqB;IAAC,kCADf,IAAW;MAAX,IAAW;IAAA;IAEtB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAc;IACjC,IAAI,QAA8B;IAClC,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,SAAI,EAAE;MACzB,GAAG,IAAI,EAAE,QAAQ,CAAC,GAAI,IAAsD;KAC/E,MAAM;MACH,MAAM,MAAM,GAAG,MAAM,CAAC,MAA6B;MACnD,MAAM,GAAG,MAAM,EAAE,SAAS,CAAC,GAAG,IAAyC;MACvE,IAAI,GAAG,SAAI,CAAC,MAAM,CAAC,IAAI,WAAM,CAAI,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC;IAC3E;IACD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC;IACrB,IAAI,CAAC,OAAO,GAAG,MAAM;EACzB;EAnCA;EACO,OAAO,IAAI,CAA2D,OAA6F;IACtK,IAAI,UAAU,CAAgC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;MAC9D,OAAO,WAAK,CAAC,IAAI,CAAC,OAAiD,CAAC;IACvE;IACD,OAAO,WAAK,CAAC,IAAI,CAAC,OAAsD,CAAC;EAC7E;EAIA;EACO,OAAO,GAAG,GAA4D;IAAA,mCAAX,IAAW;MAAX,IAAW;IAAA;IACzE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,eAAe,CAAI,IAAI,CAAC;IACzC,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAE,CAAC,IAA8B,CAAC,YAAY,cAAM,CAAC;IACzE,OAAO,IAAI,uBAAW,CAAC,GAAG,oBAAoB,CAAC,IAAI,aAAM,CAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7F;EAsBO,KAAK,CAAC,IAAqB,EAA2B;IAAA,IAAzB,QAAQ,uEAAG,IAAI,CAAC,SAAS;IACzD,OAAO,IAAI,uBAAW,CAAI,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;EAC3D;EAEO,MAAM,GAA+B;IAAA,mCAA3B,MAA2B;MAA3B,MAA2B;IAAA;IACxC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO;MAAE,MAAM,GAAG,eAAO,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC;IACtE,OAAO,IAAI,WAAK,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC;MAAA,IAAC;QAAE;MAAI,CAAE;MAAA,OAAK,IAAI,uBAAW,CAAC,MAAM,EAAE,IAAI,CAAC;IAAA,EAAC,CAAC;EACrF;EAEA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAO;EAAE;EAC3C,IAAW,OAAO;IAAK,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;EAAE;EAC1D,IAAW,YAAY;IACnB,OAAO,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,GAAG,+BAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EACzF;EAEO,MAAM,GAA6C;IACtD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAS,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,EAAa,CAAC;IAAC,mCADnE,WAAgB;MAAhB,WAAgB;IAAA;IAEtD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,GAAG,CAAE,UAAU,IAAK,WAAW,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,CAAC,MAAM,CAAE,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChH;EACO,QAAQ,GAAuD;IAAA,mCAAvB,aAAuB;MAAvB,aAAuB;IAAA;IAClE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC;IACtD,MAAM,SAAS,GAAG,aAAa,CAAC,GAAG,CAAE,CAAC,IAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;IAClF,OAAO,IAAI,uBAAW,CAAuB,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;EAChF;AACH;AAED;;;;;;;AAOG;AACH;AACM,MAAO,+CAAkF,SAAQ,uBAAc;EACjH,YAAY,MAAiB;IACzB,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,IAAK,SAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzE;AACH;AAED;AACA,MAAM,+BAAoB,SAAQ,OAAO;EAAzC;;IACW,iBAAY,GAAG,IAAI,GAAG,EAAkB;EAsBnD;EArBW,OAAO,OAAO,CAAwB,KAAQ;IACjD,OAAO,IAAI,+BAAmB,EAAE,CAAC,KAAK,CAClC,KAAK,CAAC,IAAI,EAAE,IAAI,WAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAC9C,CAAC,YAAY;EAClB;EACO,KAAK,CAAC,IAAU,EAAE,IAAc;IACnC,IAAI,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;MAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;KAC1C,MAAM;MACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChD;IACD,OAAO,IAAI;EACf;EACO,eAAe,CAAC,IAAU,EAAE,IAAgB;IAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU;IAClC,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;MACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC;IAC7C;IACD,OAAO,IAAI;EACf;AACH,C;;ACtJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEmC;AAEK;AACC;AAEG;AAIe;AACU;AACI;AACU;AAMzD;AAIP;AAOK;AAgBlB,MAAO,wBAA+D,SAAQ,eAA+B;EAG/G,YAAsB,IAA+B;IACjD,KAAK,EAAE;IACP,IAAI,CAAC,KAAK,GAAG,IAAI;EACrB;EAEA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;EAAE;EAChD,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;EAAE;EAChD,IAAW,WAAW;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW;EAAE;EAC1D,IAAW,YAAY;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY;EAAE;EAC5D,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe;EAAE;EAClE,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB;EAAE;EACpE,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI;EAAE;EAEtE,MAAM;IAAoC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;EAAE;EACtE,OAAO;IAAyC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EAAE;EAC7E,MAAM;IAAwC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;EAAE;EAC1E,QAAQ;IAA0C,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;EAAE;EAEhF,IAAI;IACP,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;EAC5B;EACO,KAAK,CAAC,KAAW;IACpB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;EAClC;EACO,MAAM,CAAC,KAAW;IACrB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;EACnC;EACO,MAAM;IACT,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;EAC9B;EACO,KAAK,CAAC,MAAyB;IAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IACxB,IAAI,CAAC,UAAU,GAAG,SAAS;IAC3B,IAAI,CAAC,WAAW,GAAG,SAAS;IAC5B,OAAO,IAAI;EACf;EACO,IAAI,CAAC,OAAqB;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;IACxC,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI;EAC/D;EACO,eAAe,CAAC,KAAa;IAChC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI;EACzE;EACO,CAAC,MAAM,CAAC,QAAQ,IAAC;IACpB,OAA2C,IAAI,CAAC,KAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAC7E;EACO,CAAC,MAAM,CAAC,aAAa,IAAC;IACzB,OAAgD,IAAI,CAAC,KAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;EACvF;EACO,WAAW;IACd,OAAO,QAAc,CAAC,WAAW,CAC5B,IAAI,CAAC,MAAM,EAAE,GACR;MAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM;IAAI,CAA8B,GAC7D;MAAE,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM;IAAI,CAAoC,CAAC;EACvF;EACO,YAAY;IACf,OAAO,QAAc,CAAC,YAAY,CAC7B,IAAI,CAAC,MAAM,EAAE,GACR;MAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM;IAAI,CAA8B,GAC7D;MAAE,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM;IAAI,CAAmC,EAC7E;MAAE,UAAU,EAAE;IAAI,CAAE,CAAC;EAC7B;EAEA;EACA;EACO,OAAO,WAAW,CAAC,OAAmE;IACzF,MAAM,IAAI,KAAK,oDAAkD,CAAC;EACtE;EACA;EACO,OAAO,UAAU;EACpB;EACA,gBAA4C;EAC5C;EACA,gBAA2C;IAE3C,MAAM,IAAI,KAAK,mDAAiD,CAAC;EACrE;EASA;EACO,OAAO,IAAI,CAA8C,MAAW;IACvE,IAAI,MAAM,YAAY,wBAAiB,EAAE;MACrC,OAAO,MAAM;KAChB,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE;MAC5B,OAAO,aAAa,CAAI,MAAM,CAAC;KAClC,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;MAC7B,OAAO,cAAc,CAAI,MAAM,CAAC;KACnC,MAAM,IAAI,SAAS,CAAM,MAAM,CAAC,EAAE;MAC/B,OAAO,CAAC,YAAY,MAAM,wBAAiB,CAAC,IAAI,CAAM,MAAM,MAAM,CAAC,EAAC,CAAE;KACzE,MAAM,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,mBAAmB,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE;MAC1H,OAAO,mBAAmB,CAAI,IAAI,sBAAe,CAAC,MAAM,CAAC,CAAC;IAC7D;IACD,OAAO,cAAc,CAAI,IAAI,iBAAU,CAAC,MAAM,CAAC,CAAC;EACpD;EASA;EACO,OAAO,OAAO,CAA8C,MAAW;IAC1E,IAAI,MAAM,YAAY,wBAAiB,EAAE;MACrC,OAAO,MAAM,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,MAAoC,CAAC;KACpG,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,UAAU,CAAuB,MAAM,CAAC,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE;MAClI,OAAO,WAAW,CAAI,MAAM,CAA4C;IAC3E;IACD,OAAO,YAAY,CAAI,MAAM,CAA8E;EAC/G;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACM,MAAO,uBAAqE,SAAQ,wBAAoB;EAC1G,YAAsB,KAAqC;IAAI,KAAK,CAAE,KAAK,CAAC;IAAtD,UAAK,GAAL,KAAK;EAAmD;EACvE,CAAC,MAAM,CAAC,QAAQ,IAAC;IAAK,OAAQ,IAAI,CAAC,KAA0C,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAAE;EAClG,QAAQ,MAAM,CAAC,aAAa,IAAC;IAA4C,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;EAAE;AACnH;AACD;AACM,MAAO,4BAA0E,SAAQ,wBAAoB;EAC/G,YAAsB,KAA0C;IAAI,KAAK,CAAE,KAAK,CAAC;IAA3D,UAAK,GAAL,KAAK;EAAwD;EAC5E,CAAC,MAAM,CAAC,QAAQ,IAAC;IAAuC,MAAM,IAAI,KAAK,+CAA+C,CAAC;EAAE;EACzH,CAAC,MAAM,CAAC,aAAa,IAAC;IAAK,OAAQ,IAAI,CAAC,KAA+C,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;EAAE;AAC3H;AACD;AACM,MAAO,qBAAmE,SAAQ,uBAA0B;EAC9G,YAAsB,KAAmC;IAAI,KAAK,CAAE,KAAK,CAAC;IAApD,UAAK,GAAL,KAAK;EAAiD;AAC/E;AACD;AACM,MAAO,0BAAwE,SAAQ,4BAA+B;EACxH,YAAsB,KAAwC;IAAI,KAAK,CAAE,KAAK,CAAC;IAAzD,UAAK,GAAL,KAAK;EAAsD;AACpF;AAgGD;AACA,MAAe,4BAAqB;EAahC,cAAoD;IAAA,IAAxC,mFAAe,IAAI,GAAG,EAAkB;IAT7C,WAAM,GAAG,KAAK;IACd,gBAAW,GAAG,IAAI;IAGf,qBAAgB,GAAG,CAAC;IACpB,sBAAiB,GAAG,CAAC;IAK3B,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC;EALA,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,gBAAgB;EAAE;EAC7D,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,iBAAiB;EAAE;EAMxD,MAAM;IAAoC,OAAO,KAAK;EAAE;EACxD,OAAO;IAAyC,OAAO,KAAK;EAAE;EAC9D,MAAM;IAAwC,OAAO,KAAK;EAAE;EAC5D,QAAQ;IAA0C,OAAO,KAAK;EAAE;EAEhE,KAAK,CAAC,MAAyB;IAClC,IAAI,CAAC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAAC,MAAM,GAAS,MAAM;IAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE;IAC7B,OAAO,IAAI;EACf;EAEU,gBAAgB,CAAC,MAA4B,EAAE,IAAS;IAC9D,OAAO,IAAI,uBAAW,CAAI,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC9G;EACU,oBAAoB,CAAC,MAAgC,EAAE,IAAS;IACtE,MAAM;MAAE,EAAE;MAAE,OAAO;MAAE;IAAI,CAAE,GAAG,MAAM;IACpC,MAAM;MAAE,YAAY;MAAE;IAAM,CAAE,GAAG,IAAI;IACrC,MAAM,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC;IACvC,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE;MACxB,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAE;MACzC,OAAQ,UAAU,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAC7C,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACrD,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D;IACD,OAAO,UAAU;EACrB;EACU,YAAY,CAAC,MAA4B,EAAE,IAAS,EAAE,KAA2B;IACvF,OAAO,IAAI,yBAAY,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;EACnG;AACH;AAED;AACA,MAAM,kCAAyE,SAAQ,4BAAwB;EAK3G,YAAY,MAAkC,EAAE,YAAkC;IAC9E,KAAK,CAAC,YAAY,CAAC;IACnB,IAAI,CAAC,OAAO,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,GAC7B,IAAI,qBAAa,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GACxC,IAAI,yBAAiB,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;EACtD;EAEO,MAAM;IAAoC,OAAO,IAAI;EAAE;EACvD,QAAQ;IAA0C,OAAO,IAAI;EAAE;EAC/D,CAAC,MAAM,CAAC,QAAQ,IAAC;IACpB,OAAO,IAAwC;EACnD;EACO,MAAM;IACT,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MACtC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE;MAC7B,IAAI,CAAC,OAAO,GAAS,IAAI;MACzB,IAAI,CAAC,YAAY,GAAS,IAAI;IACjC;EACL;EACO,IAAI,CAAC,OAAqB;IAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MACd,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC;MACnD,IAAI,EAAE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAG,CAAC,CAAC,EAAE;QAC9D,IAAI,CAAC,MAAM,EAAE;MAChB;IACJ;IACD,OAAO,IAAI;EACf;EACO,KAAK,CAAC,KAAW;IACpB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MAC1D,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;IAC3C;IACD,OAAO,aAAa;EACxB;EACO,MAAM,CAAC,KAAW;IACrB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MAC1D,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IAC5C;IACD,OAAO,aAAa;EACxB;EACO,IAAI;IACP,IAAI,IAAI,CAAC,MAAM,EAAE;MAAE,OAAO,aAAa;IAAG;IAC1C,IAAI,OAAuB;MAAE;QAAE,OAAO,EAAE;MAAM,CAAE,GAAG,IAAI;IACvD,OAAO,OAAO,GAAG,IAAI,CAAC,2BAA2B,EAAE,EAAE;MACjD,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;OAC/B,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;QAChC,IAAI,CAAC,iBAAiB,EAAE;QACxB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QACzD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;QACzD,OAAO;UAAE,IAAI,EAAE,KAAK;UAAE,KAAK,EAAE;QAAW,CAAE;OAC7C,MAAM,IAAI,OAAO,CAAC,iBAAiB,EAAE,EAAE;QACpC,IAAI,CAAC,gBAAgB,EAAE;QACvB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MAC3C;IACJ;IACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;MAC7C,IAAI,CAAC,iBAAiB,EAAE;MACxB,OAAO;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE,IAAI,+CAAoC,CAAI,IAAI,CAAC,MAAM;MAAC,CAAE;IAC1F;IACD,OAAO,IAAI,CAAC,MAAM,EAAE;EACxB;EACU,2BAA2B,CAA0B,IAAe;IAC1E,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAI,IAAI,CAAC;EAC5C;AACH;AAED;AACA,MAAM,uCAA8E,SAAQ,4BAAwB;EAKhH,YAAY,MAAuB,EAAE,YAAkC;IACnE,KAAK,CAAC,YAAY,CAAC;IACnB,IAAI,CAAC,OAAO,GAAG,IAAI,0BAAkB,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;EAChE;EACO,OAAO;IAAyC,OAAO,IAAI;EAAE;EAC7D,QAAQ;IAA0C,OAAO,IAAI;EAAE;EAC/D,CAAC,MAAM,CAAC,aAAa,IAAC;IACzB,OAAO,IAA6C;EACxD;EACO,MAAM,MAAM;IACf,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MACtC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE;MACnC,IAAI,CAAC,OAAO,GAAS,IAAI;MACzB,IAAI,CAAC,YAAY,GAAS,IAAI;IACjC;EACL;EACO,MAAM,IAAI,CAAC,OAAqB;IACnC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MACd,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC;MACnD,IAAI,EAAE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAI,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,EAAI,CAAC,CAAC,EAAE;QACtE,MAAM,IAAI,CAAC,MAAM,EAAE;MACtB;IACJ;IACD,OAAO,IAAI;EACf;EACO,MAAM,KAAK,CAAC,KAAW;IAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MAC1D,OAAO,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;IACjD;IACD,OAAO,aAAa;EACxB;EACO,MAAM,MAAM,CAAC,KAAW;IAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE;MAC1D,OAAO,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IAClD;IACD,OAAO,aAAa;EACxB;EACO,MAAM,IAAI;IACb,IAAI,IAAI,CAAC,MAAM,EAAE;MAAE,OAAO,aAAa;IAAG;IAC1C,IAAI,OAAuB;MAAE;QAAE,OAAO,EAAE;MAAM,CAAE,GAAG,IAAI;IACvD,OAAO,OAAO,GAAG,MAAM,IAAI,CAAC,2BAA2B,EAAE,EAAE;MACvD,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;QACpB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;OACrC,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;QAChC,IAAI,CAAC,iBAAiB,EAAE;QACxB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;QACzD,OAAO;UAAE,IAAI,EAAE,KAAK;UAAE,KAAK,EAAE;QAAW,CAAE;OAC7C,MAAM,IAAI,OAAO,CAAC,iBAAiB,EAAE,EAAE;QACpC,IAAI,CAAC,gBAAgB,EAAE;QACvB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/D,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MAC3C;IACJ;IACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;MAC7C,IAAI,CAAC,iBAAiB,EAAE;MACxB,OAAO;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE,IAAI,+CAAoC,CAAI,IAAI,CAAC,MAAM;MAAC,CAAE;IAC1F;IACD,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE;EAC9B;EACU,MAAM,2BAA2B,CAA0B,IAAe;IAChF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAI,IAAI,CAAC;EAClD;AACH;AAED;AACA,MAAM,gCAAuE,SAAQ,kCAA8B;EAU/G,YAAY,MAA+C,EAAE,YAAkC;IAC3F,KAAK,CAAC,MAAM,YAAY,qBAAgB,GAAG,MAAM,GAAG,IAAI,qBAAgB,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC;EACnG;EANA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAQ;EAAE;EAC5C,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC;EAAE;EACvF,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,CAAC;EAAE;EAKlF,MAAM;IAAoC,OAAO,IAAI;EAAE;EACvD,MAAM;IAAwC,OAAO,IAAI;EAAE;EAC3D,IAAI,CAAC,OAAqB;IAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM;MACxD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;QAClD,KAAK,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;MAC9D;IACJ;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EAC9B;EACO,eAAe,CAAC,KAAa;IAChC,IAAI,IAAI,CAAC,MAAM,EAAE;MAAE,OAAO,IAAI;IAAG;IACjC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAAE,IAAI,CAAC,IAAI,EAAE;IAAG;IACnC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;IAChE,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;MAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;MACnE,IAAI,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;QACpC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;QACzD,OAAO,WAAW;MACrB;IACJ;IACD,OAAO,IAAI;EACf;EACU,oBAAoB,CAAC,KAAa;IACxC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACpE,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;MAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC;MACvE,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB,EAAE,EAAE;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/D,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MAC3C;IACJ;EACL;EACU,WAAW;IACjB,MAAM;MAAE;IAAO,CAAE,GAAG,IAAI;IACxB,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,eAAe;IAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;IACxC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,CAAC;IACtD,OAAO,YAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAChC;EACU,2BAA2B,CAA0B,IAAe;IAC1E,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAAE,IAAI,CAAC,IAAI,EAAE;IAAG;IACnC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,EAAE;MAChE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC;MACjF,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;MACxC;IACJ;IACD,OAAO,IAAI;EACf;AACH;AAED;AACA,MAAM,qCAA4E,SAAQ,uCAAmC;EAYzH,YAAY,MAA0C,EAAgB;IAAA,kCAAX,IAAW;MAAX,IAAW;IAAA;IAClE,MAAM,UAAU,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,GAAY,IAAI,CAAC,KAAK,EAAE,GAAG,SAAS;IAClF,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,GAAG,GAAyB,IAAI,CAAC,KAAK,EAAE,GAAG,SAAS;IAC5F,KAAK,CAAC,MAAM,YAAY,0BAAqB,GAAG,MAAM,GAAG,IAAI,0BAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC;EACzH;EAVA,IAAW,MAAM;IAAK,OAAO,IAAI,CAAC,OAAQ;EAAE;EAC5C,IAAW,eAAe;IAAK,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC;EAAE;EACvF,IAAW,gBAAgB;IAAK,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,CAAC;EAAE;EASlF,MAAM;IAAwC,OAAO,IAAI;EAAE;EAC3D,OAAO;IAAyC,OAAO,IAAI;EAAE;EAC7D,MAAM,IAAI,CAAC,OAAqB;IACnC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM;MAC9D,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;QAClD,KAAK,KAAI,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;MACpE;IACJ;IACD,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EACpC;EACO,MAAM,eAAe,CAAC,KAAa;IACtC,IAAI,IAAI,CAAC,MAAM,EAAE;MAAE,OAAO,IAAI;IAAG;IACjC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAAE,MAAM,IAAI,CAAC,IAAI,EAAE;IAAG;IACzC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;IAChE,IAAI,KAAK,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;MAClD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;MACzE,IAAI,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;QACpC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QACrE,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;QACzD,OAAO,WAAW;MACrB;IACJ;IACD,OAAO,IAAI;EACf;EACU,MAAM,oBAAoB,CAAC,KAAa;IAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACpE,IAAI,KAAK,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;MAClD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC;MAC7E,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB,EAAE,EAAE;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;QACrE,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC;MAC3C;IACJ;EACL;EACU,MAAM,WAAW;IACvB,MAAM;MAAE;IAAO,CAAE,GAAG,IAAI;IACxB,OAAO,CAAC,QAAQ,KAAI,MAAM,OAAO,CAAC,QAAQ;IAC1C,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,eAAe;IAC7C,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9C,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,CAAC;IAC5D,OAAO,YAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAChC;EACU,MAAM,2BAA2B,CAA0B,IAAe;IAChF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MAAE,MAAM,IAAI,CAAC,IAAI,EAAE;IAAG;IACzC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,EAAE;MAChE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC;MACjE,IAAI,KAAK,KAAI,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAE;QAChD,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;MAC9C;IACJ;IACD,OAAO,IAAI;EACf;AACH;AAED;AACA,MAAM,gCAAuE,SAAQ,kCAA8B;EAC/G,YAAY,MAAqB,EAAE,YAAkC;IACjE,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC;EAC/B;EACU,YAAY,CAAC,MAA4B,EAAE,IAAS,EAAE,KAA2B;IACvF,OAAO,IAAI,6BAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;EACvG;AACH;AAED;AACA;AACA;AACA;AACA;AAEA;AACA,SAAS,iBAAiB,CAAC,IAA8B,EAAE,OAAqB;EAC5E,OAAO,OAAO,IAAK,OAAO,OAAO,CAAC,aAAa,CAAC,KAAK,SAAU,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;AAClH;AAEA;AACA,UAAU,WAAW,CAA8C,MAAmD;EAClH,MAAM,MAAM,GAAG,wBAAiB,CAAC,IAAI,CAAU,MAAM,CAA0B;EAC/E,IAAI;IACA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;MAAE,WAAW,EAAE;IAAK,CAAE,CAAC,CAAC,MAAM,EAAE;MAC7C,GAAG;QAAE,MAAM,MAAM;OAAG,QAAQ,CAAE,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAE,MAAM;IAC9D;GACJ,SAAS;IAAE,MAAM,CAAC,MAAM,EAAE;EAAG;AAClC;AAEA;AACA,gBAAgB,YAAY,CAA8C,MAA8E;EACpJ,MAAM,MAAM,GAAG,MAAM,wBAAiB,CAAC,IAAI,CAAU,MAAM,CAAyB;EACpF,IAAI;IACA,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,CAAC;MAAE,WAAW,EAAE;IAAK,CAAE,CAAC,EAAE,MAAM,EAAE;MACrD,GAAG;QAAE,MAAM,MAAM;OAAG,QAAQ,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,MAAM;IACpE;GACJ,SAAS;IAAE,MAAM,MAAM,CAAC,MAAM,EAAE;EAAG;AACxC;AAEA;AACA,SAAS,aAAa,CAAwC,MAAqB;EAC/E,OAAO,IAAI,uBAAuB,CAAC,IAAI,gCAAyB,CAAI,MAAM,CAAC,CAAC;AAChF;AAEA;AACA,SAAS,cAAc,CAAwC,MAAkB;EAC7E,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAE,WAAW,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;EACjD,OAAO,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC,GAClE,IAAI,uBAAuB,CAAC,IAAI,kCAA2B,CAAI,MAAM,CAAC,CAAC,GACvE,IAAI,qBAAqB,CAAC,IAAI,gCAAyB,CAAI,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAC1E,IAAI,uBAAuB,CAAC,IAAI,kCAA2B,CAAI,aAAS,CAAS,CAAC,EAAE,CAAC,CAAC;AAChG;AAEA;AACA,eAAe,mBAAmB,CAAwC,MAAuB;EAC7F,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAE,WAAW,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;EACvD,OAAO,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC,GAClE,IAAI,4BAA4B,CAAC,IAAI,uCAAgC,CAAI,MAAM,CAAC,CAAC,GACjF,IAAI,qBAAqB,CAAC,IAAI,gCAAyB,CAAI,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAChF,IAAI,4BAA4B,CAAC,IAAI,uCAAgC,CAAI,mBAAe,CAAS,CAAC,EAAE,CAAC,CAAC;AAChH;AAEA;AACA,eAAe,cAAc,CAAwC,MAAkB;EACnF,MAAM;IAAE;EAAI,CAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE;EACpC,MAAM,IAAI,GAAG,IAAI,0BAAqB,CAAC,MAAM,EAAE,IAAI,CAAC;EACpD,IAAI,IAAI,IAAI,iBAAiB,EAAE;IAC3B,IAAI,wBAAwB,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,EAAG,WAAW,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACxE,OAAO,IAAI,0BAA0B,CAAC,IAAI,qCAA8B,CAAI,IAAI,CAAC,CAAC;IACrF;EACJ;EACD,OAAO,IAAI,4BAA4B,CAAC,IAAI,uCAAgC,CAAI,IAAI,CAAC,CAAC;AAC1F,C;;ACtuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEiD;AAEe;AAEhE;AACM,SAAU,WAAW,CAAI,MAAsC,EAAE,OAAkC;EACrG,IAAI,eAAe,CAAI,MAAM,CAAC,EAAE;IAAE,OAAO,gCAAgC,CAAC,MAAM,EAAE,OAAO,CAAC;EAAG;EAC7F,IAAI,UAAU,CAAI,MAAM,CAAC,EAAE;IAAE,OAAO,2BAA2B,CAAC,MAAM,EAAE,OAAO,CAAC;EAAG;EACnF;EACA,MAAM,IAAI,KAAK,iEAAiE,CAAC;AACrF;AAEA;AACA,SAAS,2BAA2B,CAAI,MAAmB,EAAE,OAAkC;EAE3F,IAAI,EAAE,GAAuB,IAAI;EACjC,MAAM,EAAE,GAAI,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,IAAK,KAAK;EACzD,MAAM,GAAG,GAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAK,CAAC,IAAI,EAAG;EAEzD,OAAO,IAAI,cAAc,CAAI;IACzB,GAAG,OAAc;IACjB,KAAK,CAAC,UAAU;MAAI,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAAE,CAAC;IAC/E,IAAI,CAAC,UAAU;MAAI,EAAE,GAAI,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,GAAI,UAAU,CAAC,KAAK,EAAE;IAAE,CAAC;IACtE,MAAM;MAAK,CAAC,EAAE,IAAK,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,EAAG,IAAI,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;IAAE;GACzE,EAAE;IAAE,aAAa,EAAE,EAAE,GAAG,GAAG,GAAG,SAAS;IAAE,GAAG;EAAO,CAAE,CAAC;EAEvD,SAAS,IAAI,CAAC,UAA8C,EAAE,EAAe;IACzE,IAAI,GAAe;IACnB,IAAI,CAAC,GAA6B,IAAI;IACtC,IAAI,IAAI,GAAG,UAAU,CAAC,WAAW,IAAI,IAAI;IACzC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE;MAC1C,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAC9D,IAAI,IAAI,IAAI,IAAI,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACxD,CAAC,CAAC,KAAK,GAAS,GAAG;MACtB;MACD,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;MAC3B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE;QAAE;MAAS;IAC/C;IACD,UAAU,CAAC,KAAK,EAAE;EACtB;AACJ;AAEA;AACA,SAAS,gCAAgC,CAAI,MAAwB,EAAE,OAAkC;EAErG,IAAI,EAAE,GAA4B,IAAI;EACtC,MAAM,EAAE,GAAI,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,IAAK,KAAK;EACzD,MAAM,GAAG,GAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAK,CAAC,IAAI,EAAG;EAEzD,OAAO,IAAI,cAAc,CAAI;IACzB,GAAG,OAAc;IACjB,MAAM,KAAK,CAAC,UAAU;MAAI,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAAE,CAAC;IAChG,MAAM,IAAI,CAAC,UAAU;MAAI,EAAE,GAAI,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,GAAI,UAAU,CAAC,KAAK,EAAE;IAAE,CAAC;IAClF,MAAM,MAAM;MAAK,CAAC,EAAE,IAAK,EAAE,CAAC,MAAM,KAAI,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;IAAE;GACrF,EAAE;IAAE,aAAa,EAAE,EAAE,GAAG,GAAG,GAAG,SAAS;IAAE,GAAG;EAAO,CAAE,CAAC;EAEvD,eAAe,IAAI,CAAC,UAA8C,EAAE,EAAoB;IACpF,IAAI,GAAe;IACnB,IAAI,CAAC,GAA6B,IAAI;IACtC,IAAI,IAAI,GAAG,UAAU,CAAC,WAAW,IAAI,IAAI;IACzC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE;MAChD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAC9D,IAAI,IAAI,IAAI,IAAI,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACxD,CAAC,CAAC,KAAK,GAAS,GAAG;MACtB;MACD,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;MAC3B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE;QAAE;MAAS;IAC/C;IACD,UAAU,CAAC,KAAK,EAAE;EACtB;AACJ,C;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAK8D;AAW9D;AACM,SAAU,uBAAuB,CAAwC,OAA0C;EACrH,OAAO,IAAI,wBAAgB,CAAC,OAAO,CAAC;AACxC;AAEA;AACM,MAAO,wBAAgB;EAYzB,YAAY,OAA0C;IAElD;IARI,eAAU,GAAG,CAAC;IACd,cAAS,GAAG,KAAK;IACjB,kBAAa,GAAG,CAAC;IAQrB,MAAM;MACF,CAAC,kBAAkB,GAAG,gBAAgB;MACtC,CAAC,kBAAkB,GAAG,gBAAgB;MACtC,CAAC,kBAAkB,GAAG,gBAAgB,GAAG,OAAO;MAChD,GAAG;IAAc,CACpB,GAAG,OAAO;IAEX,IAAI,CAAC,WAAW,GAAG,IAAI;IACvB,IAAI,CAAC,QAAQ,GAAG,eAAO,CAAC,GAAG,CAAW,cAAc,CAAC;IACrD,IAAI,CAAC,QAAQ,GAAG,gBAAgB,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe;IAE5E,MAAM;MAAE,CAAC,eAAe,GAAG,qBAAqB,GAAG,gBAAgB,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG;IAAI,CAAE,GAAG;MAAE,GAAG;IAAgB,CAAE;IAC5H,MAAM;MAAE,CAAC,eAAe,GAAG,qBAAqB,GAAG,gBAAgB,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG;IAAI,CAAE,GAAG;MAAE,GAAG;IAAgB,CAAE;IAE5H,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,cAAc,CAAO;MACxC,CAAC,QAAQ,GAAG,MAAM;QAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MAAE,CAAC;MAC7C,CAAC,MAAM,GAAI,CAAC,IAAI;QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;MAAE,CAAC;MAC3E,CAAC,OAAO,GAAI,CAAC,IAAI;QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;MAAE;KAC9E,EAAE;MACC,eAAe,EAAE,qBAAqB;MACtC,MAAM,EAAE,gBAAgB,KAAK,OAAO,GAAG,WAAW,GAAG;KACxD,CAAC;IAEF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,cAAc,CAAC;MAClC,CAAC,OAAO,GAAG,MAAK;QAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MAAE,CAAC;MAC3C,CAAC,OAAO,GAAG,MAAK;QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;MAAE,CAAC;MACvE,CAAC,OAAO,GAAG,MAAK;QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;MAAE;KAClF,EAAE;MACC,eAAe,EAAE,qBAAqB;MACtC,MAAM,EAAG,KAA0B,IAAK,IAAI,CAAC,6BAA6B,CAAC,KAAK;KACnF,CAAC;EACN;EAEQ,6BAA6B,CAAC,KAA0B;IAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa;IACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/D,OAAO,IAAI,CAAC,aAAa,GAAG,YAAY;EAC5C;EAEQ,WAAW,CAAC,OAA0B,EAAE,UAAwD;IACpG,IAAI,UAAU,KAAK,IAAI,EAAE;MAAE;IAAS;IACpC,IAAI,IAAI,CAAC,aAAa,IAAI,UAAU,CAAC,WAAY,EAAE;MAC/C,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;IACrE;IACD,IAAI,OAAO,CAAC,QAAQ,EAAE;MAClB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;QAC7C,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;MACrE;MACD,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE;QAC5C,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC;MAClC;IACJ;EACL;EAEQ,QAAQ,CAAC,UAAiD,EAAE,KAAkB;IAClF,IAAI,CAAC,aAAa,GAAG,CAAC;IACtB,IAAI,CAAC,WAAW,GAAG,IAAI;IACvB,KAAK,KAAK,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;EACnE;AACH;AAED;AAAe,MAAM,WAAW,GAA8B,KAA6B,IAAK,KAAK,CAAC,MAAM;AAC5G;AAAe,MAAM,eAAe,GAA8B,KAA6B,IAAK,KAAK,CAAC,UAAU,C;;ACnHpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIiD;AACI;AAErD;AACM,SAAU,iCAAiC,CAA8C,gBAA4C,EAAE,gBAA2C;EAEpL,MAAM,KAAK,GAAG,IAAI,qBAAc,EAAE;EAClC,IAAI,MAAM,GAAgC,IAAI;EAE9C,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAiB;IAChD,MAAM,MAAM;MAAK,MAAM,KAAK,CAAC,KAAK,EAAE;IAAE,CAAC;IACvC,MAAM,KAAK,CAAC,UAAU;MAAI,MAAM,IAAI,CAAC,UAAU,EAAE,MAAM,KAAK,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,CAAC;IAAE,CAAC;IACtF,MAAM,IAAI,CAAC,UAAU;MAAI,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE;IAAE;GAC1F,CAAC;EAEF,OAAO;IAAE,QAAQ,EAAE,IAAI,cAAc,CAAC,KAAK,EAAE;MAAE,eAAe,EAAE,CAAC,IAAI,EAAE;MAAE,GAAG;IAAgB,CAAE,CAAC;IAAE;EAAQ,CAAE;EAE3G,eAAe,IAAI;IACf,OAAO,MAAM,CAAC,MAAM,wBAAiB,CAAC,IAAI,CAAI,KAAK,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC;EAChF;EAEA,eAAe,IAAI,CAAC,UAA2D,EAAE,MAA4B;IACzG,IAAI,IAAI,GAAG,UAAU,CAAC,WAAW;IACjC,IAAI,CAAC,GAA0C,IAAI;IACnD,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE;MACpC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;MAC3B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE;QAC7B;MACH;IACJ;IACD,UAAU,CAAC,KAAK,EAAE;EACtB;AACJ,C;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIkD;AAGlD;AACM,SAAU,iCAAiC,CAE7C,gBAA6E,EAC7E,gBAAyD;EAGzD,MAAM,MAAM,GAAG,IAAI,IAAI,CAAI,gBAAgB,CAAC;EAC5C,MAAM,MAAM,GAAG,IAAI,sBAAe,CAAC,MAAM,CAAC;EAC1C,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC;IAChC,IAAI,EAAE,OAAO;IACb,MAAM,MAAM;MAAK,MAAM,MAAM,CAAC,MAAM,EAAE;IAAE,CAAC;IACzC,MAAM,IAAI,CAAC,UAAU;MAAI,MAAM,IAAI,CAAC,UAAU,CAAC;IAAE,CAAC;IAClD,MAAM,KAAK,CAAC,UAAU;MAAI,MAAM,IAAI,CAAC,UAAU,CAAC;IAAE;GACrD,EAAE;IAAE,eAAe,EAAE,CAAC,IAAI,EAAE;IAAE,GAAG;EAAgB,CAAE,CAAC;EAErD,OAAO;IAAE,QAAQ,EAAE,IAAI,cAAc,CAAC,MAAM,EAAE,gBAAgB,CAAC;IAAE;EAAQ,CAAE;EAE3E,eAAe,IAAI,CAAC,UAAuD;IACvE,IAAI,GAAG,GAAsB,IAAI;IACjC,IAAI,IAAI,GAAG,UAAU,CAAC,WAAW;IACjC,OAAO,GAAG,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;MAC1C,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;MACvB,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;QAAE;MAAS;IACjE;IACD,UAAU,CAAC,KAAK,EAAE;EACtB;AACJ,C;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIwD;AAOxD;AACM,MAAgB,KAAK;EACvB,EAAE,CAAC,KAAmB;IAClB,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;MAAE,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC;IAAG;IAC9D,OAAO,IAAI,gBAAM,CAAC,IAAI,EAAE,KAAK,CAAC;EAClC;EACA,EAAE,CAAC,KAAmB;IAClB,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;MAAE,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC;IAAG;IAC9D,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;EAChC;EACA,EAAE,CAAC,KAAmB;IAClB,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;MAAE,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC;IAAG;IAC9D,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;EAChC;EACA,EAAE,CAAC,KAAmB;IAClB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAClC;EACA,EAAE,CAAC,KAAmB;IAClB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAClC;EACA,EAAE,CAAC,KAAmB;IAClB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAClC;AACH;AAED;AACM,MAAO,OAAgB,SAAQ,KAAQ;EACzC,YAAmB,CAAI;IAAI,KAAK,EAAE;IAAf,MAAC,GAAD,CAAC;EAAgB;AACvC;AAED;AACM,MAAO,GAAY,SAAQ,KAAQ;EAMrC,YAAmB,IAAY;IAAI,KAAK,EAAE;IAAvB,SAAI,GAAJ,IAAI;EAAqB;EAC5C,IAAI,CAAC,KAAkB;IACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;MACd;MACA;MACA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;MAChB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM;MAClC,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG;QACvC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;UAChC,IAAI,CAAC,MAAM,GAAG,GAAG;UACjB;QACH;MACJ;MACD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QAAE,MAAM,IAAI,KAAK,gCAAwB,IAAI,CAAC,IAAI,OAAG,CAAC;MAAG;IACjF;IAED,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAE;IACxD,OAAQ,GAAW,IAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EACxC;AACH;AAED;AACM,MAAgB,SAAS;EAE3B,GAAG,GAAqB;IAAA,kCAAjB,IAAiB;MAAjB,IAAiB;IAAA;IAAS,OAAO,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;EAAE;EAChE,EAAE,GAAqB;IAAA,mCAAjB,IAAiB;MAAjB,IAAiB;IAAA;IAAQ,OAAO,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;EAAE;EAC7D,GAAG;IAAgB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC;EAAE;AAC5C;AAED;AACM,MAAgB,mBAA4B,SAAQ,SAAS;EAC/D,YAA4B,IAAc,EAAkB,KAAe;IACvE,KAAK,EAAE;IADiB,SAAI,GAAJ,IAAI;IAA4B,UAAK,GAAL,KAAK;EAEjE;EAEA,IAAI,CAAC,KAAkB;IACnB,IAAI,IAAI,CAAC,IAAI,YAAY,OAAO,EAAE;MAC9B,IAAI,IAAI,CAAC,KAAK,YAAY,OAAO,EAAE;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;OACxD,MAAM;QAAE;QAEL,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAY,CAAC;MAC/D;KACJ,MAAM;MAAE;MACL,IAAI,IAAI,CAAC,KAAK,YAAY,OAAO,EAAE;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAW,EAAE,IAAI,CAAC,KAAK,CAAC;OAC/D,MAAM;QAAE;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAW,EAAE,IAAI,CAAC,KAAY,CAAC;MACtE;IACJ;EACL;AAMH;AAED;AACM,MAAgB,oBAAqB,SAAQ,SAAS;EAExD,cAAoC;IAChC,KAAK,EAAE;IAAC,mCADG,QAAqB;MAArB,QAAqB;IAAA;IAEhC,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B;AACH;AACD;AACO,oBAAoB,CAAC,SAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAErE;AACM,MAAO,GAAI,SAAQ,oBAAoB;EACzC,cAAoC;IAAA,mCAArB,QAAqB;MAArB,QAAqB;IAAA;IAChC;IACA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAkB,EAAE,CAAY,KAAiB;MACzE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1D,CAAC,EAAE,EAAE,CAAC;IACN,KAAK,CAAC,GAAG,QAAQ,CAAC;EACtB;EACA,IAAI,CAAC,KAAkB;IACnB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,OAAO,CAAC,GAAW,EAAE,KAAkB,KAAK,KAAK,CAAC,KAAK,CAAE,CAAC,IAAK,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EACjF;AACH;AAED;AACM,MAAO,EAAG,SAAQ,oBAAoB;EACxC,cAAoC;IAAA,mCAArB,QAAqB;MAArB,QAAqB;IAAA;IAChC;IACA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAkB,EAAE,CAAY,KAAiB;MACzE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;IACzD,CAAC,EAAE,EAAE,CAAC;IACN,KAAK,CAAC,GAAG,QAAQ,CAAC;EACtB;EACA,IAAI,CAAC,KAAkB;IACnB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,OAAO,CAAC,GAAW,EAAE,KAAkB,KAAK,KAAK,CAAC,IAAI,CAAE,CAAC,IAAK,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EAChF;AACH;AAED;AACM,MAAO,gBAAO,SAAQ,mBAAmB;EAKjC,WAAW,CAAC,MAAmB,EAAE,IAAa,EAAE,KAAc;IACpE,MAAM,IAAI,GAAY,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IACvC,OAAO,MAAM,IAAI;EACrB;EAEU,WAAW,CAAC,KAAkB,EAAE,IAAS,EAAE,KAAU;IAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAClC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,GAAW,EAAE,KAAkB,KAAK,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;EAC/F;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAQ,EAAE,GAAY;IAC5D,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAChC,IAAI,GAAG,CAAC,MAAM,YAAY,2BAAgB,EAAE;MACxC,IAAI,GAAQ;MACZ,MAAM,MAAM,GAAG,GAAG,CAAC,MAA0B;MAC7C,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,cAAc,EAAE;QAC3C,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU;QACvC,IAAI,CAAC,OAAO,GAAG,GAAG;OACrB,MAAM;QACH,GAAG,GAAG,IAAI,CAAC,OAAO;MACrB;MAED,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;QACZ;QACA;QACA;QACA;QACA;QACA,OAAO,MAAM,KAAK;OACrB,MAAM;QACH,OAAQ,GAAW,IAAI;UACnB,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG;QACrC,CAAC;MACJ;KACJ,MAAM;MACH,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC1E;EACL;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAY,EAAE,GAAQ;IAC5D;IACA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5C;AACH;AAED;AACM,MAAO,IAAK,SAAQ,mBAAmB;EAC/B,WAAW,CAAC,MAAmB,EAAE,IAAa,EAAE,KAAc;IACpE,MAAM,IAAI,GAAY,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IACvC,OAAO,MAAM,IAAI;EACrB;EAEU,WAAW,CAAC,KAAkB,EAAE,IAAS,EAAE,KAAU;IAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAClC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC;EAC5F;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAQ,EAAE,GAAY;IAC5D,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAChC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EAC3E;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAY,EAAE,GAAQ;IAC5D,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAChC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;EAC3E;AACH;AAED;AACM,MAAO,IAAK,SAAQ,mBAAmB;EAC/B,WAAW,CAAC,MAAmB,EAAE,IAAa,EAAE,KAAc;IACpE,MAAM,IAAI,GAAY,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IACvC,OAAO,MAAM,IAAI;EACrB;EAEU,WAAW,CAAC,KAAkB,EAAE,IAAS,EAAE,KAAU;IAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAClC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC;EAC5F;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAQ,EAAE,GAAY;IAC5D,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAChC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EAC3E;EAEU,WAAW,CAAC,KAAkB,EAAE,GAAY,EAAE,GAAQ;IAC5D,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAChC,OAAO,CAAC,GAAW,EAAE,IAAiB,KAAK,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;EAC3E;AACH;AAED;AACM,MAAO,GAAI,SAAQ,SAAS;EAC9B,YAA4B,KAAgB;IACxC,KAAK,EAAE;IADiB,UAAK,GAAL,KAAK;EAEjC;EAEA,IAAI,CAAC,KAAkB;IACnB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACnC,OAAO,CAAC,GAAW,EAAE,KAAkB,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;EACjE;AACH;AAED;AACM,MAAO,eAAgB,SAAQ,SAAS;EAC1C,YAAoB,IAAmB,EAAU,KAAmC;IAChF,KAAK,EAAE;IADS,SAAI,GAAJ,IAAI;IAAyB,UAAK,GAAL,KAAK;EAEtD;EAEA,IAAI,CAAC,KAAkB;IACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IACjB,OAAO,IAAI,CAAC,IAAI;EACpB;AACH;AAEK,SAAU,aAAG,CAAC,CAAM;EAAgB,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AAAE;AAC3D,SAAU,aAAG,CAAC,CAAS;EAAc,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;AAAE;AACxD,SAAU,GAAG,GAAkB;EAAA,mCAAd,CAAc;IAAd,CAAc;EAAA;EAAS,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAAE;AAC9D,SAAU,EAAE,GAAkB;EAAA,mCAAd,CAAc;IAAd,CAAc;EAAA;EAAQ,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AAAE;AAC3D,SAAU,MAAM,CAAC,IAAmB,EAAE,IAAkC;EAC1E,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;AAC1C,C;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEiC;AAES;AACA;AACG;AACA;AAEe;AAO5D,WAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAsB,IAAkB;EAAI,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;AAAE,CAAC;AACxH,WAAK,CAAC,SAAS,CAAC,IAAI,GAAG,UAAsB,IAAc,EAAE,IAAe;EAAI,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC;AACrI,WAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAsB,IAAc,EAAE,IAAe;EAAI,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC;AACnJ,WAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAsB,SAAoB;EAAuB,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAAE,CAAC;AAE1I,MAAO,mBAAuD,SAAQ,WAAQ;EACzE,MAAM,CAAC,SAAoB;IAC9B,OAAO,IAAI,2BAAiB,CAAI,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;EAC3D;EACO,IAAI,CAAC,IAAc,EAAE,IAAe;IACvC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM;MAAE,UAAU,GAAG,OAAO,CAAC,MAAM;IACxD,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,IAAI,IAAI,EAAE;QAAE,IAAI,CAAC,KAAK,CAAC;MAAG;MAC1B;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;MACrB;IACJ;EACL;EACO,WAAW,CAAC,IAAc,EAAE,IAAe;IAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM;MAAE,UAAU,GAAG,OAAO,CAAC,MAAM;IACxD,KAAK,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE,UAAU,IAAI,CAAC,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,IAAI,IAAI,EAAE;QAAE,IAAI,CAAC,KAAK,CAAC;MAAG;MAC1B;MACA,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG;QAC1C,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;MACrB;IACJ;EACL;EACO,OAAO,CAAC,IAAkB;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM;MAAE,UAAU,GAAG,OAAO,CAAC,MAAM;IACxD,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,IAAW;IACvE;IACA;IACA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAuB;IAC/C,IAAI,CAAC,aAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MACrC,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC;IAChF;IAED,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1E,MAAM,eAAe,GAAG,eAAe,IAAI,CAAC,GAAG,WAAW,GAClC,eAAe,IAAI,CAAC,GAAG,WAAW,GAAG,UAAU;IAEvE,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;IAC5D,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC;MACA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;MACpB,MAAM,IAAI,GAAI,QAAQ,CAAC,MAAwB,CAAC,OAAO;MACvD;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACzB,IAAI,GAAG,KAAK,IAAI,EAAE;UAAE,MAAM,CAAC,GAAG,CAAC,EAAE;QAAG;MACvC;IACJ;IACD,OAAO,IAAI,uBAAa,CAAC,MAAM,CAAC,UAAU,EAAE,aAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACvE;AACH;AAED;AACM,MAAO,uBAAkE,SAAQ,WAAqC;EACxH,YAAY,MAAiB,EAAE,MAAiB;IAE5C,MAAM,MAAM,GAAG,IAAI,aAAM,CAAI,CACzB,IAAI,YAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,EAChC,IAAI,YAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CACnC,CAAC;IACF,KAAK,CAAC,IAAI,uBAAW,CAAI,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;EACtE;EACO,MAAM;IACT,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE;IACnC,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE;IACnC,MAAM,MAAM,GAAG,EAAoC;IACnD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG;MACjC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC;IACD,OAAO,MAAM;EACjB;AACH;AAED;AACM,MAAO,2BAA+D,SAAQ,mBAAY;EAE5F,YAAa,OAAyB,EAAE,SAAoB;IACxD,KAAK,CAAC,OAAO,CAAC;IACd,IAAI,CAAC,UAAU,GAAG,SAAS;EAC/B;EACO,IAAI,CAAC,IAAc,EAAE,IAAe;IACvC;IACA;IACA;IACA;IACA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM;IACjC,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7C,IAAI,OAAO,GAAG,KAAK;MACnB;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;UACzB;UACA;UACA,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC;YACX,OAAO,GAAG,IAAI;UACjB;UACD,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;QACrB;MACJ;IACJ;EACL;EACO,WAAW,CAAC,IAAc,EAAE,IAAe;IAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM;IACjC,KAAK,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE,UAAU,IAAI,CAAC,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7C,IAAI,OAAO,GAAG,KAAK;MACnB;MACA,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG;QAC1C,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;UACzB;UACA;UACA,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC;YACX,OAAO,GAAG,IAAI;UACjB;UACD,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;QACrB;MACJ;IACJ;EACL;EACO,KAAK;IACR;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,GAAG,GAAG,CAAC;IACX,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM;IACjC,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7C;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;UAAE,EAAE,GAAG;QAAG;MAC1C;IACJ;IACD,OAAO,GAAG;EACd;EACO,EAAE,MAAM,CAAC,QAAQ,IAAC;IACrB;IACA;IACA;IACA;IACA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM;IACjC,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC;MACA;MACA;MACA,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7C;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;UAAE,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAQ;QAAG;MAClE;IACJ;EACL;EACO,MAAM,CAAC,SAAoB;IAC9B,OAAO,IAAI,2BAAiB,CACxB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CACjC;EACL;EACO,OAAO,CAAC,IAAkB;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;MAAE,UAAU,GAAG,OAAO,CAAC,MAAM;IACzD,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,IAAW;IACvE;IACA;IACA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAuB;IAC/C,IAAI,CAAC,aAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MACrC,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC;IAChF;IAED,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1E,MAAM,eAAe,GAAG,eAAe,IAAI,CAAC,GAAG,WAAW,GAClC,eAAe,IAAI,CAAC,GAAG,WAAW,GAAG,UAAU;IAEvE,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;IAE5D,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,UAAU,GAAG;MAClD;MACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;MACjC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7C;MACA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;MACpB,MAAM,IAAI,GAAI,QAAQ,CAAC,MAAwB,CAAC,OAAO;MACvD;MACA,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,GAAG,OAAO,GAAG;QAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACzB,IAAI,GAAG,KAAK,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;UAAE,MAAM,CAAC,GAAG,CAAC,EAAE;QAAG;MAClE;IACJ;IACD,OAAO,IAAI,uBAAa,CAAC,MAAM,CAAC,UAAU,EAAE,aAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACvE;AACH,C;;AC3PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE6I;AAC/G;AAqBd;AAEgB;AACE;AACE;AACK;AAuBjB;AAsBC;AAE+E;AACmD;AACnC;AACnC;AACpC;AACL;AAE0D;AAEhE;AACE;AACA;AACE;AACI;AACA;AACG;AAE5B;AACrB;AACO,MAAM,IAAI,GAAG;EAChB,GAAG,kBAAQ;EACX,GAAG,wBAAS;EACZ,GAAG,mBAAS;EACZ,GAAG,oBAAU;EACb,GAAG,sBAAY;EACf,GAAG,2BAAY;CAClB,C;;ACrHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE2C;AACD;AACO;AACA;AACE;AACW;AACS;AACA;AAEvE,QAAc,CAAC,WAAW,GAAG,WAAW;AACxC,eAAO,CAAC,YAAY,CAAC,GAAG,uBAAuB;AAC/C,wBAAiB,CAAC,YAAY,CAAC,GAAG,iCAAiC;AACnE,wBAAiB,CAAC,YAAY,CAAC,GAAG,iCAAiC;;;AC7BnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AAC3C,IAAI8L,qBAAU,GAAG,aAAe,YAAY;EACxC,SAASA,UAAUA,CAAChM,UAAU,EAAEiM,WAAW,EAAEC,aAAa,EAAEC,MAAM,EAAE;IAChE,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAEC,WAAW,EAAE;MAC5C,IAAIC,WAAW,GAAGF,QAAQ,GAAGF,KAAK,CAACK,UAAU,IAAIF,WAAW,GAAGH,KAAK,CAACM,aAAa;MAClF,IAAIC,WAAW,GAAGL,QAAQ,IAAIF,KAAK,CAACK,UAAU,IAAIF,WAAW,GAAGH,KAAK,CAACM,aAAa;MACnF,IAAIE,aAAa,GAAGN,QAAQ,GAAGF,KAAK,CAACK,UAAU,IAAIF,WAAW,IAAIH,KAAK,CAACM,aAAa;MACrF,IAAIF,WAAW,EAAE;QACb,IAAIK,UAAU,GAAG,CAAC,OAAO,CAAC;QAC1B,IAAIN,WAAW,GAAG,CAAC,EAAE;UACjBM,UAAU,CAAC/I,IAAI,CAAC,OAAO,GAAGwI,QAAQ,CAAC;QACvC;QACA,OAAO;UACHQ,IAAI,EAAE,OAAO;UACbD,UAAU,EAAEA,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;UAChCC,OAAO,EAAE;QACb,CAAC;MACL,CAAC,MACI,IAAIJ,aAAa,EAAE;QACpB,IAAIK,eAAe,GAAGV,WAAW,GAAGH,KAAK,CAACM,aAAa;QACvD,IAAIG,UAAU,GAAG,CACb,aAAa,EACb,OAAO,GAAGP,QAAQ,EAClB,KAAK,GAAGW,eAAe,CAC1B;QACD,OAAO;UACHH,IAAI,EAAE,SAAS;UACfD,UAAU,EAAEA,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;UAChCC,OAAO,EAAEZ,KAAK,CAACc,UAAU,CAACd,KAAK,CAACe,YAAY,EAAEF,eAAe,EAAEX,QAAQ;QAC3E,CAAC;MACL,CAAC,MACI,IAAIK,WAAW,EAAE;QAClB,IAAIS,YAAY,GAAGd,QAAQ,GAAGF,KAAK,CAACK,UAAU;QAC9C,IAAII,UAAU,GAAG,CACb,aAAa,EACb,OAAO,GAAGN,WAAW,EACrB,KAAK,GAAGa,YAAY,CACvB;QACD,OAAO;UACHN,IAAI,EAAE,OAAO;UACbO,EAAE,EAAE,IAAI,GAAGjB,KAAK,CAACkB,IAAI,GAAG,OAAO,GAAGf,WAAW,GAAG,MAAM,GAAGa,YAAY;UACrEP,UAAU,EAAEA,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;UAChCC,OAAO,EAAEZ,KAAK,CAACc,UAAU,CAACd,KAAK,CAACmB,UAAU,EAAEH,YAAY,EAAEb,WAAW;QACzE,CAAC;MACL,CAAC,MACI;QACD,IAAIa,YAAY,GAAGd,QAAQ,GAAGF,KAAK,CAACK,UAAU;QAC9C,IAAIQ,eAAe,GAAGV,WAAW,GAAGH,KAAK,CAACM,aAAa;QACvD,IAAIG,UAAU,GAAG,CACb,MAAM,EACN,KAAK,GAAGO,YAAY,EACpB,KAAK,GAAGH,eAAe,CAC1B;QACD,IAAID,OAAO,GAAGZ,KAAK,CAACD,MAAM,GACpBC,KAAK,CAACc,UAAU,CAACd,KAAK,CAACD,MAAM,CAACqB,kBAAkB,EAAEJ,YAAY,EAAEH,eAAe,CAAC,GAChFb,KAAK,CAACc,UAAU,CAACd,KAAK,CAACqB,SAAS,EAAEL,YAAY,EAAEH,eAAe,CAAC;QACtE,OAAO;UACHH,IAAI,EAAE,MAAM;UACZO,EAAE,EAAE,IAAI,GAAGjB,KAAK,CAACkB,IAAI,GAAG,KAAK,GAAGF,YAAY,GAAG,MAAM,GAAGH,eAAe;UACvEJ,UAAU,EAAEA,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;UAChCC,OAAO,EAAEA;QACb,CAAC;MACL;IACJ,CAAC;IACD,IAAI,CAACE,UAAU,GAAG,UAAU7I,KAAK,EAAEiI,QAAQ,EAAEC,WAAW,EAAE;MACtD,IAAImB,MAAM,GAAGrJ,KAAK,CAACsJ,WAAW,CAACpB,WAAW,CAAC;MAC3C,IAAImB,MAAM,KAAK,IAAI,EAAE;QACjB,OAAO,EAAE;MACb;MACA,IAAIE,YAAY,GAAGxB,KAAK,CAACyB,eAAe,CAACxJ,KAAK,EAAEkI,WAAW,CAAC;MAC5D,QAAQqB,YAAY;QAChB,KAAKE,IAAI,CAACC,SAAS;UAAE;YACjB,OAAO3B,KAAK,CAAC4B,WAAW,CAACN,MAAM,CAACO,GAAG,CAAC3B,QAAQ,CAAC,CAAC;UAClD;QACA;UAAS;YACL,OAAOoB,MAAM,CAACO,GAAG,CAAC3B,QAAQ,CAAC;UAC/B;MACJ;IACJ,CAAC;IACD,IAAI,CAACmB,SAAS,GAAGrQ,WAAK,CAAC8Q,IAAI,CAAClO,UAAU,CAAC;IACvC,IAAI,CAACuN,UAAU,GAAGnQ,WAAK,CAAC8Q,IAAI,CAACjC,WAAW,CAAC;IACzC,IAAI,CAACkB,YAAY,GAAG/P,WAAK,CAAC8Q,IAAI,CAAChC,aAAa,CAAC;IAC7C,IAAI,CAACC,MAAM,GAAGA,MAAM,GACd;MACEgC,OAAO,EAAEhC,MAAM,CAACgC,OAAO;MACvBX,kBAAkB,EAAEpQ,WAAK,CAAC8Q,IAAI,CAAC/B,MAAM,CAACiC,aAAa,CAAC;MACpDC,MAAM,EAAElC,MAAM,CAACkC,MAAM;MACrBf,IAAI,EAAEnB,MAAM,CAACmB;IACjB,CAAC,GACC1F,SAAS;EACnB;EACAC,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,MAAM,EAAE;IAChDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACV,UAAU,CAAC7J,MAAM,GAAG,IAAI,CAACyJ,YAAY,CAACmB,OAAO;IAC7D,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,SAAS,EAAE;IACnDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACV,UAAU,CAACe,OAAO,GAAG,IAAI,CAACnB,YAAY,CAACzJ,MAAM;IAC7D,CAAC;IACD6K,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,YAAY,EAAE;IACtDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACQ,IAAI,GAAG,IAAI,CAACC,QAAQ;IACpC,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,eAAe,EAAE;IACzDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACU,OAAO,GAAG,IAAI,CAACC,WAAW;IAC1C,CAAC;IACDL,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,UAAU,EAAE;IACpDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACR,SAAS,CAAC/J,MAAM;IAChC,CAAC;IACD6K,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,aAAa,EAAE;IACvDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACR,SAAS,CAACa,OAAO;IACjC,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,MAAM,EAAE;IAChDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC9B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACmB,IAAI;IAC1C,CAAC;IACDiB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,SAAS,EAAE;IACnDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC9B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACgC,OAAO;IAC7C,CAAC;IACDI,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,QAAQ,EAAE;IAClDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC9B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACkC,MAAM;IAC5C,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,OAAO,EAAE;IACjDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACR,SAAS;IACzB,CAAC;IACDc,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,OAAO,EAAE;IACjDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACV,UAAU;IAC1B,CAAC;IACDgB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3G,MAAM,CAAC4C,cAAc,CAACuB,UAAU,CAACtN,SAAS,EAAE,aAAa,EAAE;IACvDuP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACd,YAAY;IAC5B,CAAC;IACDoB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;EACIxC,UAAU,CAACtN,SAAS,CAACmQ,SAAS,GAAG,YAAY;IACzC,OAAO;MACHC,IAAI,EAAE,IAAI,CAACrB,SAAS,CAACoB,SAAS,CAAC,CAAC;MAChCE,KAAK,EAAE,IAAI,CAACxB,UAAU,CAACsB,SAAS,CAAC,CAAC;MAClCF,OAAO,EAAE,IAAI,CAACxB,YAAY,CAAC0B,SAAS,CAAC;IACzC,CAAC;EACL,CAAC;EACD;AACJ;AACA;EACI7C,UAAU,CAACtN,SAAS,CAACmP,eAAe,GAAG,UAAUxJ,KAAK,EAAEkI,WAAW,EAAE;IACjE,OAAOlI,KAAK,CAAC2K,MAAM,CAACC,MAAM,CAAC1C,WAAW,CAAC,CAACO,IAAI,CAACoC,MAAM;EACvD,CAAC;EACDlD,UAAU,CAACtN,SAAS,CAACsP,WAAW,GAAG,UAAUmB,KAAK,EAAE;IAChD,OAAO,IAAIC,IAAI,CAACD,KAAK,GAAG,GAAG,CAAC;EAChC,CAAC;EACD,OAAOnD,UAAU;AACrB,CAAC,CAAC,CAAE;;;ACpNJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIqD,QAAQ,GAAI,SAAI,IAAI,SAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGxH,MAAM,CAACyH,MAAM,IAAI,UAASzI,CAAC,EAAE;IACpC,KAAK,IAAI5B,CAAC,EAAEnE,CAAC,GAAG,CAAC,EAAEmH,CAAC,GAAGsH,SAAS,CAAC7L,MAAM,EAAE5C,CAAC,GAAGmH,CAAC,EAAEnH,CAAC,EAAE,EAAE;MACjDmE,CAAC,GAAGsK,SAAS,CAACzO,CAAC,CAAC;MAChB,KAAK,IAAI0O,CAAC,IAAIvK,CAAC,EAAE,IAAI4C,MAAM,CAACnJ,SAAS,CAAC+Q,cAAc,CAAC/G,IAAI,CAACzD,CAAC,EAAEuK,CAAC,CAAC,EAC3D3I,CAAC,CAAC2I,CAAC,CAAC,GAAGvK,CAAC,CAACuK,CAAC,CAAC;IACnB;IACA,OAAO3I,CAAC;EACZ,CAAC;EACD,OAAOwI,QAAQ,CAACpE,KAAK,CAAC,IAAI,EAAEsE,SAAS,CAAC;AAC1C,CAAC;AACD;AACgD;AACN;AAC1C;AACA,IAAIG,oBAAoB;AACxB,CAAC,UAAUA,oBAAoB,EAAE;EAC7B;EACA;EACA;EACAA,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,0BAA0B;EACpE;EACA;EACA;EACAA,oBAAoB,CAAC,qBAAqB,CAAC,GAAG,6BAA6B;EAC3E;EACA;EACAA,oBAAoB,CAAC,kBAAkB,CAAC,GAAG,0BAA0B;AACzE,CAAC,EAAEA,oBAAoB,KAAKA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAS,GAAG,aAAe,YAAY;EACvC,SAASA,SAASA,CAAA,EAAG,CACrB;EACA;AACJ;AACA;AACA;EACIA,SAAS,CAACC,WAAW,GAAG,CAAC;EACzBD,SAAS,CAACE,YAAY,GAAG,kBAAkB;EAC3C;EACAF,SAAS,CAACG,MAAM,GAAG,IAAIC,WAAW,CAAC,CAAC;EACpCJ,SAAS,CAACK,yBAAyB,GAAG,KAAK;EAC3C;AACJ;AACA;AACA;AACA;EACIL,SAAS,CAACM,iBAAiB,GAAG,YAAY;IACtC,IAAI,CAACN,SAAS,CAACK,yBAAyB,EAAE;MACtC;MACAE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,SAAS,CAACS,cAAc,CAAC;MAC5DT,SAAS,CAACK,yBAAyB,GAAG,IAAI;IAC9C;IACAL,SAAS,CAACU,WAAW,CAACX,oBAAoB,CAACY,eAAe,EAAE;MACxDC,UAAU,EAAEZ,SAAS,CAACC;IAC1B,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACID,SAAS,CAACa,cAAc,GAAG,UAAUC,MAAM,EAAE;IACzC,IAAIA,MAAM,KAAK7I,SAAS,EAAE;MACtB;MACA;MACA;MACA6I,MAAM,GAAGC,QAAQ,CAACC,IAAI,CAACC,YAAY;IACvC;IACA,IAAIH,MAAM,KAAKd,SAAS,CAACkB,eAAe,EAAE;MACtC;MACA;IACJ;IACAlB,SAAS,CAACkB,eAAe,GAAGJ,MAAM;IAClCd,SAAS,CAACU,WAAW,CAACX,oBAAoB,CAACoB,gBAAgB,EAAE;MAAEL,MAAM,EAAEA;IAAO,CAAC,CAAC;EACpF,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACId,SAAS,CAACoB,iBAAiB,GAAG,UAAU/P,KAAK,EAAE;IAC3C,IAAIgQ,QAAQ;IACZ,IAAIhQ,KAAK,YAAYgL,qBAAU,EAAE;MAC7BgF,QAAQ,GAAG,WAAW;MACtBhQ,KAAK,GAAGA,KAAK,CAAC6N,SAAS,CAAC,CAAC;IAC7B,CAAC,MACI,IAAIoC,YAAY,CAACjQ,KAAK,CAAC,EAAE;MAC1B;MACA;MACAgQ,QAAQ,GAAG,OAAO;MAClBhQ,KAAK,GAAG,IAAI5C,UAAU,CAAC4C,KAAK,CAACjD,MAAM,CAAC;IACxC,CAAC,MACI,IAAIiD,KAAK,YAAY4J,WAAW,EAAE;MACnCoG,QAAQ,GAAG,OAAO;MAClBhQ,KAAK,GAAG,IAAI5C,UAAU,CAAC4C,KAAK,CAAC;IACjC,CAAC,MACI;MACDgQ,QAAQ,GAAG,MAAM;IACrB;IACArB,SAAS,CAACU,WAAW,CAACX,oBAAoB,CAACwB,mBAAmB,EAAE;MAC5DlQ,KAAK,EAAEA,KAAK;MACZgQ,QAAQ,EAAEA;IACd,CAAC,CAAC;EACN,CAAC;EACD;EACArB,SAAS,CAACS,cAAc,GAAG,UAAUe,KAAK,EAAE;IACxC,IAAIrE,IAAI,GAAGqE,KAAK,CAACrC,IAAI,CAAC,MAAM,CAAC;IAC7B,QAAQhC,IAAI;MACR,KAAK6C,SAAS,CAACE,YAAY;QACvBF,SAAS,CAACyB,eAAe,CAACD,KAAK,CAACrC,IAAI,CAAC;QACrC;IACR;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIa,SAAS,CAACyB,eAAe,GAAG,UAAUtC,IAAI,EAAE;IACxC,IAAIuC,IAAI,GAAGvC,IAAI,CAAC,MAAM,CAAC;IACvB,IAAIuC,IAAI,IAAI,IAAI,EAAE;MACdC,OAAO,CAACC,KAAK,CAAC,4DAA4D,CAAC;MAC3EF,IAAI,GAAG,CAAC,CAAC;IACb;IACA;IACA,IAAIG,aAAa,GAAG1C,IAAI,CAAC,KAAK,CAAC,IAAIA,IAAI,CAAC,KAAK,CAAC,CAACpL,MAAM,GAAG,CAAC,GACnDiM,SAAS,CAAC8B,qBAAqB,CAAC3C,IAAI,CAAC,KAAK,CAAC,CAAC,GAC5C,CAAC,CAAC;IACRuC,IAAI,GAAGhC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEgC,IAAI,CAAC,EAAEG,aAAa,CAAC;IAClD,IAAIE,QAAQ,GAAGnH,OAAO,CAACuE,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI6C,KAAK,GAAG7C,IAAI,CAAC,OAAO,CAAC;IACzB,IAAI6C,KAAK,EAAE;MACPC,YAAY,CAACD,KAAK,CAAC;IACvB;IACA;IACA,IAAIE,SAAS,GAAG;MAAEH,QAAQ,EAAEA,QAAQ;MAAEL,IAAI,EAAEA,IAAI;MAAEM,KAAK,EAAEA;IAAM,CAAC;IAChE,IAAIR,KAAK,GAAG,IAAIW,WAAW,CAACnC,SAAS,CAACE,YAAY,EAAE;MAChDkC,MAAM,EAAEF;IACZ,CAAC,CAAC;IACFlC,SAAS,CAACG,MAAM,CAACkC,aAAa,CAACb,KAAK,CAAC;EACzC,CAAC;EACDxB,SAAS,CAAC8B,qBAAqB,GAAG,UAAUQ,aAAa,EAAE;IACvD,IAAIC,kBAAkB,GAAGD,aAAa,CAACE,GAAG,CAAC,UAAUC,EAAE,EAAE;MACrD,IAAIC,GAAG,GAAGD,EAAE,CAACC,GAAG;QAAErR,KAAK,GAAGoR,EAAE,CAACpR,KAAK;MAClC,OAAO,CAACqR,GAAG,EAAE1C,SAAS,CAAC2C,YAAY,CAACtR,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC;IACF,OAAO6G,MAAM,CAAC0K,WAAW,CAACL,kBAAkB,CAAC;EACjD,CAAC;EACDvC,SAAS,CAAC2C,YAAY,GAAG,UAAUE,EAAE,EAAE;IACnC,IAAIJ,EAAE,GAAGI,EAAE,CAAC1D,IAAI;MAAEA,IAAI,GAAGsD,EAAE,CAACtD,IAAI;MAAEC,KAAK,GAAGqD,EAAE,CAACrD,KAAK;MAAEJ,OAAO,GAAGyD,EAAE,CAACzD,OAAO;MAAExC,MAAM,GAAGiG,EAAE,CAACjG,MAAM;IAC5F,OAAO,IAAIH,qBAAU,CAAC8C,IAAI,EAAEC,KAAK,EAAEJ,OAAO,EAAExC,MAAM,CAAC;EACvD,CAAC;EACD;EACAwD,SAAS,CAACU,WAAW,GAAG,UAAUvD,IAAI,EAAEgC,IAAI,EAAE;IAC1CoB,MAAM,CAACuC,MAAM,CAACC,WAAW,CAACrD,QAAQ,CAAC;MAAEsD,kBAAkB,EAAE,IAAI;MAAE7F,IAAI,EAAEA;IAAK,CAAC,EAAEgC,IAAI,CAAC,EAAE,GAAG,CAAC;EAC5F,CAAC;EACD,OAAOa,SAAS;AACpB,CAAC,CAAC,CAAE;AACiB;AACrB,IAAIiC,YAAY,GAAG,SAAAA,CAAUD,KAAK,EAAE;EAChC,IAAIiB,KAAK,GAAGlC,QAAQ,CAACmC,aAAa,CAAC,OAAO,CAAC;EAC3CnC,QAAQ,CAACoC,IAAI,CAACC,WAAW,CAACH,KAAK,CAAC;EAChCA,KAAK,CAACI,SAAS,GAAG,wCAAwC,GAAGrB,KAAK,CAACsB,YAAY,GAAG,+BAA+B,GAAGtB,KAAK,CAACuB,eAAe,GAAG,yCAAyC,GAAGvB,KAAK,CAACwB,wBAAwB,GAAG,yBAAyB,GAAGxB,KAAK,CAACyB,SAAS,GAAG,mBAAmB,GAAGzB,KAAK,CAAC0B,IAAI,GAAG,sHAAsH;AACpa,CAAC;AACD;AACA,SAASpC,YAAYA,CAACjQ,KAAK,EAAE;EACzB,IAAIsS,aAAa,GAAG,KAAK;EACzB,IAAI;IACAA,aAAa,GACTtS,KAAK,YAAYuS,aAAa,IAAIvS,KAAK,YAAYwS,cAAc;EACzE,CAAC,CACD,OAAOC,CAAC,EAAE;IACN;IACA;EAAA;EAEJ,OAAQzS,KAAK,YAAY0S,SAAS,IAC9B1S,KAAK,YAAY5C,UAAU,IAC3B4C,KAAK,YAAY2S,iBAAiB,IAClC3S,KAAK,YAAY4S,UAAU,IAC3B5S,KAAK,YAAY7C,WAAW,IAC5B6C,KAAK,YAAYpD,UAAU,IAC3BoD,KAAK,YAAY6S,WAAW,IAC5B7S,KAAK,YAAYlD,YAAY,IAC7BkD,KAAK,YAAY/C,YAAY,IAC7BqV,aAAa;AACrB,C;;ACzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIQ,SAAS,GAAI,SAAI,IAAI,SAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAU9M,CAAC,EAAE5B,CAAC,EAAE;IAChC0O,aAAa,GAAGlM,MAAM,CAACmM,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYjL,KAAK,IAAI,UAAU/B,CAAC,EAAE5B,CAAC,EAAE;MAAE4B,CAAC,CAACgN,SAAS,GAAG5O,CAAC;IAAE,CAAE,IAC5E,UAAU4B,CAAC,EAAE5B,CAAC,EAAE;MAAE,KAAK,IAAImK,CAAC,IAAInK,CAAC,EAAE,IAAIA,CAAC,CAACoK,cAAc,CAACD,CAAC,CAAC,EAAEvI,CAAC,CAACuI,CAAC,CAAC,GAAGnK,CAAC,CAACmK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOuE,aAAa,CAAC9M,CAAC,EAAE5B,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAU4B,CAAC,EAAE5B,CAAC,EAAE;IACnB0O,aAAa,CAAC9M,CAAC,EAAE5B,CAAC,CAAC;IACnB,SAAS6O,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGlN,CAAC;IAAE;IACtCA,CAAC,CAACvI,SAAS,GAAG2G,CAAC,KAAK,IAAI,GAAGwC,MAAM,CAACrJ,MAAM,CAAC6G,CAAC,CAAC,IAAI6O,EAAE,CAACxV,SAAS,GAAG2G,CAAC,CAAC3G,SAAS,EAAE,IAAIwV,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACuD;AACjC;AACc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,qCAAsB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1DP,SAAS,CAACM,sBAAsB,EAAEC,MAAM,CAAC;EACzC,SAASD,sBAAsBA,CAAA,EAAG;IAC9B,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACpJ,KAAK,CAAC,IAAI,EAAEsE,SAAS,CAAC,IAAI,IAAI;EACnE;EACA6E,sBAAsB,CAAC1V,SAAS,CAAC4V,iBAAiB,GAAG,YAAY;IAC7D;IACA;IACA3E,mBAAS,CAACa,cAAc,CAAC,CAAC;EAC9B,CAAC;EACD4D,sBAAsB,CAAC1V,SAAS,CAAC6V,kBAAkB,GAAG,YAAY;IAC9D;IACA5E,mBAAS,CAACa,cAAc,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO4D,sBAAsB;AACjC,CAAC,CAACI,eAAK,CAACC,aAAa,CAAE;AACW;AAClC;AACA;AACA;AACA;AACA;AACO,SAASC,uBAAuBA,CAACC,gBAAgB,EAAE;EACtD,IAAIC,gBAAgB,GAAG,aAAe,UAAUP,MAAM,EAAE;IACpDP,SAAS,CAACc,gBAAgB,EAAEP,MAAM,CAAC;IACnC,SAASO,gBAAgBA,CAACC,KAAK,EAAE;MAC7B,IAAIzI,KAAK,GAAGiI,MAAM,CAAC3L,IAAI,CAAC,IAAI,EAAEmM,KAAK,CAAC,IAAI,IAAI;MAC5CzI,KAAK,CAACkI,iBAAiB,GAAG,YAAY;QAClC;QACA;QACA3E,mBAAS,CAACG,MAAM,CAACK,gBAAgB,CAACR,mBAAS,CAACE,YAAY,EAAEzD,KAAK,CAAC0I,aAAa,CAAC;QAC9EnF,mBAAS,CAACM,iBAAiB,CAAC,CAAC;MACjC,CAAC;MACD7D,KAAK,CAACmI,kBAAkB,GAAG,YAAY;QACnC;QACA;QACA;QACA;QACA,IAAInI,KAAK,CAAC2I,KAAK,CAACC,cAAc,IAAI,IAAI,EAAE;UACpCrF,mBAAS,CAACa,cAAc,CAAC,CAAC;QAC9B;MACJ,CAAC;MACDpE,KAAK,CAAC6I,oBAAoB,GAAG,YAAY;QACrCtF,mBAAS,CAACG,MAAM,CAACoF,mBAAmB,CAACvF,mBAAS,CAACE,YAAY,EAAEzD,KAAK,CAAC0I,aAAa,CAAC;MACrF,CAAC;MACD;AACZ;AACA;AACA;AACA;MACY1I,KAAK,CAAC0I,aAAa,GAAG,UAAU3D,KAAK,EAAE;QACnC;QACA,IAAIgE,WAAW,GAAGhE,KAAK;QACvB/E,KAAK,CAACgJ,QAAQ,CAAC;UAAEC,UAAU,EAAEF,WAAW,CAACpD;QAAO,CAAC,CAAC;MACtD,CAAC;MACD3F,KAAK,CAACkJ,MAAM,GAAG,YAAY;QACvB;QACA,IAAIlJ,KAAK,CAAC2I,KAAK,CAACC,cAAc,IAAI,IAAI,EAAE;UACpC,OAAQR,eAAK,CAAC3B,aAAa,CAAC,KAAK,EAAE,IAAI,EACnC2B,eAAK,CAAC3B,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,iBAAiB,CAAC,EAClD2B,eAAK,CAAC3B,aAAa,CAAC,MAAM,EAAE,IAAI,EAAEzG,KAAK,CAAC2I,KAAK,CAACC,cAAc,CAACO,OAAO,CAAC,CAAC;QAC9E;QACA;QACA,IAAInJ,KAAK,CAAC2I,KAAK,CAACM,UAAU,IAAI,IAAI,EAAE;UAChC,OAAO,IAAI;QACf;QACA,OAAQb,eAAK,CAAC3B,aAAa,CAAC8B,gBAAgB,EAAE;UAAEa,KAAK,EAAEtF,MAAM,CAACuF,UAAU;UAAE/D,QAAQ,EAAEtF,KAAK,CAAC2I,KAAK,CAACM,UAAU,CAAC3D,QAAQ;UAAEL,IAAI,EAAEjF,KAAK,CAAC2I,KAAK,CAACM,UAAU,CAAChE,IAAI;UAAEM,KAAK,EAAEvF,KAAK,CAAC2I,KAAK,CAACM,UAAU,CAAC1D;QAAM,CAAC,CAAC;MAClM,CAAC;MACDvF,KAAK,CAAC2I,KAAK,GAAG;QACVM,UAAU,EAAEzN,SAAS;QACrBoN,cAAc,EAAEpN;MACpB,CAAC;MACD,OAAOwE,KAAK;IAChB;IACA;AACR;AACA;AACA;AACA;IACQwI,gBAAgB,CAACc,wBAAwB,GAAG,UAAUnE,KAAK,EAAE;MACzD,OAAO;QAAEyD,cAAc,EAAEzD;MAAM,CAAC;IACpC,CAAC;IACD,OAAOqD,gBAAgB;EAC3B,CAAC,CAACJ,eAAK,CAACC,aAAa,CAAE;EACvB,OAAOkB,qCAAoB,CAACf,gBAAgB,EAAED,gBAAgB,CAAC;AACnE,C;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmF;AACzC;;;;;;;;ACjB7B;;AAEb,IAAIiB,OAAO,GAAG3Y,mBAAO,CAAC,CAAU,CAAC;;AAEjC;AACA;AACA;AACA;AACA,IAAI4Y,aAAa,GAAG;EAClBC,iBAAiB,EAAE,IAAI;EACvBC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,IAAI;EACjBC,eAAe,EAAE,IAAI;EACrBT,wBAAwB,EAAE,IAAI;EAC9BU,wBAAwB,EAAE,IAAI;EAC9BC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,IAAI;EACfxJ,IAAI,EAAE;AACR,CAAC;AACD,IAAIyJ,aAAa,GAAG;EAClBC,IAAI,EAAE,IAAI;EACV9S,MAAM,EAAE,IAAI;EACZhF,SAAS,EAAE,IAAI;EACf+X,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,IAAI;EACZnH,SAAS,EAAE,IAAI;EACfoH,KAAK,EAAE;AACT,CAAC;AACD,IAAIC,mBAAmB,GAAG;EACxB,UAAU,EAAE,IAAI;EAChBtB,MAAM,EAAE,IAAI;EACZW,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,IAAI;EACjBI,SAAS,EAAE;AACb,CAAC;AACD,IAAIO,YAAY,GAAG;EACjB,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,IAAI;EACbb,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,IAAI;EACjBI,SAAS,EAAE,IAAI;EACfxJ,IAAI,EAAE;AACR,CAAC;AACD,IAAIiK,YAAY,GAAG,CAAC,CAAC;AACrBA,YAAY,CAACnB,OAAO,CAACoB,UAAU,CAAC,GAAGJ,mBAAmB;AACtDG,YAAY,CAACnB,OAAO,CAACqB,IAAI,CAAC,GAAGJ,YAAY;AAEzC,SAASK,UAAUA,CAACC,SAAS,EAAE;EAC7B;EACA,IAAIvB,OAAO,CAACwB,MAAM,CAACD,SAAS,CAAC,EAAE;IAC7B,OAAON,YAAY;EACrB,CAAC,CAAC;;EAGF,OAAOE,YAAY,CAACI,SAAS,CAAC,UAAU,CAAC,CAAC,IAAItB,aAAa;AAC7D;AAEA,IAAIpL,cAAc,GAAG5C,MAAM,CAAC4C,cAAc;AAC1C,IAAI4M,mBAAmB,GAAGxP,MAAM,CAACwP,mBAAmB;AACpD,IAAIC,qBAAqB,GAAGzP,MAAM,CAACyP,qBAAqB;AACxD,IAAIC,wBAAwB,GAAG1P,MAAM,CAAC0P,wBAAwB;AAC9D,IAAIC,cAAc,GAAG3P,MAAM,CAAC2P,cAAc;AAC1C,IAAIC,eAAe,GAAG5P,MAAM,CAACnJ,SAAS;AACtC,SAASiX,oBAAoBA,CAAC+B,eAAe,EAAEC,eAAe,EAAEC,SAAS,EAAE;EACzE,IAAI,OAAOD,eAAe,KAAK,QAAQ,EAAE;IACvC;IACA,IAAIF,eAAe,EAAE;MACnB,IAAII,kBAAkB,GAAGL,cAAc,CAACG,eAAe,CAAC;MAExD,IAAIE,kBAAkB,IAAIA,kBAAkB,KAAKJ,eAAe,EAAE;QAChE9B,oBAAoB,CAAC+B,eAAe,EAAEG,kBAAkB,EAAED,SAAS,CAAC;MACtE;IACF;IAEA,IAAIE,IAAI,GAAGT,mBAAmB,CAACM,eAAe,CAAC;IAE/C,IAAIL,qBAAqB,EAAE;MACzBQ,IAAI,GAAGA,IAAI,CAACC,MAAM,CAACT,qBAAqB,CAACK,eAAe,CAAC,CAAC;IAC5D;IAEA,IAAIK,aAAa,GAAGd,UAAU,CAACQ,eAAe,CAAC;IAC/C,IAAIO,aAAa,GAAGf,UAAU,CAACS,eAAe,CAAC;IAE/C,KAAK,IAAI7W,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgX,IAAI,CAACpU,MAAM,EAAE,EAAE5C,CAAC,EAAE;MACpC,IAAIuR,GAAG,GAAGyF,IAAI,CAAChX,CAAC,CAAC;MAEjB,IAAI,CAACyV,aAAa,CAAClE,GAAG,CAAC,IAAI,EAAEuF,SAAS,IAAIA,SAAS,CAACvF,GAAG,CAAC,CAAC,IAAI,EAAE4F,aAAa,IAAIA,aAAa,CAAC5F,GAAG,CAAC,CAAC,IAAI,EAAE2F,aAAa,IAAIA,aAAa,CAAC3F,GAAG,CAAC,CAAC,EAAE;QAC7I,IAAI6F,UAAU,GAAGX,wBAAwB,CAACI,eAAe,EAAEtF,GAAG,CAAC;QAE/D,IAAI;UACF;UACA5H,cAAc,CAACiN,eAAe,EAAErF,GAAG,EAAE6F,UAAU,CAAC;QAClD,CAAC,CAAC,OAAOzE,CAAC,EAAE,CAAC;MACf;IACF;EACF;EAEA,OAAOiE,eAAe;AACxB;AAEA3a,MAAM,CAACC,OAAO,GAAG2Y,oBAAoB,C;;;;;;;;ACtGxB;;AAEb,IAAI7Y,IAAqC,EAAE;EACzCC,MAAM,CAACC,OAAO,GAAGC,mBAAO,CAAC,CAAkC,CAAC;AAC9D,CAAC,MAAM,E;;;;;;;ACJP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAAA,IAAIoI,CAAC,GAAC,UAAU,KAAG,OAAO8S,MAAM,IAAEA,MAAM,CAACC,GAAG;EAACpR,CAAC,GAAC3B,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,eAAe,CAAC,GAAC,KAAK;EAACnR,CAAC,GAAC5B,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC,GAAC,KAAK;EAAC3E,CAAC,GAACpO,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACC,CAAC,GAAChT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAC,KAAK;EAACE,CAAC,GAACjT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACG,CAAC,GAAClT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACI,CAAC,GAACnT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,eAAe,CAAC,GAAC,KAAK;EAACK,CAAC,GAACpT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,kBAAkB,CAAC,GAAC,KAAK;EAACM,CAAC,GAACrT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,uBAAuB,CAAC,GAAC,KAAK;EAACnQ,CAAC,GAAC5C,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAC,KAAK;EAAC5I,CAAC,GAACnK,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACO,CAAC,GAACtT,CAAC,GACrf8S,MAAM,CAACC,GAAG,CAAC,qBAAqB,CAAC,GAAC,KAAK;EAACQ,CAAC,GAACvT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC,GAAC,KAAK;EAACvR,CAAC,GAACxB,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC,GAAC,KAAK;EAACS,CAAC,GAACxT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,aAAa,CAAC,GAAC,KAAK;EAACU,CAAC,GAACzT,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAC,KAAK;EAACW,CAAC,GAAC1T,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,iBAAiB,CAAC,GAAC,KAAK;EAACY,CAAC,GAAC3T,CAAC,GAAC8S,MAAM,CAACC,GAAG,CAAC,aAAa,CAAC,GAAC,KAAK;AACvQ,SAASa,CAACA,CAAC7T,CAAC,EAAC;EAAC,IAAG,QAAQ,KAAG,OAAOA,CAAC,IAAE,IAAI,KAAGA,CAAC,EAAC;IAAC,IAAI8C,CAAC,GAAC9C,CAAC,CAAC8T,QAAQ;IAAC,QAAOhR,CAAC;MAAE,KAAKlB,CAAC;QAAC,QAAO5B,CAAC,GAACA,CAAC,CAAC0H,IAAI,EAAC1H,CAAC;UAAE,KAAKqT,CAAC;UAAC,KAAKC,CAAC;UAAC,KAAKjF,CAAC;UAAC,KAAK6E,CAAC;UAAC,KAAKD,CAAC;UAAC,KAAK7I,CAAC;YAAC,OAAOpK,CAAC;UAAC;YAAQ,QAAOA,CAAC,GAACA,CAAC,IAAEA,CAAC,CAAC8T,QAAQ,EAAC9T,CAAC;cAAE,KAAKoT,CAAC;cAAC,KAAKvQ,CAAC;cAAC,KAAKpB,CAAC;cAAC,KAAK+R,CAAC;cAAC,KAAKL,CAAC;gBAAC,OAAOnT,CAAC;cAAC;gBAAQ,OAAO8C,CAAC;YAAA;QAAC;MAAC,KAAKjB,CAAC;QAAC,OAAOiB,CAAC;IAAA;EAAC;AAAC;AAAC,SAASiR,CAACA,CAAC/T,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGsT,CAAC;AAAA;AAAC1b,OAAO,CAACoc,SAAS,GAACX,CAAC;AAACzb,OAAO,CAACqc,cAAc,GAACX,CAAC;AAAC1b,OAAO,CAACsc,eAAe,GAACd,CAAC;AAACxb,OAAO,CAACuc,eAAe,GAAChB,CAAC;AAACvb,OAAO,CAACwc,OAAO,GAACxS,CAAC;AAAChK,OAAO,CAACga,UAAU,GAAC/O,CAAC;AAACjL,OAAO,CAACyc,QAAQ,GAAChG,CAAC;AAACzW,OAAO,CAAC0c,IAAI,GAAC7S,CAAC;AAAC7J,OAAO,CAACia,IAAI,GAAC2B,CAAC;AAAC5b,OAAO,CAAC2c,MAAM,GAAC1S,CAAC;AACjfjK,OAAO,CAAC4c,QAAQ,GAACtB,CAAC;AAACtb,OAAO,CAAC6c,UAAU,GAACxB,CAAC;AAACrb,OAAO,CAAC8c,QAAQ,GAACtK,CAAC;AAACxS,OAAO,CAAC+c,WAAW,GAAC,UAAS3U,CAAC,EAAC;EAAC,OAAO+T,CAAC,CAAC/T,CAAC,CAAC,IAAE6T,CAAC,CAAC7T,CAAC,CAAC,KAAGqT,CAAC;AAAA,CAAC;AAACzb,OAAO,CAACgd,gBAAgB,GAACb,CAAC;AAACnc,OAAO,CAACid,iBAAiB,GAAC,UAAS7U,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGoT,CAAC;AAAA,CAAC;AAACxb,OAAO,CAACkd,iBAAiB,GAAC,UAAS9U,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGmT,CAAC;AAAA,CAAC;AAACvb,OAAO,CAACmd,SAAS,GAAC,UAAS/U,CAAC,EAAC;EAAC,OAAM,QAAQ,KAAG,OAAOA,CAAC,IAAE,IAAI,KAAGA,CAAC,IAAEA,CAAC,CAAC8T,QAAQ,KAAGlS,CAAC;AAAA,CAAC;AAAChK,OAAO,CAACod,YAAY,GAAC,UAAShV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAG6C,CAAC;AAAA,CAAC;AAACjL,OAAO,CAACqd,UAAU,GAAC,UAASjV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGqO,CAAC;AAAA,CAAC;AAACzW,OAAO,CAACsd,MAAM,GAAC,UAASlV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGyB,CAAC;AAAA,CAAC;AAC3d7J,OAAO,CAACoa,MAAM,GAAC,UAAShS,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGwT,CAAC;AAAA,CAAC;AAAC5b,OAAO,CAACud,QAAQ,GAAC,UAASnV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAG6B,CAAC;AAAA,CAAC;AAACjK,OAAO,CAACwd,UAAU,GAAC,UAASpV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGkT,CAAC;AAAA,CAAC;AAACtb,OAAO,CAACyd,YAAY,GAAC,UAASrV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGiT,CAAC;AAAA,CAAC;AAACrb,OAAO,CAAC0d,UAAU,GAAC,UAAStV,CAAC,EAAC;EAAC,OAAO6T,CAAC,CAAC7T,CAAC,CAAC,KAAGoK,CAAC;AAAA,CAAC;AAC3OxS,OAAO,CAAC2d,kBAAkB,GAAC,UAASvV,CAAC,EAAC;EAAC,OAAM,QAAQ,KAAG,OAAOA,CAAC,IAAE,UAAU,KAAG,OAAOA,CAAC,IAAEA,CAAC,KAAGqO,CAAC,IAAErO,CAAC,KAAGsT,CAAC,IAAEtT,CAAC,KAAGkT,CAAC,IAAElT,CAAC,KAAGiT,CAAC,IAAEjT,CAAC,KAAGoK,CAAC,IAAEpK,CAAC,KAAGuT,CAAC,IAAE,QAAQ,KAAG,OAAOvT,CAAC,IAAE,IAAI,KAAGA,CAAC,KAAGA,CAAC,CAAC8T,QAAQ,KAAGrS,CAAC,IAAEzB,CAAC,CAAC8T,QAAQ,KAAGN,CAAC,IAAExT,CAAC,CAAC8T,QAAQ,KAAGX,CAAC,IAAEnT,CAAC,CAAC8T,QAAQ,KAAGV,CAAC,IAAEpT,CAAC,CAAC8T,QAAQ,KAAGjR,CAAC,IAAE7C,CAAC,CAAC8T,QAAQ,KAAGJ,CAAC,IAAE1T,CAAC,CAAC8T,QAAQ,KAAGH,CAAC,IAAE3T,CAAC,CAAC8T,QAAQ,KAAGF,CAAC,IAAE5T,CAAC,CAAC8T,QAAQ,KAAGL,CAAC,CAAC;AAAA,CAAC;AAAC7b,OAAO,CAAC4d,MAAM,GAAC3B,CAAC,C;;;;;;;ACdpU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAAA,IAAIR,CAAC,GAACxb,mBAAO,CAAC,CAAe,CAAC;EAACgL,CAAC,GAAC,UAAU,KAAG,OAAOkQ,MAAM,IAAEA,MAAM,CAACC,GAAG;EAAC5I,CAAC,GAACvH,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,eAAe,CAAC,GAAC,KAAK;EAACO,CAAC,GAAC1Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC,GAAC,KAAK;EAACQ,CAAC,GAAC3Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACvR,CAAC,GAACoB,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAC,KAAK;EAAClQ,CAAC,GAACD,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACS,CAAC,GAAC5Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACU,CAAC,GAAC7Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,eAAe,CAAC,GAAC,KAAK;EAACW,CAAC,GAAC9Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAC,KAAK;EAACY,CAAC,GAAC/Q,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAAC,KAAK;EAACa,CAAC,GAAChR,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC,GAAC,KAAK;EAACe,CAAC,GAAClR,CAAC,GAACkQ,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC,GACrf,KAAK;EAACyC,CAAC,GAAC,UAAU,KAAG,OAAO1C,MAAM,IAAEA,MAAM,CAAC2C,QAAQ;AAAC,SAASC,CAACA,CAAC3V,CAAC,EAAC;EAAC,KAAI,IAAIC,CAAC,GAAC,wDAAwD,GAACD,CAAC,EAAC4B,CAAC,GAAC,CAAC,EAACA,CAAC,GAACuI,SAAS,CAAC7L,MAAM,EAACsD,CAAC,EAAE,EAAC3B,CAAC,IAAE,UAAU,GAAC2V,kBAAkB,CAACzL,SAAS,CAACvI,CAAC,CAAC,CAAC;EAAC,OAAM,wBAAwB,GAAC5B,CAAC,GAAC,UAAU,GAACC,CAAC,GAAC,gHAAgH;AAAA;AAC/W,IAAI4V,CAAC,GAAC;IAACC,SAAS,EAAC,SAAAA,CAAA,EAAU;MAAC,OAAM,CAAC,CAAC;IAAA,CAAC;IAACC,kBAAkB,EAAC,SAAAA,CAAA,EAAU,CAAC,CAAC;IAACC,mBAAmB,EAAC,SAAAA,CAAA,EAAU,CAAC,CAAC;IAACC,eAAe,EAAC,SAAAA,CAAA,EAAU,CAAC;EAAC,CAAC;EAACC,CAAC,GAAC,CAAC,CAAC;AAAC,SAASC,CAACA,CAACnW,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,IAAI,CAAC6N,KAAK,GAACzP,CAAC;EAAC,IAAI,CAACoW,OAAO,GAACnW,CAAC;EAAC,IAAI,CAACoW,IAAI,GAACH,CAAC;EAAC,IAAI,CAACI,OAAO,GAAC1U,CAAC,IAAEiU,CAAC;AAAA;AAACM,CAAC,CAAC7c,SAAS,CAACid,gBAAgB,GAAC,CAAC,CAAC;AAACJ,CAAC,CAAC7c,SAAS,CAAC0W,QAAQ,GAAC,UAAShQ,CAAC,EAACC,CAAC,EAAC;EAAC,IAAG,QAAQ,KAAG,OAAOD,CAAC,IAAE,UAAU,KAAG,OAAOA,CAAC,IAAE,IAAI,IAAEA,CAAC,EAAC,MAAM1C,KAAK,CAACqY,CAAC,CAAC,EAAE,CAAC,CAAC;EAAC,IAAI,CAACW,OAAO,CAACL,eAAe,CAAC,IAAI,EAACjW,CAAC,EAACC,CAAC,EAAC,UAAU,CAAC;AAAA,CAAC;AAACkW,CAAC,CAAC7c,SAAS,CAACkd,WAAW,GAAC,UAASxW,CAAC,EAAC;EAAC,IAAI,CAACsW,OAAO,CAACP,kBAAkB,CAAC,IAAI,EAAC/V,CAAC,EAAC,aAAa,CAAC;AAAA,CAAC;AAChf,SAASyW,CAACA,CAAA,EAAE,CAAC;AAACA,CAAC,CAACnd,SAAS,GAAC6c,CAAC,CAAC7c,SAAS;AAAC,SAASod,CAACA,CAAC1W,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,IAAI,CAAC6N,KAAK,GAACzP,CAAC;EAAC,IAAI,CAACoW,OAAO,GAACnW,CAAC;EAAC,IAAI,CAACoW,IAAI,GAACH,CAAC;EAAC,IAAI,CAACI,OAAO,GAAC1U,CAAC,IAAEiU,CAAC;AAAA;AAAC,IAAIc,CAAC,GAACD,CAAC,CAACpd,SAAS,GAAC,IAAImd,CAAC,CAAD,CAAC;AAACE,CAAC,CAAC5H,WAAW,GAAC2H,CAAC;AAACrD,CAAC,CAACsD,CAAC,EAACR,CAAC,CAAC7c,SAAS,CAAC;AAACqd,CAAC,CAACC,oBAAoB,GAAC,CAAC,CAAC;AAAC,IAAIC,CAAC,GAAC;IAACC,OAAO,EAAC;EAAI,CAAC;EAACC,CAAC,GAACtU,MAAM,CAACnJ,SAAS,CAAC+Q,cAAc;EAAC2M,CAAC,GAAC;IAAC/J,GAAG,EAAC,CAAC,CAAC;IAACgK,GAAG,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,QAAQ,EAAC,CAAC;EAAC,CAAC;AACnS,SAASC,CAACA,CAACpX,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,IAAIyM,CAAC;IAACxM,CAAC,GAAC,CAAC,CAAC;IAACqR,CAAC,GAAC,IAAI;IAACE,CAAC,GAAC,IAAI;EAAC,IAAG,IAAI,IAAEnT,CAAC,EAAC,KAAIoO,CAAC,IAAI,KAAK,CAAC,KAAGpO,CAAC,CAACgX,GAAG,KAAG7D,CAAC,GAACnT,CAAC,CAACgX,GAAG,CAAC,EAAC,KAAK,CAAC,KAAGhX,CAAC,CAACgN,GAAG,KAAGiG,CAAC,GAAC,EAAE,GAACjT,CAAC,CAACgN,GAAG,CAAC,EAAChN,CAAC,EAAC8W,CAAC,CAACzT,IAAI,CAACrD,CAAC,EAACoO,CAAC,CAAC,IAAE,CAAC2I,CAAC,CAAC3M,cAAc,CAACgE,CAAC,CAAC,KAAGxM,CAAC,CAACwM,CAAC,CAAC,GAACpO,CAAC,CAACoO,CAAC,CAAC,CAAC;EAAC,IAAI4E,CAAC,GAAC9I,SAAS,CAAC7L,MAAM,GAAC,CAAC;EAAC,IAAG,CAAC,KAAG2U,CAAC,EAACpR,CAAC,CAACwV,QAAQ,GAACzV,CAAC,CAAC,KAAK,IAAG,CAAC,GAACqR,CAAC,EAAC;IAAC,KAAI,IAAIE,CAAC,GAACvP,KAAK,CAACqP,CAAC,CAAC,EAACK,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,CAAC,EAACK,CAAC,EAAE,EAACH,CAAC,CAACG,CAAC,CAAC,GAACnJ,SAAS,CAACmJ,CAAC,GAAC,CAAC,CAAC;IAACzR,CAAC,CAACwV,QAAQ,GAAClE,CAAC;EAAA;EAAC,IAAGnT,CAAC,IAAEA,CAAC,CAAC6Q,YAAY,EAAC,KAAIxC,CAAC,IAAI4E,CAAC,GAACjT,CAAC,CAAC6Q,YAAY,EAACoC,CAAC,EAAC,KAAK,CAAC,KAAGpR,CAAC,CAACwM,CAAC,CAAC,KAAGxM,CAAC,CAACwM,CAAC,CAAC,GAAC4E,CAAC,CAAC5E,CAAC,CAAC,CAAC;EAAC,OAAM;IAACyF,QAAQ,EAAC1J,CAAC;IAAC1C,IAAI,EAAC1H,CAAC;IAACiN,GAAG,EAACiG,CAAC;IAAC+D,GAAG,EAAC7D,CAAC;IAAC3D,KAAK,EAAC5N,CAAC;IAACyV,MAAM,EAACT,CAAC,CAACC;EAAO,CAAC;AAAA;AAC7a,SAASS,CAACA,CAACvX,CAAC,EAACC,CAAC,EAAC;EAAC,OAAM;IAAC6T,QAAQ,EAAC1J,CAAC;IAAC1C,IAAI,EAAC1H,CAAC,CAAC0H,IAAI;IAACuF,GAAG,EAAChN,CAAC;IAACgX,GAAG,EAACjX,CAAC,CAACiX,GAAG;IAACxH,KAAK,EAACzP,CAAC,CAACyP,KAAK;IAAC6H,MAAM,EAACtX,CAAC,CAACsX;EAAM,CAAC;AAAA;AAAC,SAASE,CAACA,CAACxX,CAAC,EAAC;EAAC,OAAM,QAAQ,KAAG,OAAOA,CAAC,IAAE,IAAI,KAAGA,CAAC,IAAEA,CAAC,CAAC8T,QAAQ,KAAG1J,CAAC;AAAA;AAAC,SAASqN,MAAMA,CAACzX,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC;IAAC,GAAG,EAAC,IAAI;IAAC,GAAG,EAAC;EAAI,CAAC;EAAC,OAAM,GAAG,GAAC,CAAC,EAAE,GAACD,CAAC,EAAE0X,OAAO,CAAC,OAAO,EAAC,UAAS1X,CAAC,EAAC;IAAC,OAAOC,CAAC,CAACD,CAAC,CAAC;EAAA,CAAC,CAAC;AAAA;AAAC,IAAI2X,CAAC,GAAC,MAAM;EAACC,CAAC,GAAC,EAAE;AAAC,SAASC,CAACA,CAAC7X,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAACyM,CAAC,EAAC;EAAC,IAAGuJ,CAAC,CAACtZ,MAAM,EAAC;IAAC,IAAIuD,CAAC,GAAC+V,CAAC,CAAC7T,GAAG,CAAC,CAAC;IAAClC,CAAC,CAACX,MAAM,GAAClB,CAAC;IAAC6B,CAAC,CAACiW,SAAS,GAAC7X,CAAC;IAAC4B,CAAC,CAACkW,IAAI,GAACnW,CAAC;IAACC,CAAC,CAACuU,OAAO,GAAC/H,CAAC;IAACxM,CAAC,CAAC6E,KAAK,GAAC,CAAC;IAAC,OAAO7E,CAAC;EAAA;EAAC,OAAM;IAACX,MAAM,EAAClB,CAAC;IAAC8X,SAAS,EAAC7X,CAAC;IAAC8X,IAAI,EAACnW,CAAC;IAACwU,OAAO,EAAC/H,CAAC;IAAC3H,KAAK,EAAC;EAAC,CAAC;AAAA;AAC9b,SAASsR,CAACA,CAAChY,CAAC,EAAC;EAACA,CAAC,CAACkB,MAAM,GAAC,IAAI;EAAClB,CAAC,CAAC8X,SAAS,GAAC,IAAI;EAAC9X,CAAC,CAAC+X,IAAI,GAAC,IAAI;EAAC/X,CAAC,CAACoW,OAAO,GAAC,IAAI;EAACpW,CAAC,CAAC0G,KAAK,GAAC,CAAC;EAAC,EAAE,GAACkR,CAAC,CAACtZ,MAAM,IAAEsZ,CAAC,CAAClZ,IAAI,CAACsB,CAAC,CAAC;AAAA;AACxG,SAASiY,CAACA,CAACjY,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAACyM,CAAC,EAAC;EAAC,IAAIxM,CAAC,GAAC,OAAO7B,CAAC;EAAC,IAAG,WAAW,KAAG6B,CAAC,IAAE,SAAS,KAAGA,CAAC,EAAC7B,CAAC,GAAC,IAAI;EAAC,IAAIkT,CAAC,GAAC,CAAC,CAAC;EAAC,IAAG,IAAI,KAAGlT,CAAC,EAACkT,CAAC,GAAC,CAAC,CAAC,CAAC,KAAK,QAAOrR,CAAC;IAAE,KAAK,QAAQ;IAAC,KAAK,QAAQ;MAACqR,CAAC,GAAC,CAAC,CAAC;MAAC;IAAM,KAAK,QAAQ;MAAC,QAAOlT,CAAC,CAAC8T,QAAQ;QAAE,KAAK1J,CAAC;QAAC,KAAKmJ,CAAC;UAACL,CAAC,GAAC,CAAC,CAAC;MAAA;EAAC;EAAC,IAAGA,CAAC,EAAC,OAAOtR,CAAC,CAACyM,CAAC,EAACrO,CAAC,EAAC,EAAE,KAAGC,CAAC,GAAC,GAAG,GAACiY,CAAC,CAAClY,CAAC,EAAC,CAAC,CAAC,GAACC,CAAC,CAAC,EAAC,CAAC;EAACiT,CAAC,GAAC,CAAC;EAACjT,CAAC,GAAC,EAAE,KAAGA,CAAC,GAAC,GAAG,GAACA,CAAC,GAAC,GAAG;EAAC,IAAG2D,KAAK,CAACC,OAAO,CAAC7D,CAAC,CAAC,EAAC,KAAI,IAAIoT,CAAC,GAAC,CAAC,EAACA,CAAC,GAACpT,CAAC,CAAC1B,MAAM,EAAC8U,CAAC,EAAE,EAAC;IAACvR,CAAC,GAAC7B,CAAC,CAACoT,CAAC,CAAC;IAAC,IAAIH,CAAC,GAAChT,CAAC,GAACiY,CAAC,CAACrW,CAAC,EAACuR,CAAC,CAAC;IAACF,CAAC,IAAE+E,CAAC,CAACpW,CAAC,EAACoR,CAAC,EAACrR,CAAC,EAACyM,CAAC,CAAC;EAAA,CAAC,MAAK,IAAG,IAAI,KAAGrO,CAAC,IAAE,QAAQ,KAAG,OAAOA,CAAC,GAACiT,CAAC,GAAC,IAAI,IAAEA,CAAC,GAACwC,CAAC,IAAEzV,CAAC,CAACyV,CAAC,CAAC,IAAEzV,CAAC,CAAC,YAAY,CAAC,EAACiT,CAAC,GAAC,UAAU,KAAG,OAAOA,CAAC,GAACA,CAAC,GAAC,IAAI,CAAC,EAAC,UAAU,KAAG,OAAOA,CAAC,EAAC,KAAIjT,CAAC,GAACiT,CAAC,CAAC3P,IAAI,CAACtD,CAAC,CAAC,EAACoT,CAAC,GACrf,CAAC,EAAC,CAAC,CAACvR,CAAC,GAAC7B,CAAC,CAACmY,IAAI,CAAC,CAAC,EAAEC,IAAI,GAAEvW,CAAC,GAACA,CAAC,CAACjG,KAAK,EAACqX,CAAC,GAAChT,CAAC,GAACiY,CAAC,CAACrW,CAAC,EAACuR,CAAC,EAAE,CAAC,EAACF,CAAC,IAAE+E,CAAC,CAACpW,CAAC,EAACoR,CAAC,EAACrR,CAAC,EAACyM,CAAC,CAAC,CAAC,KAAK,IAAG,QAAQ,KAAGxM,CAAC,EAAC,MAAMD,CAAC,GAAC,EAAE,GAAC5B,CAAC,EAAC1C,KAAK,CAACqY,CAAC,CAAC,EAAE,EAAC,iBAAiB,KAAG/T,CAAC,GAAC,oBAAoB,GAACa,MAAM,CAACiQ,IAAI,CAAC1S,CAAC,CAAC,CAAC2H,IAAI,CAAC,IAAI,CAAC,GAAC,GAAG,GAAC/F,CAAC,EAAC,EAAE,CAAC,CAAC;EAAC,OAAOsR,CAAC;AAAA;AAAC,SAASmF,CAACA,CAACrY,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,OAAO,IAAI,IAAE5B,CAAC,GAAC,CAAC,GAACiY,CAAC,CAACjY,CAAC,EAAC,EAAE,EAACC,CAAC,EAAC2B,CAAC,CAAC;AAAA;AAAC,SAASsW,CAACA,CAAClY,CAAC,EAACC,CAAC,EAAC;EAAC,OAAM,QAAQ,KAAG,OAAOD,CAAC,IAAE,IAAI,KAAGA,CAAC,IAAE,IAAI,IAAEA,CAAC,CAACiN,GAAG,GAACwK,MAAM,CAACzX,CAAC,CAACiN,GAAG,CAAC,GAAChN,CAAC,CAACqY,QAAQ,CAAC,EAAE,CAAC;AAAA;AAAC,SAASC,CAACA,CAACvY,CAAC,EAACC,CAAC,EAAC;EAACD,CAAC,CAAC+X,IAAI,CAACzU,IAAI,CAACtD,CAAC,CAACoW,OAAO,EAACnW,CAAC,EAACD,CAAC,CAAC0G,KAAK,EAAE,CAAC;AAAA;AAChY,SAAS8R,EAAEA,CAACxY,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,IAAIyM,CAAC,GAACrO,CAAC,CAACkB,MAAM;IAACW,CAAC,GAAC7B,CAAC,CAAC8X,SAAS;EAAC9X,CAAC,GAACA,CAAC,CAAC+X,IAAI,CAACzU,IAAI,CAACtD,CAAC,CAACoW,OAAO,EAACnW,CAAC,EAACD,CAAC,CAAC0G,KAAK,EAAE,CAAC;EAAC9C,KAAK,CAACC,OAAO,CAAC7D,CAAC,CAAC,GAACyY,CAAC,CAACzY,CAAC,EAACqO,CAAC,EAACzM,CAAC,EAAC,UAAS5B,CAAC,EAAC;IAAC,OAAOA,CAAC;EAAA,CAAC,CAAC,GAAC,IAAI,IAAEA,CAAC,KAAGwX,CAAC,CAACxX,CAAC,CAAC,KAAGA,CAAC,GAACuX,CAAC,CAACvX,CAAC,EAAC6B,CAAC,IAAE,CAAC7B,CAAC,CAACiN,GAAG,IAAEhN,CAAC,IAAEA,CAAC,CAACgN,GAAG,KAAGjN,CAAC,CAACiN,GAAG,GAAC,EAAE,GAAC,CAAC,EAAE,GAACjN,CAAC,CAACiN,GAAG,EAAEyK,OAAO,CAACC,CAAC,EAAC,KAAK,CAAC,GAAC,GAAG,CAAC,GAAC/V,CAAC,CAAC,CAAC,EAACyM,CAAC,CAAC3P,IAAI,CAACsB,CAAC,CAAC,CAAC;AAAA;AAAC,SAASyY,CAACA,CAACzY,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAACyM,CAAC,EAACxM,CAAC,EAAC;EAAC,IAAIqR,CAAC,GAAC,EAAE;EAAC,IAAI,IAAEtR,CAAC,KAAGsR,CAAC,GAAC,CAAC,EAAE,GAACtR,CAAC,EAAE8V,OAAO,CAACC,CAAC,EAAC,KAAK,CAAC,GAAC,GAAG,CAAC;EAAC1X,CAAC,GAAC4X,CAAC,CAAC5X,CAAC,EAACiT,CAAC,EAAC7E,CAAC,EAACxM,CAAC,CAAC;EAACwW,CAAC,CAACrY,CAAC,EAACwY,EAAE,EAACvY,CAAC,CAAC;EAAC+X,CAAC,CAAC/X,CAAC,CAAC;AAAA;AAAC,IAAIyY,CAAC,GAAC;EAAC5B,OAAO,EAAC;AAAI,CAAC;AAAC,SAAS6B,CAACA,CAAA,EAAE;EAAC,IAAI3Y,CAAC,GAAC0Y,CAAC,CAAC5B,OAAO;EAAC,IAAG,IAAI,KAAG9W,CAAC,EAAC,MAAM1C,KAAK,CAACqY,CAAC,CAAC,GAAG,CAAC,CAAC;EAAC,OAAO3V,CAAC;AAAA;AACza,IAAI4Y,EAAE,GAAC;EAACC,sBAAsB,EAACH,CAAC;EAACI,uBAAuB,EAAC;IAACC,QAAQ,EAAC;EAAI,CAAC;EAACC,iBAAiB,EAACnC,CAAC;EAACoC,oBAAoB,EAAC;IAACnC,OAAO,EAAC,CAAC;EAAC,CAAC;EAAC5M,MAAM,EAACmJ;AAAC,CAAC;AAACzb,OAAO,CAACshB,QAAQ,GAAC;EAACnM,GAAG,EAAC,SAAAA,CAAS/M,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;IAAC,IAAG,IAAI,IAAE5B,CAAC,EAAC,OAAOA,CAAC;IAAC,IAAIqO,CAAC,GAAC,EAAE;IAACoK,CAAC,CAACzY,CAAC,EAACqO,CAAC,EAAC,IAAI,EAACpO,CAAC,EAAC2B,CAAC,CAAC;IAAC,OAAOyM,CAAC;EAAA,CAAC;EAAC8K,OAAO,EAAC,SAAAA,CAASnZ,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;IAAC,IAAG,IAAI,IAAE5B,CAAC,EAAC,OAAOA,CAAC;IAACC,CAAC,GAAC4X,CAAC,CAAC,IAAI,EAAC,IAAI,EAAC5X,CAAC,EAAC2B,CAAC,CAAC;IAACyW,CAAC,CAACrY,CAAC,EAACuY,CAAC,EAACtY,CAAC,CAAC;IAAC+X,CAAC,CAAC/X,CAAC,CAAC;EAAA,CAAC;EAACyG,KAAK,EAAC,SAAAA,CAAS1G,CAAC,EAAC;IAAC,OAAOqY,CAAC,CAACrY,CAAC,EAAC,YAAU;MAAC,OAAO,IAAI;IAAA,CAAC,EAAC,IAAI,CAAC;EAAA,CAAC;EAACoZ,OAAO,EAAC,SAAAA,CAASpZ,CAAC,EAAC;IAAC,IAAIC,CAAC,GAAC,EAAE;IAACwY,CAAC,CAACzY,CAAC,EAACC,CAAC,EAAC,IAAI,EAAC,UAASD,CAAC,EAAC;MAAC,OAAOA,CAAC;IAAA,CAAC,CAAC;IAAC,OAAOC,CAAC;EAAA,CAAC;EAACoZ,IAAI,EAAC,SAAAA,CAASrZ,CAAC,EAAC;IAAC,IAAG,CAACwX,CAAC,CAACxX,CAAC,CAAC,EAAC,MAAM1C,KAAK,CAACqY,CAAC,CAAC,GAAG,CAAC,CAAC;IAAC,OAAO3V,CAAC;EAAA;AAAC,CAAC;AACjfpI,OAAO,CAAC0hB,SAAS,GAACnD,CAAC;AAACve,OAAO,CAACyc,QAAQ,GAACb,CAAC;AAAC5b,OAAO,CAAC4c,QAAQ,GAAC1R,CAAC;AAAClL,OAAO,CAACyX,aAAa,GAACqH,CAAC;AAAC9e,OAAO,CAAC6c,UAAU,GAAChT,CAAC;AAAC7J,OAAO,CAAC8c,QAAQ,GAACd,CAAC;AAAChc,OAAO,CAAC2hB,kDAAkD,GAACX,EAAE;AACvLhhB,OAAO,CAAC4hB,YAAY,GAAC,UAASxZ,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,IAAG,IAAI,KAAG5B,CAAC,IAAE,KAAK,CAAC,KAAGA,CAAC,EAAC,MAAM1C,KAAK,CAACqY,CAAC,CAAC,GAAG,EAAC3V,CAAC,CAAC,CAAC;EAAC,IAAIqO,CAAC,GAACgF,CAAC,CAAC,CAAC,CAAC,EAACrT,CAAC,CAACyP,KAAK,CAAC;IAAC5N,CAAC,GAAC7B,CAAC,CAACiN,GAAG;IAACiG,CAAC,GAAClT,CAAC,CAACiX,GAAG;IAAC7D,CAAC,GAACpT,CAAC,CAACsX,MAAM;EAAC,IAAG,IAAI,IAAErX,CAAC,EAAC;IAAC,KAAK,CAAC,KAAGA,CAAC,CAACgX,GAAG,KAAG/D,CAAC,GAACjT,CAAC,CAACgX,GAAG,EAAC7D,CAAC,GAACyD,CAAC,CAACC,OAAO,CAAC;IAAC,KAAK,CAAC,KAAG7W,CAAC,CAACgN,GAAG,KAAGpL,CAAC,GAAC,EAAE,GAAC5B,CAAC,CAACgN,GAAG,CAAC;IAAC,IAAGjN,CAAC,CAAC0H,IAAI,IAAE1H,CAAC,CAAC0H,IAAI,CAACmJ,YAAY,EAAC,IAAIoC,CAAC,GAACjT,CAAC,CAAC0H,IAAI,CAACmJ,YAAY;IAAC,KAAIsC,CAAC,IAAIlT,CAAC,EAAC8W,CAAC,CAACzT,IAAI,CAACrD,CAAC,EAACkT,CAAC,CAAC,IAAE,CAAC6D,CAAC,CAAC3M,cAAc,CAAC8I,CAAC,CAAC,KAAG9E,CAAC,CAAC8E,CAAC,CAAC,GAAC,KAAK,CAAC,KAAGlT,CAAC,CAACkT,CAAC,CAAC,IAAE,KAAK,CAAC,KAAGF,CAAC,GAACA,CAAC,CAACE,CAAC,CAAC,GAAClT,CAAC,CAACkT,CAAC,CAAC,CAAC;EAAA;EAAC,IAAIA,CAAC,GAAChJ,SAAS,CAAC7L,MAAM,GAAC,CAAC;EAAC,IAAG,CAAC,KAAG6U,CAAC,EAAC9E,CAAC,CAACgJ,QAAQ,GAACzV,CAAC,CAAC,KAAK,IAAG,CAAC,GAACuR,CAAC,EAAC;IAACF,CAAC,GAACrP,KAAK,CAACuP,CAAC,CAAC;IAAC,KAAI,IAAIG,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,CAAC,EAACG,CAAC,EAAE,EAACL,CAAC,CAACK,CAAC,CAAC,GAACnJ,SAAS,CAACmJ,CAAC,GAAC,CAAC,CAAC;IAACjF,CAAC,CAACgJ,QAAQ,GAACpE,CAAC;EAAA;EAAC,OAAM;IAACa,QAAQ,EAAC1J,CAAC;IAAC1C,IAAI,EAAC1H,CAAC,CAAC0H,IAAI;IAC5fuF,GAAG,EAACpL,CAAC;IAACoV,GAAG,EAAC/D,CAAC;IAACzD,KAAK,EAACpB,CAAC;IAACiJ,MAAM,EAAClE;EAAC,CAAC;AAAA,CAAC;AAACxb,OAAO,CAAC6hB,aAAa,GAAC,UAASzZ,CAAC,EAACC,CAAC,EAAC;EAAC,KAAK,CAAC,KAAGA,CAAC,KAAGA,CAAC,GAAC,IAAI,CAAC;EAACD,CAAC,GAAC;IAAC8T,QAAQ,EAACJ,CAAC;IAACgG,qBAAqB,EAACzZ,CAAC;IAAC0Z,aAAa,EAAC3Z,CAAC;IAAC4Z,cAAc,EAAC5Z,CAAC;IAAC6Z,YAAY,EAAC,CAAC;IAACC,QAAQ,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAI,CAAC;EAAC/Z,CAAC,CAAC8Z,QAAQ,GAAC;IAAChG,QAAQ,EAACL,CAAC;IAACuG,QAAQ,EAACha;EAAC,CAAC;EAAC,OAAOA,CAAC,CAAC+Z,QAAQ,GAAC/Z,CAAC;AAAA,CAAC;AAACpI,OAAO,CAAC6V,aAAa,GAAC2J,CAAC;AAACxf,OAAO,CAACqiB,aAAa,GAAC,UAASja,CAAC,EAAC;EAAC,IAAIC,CAAC,GAACmX,CAAC,CAAC8C,IAAI,CAAC,IAAI,EAACla,CAAC,CAAC;EAACC,CAAC,CAACyH,IAAI,GAAC1H,CAAC;EAAC,OAAOC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACuiB,SAAS,GAAC,YAAU;EAAC,OAAM;IAACrD,OAAO,EAAC;EAAI,CAAC;AAAA,CAAC;AAAClf,OAAO,CAACwiB,UAAU,GAAC,UAASpa,CAAC,EAAC;EAAC,OAAM;IAAC8T,QAAQ,EAACH,CAAC;IAACzD,MAAM,EAAClQ;EAAC,CAAC;AAAA,CAAC;AAACpI,OAAO,CAACyiB,cAAc,GAAC7C,CAAC;AAC5e5f,OAAO,CAAC0iB,IAAI,GAAC,UAASta,CAAC,EAAC;EAAC,OAAM;IAAC8T,QAAQ,EAACC,CAAC;IAACwG,KAAK,EAACva,CAAC;IAACwa,OAAO,EAAC,CAAC,CAAC;IAACC,OAAO,EAAC;EAAI,CAAC;AAAA,CAAC;AAAC7iB,OAAO,CAAC8iB,IAAI,GAAC,UAAS1a,CAAC,EAACC,CAAC,EAAC;EAAC,OAAM;IAAC6T,QAAQ,EAACD,CAAC;IAACnM,IAAI,EAAC1H,CAAC;IAAC0R,OAAO,EAAC,KAAK,CAAC,KAAGzR,CAAC,GAAC,IAAI,GAACA;EAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAAC+iB,WAAW,GAAC,UAAS3a,CAAC,EAACC,CAAC,EAAC;EAAC,OAAO0Y,CAAC,CAAC,CAAC,CAACgC,WAAW,CAAC3a,CAAC,EAACC,CAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACgjB,UAAU,GAAC,UAAS5a,CAAC,EAACC,CAAC,EAAC;EAAC,OAAO0Y,CAAC,CAAC,CAAC,CAACiC,UAAU,CAAC5a,CAAC,EAACC,CAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACijB,aAAa,GAAC,YAAU,CAAC,CAAC;AAACjjB,OAAO,CAACkjB,SAAS,GAAC,UAAS9a,CAAC,EAACC,CAAC,EAAC;EAAC,OAAO0Y,CAAC,CAAC,CAAC,CAACmC,SAAS,CAAC9a,CAAC,EAACC,CAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACmjB,mBAAmB,GAAC,UAAS/a,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,OAAO+W,CAAC,CAAC,CAAC,CAACoC,mBAAmB,CAAC/a,CAAC,EAACC,CAAC,EAAC2B,CAAC,CAAC;AAAA,CAAC;AACzchK,OAAO,CAACojB,eAAe,GAAC,UAAShb,CAAC,EAACC,CAAC,EAAC;EAAC,OAAO0Y,CAAC,CAAC,CAAC,CAACqC,eAAe,CAAChb,CAAC,EAACC,CAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACqjB,OAAO,GAAC,UAASjb,CAAC,EAACC,CAAC,EAAC;EAAC,OAAO0Y,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACjb,CAAC,EAACC,CAAC,CAAC;AAAA,CAAC;AAACrI,OAAO,CAACsjB,UAAU,GAAC,UAASlb,CAAC,EAACC,CAAC,EAAC2B,CAAC,EAAC;EAAC,OAAO+W,CAAC,CAAC,CAAC,CAACuC,UAAU,CAAClb,CAAC,EAACC,CAAC,EAAC2B,CAAC,CAAC;AAAA,CAAC;AAAChK,OAAO,CAACujB,MAAM,GAAC,UAASnb,CAAC,EAAC;EAAC,OAAO2Y,CAAC,CAAC,CAAC,CAACwC,MAAM,CAACnb,CAAC,CAAC;AAAA,CAAC;AAACpI,OAAO,CAACwjB,QAAQ,GAAC,UAASpb,CAAC,EAAC;EAAC,OAAO2Y,CAAC,CAAC,CAAC,CAACyC,QAAQ,CAACpb,CAAC,CAAC;AAAA,CAAC;AAACpI,OAAO,CAACyjB,OAAO,GAAC,SAAS,C;;;;;;;ACxB9T;AACA;AACA;AACA;AACA;;AAEa;;AACb;AACA,IAAInJ,qBAAqB,GAAGzP,MAAM,CAACyP,qBAAqB;AACxD,IAAI7H,cAAc,GAAG5H,MAAM,CAACnJ,SAAS,CAAC+Q,cAAc;AACpD,IAAIiR,gBAAgB,GAAG7Y,MAAM,CAACnJ,SAAS,CAACiiB,oBAAoB;AAE5D,SAASC,QAAQA,CAACC,GAAG,EAAE;EACtB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKjZ,SAAS,EAAE;IACtC,MAAM,IAAIE,SAAS,CAAC,uDAAuD,CAAC;EAC7E;EAEA,OAAOD,MAAM,CAACgZ,GAAG,CAAC;AACnB;AAEA,SAASC,eAAeA,CAAA,EAAG;EAC1B,IAAI;IACH,IAAI,CAACjZ,MAAM,CAACyH,MAAM,EAAE;MACnB,OAAO,KAAK;IACb;;IAEA;;IAEA;IACA,IAAIyR,KAAK,GAAG,IAAIxa,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE;IAChCwa,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IACf,IAAIlZ,MAAM,CAACwP,mBAAmB,CAAC0J,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACjD,OAAO,KAAK;IACb;;IAEA;IACA,IAAIC,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,IAAIlgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BkgB,KAAK,CAAC,GAAG,GAAGza,MAAM,CAACC,YAAY,CAAC1F,CAAC,CAAC,CAAC,GAAGA,CAAC;IACxC;IACA,IAAImgB,MAAM,GAAGpZ,MAAM,CAACwP,mBAAmB,CAAC2J,KAAK,CAAC,CAAC7O,GAAG,CAAC,UAAUlK,CAAC,EAAE;MAC/D,OAAO+Y,KAAK,CAAC/Y,CAAC,CAAC;IAChB,CAAC,CAAC;IACF,IAAIgZ,MAAM,CAAClU,IAAI,CAAC,EAAE,CAAC,KAAK,YAAY,EAAE;MACrC,OAAO,KAAK;IACb;;IAEA;IACA,IAAImU,KAAK,GAAG,CAAC,CAAC;IACd,sBAAsB,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC5C,OAAO,CAAC,UAAU6C,MAAM,EAAE;MAC1DF,KAAK,CAACE,MAAM,CAAC,GAAGA,MAAM;IACvB,CAAC,CAAC;IACF,IAAIvZ,MAAM,CAACiQ,IAAI,CAACjQ,MAAM,CAACyH,MAAM,CAAC,CAAC,CAAC,EAAE4R,KAAK,CAAC,CAAC,CAACnU,IAAI,CAAC,EAAE,CAAC,KAChD,sBAAsB,EAAE;MACzB,OAAO,KAAK;IACb;IAEA,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOsU,GAAG,EAAE;IACb;IACA,OAAO,KAAK;EACb;AACD;AAEAtkB,MAAM,CAACC,OAAO,GAAG8jB,eAAe,CAAC,CAAC,GAAGjZ,MAAM,CAACyH,MAAM,GAAG,UAAUgS,MAAM,EAAEC,MAAM,EAAE;EAC9E,IAAIrT,IAAI;EACR,IAAIsT,EAAE,GAAGZ,QAAQ,CAACU,MAAM,CAAC;EACzB,IAAIG,OAAO;EAEX,KAAK,IAAIxc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsK,SAAS,CAAC7L,MAAM,EAAEuB,CAAC,EAAE,EAAE;IAC1CiJ,IAAI,GAAGrG,MAAM,CAAC0H,SAAS,CAACtK,CAAC,CAAC,CAAC;IAE3B,KAAK,IAAIoN,GAAG,IAAInE,IAAI,EAAE;MACrB,IAAIuB,cAAc,CAAC/G,IAAI,CAACwF,IAAI,EAAEmE,GAAG,CAAC,EAAE;QACnCmP,EAAE,CAACnP,GAAG,CAAC,GAAGnE,IAAI,CAACmE,GAAG,CAAC;MACpB;IACD;IAEA,IAAIiF,qBAAqB,EAAE;MAC1BmK,OAAO,GAAGnK,qBAAqB,CAACpJ,IAAI,CAAC;MACrC,KAAK,IAAIpN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2gB,OAAO,CAAC/d,MAAM,EAAE5C,CAAC,EAAE,EAAE;QACxC,IAAI4f,gBAAgB,CAAChY,IAAI,CAACwF,IAAI,EAAEuT,OAAO,CAAC3gB,CAAC,CAAC,CAAC,EAAE;UAC5C0gB,EAAE,CAACC,OAAO,CAAC3gB,CAAC,CAAC,CAAC,GAAGoN,IAAI,CAACuT,OAAO,CAAC3gB,CAAC,CAAC,CAAC;QAClC;MACD;IACD;EACD;EAEA,OAAO0gB,EAAE;AACV,CAAC,C","file":"x","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): object | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): object | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BN } from '../util/bn';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { BufferType } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { UnionMode, DateUnit, TimeUnit } from '../enum';\nimport { iterateBits, getBit, getBool } from '../util/bit';\nimport { selectColumnChildrenArgs } from '../util/args';\nimport {\n    DataType,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface JSONVectorAssembler extends Visitor {\n\n    visit     <T extends Column>  (node: T  ): object;\n    visitMany <T extends Column>  (cols: T[]): object[];\n    getVisitFn<T extends DataType>(node: Column<T>): (column: Column<T>) => { name: string, count: number, VALIDITY: (0 | 1)[], DATA?: any[], OFFSET?: number[], TYPE?: number[], children?: any[] };\n\n    visitNull                 <T extends Null>            (vector: V<T>): { };\n    visitBool                 <T extends Bool>            (vector: V<T>): { DATA: boolean[] };\n    visitInt                  <T extends Int>             (vector: V<T>): { DATA: (number | string)[]  };\n    visitFloat                <T extends Float>           (vector: V<T>): { DATA: number[]  };\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): { DATA: string[], OFFSET: number[] };\n    visitBinary               <T extends Binary>          (vector: V<T>): { DATA: string[], OFFSET: number[] };\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): { DATA: string[]  };\n    visitDate                 <T extends Date_>           (vector: V<T>): { DATA: number[]  };\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): { DATA: string[]  };\n    visitTime                 <T extends Time>            (vector: V<T>): { DATA: number[]  };\n    visitDecimal              <T extends Decimal>         (vector: V<T>): { DATA: string[]  };\n    visitList                 <T extends List>            (vector: V<T>): { children: any[], OFFSET: number[] };\n    visitStruct               <T extends Struct>          (vector: V<T>): { children: any[] };\n    visitUnion                <T extends Union>           (vector: V<T>): { children: any[], TYPE: number[],  };\n    visitInterval             <T extends Interval>        (vector: V<T>): { DATA: number[]  };\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): { children: any[] };\n    visitMap                  <T extends Map_>            (vector: V<T>): { children: any[] };\n}\n\n/** @ignore */\nexport class JSONVectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Column | RecordBatch>(...args: (T | T[])[]) {\n        return new JSONVectorAssembler().visitMany(selectColumnChildrenArgs(RecordBatch, args));\n    }\n\n    public visit<T extends Column>(column: T) {\n        const { data, name, length } = column;\n        const { offset, nullCount, nullBitmap } = data;\n        const type = DataType.isDictionary(column.type) ? column.type.indices : column.type;\n        const buffers = Object.assign([], data.buffers, { [BufferType.VALIDITY]: undefined });\n        return {\n            'name': name,\n            'count': length,\n            'VALIDITY': DataType.isNull(type) ? undefined\n                : nullCount <= 0 ? Array.from({ length }, () => 1)\n                : [...iterateBits(nullBitmap, offset, length, null, getBit)],\n            ...super.visit(Vector.new(data.clone(type, offset, length, 0, buffers)))\n        };\n    }\n    public visitNull() { return {}; }\n    public visitBool<T extends Bool>({ values, offset, length }: V<T>) {\n        return { 'DATA': [...iterateBits(values, offset, length, null, getBool)] };\n    }\n    public visitInt<T extends Int>(vector: V<T>) {\n        return {\n            'DATA': vector.type.bitWidth < 64\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values as (Int32Array | Uint32Array), 2)]\n        };\n    }\n    public visitFloat<T extends Float>(vector: V<T>) {\n        return { 'DATA': [...vector.values] };\n    }\n    public visitUtf8<T extends Utf8>(vector: V<T>) {\n        return { 'DATA': [...vector], 'OFFSET': [...vector.valueOffsets] };\n    }\n    public visitBinary<T extends Binary>(vector: V<T>) {\n        return { 'DATA': [...binaryToString(vector)], OFFSET: [...vector.valueOffsets] };\n    }\n    public visitFixedSizeBinary<T extends FixedSizeBinary>(vector: V<T>) {\n        return { 'DATA': [...binaryToString(vector)] };\n    }\n    public visitDate<T extends Date_>(vector: V<T>) {\n        return {\n            'DATA': vector.type.unit === DateUnit.DAY\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    public visitTimestamp<T extends Timestamp>(vector: V<T>) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 2)] };\n    }\n    public visitTime<T extends Time>(vector: V<T>) {\n        return {\n            'DATA': vector.type.unit < TimeUnit.MICROSECOND\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    public visitDecimal<T extends Decimal>(vector: V<T>) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 4)] };\n    }\n    public visitList<T extends List>(vector: V<T>) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitStruct<T extends Struct>(vector: V<T>) {\n        return {\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitUnion<T extends Union>(vector: V<T>) {\n        return {\n            'TYPE': [...vector.typeIds],\n            'OFFSET': vector.type.mode === UnionMode.Dense ? [...vector.valueOffsets] : undefined,\n            'children': vector.type.children.map((f, i) => this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitInterval<T extends Interval>(vector: V<T>) {\n        return { 'DATA': [...vector.values] };\n    }\n    public visitFixedSizeList<T extends FixedSizeList>(vector: V<T>) {\n        return {\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitMap<T extends Map_>(vector: V<T>) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n}\n\n/** @ignore */\nfunction* binaryToString(vector: Vector<Binary> | Vector<FixedSizeBinary>) {\n    for (const octets of vector as Iterable<Uint8Array>) {\n        yield octets.reduce((str, byte) => {\n            return `${str}${('0' + (byte & 0xFF).toString(16)).slice(-2)}`;\n        }, '').toUpperCase();\n    }\n}\n\n/** @ignore */\nfunction* bigNumsToStrings(values: Uint32Array | Int32Array, stride: number) {\n    for (let i = -1, n = values.length / stride; ++i < n;) {\n        yield `${BN.new(values.subarray((i + 0) * stride, (i + 1) * stride), false)}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { StreamlitComponentBase, withStreamlitConnection } from \"./StreamlitReact\";\nexport { ArrowTable } from \"./ArrowTable\";\nexport { Streamlit } from \"./streamlit\";\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"]},"banner":"For license information please see 2.8d0039db.chunk.js.LICENSE.txt","extractedComments":"/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n","commentsFilename":"static/js/2.8d0039db.chunk.js.LICENSE.txt"}